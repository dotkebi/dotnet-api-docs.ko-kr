<Type Name="MessageQueue" FullName="System.Messaging.MessageQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="750ce98d3a2cf96c76135a62518a97dbed5ff325" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57929064" /></Metadata><TypeSignature Language="C#" Value="public class MessageQueue : System.ComponentModel.Component, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueue extends System.ComponentModel.Component implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueue&#xA;Inherits Component&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueue : System::ComponentModel::Component, System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type MessageQueue = class&#xA;    inherit Component&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("ReceiveCompleted")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Messaging.MessageQueueInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageQueueConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.MessageQueueInstallableComponentDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Messaging.MessagingDescription("MessageQueueDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b509c-101">메시지 큐 서버에 있는 큐에 대한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-101">Provides access to a queue on a Message Queuing server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-102">메시지 큐 기술을 실행 중인 응용 프로그램을 서로 다른 시간에 유형이 다른 네트워크와 일시적으로 오프 라인 상태일 수 있는 시스템 간에 통신할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-102">The Message Queuing technology allows applications running at different times to communicate across heterogeneous networks and systems that might be temporarily offline.</span></span> <span data-ttu-id="b509c-103">응용 프로그램 송신, 수신 또는 피킹 큐에서 메시지 (제거 하지 않고 읽기).</span><span class="sxs-lookup"><span data-stu-id="b509c-103">Applications send, receive, or peek (read without removing) messages from queues.</span></span> <span data-ttu-id="b509c-104">메시지 큐의 선택적 구성 요소는 [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] 및 Windows NT 별도로 설치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-104">Message Queuing is an optional component of [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] and Windows NT, and must be installed separately.</span></span>  
  
 <span data-ttu-id="b509c-105"><xref:System.Messaging.MessageQueue> 클래스는 메시지 큐 래퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-105">The <xref:System.Messaging.MessageQueue> class is a wrapper around Message Queuing.</span></span> <span data-ttu-id="b509c-106">메시지 큐를 사용 하 여 여러 버전의 <xref:System.Messaging.MessageQueue> 사용 중인 운영 체제에 따라, 클래스 약간 다른 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-106">There are multiple versions of Message Queuing, and using the <xref:System.Messaging.MessageQueue> class can result in slightly different behavior, depending on the operating system you are using.</span></span> <span data-ttu-id="b509c-107">메시지 큐의 각 버전의 특정 기능에 대 한 정보를 msdn에서 Platform SDK에서 "What is 메시지 큐에서 새" 항목을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-107">For information about specific features of each version of Message Queuing, see the topic "What's New in Message Queuing" in the Platform SDK in MSDN.</span></span>  
  
 <span data-ttu-id="b509c-108"><xref:System.Messaging.MessageQueue> 클래스는 메시지 큐에 대 한 참조를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-108">The <xref:System.Messaging.MessageQueue> class provides a reference to a Message Queuing queue.</span></span> <span data-ttu-id="b509c-109">경로 지정할 수 있습니다는 <xref:System.Messaging.MessageQueue.%23ctor%2A> 생성자는 기존 리소스에 연결할 서버에서 새 큐를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-109">You can specify a path in the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor to connect to an existing resource, or you can create a new queue on the server.</span></span> <span data-ttu-id="b509c-110">호출 하기 전에 <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, 또는 <xref:System.Messaging.MessageQueue.Receive%2A>의 새 인스턴스를 연결 해야 합니다는 <xref:System.Messaging.MessageQueue> 기존 큐를 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-110">Before you can call <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, or <xref:System.Messaging.MessageQueue.Receive%2A>, you must associate the new instance of the <xref:System.Messaging.MessageQueue> class with an existing queue.</span></span> <span data-ttu-id="b509c-111">같은 큐 속성을 조작할 수는 해당 시점 <xref:System.Messaging.MessageQueue.Category%2A> 고 <xref:System.Messaging.MessageQueue.Label%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-111">At that point, you can manipulate the queue properties such as <xref:System.Messaging.MessageQueue.Category%2A> and <xref:System.Messaging.MessageQueue.Label%2A>.</span></span>  
  
 <span data-ttu-id="b509c-112"><xref:System.Messaging.MessageQueue> 두 가지 유형의 메시지 검색을 지원 합니다: 동기 및 비동기입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-112"><xref:System.Messaging.MessageQueue> supports two types of message retrieval: synchronous and asynchronous.</span></span> <span data-ttu-id="b509c-113">동기 메서드인 <xref:System.Messaging.MessageQueue.Peek%2A> 및 <xref:System.Messaging.MessageQueue.Receive%2A>, 프로세스 스레드가 큐에 도착 하는 새 메시지에 대해 지정 된 시간 간격을 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-113">The synchronous methods, <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.Receive%2A>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-114">비동기 메서드는 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 고 <xref:System.Messaging.MessageQueue.BeginReceive%2A>, 기본 응용 프로그램 작업을 큐에 메시지가 도착할 때까지 별도 스레드에서 계속 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-114">The asynchronous methods, <xref:System.Messaging.MessageQueue.BeginPeek%2A> and <xref:System.Messaging.MessageQueue.BeginReceive%2A>, allow the main application tasks to continue in a separate thread until a message arrives in the queue.</span></span> <span data-ttu-id="b509c-115">이러한 메서드는 스레드 간의 의사 소통이 콜백 개체 및 상태 개체를 사용 하 여 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-115">These methods work by using callback objects and state objects to communicate information between threads.</span></span>  
  
 <span data-ttu-id="b509c-116">새 인스턴스를 만들 때의 <xref:System.Messaging.MessageQueue> 클래스를 작성 하지 않으려면 새 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-116">When you create a new instance of the <xref:System.Messaging.MessageQueue> class, you are not creating a new Message Queuing queue.</span></span> <span data-ttu-id="b509c-117">대신 사용할 수는 <xref:System.Messaging.MessageQueue.Create%28System.String%29>, <xref:System.Messaging.MessageQueue.Delete%28System.String%29>, 및 <xref:System.Messaging.MessageQueue.Purge%2A> 서버의 큐를 관리 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-117">Instead, you can use the <xref:System.Messaging.MessageQueue.Create%28System.String%29>, <xref:System.Messaging.MessageQueue.Delete%28System.String%29>, and <xref:System.Messaging.MessageQueue.Purge%2A> methods to manage queues on the server.</span></span>  
  
 <span data-ttu-id="b509c-118">와 달리 <xref:System.Messaging.MessageQueue.Purge%2A>, <xref:System.Messaging.MessageQueue.Create%28System.String%29> 및 <xref:System.Messaging.MessageQueue.Delete%28System.String%29> 됩니다 `static` 멤버의 새 인스턴스를 만들지 않고 호출할 수 있습니다 이므로 <xref:System.Messaging.MessageQueue> 클래스.</span><span class="sxs-lookup"><span data-stu-id="b509c-118">Unlike <xref:System.Messaging.MessageQueue.Purge%2A>, <xref:System.Messaging.MessageQueue.Create%28System.String%29> and <xref:System.Messaging.MessageQueue.Delete%28System.String%29> are `static` members, so you can call them without creating a new instance of the <xref:System.Messaging.MessageQueue> class.</span></span>  
  
 <span data-ttu-id="b509c-119">설정할 수 있습니다 합니다 <xref:System.Messaging.MessageQueue> 개체의 <xref:System.Messaging.MessageQueue.Path%2A> 세 가지 이름 중 하나를 사용 하 여 속성: 이름, 합니다 <xref:System.Messaging.MessageQueue.FormatName%2A>, 또는 <xref:System.Messaging.MessageQueue.Label%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-119">You can set the <xref:System.Messaging.MessageQueue> object's <xref:System.Messaging.MessageQueue.Path%2A> property with one of three names: the friendly name, the <xref:System.Messaging.MessageQueue.FormatName%2A>, or the <xref:System.Messaging.MessageQueue.Label%2A>.</span></span> <span data-ttu-id="b509c-120">큐의에 정의 된 이름이 <xref:System.Messaging.MessageQueue.MachineName%2A> 및 <xref:System.Messaging.MessageQueue.QueueName%2A> 속성은 <xref:System.Messaging.MessageQueue.MachineName%2A> \\ <xref:System.Messaging.MessageQueue.QueueName%2A> 공개 큐에 대 한 및 <xref:System.Messaging.MessageQueue.MachineName%2A> \\ `Private$` \\ <xref:System.Messaging.MessageQueue.QueueName%2A> 개인 큐에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-120">The friendly name, which is defined by the queue's <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties, is <xref:System.Messaging.MessageQueue.MachineName%2A>\\<xref:System.Messaging.MessageQueue.QueueName%2A> for a public queue, and <xref:System.Messaging.MessageQueue.MachineName%2A>\\`Private$`\\<xref:System.Messaging.MessageQueue.QueueName%2A> for a private queue.</span></span> <span data-ttu-id="b509c-121"><xref:System.Messaging.MessageQueue.FormatName%2A> 속성 메시지 큐 오프 라인 액세스를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-121">The <xref:System.Messaging.MessageQueue.FormatName%2A> property allows offline access to message queues.</span></span> <span data-ttu-id="b509c-122">마지막으로 큐의 사용할 수 있습니다 <xref:System.Messaging.MessageQueue.Label%2A> 큐의 설정 하려면 속성 <xref:System.Messaging.MessageQueue.Path%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-122">Lastly, you can use the queue's <xref:System.Messaging.MessageQueue.Label%2A> property to set the queue's <xref:System.Messaging.MessageQueue.Path%2A>.</span></span>  
  
 <span data-ttu-id="b509c-123">인스턴스의 초기 속성 값의 목록을 <xref:System.Messaging.MessageQueue>, 참조는 <xref:System.Messaging.MessageQueue.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-123">For a list of initial property values for an instance of <xref:System.Messaging.MessageQueue>, see the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b509c-124">다음 코드 예제에서는 새 <xref:System.Messaging.MessageQueue> 다양 한 경로 이름을 구문 형식을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-124">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="b509c-125">각각의 경우에서 경로가 생성자에 정의 된 큐에 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-125">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 <span data-ttu-id="b509c-126">다음 코드 예제에서는 큐에 메시지를 보내고 라고 하는 응용 프로그램 관련 클래스를 사용 하 여 큐에서 메시지를 받을 `Order`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-126">The following code example sends a message to a queue, and receives a message from a queue, using an application-specific class called `Order`.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CPP/mqreceive_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Receive_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CS/mqreceive_noparms.cs#1)]
 [!code-vb[MessageQueue.Receive_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_noparms/VB/mqreceive_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b509c-127">만 <see cref="M:System.Messaging.MessageQueue.GetAllMessages" /> 메서드는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-127">Only the <see cref="M:System.Messaging.MessageQueue.GetAllMessages" /> method is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
    <altmember cref="T:System.Messaging.MessageQueueException" />
    <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
    <altmember cref="M:System.Messaging.MessageQueue.Peek" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="P:System.Messaging.MessageQueue.Path" />
    <altmember cref="P:System.Messaging.MessageQueue.Label" />
    <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
    <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
    <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-128"><see cref="T:System.Messaging.MessageQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-128">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-129"><see cref="T:System.Messaging.MessageQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-129">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span> <span data-ttu-id="b509c-130">기본 생성자가 새 인스턴스를 초기화하면, 이 인스턴스를 사용하기 전에 인스턴스의 <see cref="P:System.Messaging.MessageQueue.Path" /> 속성을 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-130">After the default constructor initializes the new instance, you must set the instance's <see cref="P:System.Messaging.MessageQueue.Path" /> property before you can use the instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-131">새 인스턴스를 만들려면이 오버 로드를 사용 합니다 <xref:System.Messaging.MessageQueue> 즉시 큐 메시지 큐 서버에 연결 되지 않은 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-131">Use this overload to create a new instance of the <xref:System.Messaging.MessageQueue> class that is not immediately tied to a queue on the Message Queuing server.</span></span> <span data-ttu-id="b509c-132">이 인스턴스를 사용 하기 전에 연결 해야 하는 기존 메시지 큐 설정 하 여는 <xref:System.Messaging.MessageQueue.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-132">Before using this instance, you must connect it to an existing Message Queuing queue by setting the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span> <span data-ttu-id="b509c-133">설정할 수 있습니다는 <xref:System.Messaging.MessageQueue> 에 대 한 참조를 <xref:System.Messaging.MessageQueue.Create%28System.String%29> 함으로써 새 메시지 큐를 만드는 메서드의 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-133">Alternatively, you can set the <xref:System.Messaging.MessageQueue> reference to the <xref:System.Messaging.MessageQueue.Create%28System.String%29> method's return value, thereby creating a new Message Queuing queue.</span></span>  
  
 <span data-ttu-id="b509c-134"><xref:System.Messaging.MessageQueue.%23ctor%2A> 생성자의 새 인스턴스를 인스턴스화합니다는 <xref:System.Messaging.MessageQueue> ; 클래스는 새 메시지 큐를 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-134">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor instantiates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span>  
  
 <span data-ttu-id="b509c-135">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Messaging.MessageQueue>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-135">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span>  
  
|<span data-ttu-id="b509c-136">속성</span><span class="sxs-lookup"><span data-stu-id="b509c-136">Property</span></span>|<span data-ttu-id="b509c-137">초기 값</span><span class="sxs-lookup"><span data-stu-id="b509c-137">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="b509c-138">기본 생성자가 설정한 값은 <xref:System.Messaging.DefaultPropertiesToSend> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-138">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<xref:System.Messaging.XmlMessageFormatter>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="b509c-139">기본 생성자가 설정한 값은 <xref:System.Messaging.MessagePropertyFilter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-139">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span> <span data-ttu-id="b509c-140">모든 필터 값으로 설정 됩니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-140">All the filter values are set to `true`.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-141">다음 코드 예제에서는 새 <xref:System.Messaging.MessageQueue>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-141">The following code example creates a new <xref:System.Messaging.MessageQueue>.</span></span>  
  
 [!code-csharp[MessageQueue#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-142">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-142">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span></param>
        <summary><span data-ttu-id="b509c-143">지정된 경로에 있는 메시지 큐를 참조하는 <see cref="T:System.Messaging.MessageQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-143">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-144">새 연결 하려는 경우이 오버 로드를 사용 하 여 <xref:System.Messaging.MessageQueue> 경로, 형식 이름 또는 레이블을 알고 특정 메시지 큐 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="b509c-144">Use this overload when you want to tie the new <xref:System.Messaging.MessageQueue> instance to a particular Message Queuing queue, for which you know the path, format name, or label.</span></span> <span data-ttu-id="b509c-145">큐를 참조 하는 첫 번째 응용 프로그램에 대 한 배타적 액세스 권한을 부여 하려는 경우 설정 해야 합니다는 <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> 속성을 `true` 또는 읽기 액세스 제한 매개 변수를 전달 하는 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-145">If you want to grant exclusive access to the first application that references the queue, you must set the <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property to `true` or use the constructor that passes a read-access restriction parameter.</span></span>  
  
 <span data-ttu-id="b509c-146"><xref:System.Messaging.MessageQueue.%23ctor%2A> 생성자의 새 인스턴스를 인스턴스화합니다는 <xref:System.Messaging.MessageQueue> ; 클래스는 새 메시지 큐를 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-146">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor instantiates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span> <span data-ttu-id="b509c-147">새 큐를 만들려면 메시지 큐에서 사용 하 여 <xref:System.Messaging.MessageQueue.Create%28System.String%29>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-147">To create a new queue in Message Queuing, use <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="b509c-148">구문의 `path` 매개 변수 유형에 따라 큐의 해당 참조는 다음 표에 나와 있는 것 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-148">The syntax of the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-149">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-149">Queue type</span></span>|<span data-ttu-id="b509c-150">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-150">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-151">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-151">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="b509c-152">개인 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-152">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="b509c-153">저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-153">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="b509c-154">컴퓨터 저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-154">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="b509c-155">컴퓨터 배달 못 한 편지 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-155">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="b509c-156">컴퓨터 트랜잭션 배달 못 한 편지 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-156">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="b509c-157">사용할 수 있습니다는 <xref:System.Messaging.MessageQueue.FormatName%2A> 또는 <xref:System.Messaging.MessageQueue.Label%2A> 다음 표에 나와 있는 것 처럼 큐 경로 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-157">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path, as shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-158">참조</span><span class="sxs-lookup"><span data-stu-id="b509c-158">Reference</span></span>|<span data-ttu-id="b509c-159">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-159">Syntax</span></span>|<span data-ttu-id="b509c-160">예제</span><span class="sxs-lookup"><span data-stu-id="b509c-160">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="b509c-161">형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-161">Format name</span></span>|<span data-ttu-id="b509c-162">`FormatName:` [ *형식 이름을* ]</span><span class="sxs-lookup"><span data-stu-id="b509c-162">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="b509c-163">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="b509c-163">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span><br /><br /> <span data-ttu-id="b509c-164">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="b509c-164">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="b509c-165">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="b509c-165">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="b509c-166">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="b509c-166">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span></span>|  
|<span data-ttu-id="b509c-167">레이블</span><span class="sxs-lookup"><span data-stu-id="b509c-167">Label</span></span>|<span data-ttu-id="b509c-168">`Label:` [ *레이블* ]</span><span class="sxs-lookup"><span data-stu-id="b509c-168">`Label:` [ *label* ]</span></span>|<span data-ttu-id="b509c-169">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="b509c-169">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="b509c-170">오프 라인으로 작업 하면 형식 이름 구문을 하지 생성자에 대 한 경로 이름 구문을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-170">To work offline, you must use the format name syntax, not the path name syntax for the constructor.</span></span> <span data-ttu-id="b509c-171">그렇지 않은 경우 주 도메인 컨트롤러를 형식 이름으로 경로 확인할 수 없기 때문에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-171">Otherwise, an exception is thrown because the primary domain controller is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="b509c-172">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Messaging.MessageQueue>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-172">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="b509c-173">이러한 값은 지정 된 경로 사용 하 여 메시지 큐의 속성에 기반을 `path` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-173">These values are based on the properties of the Message Queuing queue with the path specified by the `path` parameter.</span></span>  
  
|<span data-ttu-id="b509c-174">속성</span><span class="sxs-lookup"><span data-stu-id="b509c-174">Property</span></span>|<span data-ttu-id="b509c-175">초기 값</span><span class="sxs-lookup"><span data-stu-id="b509c-175">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.Authenticate%2A>|`false`|  
|<xref:System.Messaging.MessageQueue.BasePriority%2A>|<span data-ttu-id="b509c-176">0</span><span class="sxs-lookup"><span data-stu-id="b509c-176">0</span></span>|  
|<xref:System.Messaging.MessageQueue.Category%2A>|<xref:System.Guid.Empty>|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="b509c-177">기본 생성자가 설정한 값은 <xref:System.Messaging.DefaultPropertiesToSend> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-177">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>|<span data-ttu-id="b509c-178">`true`를 메시지 큐의 개인 정보 수준 설정 "본문" 이면 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-178">`true`, if the Message Queuing queue's privacy level setting is "Body"; otherwise, `false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<xref:System.Messaging.XmlMessageFormatter>|  
|<xref:System.Messaging.MessageQueue.Label%2A>|<xref:System.String.Empty>|  
|<xref:System.Messaging.MessageQueue.MachineName%2A>|<span data-ttu-id="b509c-179">메시지 큐의 컴퓨터 이름 속성의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-179">The value of the Message Queuing queue's computer name property.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>|<xref:System.Messaging.MessageQueue.InfiniteQueueSize>|  
|<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>|<xref:System.Messaging.MessageQueue.InfiniteQueueSize>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="b509c-180">기본 생성자가 설정한 값은 <xref:System.Messaging.MessagePropertyFilter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-180">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Path%2A>|<span data-ttu-id="b509c-181"><xref:System.String.Empty>를 생성자에 의해 설정 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-181"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.QueueName%2A>|<span data-ttu-id="b509c-182"><xref:System.String.Empty>를 생성자에 의해 설정 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-182"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|`false`|  
|<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>|<span data-ttu-id="b509c-183">`true`를 메시지 큐 개체의 저널 설정을 사용 합니다. 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-183">`true`, if the Message Queuing object's journal setting is enabled; otherwise, `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-184">다음 코드 예제에서는 새 <xref:System.Messaging.MessageQueue> 다양 한 경로 이름을 구문 형식을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-184">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="b509c-185">각각의 경우에서 경로가 생성자에 정의 된 큐에 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-185">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-186"><see cref="P:System.Messaging.MessageQueue.Path" /> 속성이 유효하지 않습니다(예: 속성을 설정하지 않은 경우).</span><span class="sxs-lookup"><span data-stu-id="b509c-186">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string * bool -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue (path, sharedModeDenyReceive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-187">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐의 위치로, 로컬 컴퓨터로 지정하려면 "."을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-187">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span></span></param>
        <param name="sharedModeDenyReceive"><span data-ttu-id="b509c-188">첫 번째로 큐에 액세스하는 응용 프로그램에 단독 읽기 권한을 부여하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-188"><see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b509c-189">지정된 경로에 위치하고 읽기 액세스 제한이 설정된 메시지 큐를 참조하는 <see cref="T:System.Messaging.MessageQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-189">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-190">새 연결 하려는 경우이 오버 로드를 사용 하 여 <xref:System.Messaging.MessageQueue> 경로, 형식 이름 또는 레이블을 알고 특정 메시지 큐에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-190">Use this overload when you want to tie the new <xref:System.Messaging.MessageQueue> to a particular Message Queuing queue, for which you know the path, format name, or label.</span></span> <span data-ttu-id="b509c-191">큐를 참조 하는 첫 번째 응용 프로그램에 대 한 배타적 액세스 권한을 부여 하려는 경우, 설정 된 `sharedModeDenyReceive` 매개 변수를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-191">If you want to grant exclusive access to the first application that references the queue, set the `sharedModeDenyReceive` parameter to `true`.</span></span> <span data-ttu-id="b509c-192">그렇지 않으면 설정 `sharedModeDenyReceive` 하 `false` 만 있는 생성자를 사용 하거나는 `path` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b509c-192">Otherwise, set `sharedModeDenyReceive` to `false` or use the constructor that has only a `path` parameter.</span></span>  
  
 <span data-ttu-id="b509c-193">설정 `sharedModeDenyReceive` 에 `true` 메시지 큐를 다른 응용 프로그램을 포함 하 여 액세스 하는 모든 개체에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-193">Setting `sharedModeDenyReceive` to `true` affects all objects that access the Message Queuing queue, including other applications.</span></span> <span data-ttu-id="b509c-194">매개 변수의 효과이 응용 프로그램에 제한 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-194">The effects of the parameter are not restricted to this application.</span></span>  
  
 <span data-ttu-id="b509c-195"><xref:System.Messaging.MessageQueue.%23ctor%2A> 생성자의 새 인스턴스를 만듭니다는 <xref:System.Messaging.MessageQueue> ; 클래스는 새 메시지 큐를 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-195">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor creates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span> <span data-ttu-id="b509c-196">새 큐를 만들려면 메시지 큐에서 사용 하 여 <xref:System.Messaging.MessageQueue.Create%28System.String%29>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-196">To create a new queue in Message Queuing, use <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="b509c-197">구문의 `path` 매개 변수는 큐의 유형에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-197">The syntax of the `path` parameter depends on the type of queue.</span></span>  
  
|<span data-ttu-id="b509c-198">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-198">Queue type</span></span>|<span data-ttu-id="b509c-199">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-199">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-200">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-200">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="b509c-201">개인 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-201">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="b509c-202">저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-202">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="b509c-203">컴퓨터 저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-203">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="b509c-204">컴퓨터 배달 못 한 편지 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-204">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="b509c-205">컴퓨터 트랜잭션 배달 못 한 편지 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-205">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="b509c-206">또는 큐 경로 설명 하는 형식 이름 또는 메시지 큐의 레이블을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-206">Alternatively, you can use the format name or label of a Message Queuing queue to describe the queue path.</span></span>  
  
|<span data-ttu-id="b509c-207">참조</span><span class="sxs-lookup"><span data-stu-id="b509c-207">Reference</span></span>|<span data-ttu-id="b509c-208">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-208">Syntax</span></span>|<span data-ttu-id="b509c-209">예제</span><span class="sxs-lookup"><span data-stu-id="b509c-209">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="b509c-210">형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-210">Format name</span></span>|<span data-ttu-id="b509c-211">`FormatName:` [ *형식 이름을* ]</span><span class="sxs-lookup"><span data-stu-id="b509c-211">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="b509c-212">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="b509c-212">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span><br /><br /> <span data-ttu-id="b509c-213">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="b509c-213">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="b509c-214">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="b509c-214">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="b509c-215">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="b509c-215">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span></span>|  
|<span data-ttu-id="b509c-216">레이블</span><span class="sxs-lookup"><span data-stu-id="b509c-216">Label</span></span>|<span data-ttu-id="b509c-217">`Label:` [ *레이블* ]</span><span class="sxs-lookup"><span data-stu-id="b509c-217">`Label:` [ *label* ]</span></span>|<span data-ttu-id="b509c-218">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="b509c-218">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="b509c-219">오프 라인으로 작업을 이름 구문이 아니라, 형식 이름 구문을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-219">To work offline, you must use the format name syntax, rather than the friendly name syntax.</span></span> <span data-ttu-id="b509c-220">그렇지 않은 경우 (Active Directory 상주 하는) 주 도메인 컨트롤러를 형식 이름으로 경로 확인할 수 없기 때문에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-220">Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="b509c-221">경우는 <xref:System.Messaging.MessageQueue> 큐를 사용 하 여는 `sharedModeDenyReceive` 매개 변수 설정 `true`모든 <xref:System.Messaging.MessageQueue> 이후에 큐에서 읽으려 할 때마다 생성 하는 <xref:System.Messaging.MessageQueueException> 공유 위반으로 인해 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-221">If a <xref:System.Messaging.MessageQueue> opens a queue with the `sharedModeDenyReceive` parameter set to `true`, any <xref:System.Messaging.MessageQueue> that subsequently tries to read from the queue generates a <xref:System.Messaging.MessageQueueException> because of a sharing violation.</span></span> <span data-ttu-id="b509c-222"><xref:System.Messaging.MessageQueueException> 경우에 throw 되는 <xref:System.Messaging.MessageQueue> 다른 단독 모드로 큐에 액세스 하려고 <xref:System.Messaging.MessageQueue> 이미 큐에 대 한 비독점적 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-222">A <xref:System.Messaging.MessageQueueException> is also thrown if a <xref:System.Messaging.MessageQueue> tries to access the queue in exclusive mode while another <xref:System.Messaging.MessageQueue> already has non-exclusive access to the queue.</span></span>  
  
 <span data-ttu-id="b509c-223">다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Messaging.MessageQueue>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-223">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="b509c-224">이러한 값은 지정 된 경로 사용 하 여 메시지 큐 큐의 속성에 기초 합니다 `path` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-224">These values are based on the properties of the Message Queuing queue, with the path specified by the `path` parameter.</span></span>  
  
|<span data-ttu-id="b509c-225">속성</span><span class="sxs-lookup"><span data-stu-id="b509c-225">Property</span></span>|<span data-ttu-id="b509c-226">초기 값</span><span class="sxs-lookup"><span data-stu-id="b509c-226">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.Authenticate%2A>|<span data-ttu-id="b509c-227">`false`.</span><span class="sxs-lookup"><span data-stu-id="b509c-227">`false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.BasePriority%2A>|<span data-ttu-id="b509c-228">0.</span><span class="sxs-lookup"><span data-stu-id="b509c-228">0.</span></span>|  
|<xref:System.Messaging.MessageQueue.Category%2A>|<span data-ttu-id="b509c-229"><xref:System.Guid.Empty>.</span><span class="sxs-lookup"><span data-stu-id="b509c-229"><xref:System.Guid.Empty>.</span></span>|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="b509c-230">기본 생성자가 설정한 값은 <xref:System.Messaging.DefaultPropertiesToSend> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-230">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>|<span data-ttu-id="b509c-231">`true`를 메시지 큐의 개인 정보 수준 설정 "본문" 이면 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-231">`true`, if the Message Queuing queue's privacy level setting is "Body"; otherwise, `false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<span data-ttu-id="b509c-232"><xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="b509c-232"><xref:System.Messaging.XmlMessageFormatter>.</span></span>|  
|<xref:System.Messaging.MessageQueue.Label%2A>|<span data-ttu-id="b509c-233"><xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="b509c-233"><xref:System.String.Empty>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MachineName%2A>|<span data-ttu-id="b509c-234">메시지 큐의 컴퓨터 이름 속성의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-234">The value of the Message Queuing queue's computer name property.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>|<span data-ttu-id="b509c-235"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span><span class="sxs-lookup"><span data-stu-id="b509c-235"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>|<span data-ttu-id="b509c-236"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span><span class="sxs-lookup"><span data-stu-id="b509c-236"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="b509c-237">기본 생성자가 설정한 값은 <xref:System.Messaging.MessagePropertyFilter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-237">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Path%2A>|<span data-ttu-id="b509c-238"><xref:System.String.Empty>를 생성자에 의해 설정 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-238"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.QueueName%2A>|<span data-ttu-id="b509c-239"><xref:System.String.Empty>를 생성자에 의해 설정 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-239"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|<span data-ttu-id="b509c-240">`sharedModeDenyReceive` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-240">The value of the `sharedModeDenyReceive` parameter.</span></span>|  
|<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>|<span data-ttu-id="b509c-241">`true`를 메시지 큐 개체의 저널 설정을 사용 합니다. 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-241">`true`, if the Message Queuing object's journal setting is enabled; otherwise, `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-242">다음 코드 예제에서는 새 <xref:System.Messaging.MessageQueue> 단독 액세스를 사용 하 여 해당 경로 설정 하 고 큐에 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-242">The following code example creates a new <xref:System.Messaging.MessageQueue> with exclusive access, sets its path, and sends a message to the queue.</span></span>  
  
 [!code-cpp[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/CPP/mqctor_denysharedreceive.cpp#1)]
 [!code-csharp[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/CS/mqctor_denysharedreceive.cs#1)]
 [!code-vb[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/VB/mqctor_denysharedreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-243"><see cref="P:System.Messaging.MessageQueue.Path" /> 속성이 유효하지 않습니다(예: 속성을 설정하지 않은 경우).</span><span class="sxs-lookup"><span data-stu-id="b509c-243">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, System.Messaging.QueueAccessMode accessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Messaging.QueueAccessMode accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, accessMode As QueueAccessMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, System::Messaging::QueueAccessMode accessMode);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string * System.Messaging.QueueAccessMode -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue (path, accessMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="accessMode" Type="System.Messaging.QueueAccessMode" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-244">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐의 위치로, 로컬 컴퓨터로 지정하려면 "."을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-244">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span></span></param>
        <param name="accessMode"><span data-ttu-id="b509c-245"><see cref="T:System.Messaging.QueueAccessMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-245">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span></span></param>
        <summary><span data-ttu-id="b509c-246"><see cref="T:System.Messaging.MessageQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-246">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive, bool enableCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean, enableCache As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive, bool enableCache);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string * bool * bool -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue (path, sharedModeDenyReceive, enableCache)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enableCache" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-247">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐의 위치로, 로컬 컴퓨터로 지정하려면 "."을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-247">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span></span></param>
        <param name="sharedModeDenyReceive"><span data-ttu-id="b509c-248">첫 번째로 큐에 액세스하는 응용 프로그램에 단독 읽기 권한을 부여하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-248"><see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span></span></param>
        <param name="enableCache"><span data-ttu-id="b509c-249">연결 캐시를 만들어 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-249"><see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b509c-250"><see cref="T:System.Messaging.MessageQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-250">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b509c-251">다음 코드 예제에서는 새 <xref:System.Messaging.MessageQueue> 단독 액세스 및 연결 캐싱을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-251">The following code example creates a new <xref:System.Messaging.MessageQueue> with exclusive read access and with connection caching enabled.</span></span>  
  
 [!code-cpp[MessageQueue4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue4/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueue4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue4/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache, System.Messaging.QueueAccessMode accessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive, bool enableCache, valuetype System.Messaging.QueueAccessMode accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean, enableCache As Boolean, accessMode As QueueAccessMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive, bool enableCache, System::Messaging::QueueAccessMode accessMode);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueue : string * bool * bool * System.Messaging.QueueAccessMode -&gt; System.Messaging.MessageQueue" Usage="new System.Messaging.MessageQueue (path, sharedModeDenyReceive, enableCache, accessMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enableCache" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="accessMode" Type="System.Messaging.QueueAccessMode" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-252">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐의 위치로, 로컬 컴퓨터로 지정하려면 "."을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-252">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span></span></param>
        <param name="sharedModeDenyReceive"><span data-ttu-id="b509c-253">첫 번째로 큐에 액세스하는 응용 프로그램에 단독 읽기 권한을 부여하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-253"><see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span></span></param>
        <param name="enableCache"><span data-ttu-id="b509c-254">연결 캐시를 만들어 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-254"><see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span></span></param>
        <param name="accessMode"><span data-ttu-id="b509c-255"><see cref="T:System.Messaging.QueueAccessMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-255">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span></span></param>
        <summary><span data-ttu-id="b509c-256"><see cref="T:System.Messaging.MessageQueue" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-256">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessMode">
      <MemberSignature Language="C#" Value="public System.Messaging.QueueAccessMode AccessMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.QueueAccessMode AccessMode" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.AccessMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessMode As QueueAccessMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::QueueAccessMode AccessMode { System::Messaging::QueueAccessMode get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessMode : System.Messaging.QueueAccessMode" Usage="System.Messaging.MessageQueue.AccessMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.QueueAccessMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-257">큐의 액세스 모드를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-257">Gets a value that indicates the access mode for the queue.</span></span></summary>
        <value><span data-ttu-id="b509c-258"><see cref="T:System.Messaging.QueueAccessMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-258">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-259">큐에 대 한 기본 액세스 모드 `QueueAccessMode.SendAndReceive`생성자를 호출할 때 별도로 지정 하지 않으면, 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-259">The default access mode for a queue is `QueueAccessMode.SendAndReceive`, unless you specify otherwise when calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueue.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Authenticate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-260">큐가 인증된 메시지만 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-260">Gets or sets a value that indicates whether the queue accepts only authenticated messages.</span></span></summary>
        <value><span data-ttu-id="b509c-261">큐가 인증된 메시지만 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-261"><see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b509c-262">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-262">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-263">메시지 인증에는 메시지 무결성을 보장 하 고 메시지를 보낸 사람을 확인 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-263">Message authentication provides a way to ensure message integrity and to verify who sent the message.</span></span> <span data-ttu-id="b509c-264">인증 요청을 보내는 응용 프로그램 메시지의 인증 수준을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-264">To request authentication, the sending application sets the message's authentication level.</span></span>  
  
 <span data-ttu-id="b509c-265">설정한 경우 <xref:System.Messaging.MessageQueue.Authenticate%2A> 하 `true`를 제한 하는이 뿐만 아니라를 서버의 큐에 대 한 액세스 <xref:System.Messaging.MessageQueue> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="b509c-265">When you set <xref:System.Messaging.MessageQueue.Authenticate%2A> to `true`, you are restricting access to the queue on the server, not only to this <xref:System.Messaging.MessageQueue> instance.</span></span> <span data-ttu-id="b509c-266">동일한 메시지 큐에 대해 작동 하는 모든 클라이언트 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-266">All clients working against the same Message Queuing queue will be affected.</span></span>  
  
 <span data-ttu-id="b509c-267">인증 된 메시지만 허용 하는 큐에서 인증 되지 않은 메시지를 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-267">A queue that accepts only authenticated messages will reject a non-authenticated message.</span></span> <span data-ttu-id="b509c-268">요청 거부 메시지에 대 한 알림을 보내는 응용 프로그램을 설정할 수는 <xref:System.Messaging.Message.AcknowledgeType%2A> 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-268">To request notification of message rejection, a sending application can set the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the message.</span></span> <span data-ttu-id="b509c-269">있기 때문에 메시지가 거부 없음 다른 표시 보내는 응용 프로그램 배달 못 한 편지 큐로 보낼 수 있는지를 요청 하지 않으면 메시지가 손실 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-269">Because no other indication of message rejection exists, the sending application can lose the message unless you request that it be sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="b509c-270">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-270">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-271">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-271">Workgroup mode</span></span>|<span data-ttu-id="b509c-272">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-272">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-273">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-273">Local computer</span></span>|<span data-ttu-id="b509c-274">예</span><span class="sxs-lookup"><span data-stu-id="b509c-274">Yes</span></span>|  
|<span data-ttu-id="b509c-275">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-275">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-276">예</span><span class="sxs-lookup"><span data-stu-id="b509c-276">Yes</span></span>|  
|<span data-ttu-id="b509c-277">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-277">Remote computer</span></span>|<span data-ttu-id="b509c-278">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-278">No</span></span>|  
|<span data-ttu-id="b509c-279">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-279">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-280">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-280">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-281">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.Authenticate%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-281">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Authenticate%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-282">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-282">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueue.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_BasePriority")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-283">네트워크에서 공개 큐의 메시지를 라우팅하는 데 사용하는 기본 우선 순위 메시지 큐를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-283">Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</span></span></summary>
        <value><span data-ttu-id="b509c-284">(공개) 큐에 보내진 모든 메시지에 대한 단일 기본 우선 순위입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-284">The single base priority for all messages sent to the (public) queue.</span></span> <span data-ttu-id="b509c-285">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-285">The default is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-286">메시지 큐의 기본 우선 순위 큐 네트워크를 통과 하는 처리 방법 라우팅 메시지에 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-286">A message queue's base priority specifies how a message en route to that queue is treated as it travels through the network.</span></span> <span data-ttu-id="b509c-287">설정할 수 있습니다는 <xref:System.Messaging.MessageQueue.BasePriority%2A> 속성을 다른 큐로 전송 하는 것 보다 지정 된 큐로 보낸 모든 메시지에 더 높은 또는 더 낮은 우선 순위를 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-287">You can set the <xref:System.Messaging.MessageQueue.BasePriority%2A> property to confer a higher or lower priority to all messages sent to the specified queue than those sent to other queues.</span></span> <span data-ttu-id="b509c-288">메시지 큐를 수정이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-288">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="b509c-289">따라서 다른 <xref:System.Messaging.MessageQueue> 인스턴스는 변경 내용의 영향입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-289">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="b509c-290">메시지 큐 <xref:System.Messaging.MessageQueue.BasePriority%2A> 관련이 없는 <xref:System.Messaging.Message.Priority%2A> 들어오는 메시지 큐에 배치 되는 순서를 지정 하는 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-290">A message queue's <xref:System.Messaging.MessageQueue.BasePriority%2A> is not related to the <xref:System.Messaging.Message.Priority%2A> property of a message, which specifies the order in which an incoming message is placed in the queue.</span></span>  
  
 <span data-ttu-id="b509c-291"><xref:System.Messaging.MessageQueue.BasePriority%2A> 공개 큐에만 형식 이름을 사용 하 여 경로가 지정 된 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-291"><xref:System.Messaging.MessageQueue.BasePriority%2A> applies only to public queues whose paths are specified using the format name.</span></span> <span data-ttu-id="b509c-292">개인 큐의 기본 우선 순위는 항상 0입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-292">The base priority of a private queue is always zero (0).</span></span>  
  
 <span data-ttu-id="b509c-293">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-293">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-294">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-294">Workgroup mode</span></span>|<span data-ttu-id="b509c-295">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-295">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-296">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-296">Local computer</span></span>|<span data-ttu-id="b509c-297">예</span><span class="sxs-lookup"><span data-stu-id="b509c-297">Yes</span></span>|  
|<span data-ttu-id="b509c-298">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-298">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-299">예</span><span class="sxs-lookup"><span data-stu-id="b509c-299">Yes</span></span>|  
|<span data-ttu-id="b509c-300">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-300">Remote computer</span></span>|<span data-ttu-id="b509c-301">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-301">No</span></span>|  
|<span data-ttu-id="b509c-302">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-302">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-303">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-303">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-304">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.BasePriority%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-304">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.BasePriority%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-305">기본 우선 순위가 잘못된 값으로 설정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-305">The base priority was set to an invalid value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-306">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-306">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPeek">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe><span data-ttu-id="b509c-307">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-307">The method is not thread safe.</span></span></threadsafe>
        <summary><span data-ttu-id="b509c-308">메시지 큐가 메시지 피킹(peeking)을 시작하도록 한 후, 작업을 마치면 이벤트 처리기에 알리도록 하여 비동기 피킹(peeking) 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-308">Initiates an asynchronous peek operation by telling Message Queuing to begin peeking a message and notify the event handler when finished.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek();" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : unit -&gt; IAsyncResult" Usage="messageQueue.BeginPeek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-309">시간 제한이 없는 비동기 피킹(peeking) 작업을 시작합니다. 큐에서 메시지를 사용할 수 있을 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-309">Initiates an asynchronous peek operation that has no time-out. The operation is not complete until a message becomes available in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-310">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-310">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-311">비동기 처리를 사용 하 여 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 시키려면는 <xref:System.Messaging.MessageQueue.PeekCompleted> 메시지 큐에서 사용 가능 해지면 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-311">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue.</span></span>  
  
 <span data-ttu-id="b509c-312"><xref:System.Messaging.MessageQueue.PeekCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-312"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-313">사용할 <xref:System.Messaging.MessageQueue.BeginPeek%2A>, 비동기 작업의 결과 처리 하는 이벤트 처리기를 만듭니다 및 이벤트 대리자를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-313">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="b509c-314"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 비동기 작업을 시작합니다. 합니다 <xref:System.Messaging.MessageQueue> 의 발생을 통해 알림을 받은 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트를 큐에 메시지가 도착할 때.</span><span class="sxs-lookup"><span data-stu-id="b509c-314"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="b509c-315">합니다 <xref:System.Messaging.MessageQueue> 메시지를 호출 하 여 액세스할 수 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 사용 하 여 결과 검색 하는 <xref:System.Messaging.PeekCompletedEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-315">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="b509c-316"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-316">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-317">때문에 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 은 비동기 호출할 수는 현재 실행 스레드를 차단 하지 않고 큐를 피킹할 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-317">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-318">큐에 동기적으로 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-318">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-319">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-319">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-320">합니다 <xref:System.IAsyncResult> 는 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 반환 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-320">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginPeek%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-321">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-321">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-322">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-322">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-323">사용 하는 예제의 경우는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-323">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-324">하는 경우 <xref:System.Messaging.MessageQueue.CanRead%2A> 됩니다 `false`완료 이벤트를 발생 하지 않지만 호출할 때 예외가 throw 됩니다, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-324">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="b509c-325">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-325">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-326">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-326">Workgroup mode</span></span>|<span data-ttu-id="b509c-327">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-327">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-328">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-328">Local computer</span></span>|<span data-ttu-id="b509c-329">예</span><span class="sxs-lookup"><span data-stu-id="b509c-329">Yes</span></span>|  
|<span data-ttu-id="b509c-330">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-330">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-331">예</span><span class="sxs-lookup"><span data-stu-id="b509c-331">Yes</span></span>|  
|<span data-ttu-id="b509c-332">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-332">Remote computer</span></span>|<span data-ttu-id="b509c-333">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-333">No</span></span>|  
|<span data-ttu-id="b509c-334">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-334">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-335">예</span><span class="sxs-lookup"><span data-stu-id="b509c-335">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-336">다음 코드 예제에서는 명명 된 이벤트 처리기를 만듭니다 `MyPeekCompleted`에 연결 합니다 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트 처리기 대리자를 호출 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 경로에 있는 큐에 비동기 작업을 시작 하려면 ". \myQueue"입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-336">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="b509c-337">경우는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 하 고 예제는 메시지를 피킹합니다 화면으로 해당 본문을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-337">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="b509c-338">이 예제에서는 호출 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 새 비동기 작업을 시작 하려면 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-338">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-339">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-339">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-340">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-340">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : TimeSpan -&gt; IAsyncResult" Usage="messageQueue.BeginPeek timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-341">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-341">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <summary><span data-ttu-id="b509c-342">시간 제한이 지정된 비동기 피킹(peeking) 작업을 시작합니다. 큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-342">Initiates an asynchronous peek operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-343">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-343">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-344">비동기 처리를 사용 하 여 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 시키려면는 <xref:System.Messaging.MessageQueue.PeekCompleted> 메시지를 큐 또는 지정된 된 시간 간격이 만료 될 때 제공 되는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-344">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="b509c-345"><xref:System.Messaging.MessageQueue.PeekCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-345"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-346">사용할 <xref:System.Messaging.MessageQueue.BeginPeek%2A>, 비동기 작업의 결과 처리 하는 이벤트 처리기를 만듭니다 및 이벤트 대리자를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-346">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="b509c-347"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 비동기 작업을 시작합니다. 합니다 <xref:System.Messaging.MessageQueue> 의 발생을 통해 알림을 받은 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트를 큐에 메시지가 도착할 때.</span><span class="sxs-lookup"><span data-stu-id="b509c-347"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="b509c-348">합니다 <xref:System.Messaging.MessageQueue> 메시지를 호출 하 여 액세스할 수 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 사용 하 여 결과 검색 하는 <xref:System.Messaging.PeekCompletedEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-348">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="b509c-349"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-349">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-350">때문에 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 은 비동기 호출할 수는 현재 실행 스레드를 차단 하지 않고 큐를 피킹할 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-350">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-351">큐에 동기적으로 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-351">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-352">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-352">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-353">합니다 <xref:System.IAsyncResult> 는 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 반환 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-353">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginPeek%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-354">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-354">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-355">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-355">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-356">사용 하는 예제의 경우는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-356">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-357">이 오버 로드 제한 시간을 지정합니다. 으로 지정한 간격이 경우는 `timeout` 만료 된 매개 변수를이 구성 요소는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="b509c-357">This overload specifies a time-out. If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="b509c-358">메시지가 없으므로에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-358">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="b509c-359">하는 경우 <xref:System.Messaging.MessageQueue.CanRead%2A> 됩니다 `false`완료 이벤트를 발생 하지 않지만 호출할 때 예외가 throw 됩니다, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-359">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="b509c-360">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-360">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-361">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-361">Workgroup mode</span></span>|<span data-ttu-id="b509c-362">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-362">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-363">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-363">Local computer</span></span>|<span data-ttu-id="b509c-364">예</span><span class="sxs-lookup"><span data-stu-id="b509c-364">Yes</span></span>|  
|<span data-ttu-id="b509c-365">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-365">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-366">예</span><span class="sxs-lookup"><span data-stu-id="b509c-366">Yes</span></span>|  
|<span data-ttu-id="b509c-367">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-367">Remote computer</span></span>|<span data-ttu-id="b509c-368">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-368">No</span></span>|  
|<span data-ttu-id="b509c-369">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-369">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-370">예</span><span class="sxs-lookup"><span data-stu-id="b509c-370">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-371">다음 코드 예제에서는 큐 경로 사용 하 여 비동기 작업을 ". \myQueue"입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-371">The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</span></span> <span data-ttu-id="b509c-372">이벤트 처리기를 만듭니다 `MyPeekCompleted`에 연결 하 고는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트 처리기 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-372">It creates an event handler, `MyPeekCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate.</span></span> <span data-ttu-id="b509c-373"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 비동기 작업을 시작 하려면 1 분의 시간 제한으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-373"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is called with a time-out of one minute, to initiate the asynchronous peek operation.</span></span> <span data-ttu-id="b509c-374">경우는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 하거나 제한 시간이 만료, 하나 있고, 해당 본문 화면에 기록 됩니다 하는 경우 메시지를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-374">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised or the time-out expires, the message is retrieved if one exists, and its body is written to the screen.</span></span> <span data-ttu-id="b509c-375">그런 다음 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 동일한 제한 시간을 사용 하 여 새 비동기 작업을 시작 하기 위해 다시 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-375">Then <xref:System.Messaging.MessageQueue.BeginPeek%2A> is called again to initiate a new asynchronous peek operation with the same time-out.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/CPP/mqbeginpeek_timeout.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/CS/mqbeginpeek_timeout.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/VB/mqbeginpeek_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-376"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-376">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-377">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-377">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-378">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-378">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : TimeSpan * obj -&gt; IAsyncResult" Usage="messageQueue.BeginPeek (timeout, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-379">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-379">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="stateObject"><span data-ttu-id="b509c-380">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-380">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="b509c-381">시간 제한 및 상태 개체가 지정되어 있는 비동기 피킹(peeking) 작업을 시작합니다. 이는 작업의 수명이 지속되는 동안 관련된 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-381">Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span></span> <span data-ttu-id="b509c-382">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-382">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-383">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-383">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-384">비동기 처리를 사용 하 여 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 시키려면는 <xref:System.Messaging.MessageQueue.PeekCompleted> 메시지를 큐 또는 지정된 된 시간 간격이 만료 될 때 제공 되는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-384">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="b509c-385"><xref:System.Messaging.MessageQueue.PeekCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-385"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-386">작업의 수명 주기 동안 유지 됩니다 하는 작업을 사용 하 여 정보를 연결 하려면이 오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-386">Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</span></span> <span data-ttu-id="b509c-387">이벤트 처리기를 확인 하 여이 정보에 액세스할 수 합니다 <xref:System.IAsyncResult.AsyncState%2A> 의 속성을 <xref:System.IAsyncResult> 작업과 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-387">The event handler can access this information by looking at the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> that is associated with the operation.</span></span>  
  
 <span data-ttu-id="b509c-388">사용할 <xref:System.Messaging.MessageQueue.BeginPeek%2A>, 비동기 작업의 결과 처리 하는 이벤트 처리기를 만듭니다 및 이벤트 대리자를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-388">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="b509c-389"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 비동기 작업을 시작합니다. 합니다 <xref:System.Messaging.MessageQueue> 의 발생을 통해 알림을 받은 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트를 큐에 메시지가 도착할 때.</span><span class="sxs-lookup"><span data-stu-id="b509c-389"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="b509c-390">합니다 <xref:System.Messaging.MessageQueue> 메시지를 호출 하 여 액세스할 수 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 사용 하 여 결과 검색 하는 <xref:System.Messaging.PeekCompletedEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-390">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="b509c-391"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-391">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-392">때문에 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 은 비동기 호출할 수는 현재 실행 스레드를 차단 하지 않고 큐를 피킹할 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-392">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-393">큐에 동기적으로 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-393">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-394">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-394">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-395"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 반환을 <xref:System.IAsyncResult> 는 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-395"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-396">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-396">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-397">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-397">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-398">사용 하는 예제의 경우는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-398">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-399">이 오버 로드 제한 시간 및 상태 개체를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-399">This overload specifies a time-out and a state object.</span></span> <span data-ttu-id="b509c-400">으로 지정한 간격이 경우는 `timeout` 만료 된 매개 변수를이 구성 요소는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="b509c-400">If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="b509c-401">메시지가 없으므로에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-401">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="b509c-402">작업 상태 정보를 연결 하는 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-402">The state object associates state information with the operation.</span></span> <span data-ttu-id="b509c-403">예를 들어, 호출 하는 경우 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 여러 작업을 시작 하려면 여러 번, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-403">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span> <span data-ttu-id="b509c-404">이 시나리오의 예시 예제 섹션을 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="b509c-404">For an illustration of this scenario, see the Example section.</span></span>  
  
 <span data-ttu-id="b509c-405">또한 프로세스 스레드 간에 정보를 전달 하는 상태 개체를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-405">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="b509c-406">스레드가 시작 될 경우 콜백이 비동기 시나리오에서 다른 스레드에서 상태 개체 마샬링되고 이벤트의 정보와 함께 다시 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-406">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="b509c-407">하는 경우 <xref:System.Messaging.MessageQueue.CanRead%2A> 됩니다 `false`완료 이벤트를 발생 하지 않지만 호출할 때 예외가 throw 됩니다, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-407">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="b509c-408">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-408">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-409">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-409">Workgroup mode</span></span>|<span data-ttu-id="b509c-410">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-410">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-411">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-411">Local computer</span></span>|<span data-ttu-id="b509c-412">예</span><span class="sxs-lookup"><span data-stu-id="b509c-412">Yes</span></span>|  
|<span data-ttu-id="b509c-413">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-413">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-414">예</span><span class="sxs-lookup"><span data-stu-id="b509c-414">Yes</span></span>|  
|<span data-ttu-id="b509c-415">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-415">Remote computer</span></span>|<span data-ttu-id="b509c-416">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-416">No</span></span>|  
|<span data-ttu-id="b509c-417">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-417">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-418">예</span><span class="sxs-lookup"><span data-stu-id="b509c-418">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-419">다음 코드 예제에서는 큐 경로 사용 하 여 비동기 작업을 ". \myQueue"입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-419">The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</span></span> <span data-ttu-id="b509c-420">이벤트 처리기를 만듭니다 `MyPeekCompleted`에 연결 하 고는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트 처리기 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-420">It creates an event handler, `MyPeekCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate.</span></span> <span data-ttu-id="b509c-421"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 라고, 1 분의 시간 제한으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-421"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is called, with a time-out of one minute.</span></span> <span data-ttu-id="b509c-422">호출할 때마다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 해당 특정 작업을 식별 하는 연결 된 고유한 정수에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-422">Each call to <xref:System.Messaging.MessageQueue.BeginPeek%2A> has a unique associated integer that identifies that particular operation.</span></span> <span data-ttu-id="b509c-423">경우는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 하거나 제한 시간이 만료 메시지에 있는 경우 검색 되 고 해당 본문 및 작업 관련 정수 식별자를 화면에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-423">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised or the time-out expired, the message, if one exists, is retrieved and its body and the operation-specific integer identifier are written to the screen.</span></span> <span data-ttu-id="b509c-424">그런 다음 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 동일한 시간 제한 및 방금 완료 된 작업의 연결 된 정수를 사용 하 여 새 비동기 작업을 시작 하기 위해 다시 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-424">Then <xref:System.Messaging.MessageQueue.BeginPeek%2A> is called again to initiate a new asynchronous peek operation with the same time-out and the associated integer of the just completed operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/CPP/mqbeginpeek_timeoutstateobject.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/CS/mqbeginpeek_timeoutstateobject.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/VB/mqbeginpeek_timeoutstateobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-425"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-425">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-426">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-426">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-427">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-427">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, object stateObject, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan, stateObject As Object, callback As AsyncCallback) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Object ^ stateObject, AsyncCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : TimeSpan * obj * AsyncCallback -&gt; IAsyncResult" Usage="messageQueue.BeginPeek (timeout, stateObject, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-428">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-428">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="stateObject"><span data-ttu-id="b509c-429">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-429">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="b509c-430">비동기 작업 완료에 대한 알림을 수신할 <see cref="T:System.AsyncCallback" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-430">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</span></span></param>
        <summary><span data-ttu-id="b509c-431">시간 제한 및 상태 개체가 지정되어 있는 비동기 피킹(peeking) 작업을 시작합니다. 이는 작업의 수명이 지속되는 동안 관련된 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-431">Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span></span> <span data-ttu-id="b509c-432">이 오버로드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-432">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="b509c-433">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-433">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-434">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-434">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-435">메시지 큐 또는 지정된 된 시간 간격이 만료 되 면 경우에 사용 가능 해지면 콜백 매개 변수에 지정 된 콜백은 직접 호출이 오버 로드를 사용 하는 경우 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-435">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.PeekCompleted> event is not raised.</span></span> <span data-ttu-id="b509c-436">다른 오버 로드 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 시키려면이 구성 요소에 의존 합니다 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-436">The other overloads of <xref:System.Messaging.MessageQueue.BeginPeek%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span>  
  
 <span data-ttu-id="b509c-437"><xref:System.Messaging.MessageQueue.PeekCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-437"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-438"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-438">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-439">때문에 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 은 비동기 호출할 수는 현재 실행 스레드를 차단 하지 않고 큐를 피킹할 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-439">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-440">큐에 동기적으로 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-440">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-441">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-441">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-442"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 반환을 <xref:System.IAsyncResult> 는 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-442"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-443">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-443">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-444">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-444">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-445">사용 하는 예제의 경우는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-445">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-446">작업 상태 정보를 연결 하는 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-446">The state object associates state information with the operation.</span></span> <span data-ttu-id="b509c-447">예를 들어, 호출 하는 경우 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 여러 작업을 시작 하려면 여러 번, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-447">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="b509c-448">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-448">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-449">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-449">Workgroup mode</span></span>|<span data-ttu-id="b509c-450">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-450">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-451">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-451">Local computer</span></span>|<span data-ttu-id="b509c-452">예</span><span class="sxs-lookup"><span data-stu-id="b509c-452">Yes</span></span>|  
|<span data-ttu-id="b509c-453">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-453">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-454">예</span><span class="sxs-lookup"><span data-stu-id="b509c-454">Yes</span></span>|  
|<span data-ttu-id="b509c-455">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-455">Remote computer</span></span>|<span data-ttu-id="b509c-456">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-456">No</span></span>|  
|<span data-ttu-id="b509c-457">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-457">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-458">예</span><span class="sxs-lookup"><span data-stu-id="b509c-458">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-459">다음 코드 예제에서는 비동기 작업을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-459">The following code example creates an asynchronous peek operation.</span></span> <span data-ttu-id="b509c-460">다음 코드 예제에서는 보내는 로컬 메시지 큐에 메시지를 호출 <xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>전달: 10 초의 시간 제한 값을;는 특정 메시지; 및의 새 인스턴스를 식별 하는 고유한 정수 <xref:System.AsyncCallback> 식별 하는 이벤트 처리기 `MyPeekCompleted`.</span><span class="sxs-lookup"><span data-stu-id="b509c-460">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <xref:System.AsyncCallback> that identifies the event handler, `MyPeekCompleted`.</span></span> <span data-ttu-id="b509c-461">경우는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 하면 이벤트 처리기는 메시지를 피킹합니다 하 고 화면에 메시지 본문 및 정수 메시지 식별자를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-461">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the event handler peeks at the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginPeek#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginPeek/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginPeek#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginPeek/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-462"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-462">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-463">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-463">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-464">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-464">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action, object state, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.PeekAction action, object state, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::PeekAction action, System::Object ^ state, AsyncCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.BeginPeek : TimeSpan * System.Messaging.Cursor * System.Messaging.PeekAction * obj * AsyncCallback -&gt; IAsyncResult" Usage="messageQueue.BeginPeek (timeout, cursor, action, state, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="action" Type="System.Messaging.PeekAction" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-465">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-465">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="cursor"><span data-ttu-id="b509c-466">메시지 큐에서 특정 위치를 유지하는 <see cref="T:System.Messaging.Cursor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-466">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="action"><span data-ttu-id="b509c-467"><see cref="T:System.Messaging.PeekAction" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-467">One of the <see cref="T:System.Messaging.PeekAction" /> values.</span></span> <span data-ttu-id="b509c-468">이 값은 큐의 현재 메시지를 피킹할지 또는 다음 메시지를 피킹할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-468">Indicates whether to peek at the current message in the queue, or the next message.</span></span></param>
        <param name="state"><span data-ttu-id="b509c-469">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-469">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="b509c-470">비동기 작업 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-470">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion.</span></span></param>
        <summary><span data-ttu-id="b509c-471">지정된 제한 시간이 있고 지정된 커서, 지정된 피킹(peeking) 작업 및 지정된 상태 개체를 사용하는 비동기 피킹(peeking) 작업을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-471">Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object.</span></span> <span data-ttu-id="b509c-472">상태 개체는 전체 작업 기간 동안 관련 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-472">The state object provides associated information throughout the lifetime of the operation.</span></span> <span data-ttu-id="b509c-473">이 오버로드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-473">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="b509c-474">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-474">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-475">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-475">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-476">이 오버 로드를 사용 하는 경우 콜백 매개 변수에 지정 된 콜백 메시지를 큐 또는 지정된 된 시간 간격이 만료 될 때 사용할 수 있을 때 직접 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-476">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired.</span></span> <span data-ttu-id="b509c-477"><xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-477">The <xref:System.Messaging.MessageQueue.PeekCompleted> event is not raised.</span></span> <span data-ttu-id="b509c-478">다른 오버 로드 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 시키려면이 구성 요소에 의존 합니다 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-478">The other overloads of <xref:System.Messaging.MessageQueue.BeginPeek%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span>  
  
 <span data-ttu-id="b509c-479"><xref:System.Messaging.MessageQueue.PeekCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-479"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-480"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-480">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-481">때문에 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 은 비동기 호출할 수는 현재 실행 스레드를 차단 하지 않고 큐를 피킹할 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-481">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-482">큐에 동기적으로 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-482">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-483">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-483">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-484"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 반환 된 <xref:System.IAsyncResult> 메서드에 의해 시작 된 비동기 작업을 식별 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-484"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation started by the method.</span></span> <span data-ttu-id="b509c-485">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-485">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-486">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-486">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-487">이 예에서 사용 하 여를 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-487">In this case, use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-488">작업 상태 정보를 연결 하는 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-488">The state object associates state information with the operation.</span></span> <span data-ttu-id="b509c-489">예를 들어, 호출 하는 경우 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 여러 작업을 시작 하려면 여러 번, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-489">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="b509c-490">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-490">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-491">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-491">Workgroup mode</span></span>|<span data-ttu-id="b509c-492">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-492">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-493">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-493">Local computer</span></span>|<span data-ttu-id="b509c-494">예</span><span class="sxs-lookup"><span data-stu-id="b509c-494">Yes</span></span>|  
|<span data-ttu-id="b509c-495">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-495">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-496">예</span><span class="sxs-lookup"><span data-stu-id="b509c-496">Yes</span></span>|  
|<span data-ttu-id="b509c-497">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-497">Remote computer</span></span>|<span data-ttu-id="b509c-498">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-498">No</span></span>|  
|<span data-ttu-id="b509c-499">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-499">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-500">예</span><span class="sxs-lookup"><span data-stu-id="b509c-500">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b509c-501"><paramref name="action" /> 매개 변수에 대해 <see langword="PeekAction.Current" /> 또는 <see langword="PeekAction.Next" /> 이외의 값을 지정했습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-501">A value other than <see langword="PeekAction.Current" /> or <see langword="PeekAction.Next" /> was specified for the <paramref name="action" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-502"><paramref name="cursor" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-502">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-503"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-503">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-504">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-504">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-505">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-505">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReceive">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe><span data-ttu-id="b509c-506">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-506">The method is not thread safe.</span></span></threadsafe>
        <summary><span data-ttu-id="b509c-507">메시지 큐가 메시지 수신을 시작하도록 한 후, 작업을 마치면 이벤트 처리기에 알리도록 하여 비동기 수신 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-507">Initiates an asynchronous receive operation by telling Message Queuing to begin receiving a message and notify the event handler when finished.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive();" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : unit -&gt; IAsyncResult" Usage="messageQueue.BeginReceive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-508">시간 제한이 없는 비동기 수신 작업을 시작합니다. 큐에서 메시지를 사용할 수 있을 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-508">Initiates an asynchronous receive operation that has no time-out. The operation is not complete until a message becomes available in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-509">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-509">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-510">비동기 처리를 사용 하 여 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 시키려면는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트 메시지를 큐에서 제거 된 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-510">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message has been removed from the queue.</span></span>  
  
 <span data-ttu-id="b509c-511"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-511"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-512">사용할 <xref:System.Messaging.MessageQueue.BeginReceive%2A>, 비동기 작업의 결과 처리 하는 이벤트 처리기를 만듭니다 및 이벤트 대리자를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-512">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="b509c-513"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 작업을 수신 하는 비동기 시작 합니다 <xref:System.Messaging.MessageQueue> 의 발생을 통해 알림을 받은 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트를 큐에 메시지가 도착할 때.</span><span class="sxs-lookup"><span data-stu-id="b509c-513"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="b509c-514">합니다 <xref:System.Messaging.MessageQueue> 메시지를 호출 하 여 액세스할 수 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-514">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="b509c-515"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-515">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-516">때문에 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 은 비동기 호출할 수 있습니다 현재 실행 스레드를 차단 하지 않고 큐에서 메시지를 수신 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-516">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-517">동기적으로 메시지를 받고, 사용 된 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-517">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-518">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-518">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-519">합니다 <xref:System.IAsyncResult> 는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 반환 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-519">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-520">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-520">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-521">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-521">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-522">사용 하는 예제의 경우는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-522">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-523">하는 경우 <xref:System.Messaging.MessageQueue.CanRead%2A> 됩니다 `false`완료 이벤트를 발생 하지 않지만 호출할 때 예외가 throw 됩니다, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-523">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="b509c-524">비동기 호출을 사용 하지 않는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 트랜잭션과 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-524">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="b509c-525">트랜잭션 비동기 작업을 수행 하려는 경우 호출할 <xref:System.Messaging.MessageQueue.BeginPeek%2A>, 트랜잭션 및 (동기) 및 <xref:System.Messaging.MessageQueue.Receive%2A> 보기 작업에 대해 만든 이벤트 처리기에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-525">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="b509c-526">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-526">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="b509c-527">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-527">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-528">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-528">Workgroup mode</span></span>|<span data-ttu-id="b509c-529">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-529">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-530">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-530">Local computer</span></span>|<span data-ttu-id="b509c-531">예</span><span class="sxs-lookup"><span data-stu-id="b509c-531">Yes</span></span>|  
|<span data-ttu-id="b509c-532">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-532">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-533">예</span><span class="sxs-lookup"><span data-stu-id="b509c-533">Yes</span></span>|  
|<span data-ttu-id="b509c-534">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-534">Remote computer</span></span>|<span data-ttu-id="b509c-535">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-535">No</span></span>|  
|<span data-ttu-id="b509c-536">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-536">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-537">예</span><span class="sxs-lookup"><span data-stu-id="b509c-537">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-538">다음 코드 예제에서는 비동기 요청을 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-538">The following code example chains asynchronous requests.</span></span> <span data-ttu-id="b509c-539">"MyQueue"를 호출 하는 로컬 컴퓨터에는 큐가 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-539">It assumes there is a queue on the local computer called "myQueue".</span></span> <span data-ttu-id="b509c-540">합니다 `Main` 함수를 처리 하는 비동기 작업을 시작 합니다 `MyReceiveCompleted` 루틴입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-540">The `Main` function begins the asynchronous operation that is handled by the `MyReceiveCompleted` routine.</span></span> <span data-ttu-id="b509c-541">`MyReceiveCompleted` 현재 메시지를 처리 하 고 새 시작 비동기 수신 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-541">`MyReceiveCompleted` processes the current message and begins a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_mre.cpp#1)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_mre.cs#1)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_mre.vb#1)]  
  
 <span data-ttu-id="b509c-542">다음 코드 예제에서는 비동기 요청을 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-542">The following code example queues asynchronous requests.</span></span> <span data-ttu-id="b509c-543">에 대 한 호출 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 사용 하 여는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 해당 반환 값에서입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-543">The call to <xref:System.Messaging.MessageQueue.BeginReceive%2A> uses the <xref:System.IAsyncResult.AsyncWaitHandle%2A> in its return value.</span></span> <span data-ttu-id="b509c-544">`Main` 루틴 모든 비동기 작업 종료 완료 될 때까지 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-544">The `Main` routine waits for all asynchronous operations to be completed before exiting.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_wh.cpp#2)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_wh.cs#2)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_wh.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-545">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-545">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-546">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-546">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : TimeSpan -&gt; IAsyncResult" Usage="messageQueue.BeginReceive timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-547">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-547">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <summary><span data-ttu-id="b509c-548">시간 제한이 지정된 비동기 수신 작업을 시작합니다. 큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-548">Initiates an asynchronous receive operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-549">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-549">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-550">비동기 처리를 사용 하 여 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 시키려면는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 메시지를 큐 또는 지정된 된 시간 간격이 만료 될 때 제공 되는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-550">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="b509c-551"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-551"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-552">사용할 <xref:System.Messaging.MessageQueue.BeginReceive%2A>, 비동기 작업의 결과 처리 하는 이벤트 처리기를 만듭니다 및 이벤트 대리자를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-552">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="b509c-553"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 작업을 수신 하는 비동기 시작 합니다 <xref:System.Messaging.MessageQueue> 의 발생을 통해 알림을 받은 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트를 큐에 메시지가 도착할 때.</span><span class="sxs-lookup"><span data-stu-id="b509c-553"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="b509c-554">합니다 <xref:System.Messaging.MessageQueue> 메시지를 호출 하 여 액세스할 수 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 또는 사용 하 여 결과 검색 하는 <xref:System.Messaging.ReceiveCompletedEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-554">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="b509c-555"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-555">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-556">때문에 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 은 비동기 호출할 수 있습니다 현재 실행 스레드를 차단 하지 않고 큐에서 메시지를 수신 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-556">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-557">동기적으로 메시지를 받고, 사용 된 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-557">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-558">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-558">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-559">하는 경우 <xref:System.Messaging.MessageQueue.CanRead%2A> 됩니다 `false`완료 이벤트를 발생 하지 않지만 호출할 때 예외가 throw 됩니다, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-559">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="b509c-560">합니다 <xref:System.IAsyncResult> 는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 반환 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-560">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-561">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-561">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-562">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-562">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-563">사용 하는 예제의 경우는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-563">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-564">이 오버 로드 제한 시간을 지정합니다. 으로 지정한 간격이 경우는 `timeout` 만료 된 매개 변수를이 구성 요소는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="b509c-564">This overload specifies a time-out. If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="b509c-565">메시지가 없으므로에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-565">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="b509c-566">비동기 호출을 사용 하지 않는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 트랜잭션과 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-566">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="b509c-567">트랜잭션 비동기 작업을 수행 하려는 경우 호출할 <xref:System.Messaging.MessageQueue.BeginPeek%2A>, 트랜잭션 및 (동기) 및 <xref:System.Messaging.MessageQueue.Receive%2A> 보기 작업에 대해 만든 이벤트 처리기에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-567">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="b509c-568">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-568">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="b509c-569">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-569">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-570">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-570">Workgroup mode</span></span>|<span data-ttu-id="b509c-571">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-571">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-572">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-572">Local computer</span></span>|<span data-ttu-id="b509c-573">예</span><span class="sxs-lookup"><span data-stu-id="b509c-573">Yes</span></span>|  
|<span data-ttu-id="b509c-574">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-574">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-575">예</span><span class="sxs-lookup"><span data-stu-id="b509c-575">Yes</span></span>|  
|<span data-ttu-id="b509c-576">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-576">Remote computer</span></span>|<span data-ttu-id="b509c-577">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-577">No</span></span>|  
|<span data-ttu-id="b509c-578">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-578">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-579">예</span><span class="sxs-lookup"><span data-stu-id="b509c-579">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-580">다음 코드 예제에서는 비동기 작업을 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-580">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="b509c-581">코드 예제에서는 이벤트 처리기를 만듭니다 `MyReceiveCompleted`에 연결 하 고는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트 처리기 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-581">The code example creates an event handler, `MyReceiveCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate.</span></span> <span data-ttu-id="b509c-582">다음 코드 예제에서는 보내는 로컬 메시지 큐에 메시지를 호출 <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29>10 초의 시간 제한 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-582">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29>, passing in a time-out value of ten seconds.</span></span> <span data-ttu-id="b509c-583">경우는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 하면 이벤트 처리기가 메시지를 받고 메시지 본문을 화면에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-583">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive1#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive1/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive1#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive1/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-584"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우 (예: 값이 음수인 경우)</span><span class="sxs-lookup"><span data-stu-id="b509c-584">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly because it represents a negative number.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-585">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-585">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-586">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-586">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : TimeSpan * obj -&gt; IAsyncResult" Usage="messageQueue.BeginReceive (timeout, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-587">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-587">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="stateObject"><span data-ttu-id="b509c-588">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-588">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="b509c-589">시간 제한 및 상태 개체가 지정되어 있는 비동기 수신 작업을 시작합니다. 이는 작업의 수명이 지속되는 동안 관련된 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-589">Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span></span> <span data-ttu-id="b509c-590">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-590">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-591">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-591">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-592">비동기 처리를 사용 하 여 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 시키려면는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 메시지를 큐 또는 지정된 된 시간 간격이 만료 될 때 제공 되는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-592">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="b509c-593"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-593"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-594">작업의 수명 주기 동안 유지 됩니다 하는 작업을 사용 하 여 정보를 연결 하려면이 오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-594">Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</span></span> <span data-ttu-id="b509c-595">이벤트 처리기를 확인 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 의 속성을 <xref:System.IAsyncResult> 작업과 연결 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-595">The event handler can detect this information by looking at the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> that is associated with the operation.</span></span>  
  
 <span data-ttu-id="b509c-596">사용할 <xref:System.Messaging.MessageQueue.BeginReceive%2A>, 비동기 작업의 결과 처리 하는 이벤트 처리기를 만듭니다 및 이벤트 대리자를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-596">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="b509c-597"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 작업을 수신 하는 비동기 시작 합니다 <xref:System.Messaging.MessageQueue> 의 발생을 통해 알림을 받은 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트를 큐에 메시지가 도착할 때.</span><span class="sxs-lookup"><span data-stu-id="b509c-597"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="b509c-598">합니다 <xref:System.Messaging.MessageQueue> 메시지를 호출 하 여 액세스할 수 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 또는 사용 하 여 결과 검색 하는 <xref:System.Messaging.ReceiveCompletedEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-598">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="b509c-599"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-599">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-600">때문에 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 은 비동기 호출할 수 있습니다 현재 실행 스레드를 차단 하지 않고 큐에서 메시지를 수신 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-600">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-601">동기적으로 메시지를 받고, 사용 된 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-601">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-602">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-602">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-603">합니다 <xref:System.IAsyncResult> 는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 반환 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-603">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-604">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-604">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-605">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-605">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-606">사용 하는 예제의 경우는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-606">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-607">이 오버 로드 제한 시간 및 상태 개체를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-607">This overload specifies a time-out and a state object.</span></span> <span data-ttu-id="b509c-608">으로 지정한 간격이 경우는 `timeout` 만료 된 매개 변수를이 구성 요소는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="b509c-608">If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="b509c-609">메시지가 없으므로에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-609">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="b509c-610">작업 상태 정보를 연결 하는 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-610">The state object associates state information with the operation.</span></span> <span data-ttu-id="b509c-611">예를 들어, 호출 하는 경우 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 여러 작업을 시작 하려면 여러 번, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-611">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="b509c-612">또한 프로세스 스레드 간에 정보를 전달 하는 상태 개체를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-612">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="b509c-613">스레드가 시작 될 경우 콜백이 비동기 시나리오에서 다른 스레드에서 상태 개체 마샬링되고 이벤트의 정보와 함께 다시 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-613">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="b509c-614">비동기 호출을 사용 하지 않는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 트랜잭션과 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-614">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="b509c-615">트랜잭션 비동기 작업을 수행 하려는 경우 호출할 <xref:System.Messaging.MessageQueue.BeginPeek%2A>, 트랜잭션 및 (동기) 및 <xref:System.Messaging.MessageQueue.Receive%2A> 보기 작업에 대해 만든 이벤트 처리기에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-615">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="b509c-616">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-616">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="b509c-617">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-617">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-618">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-618">Workgroup mode</span></span>|<span data-ttu-id="b509c-619">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-619">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-620">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-620">Local computer</span></span>|<span data-ttu-id="b509c-621">예</span><span class="sxs-lookup"><span data-stu-id="b509c-621">Yes</span></span>|  
|<span data-ttu-id="b509c-622">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-622">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-623">예</span><span class="sxs-lookup"><span data-stu-id="b509c-623">Yes</span></span>|  
|<span data-ttu-id="b509c-624">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-624">Remote computer</span></span>|<span data-ttu-id="b509c-625">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-625">No</span></span>|  
|<span data-ttu-id="b509c-626">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-626">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-627">예</span><span class="sxs-lookup"><span data-stu-id="b509c-627">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-628">다음 코드 예제에서는 비동기 작업을 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-628">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="b509c-629">코드 예제에서는 이벤트 처리기를 만듭니다 `MyReceiveCompleted`에 연결 하 고는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트 처리기 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-629">The code example creates an event handler, `MyReceiveCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate.</span></span> <span data-ttu-id="b509c-630">다음 코드 예제에서는 보내는 로컬 메시지 큐에 메시지를 호출 <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29>10 초가 고 해당 특정 메시지를 식별 하는 고유한 정수 시간 제한 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-630">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29>, passing in a time-out value of ten seconds and a unique integer that identifies that particular message.</span></span> <span data-ttu-id="b509c-631">경우는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 하면 이벤트 처리기가 메시지를 받고 메시지 본문과 정수 메시지 식별자를 화면에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-631">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive2#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive2/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive2#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive2/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-632"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-632">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-633">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-633">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-634">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-634">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, object stateObject, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, stateObject As Object, callback As AsyncCallback) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Object ^ stateObject, AsyncCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : TimeSpan * obj * AsyncCallback -&gt; IAsyncResult" Usage="messageQueue.BeginReceive (timeout, stateObject, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-635">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-635">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="stateObject"><span data-ttu-id="b509c-636">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-636">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="b509c-637">비동기 작업 완료에 대한 알림을 수신할 <see cref="T:System.AsyncCallback" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-637">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</span></span></param>
        <summary><span data-ttu-id="b509c-638">시간 제한 및 상태 개체가 지정되어 있는 비동기 수신 작업을 시작합니다. 이는 작업의 수명이 지속되는 동안 관련된 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-638">Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span></span> <span data-ttu-id="b509c-639">이 오버로드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-639">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="b509c-640">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-640">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-641">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-641">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-642">메시지 큐 또는 지정된 된 시간 간격이 만료 되 면 경우에 사용 가능 해지면 콜백 매개 변수에 지정 된 콜백은 직접 호출이 오버 로드를 사용 하는 경우 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-642">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is not raised.</span></span> <span data-ttu-id="b509c-643">다른 오버 로드 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 시키려면이 구성 요소에 의존 합니다 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-643">The other overloads of <xref:System.Messaging.MessageQueue.BeginReceive%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span>  
  
 <span data-ttu-id="b509c-644"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-644"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-645">사용할 <xref:System.Messaging.MessageQueue.BeginReceive%2A>, 비동기 작업의 결과 처리 하는 이벤트 처리기를 만듭니다 및 이벤트 대리자를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-645">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="b509c-646"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 작업을 수신 하는 비동기 시작 합니다 <xref:System.Messaging.MessageQueue> 의 발생을 통해 알림을 받은 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트를 큐에 메시지가 도착할 때.</span><span class="sxs-lookup"><span data-stu-id="b509c-646"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="b509c-647">합니다 <xref:System.Messaging.MessageQueue> 메시지를 호출 하 여 액세스할 수 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 또는 사용 하 여 결과 검색 하는 <xref:System.Messaging.ReceiveCompletedEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-647">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="b509c-648"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-648">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-649">때문에 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 은 비동기 호출할 수 있습니다 현재 실행 스레드를 차단 하지 않고 큐에서 메시지를 수신 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-649">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-650">동기적으로 메시지를 받고, 사용 된 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-650">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-651">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-651">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-652">합니다 <xref:System.IAsyncResult> 는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 반환 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-652">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-653">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-653">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-654">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-654">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-655">사용 하는 예제의 경우는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-655">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-656">작업 상태 정보를 연결 하는 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-656">The state object associates state information with the operation.</span></span> <span data-ttu-id="b509c-657">예를 들어, 호출 하는 경우 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 여러 작업을 시작 하려면 여러 번, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-657">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="b509c-658">또한 프로세스 스레드 간에 정보를 전달 하는 상태 개체를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-658">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="b509c-659">스레드가 시작 될 경우 콜백이 비동기 시나리오에서 다른 스레드에서 상태 개체 마샬링되고 이벤트의 정보와 함께 다시 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-659">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="b509c-660">비동기 호출을 사용 하지 않는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 트랜잭션과 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-660">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="b509c-661">트랜잭션 비동기 작업을 수행 하려는 경우 호출할 <xref:System.Messaging.MessageQueue.BeginPeek%2A>, 트랜잭션 및 (동기) 및 <xref:System.Messaging.MessageQueue.Receive%2A> 보기 작업에 대해 만든 이벤트 처리기에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-661">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="b509c-662">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-662">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="b509c-663">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-663">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-664">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-664">Workgroup mode</span></span>|<span data-ttu-id="b509c-665">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-665">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-666">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-666">Local computer</span></span>|<span data-ttu-id="b509c-667">예</span><span class="sxs-lookup"><span data-stu-id="b509c-667">Yes</span></span>|  
|<span data-ttu-id="b509c-668">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-668">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-669">예</span><span class="sxs-lookup"><span data-stu-id="b509c-669">Yes</span></span>|  
|<span data-ttu-id="b509c-670">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-670">Remote computer</span></span>|<span data-ttu-id="b509c-671">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-671">No</span></span>|  
|<span data-ttu-id="b509c-672">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-672">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-673">예</span><span class="sxs-lookup"><span data-stu-id="b509c-673">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-674">다음 코드 예제에서는 비동기 작업을 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-674">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="b509c-675">다음 코드 예제에서는 보내는 로컬 메시지 큐에 메시지를 호출 <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>전달: 10 초의 시간 제한 값을;는 특정 메시지; 및의 새 인스턴스를 식별 하는 고유한 정수 <xref:System.AsyncCallback> 식별 하는 이벤트 처리기 `MyReceiveCompleted`.</span><span class="sxs-lookup"><span data-stu-id="b509c-675">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <xref:System.AsyncCallback> that identifies the event handler, `MyReceiveCompleted`.</span></span> <span data-ttu-id="b509c-676">경우는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 하면 이벤트 처리기가 메시지를 받고 메시지 본문과 정수 메시지 식별자를 화면에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-676">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive3#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive3/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive3#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive3/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-677"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-677">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-678">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-678">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-679">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-679">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, System.Messaging.Cursor cursor, object state, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, object state, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Object ^ state, AsyncCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : TimeSpan * System.Messaging.Cursor * obj * AsyncCallback -&gt; IAsyncResult" Usage="messageQueue.BeginReceive (timeout, cursor, state, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-680">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-680">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span></span></param>
        <param name="cursor"><span data-ttu-id="b509c-681">메시지 큐에서 특정 위치를 유지하는 <see cref="T:System.Messaging.Cursor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-681">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="state"><span data-ttu-id="b509c-682">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-682">A state object, specified by the application, that contains information associated with the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="b509c-683">비동기 작업 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-683">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion.</span></span></param>
        <summary><span data-ttu-id="b509c-684">지정된 제한 시간이 있고 지정된 커서 및 지정된 상태 개체를 사용하는 비동기 수신 작업을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-684">Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object.</span></span> <span data-ttu-id="b509c-685">상태 개체는 전체 작업 기간 동안 관련 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-685">The state object provides associated information throughout the lifetime of the operation.</span></span> <span data-ttu-id="b509c-686">이 오버로드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-686">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="b509c-687">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-687">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-688">게시된 비동기 요청을 식별하는 <see cref="T:System.IAsyncResult" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-688">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-689">메시지 큐 또는 지정된 된 시간 간격이 만료 되 면 경우에 사용 가능 해지면 콜백 매개 변수에 지정 된 콜백은 직접 호출이 오버 로드를 사용 하는 경우 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-689">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is not raised.</span></span> <span data-ttu-id="b509c-690">다른 오버 로드 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 시키려면이 구성 요소에 의존 합니다 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-690">The other overloads of <xref:System.Messaging.MessageQueue.BeginReceive%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span>  
  
 <span data-ttu-id="b509c-691"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 또한,는 메시지를 큐에 이미 있는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-691"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-692">사용할 <xref:System.Messaging.MessageQueue.BeginReceive%2A>, 비동기 작업의 결과 처리 하는 이벤트 처리기를 만듭니다 및 이벤트 대리자를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-692">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="b509c-693"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 작업을 수신 하는 비동기 시작 합니다 <xref:System.Messaging.MessageQueue> 의 발생을 통해 알림을 받은 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트를 큐에 메시지가 도착할 때.</span><span class="sxs-lookup"><span data-stu-id="b509c-693"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="b509c-694">합니다 <xref:System.Messaging.MessageQueue> 메시지를 호출 하 여 액세스할 수 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 또는 사용 하 여 결과 검색 하는 <xref:System.Messaging.ReceiveCompletedEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-694">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="b509c-695"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지 비동기 작업이 완료 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-695">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="b509c-696">때문에 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 은 비동기 호출할 수 있습니다 현재 실행 스레드를 차단 하지 않고 큐에서 메시지를 수신 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-696">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="b509c-697">동기적으로 메시지를 받고, 사용 된 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-697">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-698">비동기 작업이 완료 되 면를 호출할 수 있습니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 또는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 알림을 수신할 이벤트 처리기에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-698">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="b509c-699">합니다 <xref:System.IAsyncResult> 는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 반환 메서드를 시작 하는 비동기 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-699">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="b509c-700">사용할 수 있습니다 <xref:System.IAsyncResult> 작업의 수명 주기 동안 일반적으로 사용 하지 않는 있지만 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-700">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="b509c-701">그러나 여러 비동기 작업을 시작 하는 경우 배치할 수 있습니다 해당 <xref:System.IAsyncResult> 배열 값 및 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-701">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="b509c-702">이 예에서 사용 하 여를 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 의 속성을 <xref:System.IAsyncResult> 완료 작업을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-702">In this case, use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="b509c-703">작업 상태 정보를 연결 하는 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-703">The state object associates state information with the operation.</span></span> <span data-ttu-id="b509c-704">예를 들어, 호출 하는 경우 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 여러 작업을 시작 하려면 여러 번, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-704">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="b509c-705">또한 프로세스 스레드 간에 정보를 전달 하는 상태 개체를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-705">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="b509c-706">스레드가 시작 될 경우 콜백이 비동기 시나리오에서 다른 스레드에서 상태 개체 마샬링되고 이벤트의 정보와 함께 다시 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-706">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="b509c-707">비동기 호출을 사용 하지 않는 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 트랜잭션과 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-707">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="b509c-708">트랜잭션 비동기 작업을 수행 하려는 경우 호출할 <xref:System.Messaging.MessageQueue.BeginPeek%2A>, 트랜잭션 및 (동기) 및 <xref:System.Messaging.MessageQueue.Receive%2A> 보기 작업에 대해 만든 이벤트 처리기에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-708">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="b509c-709">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-709">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="b509c-710">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-710">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-711">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-711">Workgroup mode</span></span>|<span data-ttu-id="b509c-712">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-712">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-713">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-713">Local computer</span></span>|<span data-ttu-id="b509c-714">예</span><span class="sxs-lookup"><span data-stu-id="b509c-714">Yes</span></span>|  
|<span data-ttu-id="b509c-715">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-715">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-716">예</span><span class="sxs-lookup"><span data-stu-id="b509c-716">Yes</span></span>|  
|<span data-ttu-id="b509c-717">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-717">Remote computer</span></span>|<span data-ttu-id="b509c-718">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-718">No</span></span>|  
|<span data-ttu-id="b509c-719">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-719">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-720">예</span><span class="sxs-lookup"><span data-stu-id="b509c-720">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-721"><paramref name="cursor" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-721">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-722"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-722">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-723">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-723">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-724">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-724">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Messaging.MessageQueue.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_CanRead")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-725"><see cref="T:System.Messaging.MessageQueue" />를 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-725">Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be read.</span></span></summary>
        <value><span data-ttu-id="b509c-726"><see cref="T:System.Messaging.MessageQueue" />가 있고 응용 프로그램에서 이 큐를 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-726"><see langword="true" /> if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can read from it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-727"><xref:System.Messaging.MessageQueue.CanRead%2A> 응용 프로그램은 큐에서 메시지를 받거나 피킹할 수 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-727"><xref:System.Messaging.MessageQueue.CanRead%2A> indicates whether the application is able to peek or receive messages from the queue.</span></span> <span data-ttu-id="b509c-728">하는 경우 <xref:System.Messaging.MessageQueue.CanRead%2A> 됩니다 `true`는 <xref:System.Messaging.MessageQueue> 받거나 큐에서 메시지를 피킹할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-728">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `true`, the <xref:System.Messaging.MessageQueue> can receive or peek messages from the queue.</span></span> <span data-ttu-id="b509c-729">그렇지 않으면 불가능합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-729">Otherwise, it cannot.</span></span>  
  
 <span data-ttu-id="b509c-730"><xref:System.Messaging.MessageQueue.CanRead%2A> 됩니다 `false` 큐의 단독 액세스를 사용 하 여 이미 열려 있으면 (비독점적 액세스 및이 사용 하 여 열려 있는 경우 또는 <xref:System.Messaging.MessageQueue> 단독 액세스 요청), 응용 프로그램에 액세스할 수 있는 충분 한 권한이 없는 경우 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-730"><xref:System.Messaging.MessageQueue.CanRead%2A> is `false` if a queue is already open with exclusive read access (or if it's open with non-exclusive access and this <xref:System.Messaging.MessageQueue> requests exclusive access), or if the application does not have sufficient rights to access it.</span></span> <span data-ttu-id="b509c-731">응용 프로그램 큐에서 읽은 하려고 하는 경우 때 <xref:System.Messaging.MessageQueue.CanRead%2A> 는 `false`에 액세스가 거부 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-731">If your application tries to read from a queue when <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, access is denied.</span></span>  
  
 <span data-ttu-id="b509c-732">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-732">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-733">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-733">Workgroup mode</span></span>|<span data-ttu-id="b509c-734">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-734">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-735">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-735">Local computer</span></span>|<span data-ttu-id="b509c-736">예</span><span class="sxs-lookup"><span data-stu-id="b509c-736">Yes</span></span>|  
|<span data-ttu-id="b509c-737">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-737">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-738">예</span><span class="sxs-lookup"><span data-stu-id="b509c-738">Yes</span></span>|  
|<span data-ttu-id="b509c-739">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-739">Remote computer</span></span>|<span data-ttu-id="b509c-740">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-740">No</span></span>|  
|<span data-ttu-id="b509c-741">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-741">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-742">예</span><span class="sxs-lookup"><span data-stu-id="b509c-742">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-743">다음 코드 예제에서는 메시지 큐의 값을 표시 <xref:System.Messaging.MessageQueue.CanRead%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-743">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CanRead%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.CanWrite" />
        <altmember cref="P:System.Messaging.MessageQueue.ReadHandle" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Messaging.MessageQueue.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_CanWrite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-744"><see cref="T:System.Messaging.MessageQueue" />에 쓸 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-744">Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be written to.</span></span></summary>
        <value><span data-ttu-id="b509c-745"><see cref="T:System.Messaging.MessageQueue" />가 있고 응용 프로그램이 여기에 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-745"><see langword="true" /> if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can write to it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-746"><xref:System.Messaging.MessageQueue.CanWrite%2A> 응용 프로그램은 큐에 메시지를 보낼 수 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-746"><xref:System.Messaging.MessageQueue.CanWrite%2A> indicates whether the application is able to send messages to the queue.</span></span> <span data-ttu-id="b509c-747">하는 경우 <xref:System.Messaging.MessageQueue.CanWrite%2A> 됩니다 `true`, <xref:System.Messaging.MessageQueue> 큐에 메시지를 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-747">If <xref:System.Messaging.MessageQueue.CanWrite%2A> is `true`, the <xref:System.Messaging.MessageQueue> can send messages to the queue.</span></span> <span data-ttu-id="b509c-748">그렇지 않으면 불가능합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-748">Otherwise, it cannot.</span></span>  
  
 <span data-ttu-id="b509c-749"><xref:System.Messaging.MessageQueue.CanWrite%2A> 됩니다 `false` 큐가 배타적인 쓰기 액세스를 사용 하 여 이미 열려 있으면 (비독점적 액세스 및이 사용 하 여 열려 있는 경우 또는 <xref:System.Messaging.MessageQueue> 단독 액세스 요청), 응용 프로그램에 액세스할 수 있는 충분 한 권한이 없는 경우 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-749"><xref:System.Messaging.MessageQueue.CanWrite%2A> is `false` if a queue is already open with exclusive write access (or if it's open with non-exclusive access and this <xref:System.Messaging.MessageQueue> requests exclusive access), or if the application does not have sufficient rights to access it.</span></span> <span data-ttu-id="b509c-750">응용 프로그램 큐에 쓰기를 시도 하는 경우 때 <xref:System.Messaging.MessageQueue.CanWrite%2A> 는 `false`에 액세스가 거부 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-750">If your application tries to write to a queue when <xref:System.Messaging.MessageQueue.CanWrite%2A> is `false`, access is denied.</span></span>  
  
 <span data-ttu-id="b509c-751">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-751">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-752">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-752">Workgroup mode</span></span>|<span data-ttu-id="b509c-753">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-753">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-754">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-754">Local computer</span></span>|<span data-ttu-id="b509c-755">예</span><span class="sxs-lookup"><span data-stu-id="b509c-755">Yes</span></span>|  
|<span data-ttu-id="b509c-756">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-756">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-757">예</span><span class="sxs-lookup"><span data-stu-id="b509c-757">Yes</span></span>|  
|<span data-ttu-id="b509c-758">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-758">Remote computer</span></span>|<span data-ttu-id="b509c-759">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-759">No</span></span>|  
|<span data-ttu-id="b509c-760">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-760">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-761">예</span><span class="sxs-lookup"><span data-stu-id="b509c-761">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-762">다음 코드 예제에서는 메시지 큐의 값을 표시 <xref:System.Messaging.MessageQueue.CanWrite%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-762">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CanWrite%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.WriteHandle" />
        <altmember cref="P:System.Messaging.MessageQueue.CanRead" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueue.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Category")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-763">큐 범주를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-763">Gets or sets the queue category.</span></span></summary>
        <value><span data-ttu-id="b509c-764">큐 범주(메시지 큐 형식 식별자)를 나타내는 <see cref="T:System.Guid" />입니다. 여기서 응용 프로그램을 사용하여 큐를 분류할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-764">A <see cref="T:System.Guid" /> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues.</span></span> <span data-ttu-id="b509c-765">기본값은 <see langword="Guid.empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-765">The default is <see langword="Guid.empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-766">큐 범주에는 응용 프로그램을 큐를 분류할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-766">The queue category allows an application to categorize its queues.</span></span> <span data-ttu-id="b509c-767">예를 들어, 하나의 범주와 다른 모든 주문 큐에서 모든 청구 큐를 배치할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-767">For example, you can place all Billing queues in one category and all Order queues in another.</span></span>  
  
 <span data-ttu-id="b509c-768"><xref:System.Messaging.MessageQueue.Category%2A> 속성은 메시지 큐 형식 ID 속성 (즉, 읽기/쓰기)에 대 한 액세스를 제공을 통해 액세스할 수 합니다 **큐 속성** 컴퓨터 관리 콘솔의 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="b509c-768">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing Type ID property (which is read/write), accessible through the **Queue Properties** dialog box in the Computer Management Console.</span></span> <span data-ttu-id="b509c-769">새 범주를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-769">You can define a new category.</span></span> <span data-ttu-id="b509c-770">사용할 수 있지만 <xref:System.Guid.NewGuid%2A> 는 모든 고유 범주 값을 만들려면 <xref:System.Guid> 값, 이러한 작업이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-770">Although you can use <xref:System.Guid.NewGuid%2A> to create a category value that is unique across all <xref:System.Guid> values, such an action is unnecessary.</span></span> <span data-ttu-id="b509c-771">범주 값이 제거 되지 않은 다른 모든 다른 범주에만 구별 되도록 <xref:System.Guid> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-771">The category value needs to be distinct only from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="b509c-772">예를 들어, 할당할 수 있습니다 {00000000-0000-0000-0000-000000000001} 으로 <xref:System.Messaging.MessageQueue.Category%2A> 큐 집합이 하나에 대 한 및 {00000000-0000-0000-0000-000000000002} 로 <xref:System.Messaging.MessageQueue.Category%2A> 다른 집합에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-772">For example, you can assign {00000000-0000-0000-0000-000000000001} as the <xref:System.Messaging.MessageQueue.Category%2A> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <xref:System.Messaging.MessageQueue.Category%2A> for another set.</span></span>  
  
 <span data-ttu-id="b509c-773">설정 하는 데 필요한 것은 <xref:System.Messaging.MessageQueue.Category%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-773">It is not necessary to set the <xref:System.Messaging.MessageQueue.Category%2A>.</span></span> <span data-ttu-id="b509c-774">값은 `null`이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-774">The value can be `null`.</span></span>  
  
 <span data-ttu-id="b509c-775">메시지 큐를 수정이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-775">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="b509c-776">따라서 다른 <xref:System.Messaging.MessageQueue> 인스턴스는 변경 내용의 영향입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-776">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="b509c-777">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-777">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-778">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-778">Workgroup mode</span></span>|<span data-ttu-id="b509c-779">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-779">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-780">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-780">Local computer</span></span>|<span data-ttu-id="b509c-781">예</span><span class="sxs-lookup"><span data-stu-id="b509c-781">Yes</span></span>|  
|<span data-ttu-id="b509c-782">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-782">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-783">예</span><span class="sxs-lookup"><span data-stu-id="b509c-783">Yes</span></span>|  
|<span data-ttu-id="b509c-784">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-784">Remote computer</span></span>|<span data-ttu-id="b509c-785">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-785">No</span></span>|  
|<span data-ttu-id="b509c-786">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-786">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-787">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-787">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-788">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.Category%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-788">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Category%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-789">우선 순위 범주가 잘못된 값으로 설정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-789">The queue category was set to an invalid value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-790">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-790">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Id" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      </Docs>
    </Member>
    <Member MemberName="ClearConnectionCache">
      <MemberSignature Language="C#" Value="public static void ClearConnectionCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearConnectionCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ClearConnectionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearConnectionCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearConnectionCache();" />
      <MemberSignature Language="F#" Value="static member ClearConnectionCache : unit -&gt; unit" Usage="System.Messaging.MessageQueue.ClearConnectionCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-791">연결 캐시를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-791">Clears the connection cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-792">호출 하는 경우 <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, 캐시에 저장 된 형식 이름을 제거 되 고 캐시에 저장 하 고 열 핸들 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-792">When you call <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, the format names stored in the cache are removed and handles opened and stored in the cache are closed.</span></span>  
  
 <span data-ttu-id="b509c-793">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-793">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-794">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-794">Workgroup mode</span></span>|<span data-ttu-id="b509c-795">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-795">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-796">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-796">Local computer</span></span>|<span data-ttu-id="b509c-797">예</span><span class="sxs-lookup"><span data-stu-id="b509c-797">Yes</span></span>|  
|<span data-ttu-id="b509c-798">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-798">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-799">예</span><span class="sxs-lookup"><span data-stu-id="b509c-799">Yes</span></span>|  
|<span data-ttu-id="b509c-800">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-800">Remote computer</span></span>|<span data-ttu-id="b509c-801">예</span><span class="sxs-lookup"><span data-stu-id="b509c-801">Yes</span></span>|  
|<span data-ttu-id="b509c-802">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-802">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-803">예</span><span class="sxs-lookup"><span data-stu-id="b509c-803">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-804">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-804">The following code example calls <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>.</span></span>  
  
 [!code-csharp[MessageQueue#8](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="messageQueue.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-805"><see cref="T:System.Messaging.MessageQueue" />가 할당한 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-805">Frees all resources allocated by the <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-806"><xref:System.Messaging.MessageQueue.Close%2A> 연결 된 모든 리소스를 해제를 <xref:System.Messaging.MessageQueue>, 해당 하는 경우 공유 리소스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-806"><xref:System.Messaging.MessageQueue.Close%2A> frees all resources associated with a <xref:System.Messaging.MessageQueue>, including shared resources if appropriate.</span></span> <span data-ttu-id="b509c-807">시스템 다시 획득 이러한 리소스가 자동으로 계속 사용 가능한 경우, 예를 들어 호출 하는 경우는 <xref:System.Messaging.MessageQueue.Send%28System.Object%29> 다음 C# 코드와 같이 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-807">The system re-acquires these resources automatically if they are still available, for example when you call the <xref:System.Messaging.MessageQueue.Send%28System.Object%29> method, as in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.Send("Text 1.");  
myMessageQueue.Close();  
myMessageQueue.Send("Text 2."); //Resources are re-acquired.  
```  
  
 <span data-ttu-id="b509c-808">호출 하는 경우 <xref:System.Messaging.MessageQueue.Close%2A>모든 <xref:System.Messaging.MessageQueue> out 메시지 큐를 직접 액세스 하는 속성의 선택을 취소 합니다. 합니다 <xref:System.Messaging.MessageQueue.Path%2A>, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>를 <xref:System.Messaging.MessageQueue.Formatter%2A>, 및 <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> 모두 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-808">When you call <xref:System.Messaging.MessageQueue.Close%2A>, all <xref:System.Messaging.MessageQueue> properties that directly access the Message Queuing queue are cleared out. The <xref:System.Messaging.MessageQueue.Path%2A>, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, <xref:System.Messaging.MessageQueue.Formatter%2A>, and <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> all remain as they were.</span></span>  
  
 <span data-ttu-id="b509c-809"><xref:System.Messaging.MessageQueue.Close%2A> 읽기 무료 및 공유 될 수 있기 때문에 큐에 쓰기 핸들 항상 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-809"><xref:System.Messaging.MessageQueue.Close%2A> does not always free the read and write handles to a queue, because they might be shared.</span></span> <span data-ttu-id="b509c-810">확인 하려면 다음 단계를 수행할 수 있습니다 <xref:System.Messaging.MessageQueue.Close%2A> 큐에 읽기 및 쓰기 핸들을 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-810">You can take any of the following steps to ensure that <xref:System.Messaging.MessageQueue.Close%2A> frees the read and write handles to a queue:</span></span>  
  
-   <span data-ttu-id="b509c-811">만들기는 <xref:System.Messaging.MessageQueue> 단독 액세스를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-811">Create the <xref:System.Messaging.MessageQueue> with exclusive access.</span></span> <span data-ttu-id="b509c-812">이렇게 하려면 호출을 <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29> 또는 <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> 생성자 및 집합 합니다 `sharedModeDenyReceive` 매개 변수를 `true`.</span><span class="sxs-lookup"><span data-stu-id="b509c-812">To do so, call the <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29> or <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> constructor, and set the `sharedModeDenyReceive` parameter to `true`.</span></span>  
  
-   <span data-ttu-id="b509c-813">만들기는 <xref:System.Messaging.MessageQueue> 연결 캐싱을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-813">Create the <xref:System.Messaging.MessageQueue> with connection caching disabled.</span></span> <span data-ttu-id="b509c-814">이렇게 하려면 호출을 <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> 집합과 생성자는 `enableConnectionCache` 매개 변수를 `false`.</span><span class="sxs-lookup"><span data-stu-id="b509c-814">To do so, call the <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> constructor and set the `enableConnectionCache` parameter to `false`.</span></span>  
  
-   <span data-ttu-id="b509c-815">연결 캐싱을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-815">Disable connection caching.</span></span> <span data-ttu-id="b509c-816">이렇게 하려면 설정 합니다 <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-816">To do so, set the <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="b509c-817">호출 해야 <xref:System.Messaging.MessageQueue.Close%2A> 메시지 큐 서버에 있는 큐를 삭제 하기 전에 큐에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-817">You should call <xref:System.Messaging.MessageQueue.Close%2A> for a queue before you delete the queue on the Message Queuing server.</span></span> <span data-ttu-id="b509c-818">이 고, 그렇지 큐로 전송 된 메시지 예외를 throw 하거나 배달 못 한 편지 큐에 나타날 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-818">Otherwise, messages sent to the queue could throw exceptions or appear in the dead-letter queue.</span></span>  
  
 <span data-ttu-id="b509c-819">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-819">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-820">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-820">Workgroup mode</span></span>|<span data-ttu-id="b509c-821">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-821">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-822">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-822">Local computer</span></span>|<span data-ttu-id="b509c-823">예</span><span class="sxs-lookup"><span data-stu-id="b509c-823">Yes</span></span>|  
|<span data-ttu-id="b509c-824">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-824">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-825">예</span><span class="sxs-lookup"><span data-stu-id="b509c-825">Yes</span></span>|  
|<span data-ttu-id="b509c-826">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-826">Remote computer</span></span>|<span data-ttu-id="b509c-827">예</span><span class="sxs-lookup"><span data-stu-id="b509c-827">Yes</span></span>|  
|<span data-ttu-id="b509c-828">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-828">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-829">예</span><span class="sxs-lookup"><span data-stu-id="b509c-829">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-830">다음 코드 예제에서는 메시지 큐를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-830">The following code example closes a Message Queuing queue.</span></span>  
  
 [!code-cpp[MessageQueue.Close#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Close/CPP/mqclose.cpp#1)]
 [!code-csharp[MessageQueue.Close#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Close/CS/mqclose.cs#1)]
 [!code-vb[MessageQueue.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Close/VB/mqclose.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-831">메시지 큐 서버의 지정된 경로에 새 큐를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-831">Creates a new queue at the specified path on a Message Queuing server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue Create (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue Create(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String) As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueue ^ Create(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Messaging.MessageQueue" Usage="System.Messaging.MessageQueue.Create path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-832">만들 큐의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-832">The path of the queue to create.</span></span></param>
        <summary><span data-ttu-id="b509c-833">지정된 경로에 비트랜잭션 메시지 큐를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-833">Creates a non-transactional Message Queuing queue at the specified path.</span></span></summary>
        <returns><span data-ttu-id="b509c-834">새 큐를 나타내는 <see cref="T:System.Messaging.MessageQueue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-834">A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-835">이 오버 로드를 사용 하 여 비트랜잭션 메시지 큐를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-835">Use this overload to create a non-transactional Message Queuing queue.</span></span>  
  
 <span data-ttu-id="b509c-836">새 인스턴스를 만들려고 합니다 <xref:System.Messaging.MessageQueue> 기존 큐에 바인딩할를 사용 하 여 응용 프로그램에서 클래스를 <xref:System.Messaging.MessageQueue.%23ctor%2A> 생성자.</span><span class="sxs-lookup"><span data-stu-id="b509c-836">To create a new instance of the <xref:System.Messaging.MessageQueue> class in your application and bind it to an existing queue, use the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span> <span data-ttu-id="b509c-837">메시지 큐에서 새 큐를 만들려면 호출 <xref:System.Messaging.MessageQueue.Create%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-837">To create a new queue in Message Queuing, call <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="b509c-838">구문은 `path` 매개 변수 유형에 따라 큐의 해당 참조는 다음 표에 나와 있는 것 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-838">The syntax for the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-839">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-839">Queue type</span></span>|<span data-ttu-id="b509c-840">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-840">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-841">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-841">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="b509c-842">개인 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-842">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="b509c-843">사용 하 여 "." 로컬 컴퓨터에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-843">Use "." for the local computer.</span></span> <span data-ttu-id="b509c-844">자세한 구문에 대 한 참조를 <xref:System.Messaging.MessageQueue.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-844">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="b509c-845">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-845">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-846">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-846">Workgroup mode</span></span>|<span data-ttu-id="b509c-847">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-847">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-848">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-848">Local computer</span></span>|<span data-ttu-id="b509c-849">예</span><span class="sxs-lookup"><span data-stu-id="b509c-849">Yes</span></span>|  
|<span data-ttu-id="b509c-850">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-850">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-851">예</span><span class="sxs-lookup"><span data-stu-id="b509c-851">Yes</span></span>|  
|<span data-ttu-id="b509c-852">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-852">Remote computer</span></span>|<span data-ttu-id="b509c-853">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-853">No</span></span>|  
|<span data-ttu-id="b509c-854">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-854">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-855">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-855">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-856">다음 코드 예제에서는 공용 및 개인 큐를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-856">The following code example creates public and private queues.</span></span> <span data-ttu-id="b509c-857">선택한 큐에 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-857">It sends a message to selected queues.</span></span>  
  
 [!code-cpp[MessageQueue.Create_path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Create_path/CPP/mqcreate.cpp#1)]
 [!code-csharp[MessageQueue.Create_path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Create_path/CS/mqcreate.cs#1)]
 [!code-vb[MessageQueue.Create_path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Create_path/VB/mqcreate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-858"><paramref name="path" /> 매개 변수가 <see langword="null" />이거나 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-858">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-859">지정된 경로에 큐가 이미 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-859">A queue already exists at the specified path.</span></span>  
  
<span data-ttu-id="b509c-860">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-860">-or-</span></span> 
<span data-ttu-id="b509c-861">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-861">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue Create (string path, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue Create(string path, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, transactional As Boolean) As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueue ^ Create(System::String ^ path, bool transactional);" />
      <MemberSignature Language="F#" Value="static member Create : string * bool -&gt; System.Messaging.MessageQueue" Usage="System.Messaging.MessageQueue.Create (path, transactional)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-862">만들 큐의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-862">The path of the queue to create.</span></span></param>
        <param name="transactional"><span data-ttu-id="b509c-863">트랜잭션 큐를 만들려면 <see langword="true" />이고, 비트랜잭션 큐를 만들려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-863"><see langword="true" /> to create a transactional queue; <see langword="false" /> to create a non-transactional queue.</span></span></param>
        <summary><span data-ttu-id="b509c-864">지정된 경로에 트랜잭션 또는 비트랜잭션 메시지 큐를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-864">Creates a transactional or non-transactional Message Queuing queue at the specified path.</span></span></summary>
        <returns><span data-ttu-id="b509c-865">새 큐를 나타내는 <see cref="T:System.Messaging.MessageQueue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-865">A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-866">메시지 큐에 트랜잭션 큐를 만들려면이 오버 로드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-866">You can use this overload to create a transactional queue in Message Queuing.</span></span> <span data-ttu-id="b509c-867">설정 하 여 비트랜잭션 큐를 만들 수 있습니다 합니다 `transactional` 매개 변수를 `false` 의 다른 오버 로드를 호출 하 여 <xref:System.Messaging.MessageQueue.Create%28System.String%29>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-867">You can create a non-transactional queue, by setting the `transactional` parameter to `false` or by calling the other overload of <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="b509c-868">새 인스턴스를 만들려고 합니다 <xref:System.Messaging.MessageQueue> 기존 큐에 바인딩할를 사용 하 여 응용 프로그램에서 클래스를 <xref:System.Messaging.MessageQueue.%23ctor%2A> 생성자.</span><span class="sxs-lookup"><span data-stu-id="b509c-868">To create a new instance of the <xref:System.Messaging.MessageQueue> class in your application and bind it to an existing queue, use the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span> <span data-ttu-id="b509c-869">메시지 큐에서 새 큐를 만들려면 호출 <xref:System.Messaging.MessageQueue.Create%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-869">To create a new queue in Message Queuing, call <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="b509c-870">구문은 `path` 매개 변수 유형에 따라 큐의 해당 참조는 다음 표에 나와 있는 것 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-870">The syntax for the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-871">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-871">Queue type</span></span>|<span data-ttu-id="b509c-872">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-872">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-873">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-873">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="b509c-874">개인 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-874">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="b509c-875">사용 하 여 "." 로컬 컴퓨터에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-875">Use "." for the local computer.</span></span> <span data-ttu-id="b509c-876">자세한 구문에 대 한 참조를 <xref:System.Messaging.MessageQueue.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-876">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="b509c-877">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-877">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-878">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-878">Workgroup mode</span></span>|<span data-ttu-id="b509c-879">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-879">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-880">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-880">Local computer</span></span>|<span data-ttu-id="b509c-881">예</span><span class="sxs-lookup"><span data-stu-id="b509c-881">Yes</span></span>|  
|<span data-ttu-id="b509c-882">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-882">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-883">예</span><span class="sxs-lookup"><span data-stu-id="b509c-883">Yes</span></span>|  
|<span data-ttu-id="b509c-884">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-884">Remote computer</span></span>|<span data-ttu-id="b509c-885">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-885">No</span></span>|  
|<span data-ttu-id="b509c-886">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-886">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-887">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-887">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-888">다음 코드 예제에서는 공용 및 개인 트랜잭션 큐를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-888">The following code example creates public and private transactional queues.</span></span> <span data-ttu-id="b509c-889">선택한 큐에 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-889">It sends a message to selected queues.</span></span>  
  
 [!code-cpp[MessageQueue.Create_PathTransactional#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/CPP/mqcreate_transactional.cpp#1)]
 [!code-csharp[MessageQueue.Create_PathTransactional#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/CS/mqcreate_transactional.cs#1)]
 [!code-vb[MessageQueue.Create_PathTransactional#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/VB/mqcreate_transactional.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-890"><paramref name="path" /> 매개 변수가 <see langword="null" />이거나 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-890">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-891">지정된 경로에 큐가 이미 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-891">A queue already exists at the specified path.</span></span>  
  
<span data-ttu-id="b509c-892">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-892">-or-</span></span> 
<span data-ttu-id="b509c-893">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-893">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="CreateCursor">
      <MemberSignature Language="C#" Value="public System.Messaging.Cursor CreateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Cursor CreateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.CreateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCursor () As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Cursor ^ CreateCursor();" />
      <MemberSignature Language="F#" Value="member this.CreateCursor : unit -&gt; System.Messaging.Cursor" Usage="messageQueue.CreateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Cursor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-894">현재 메시지 큐의 새 <see cref="T:System.Messaging.Cursor" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-894">Creates a new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-895">현재 메시지 큐의 새 <see cref="T:System.Messaging.Cursor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-895">A new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</span></span> <span data-ttu-id="b509c-896">이 커서는 큐의 메시지를 읽을 때 큐의 특정 위치를 유지하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-896">This cursor is used to maintain a specific location in the queue when reading the queue's messages.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public DateTime CreateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreateTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CreateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateTime : DateTime" Usage="System.Messaging.MessageQueue.CreateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_CreateTime")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-897">메시지 큐에서 큐가 만들어진 날짜와 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-897">Gets the time and date that the queue was created in Message Queuing.</span></span></summary>
        <value><span data-ttu-id="b509c-898">큐가 만들어진 날짜와 시간을 나타내는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-898">A <see cref="T:System.DateTime" /> that represents the date and time at which the queue was created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-899"><xref:System.Messaging.MessageQueue.CreateTime%2A> 메시지 큐 서버의 큐에 참조를 <xref:System.Messaging.MessageQueue> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="b509c-899"><xref:System.Messaging.MessageQueue.CreateTime%2A> refers to the queue on the Message Queuing server, not the <xref:System.Messaging.MessageQueue> instance.</span></span>  
  
 <span data-ttu-id="b509c-900">큐가 있는 경우이 속성 큐 존재 하는 서버의 로컬 시간으로 조정 된 큐를 만든 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-900">If the queue exists, this property represents the time the queue was created, adjusted to the local time of the server on which the queue exists.</span></span>  
  
 <span data-ttu-id="b509c-901">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-901">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-902">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-902">Workgroup mode</span></span>|<span data-ttu-id="b509c-903">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-903">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-904">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-904">Local computer</span></span>|<span data-ttu-id="b509c-905">예</span><span class="sxs-lookup"><span data-stu-id="b509c-905">Yes</span></span>|  
|<span data-ttu-id="b509c-906">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-906">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-907">예</span><span class="sxs-lookup"><span data-stu-id="b509c-907">Yes</span></span>|  
|<span data-ttu-id="b509c-908">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-908">Remote computer</span></span>|<span data-ttu-id="b509c-909">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-909">No</span></span>|  
|<span data-ttu-id="b509c-910">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-910">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-911">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-911">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-912">다음 코드 예제에서는 메시지 큐의 값을 표시 <xref:System.Messaging.MessageQueue.CreateTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-912">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CreateTime%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#9](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-913">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-913">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPropertiesToSend">
      <MemberSignature Language="C#" Value="public System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPropertiesToSend As DefaultPropertiesToSend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::DefaultPropertiesToSend ^ DefaultPropertiesToSend { System::Messaging::DefaultPropertiesToSend ^ get(); void set(System::Messaging::DefaultPropertiesToSend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPropertiesToSend : System.Messaging.DefaultPropertiesToSend with get, set" Usage="System.Messaging.MessageQueue.DefaultPropertiesToSend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_DefaultPropertiesToSend")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.DefaultPropertiesToSend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-914">응용 프로그램이 큐에 메시지를 보낼 때 기본적으로 사용되는 메시지 속성 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-914">Gets or sets the message property values to be used by default when the application sends messages to the queue.</span></span></summary>
        <value><span data-ttu-id="b509c-915">응용 프로그램에서 <see cref="T:System.Messaging.DefaultPropertiesToSend" /> 인스턴스 이외의 개체를 큐에 보낼 때 사용된 기본 메시지 큐 메시지 속성 값이 포함된 <see cref="T:System.Messaging.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-915">A <see cref="T:System.Messaging.DefaultPropertiesToSend" /> that contains the default Message Queuing message property values used when the application sends objects other than <see cref="T:System.Messaging.Message" /> instances to the queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-916">형식 없는 모든 개체를 보내면 <xref:System.Messaging.Message> 큐에는 <xref:System.Messaging.MessageQueue> 메시지 큐 메시지에 개체를 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-916">When you send any object that is not of type <xref:System.Messaging.Message> to the queue, the <xref:System.Messaging.MessageQueue> inserts the object into a Message Queuing message.</span></span> <span data-ttu-id="b509c-917">이때를 <xref:System.Messaging.MessageQueue> 에 지정 된 속성 값을 메시지에 적용 되는 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-917">At that time, the <xref:System.Messaging.MessageQueue> applies to the message the property values you specify in the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property.</span></span> <span data-ttu-id="b509c-918">반대로, 보내는 경우는 <xref:System.Messaging.Message> 큐에 이러한 속성이 이미 지정 되어 인스턴스 자체에 대 한 따라서 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 무시 됩니다는 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-918">Conversely, if you send a <xref:System.Messaging.Message> to the queue, these properties are already specified for the instance itself, so <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> is ignored for the <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="b509c-919">통해 속성을 설정할 수 있지만 합니다 <xref:System.Messaging.MessageQueue> 개체는 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 큐 자체 큐에 전송 되는 메시지의 속성을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-919">Although you set the properties through the <xref:System.Messaging.MessageQueue> object, the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> refers to the properties of the messages that are sent to the queue, not the queue itself.</span></span>  
  
 <span data-ttu-id="b509c-920">속성에 대 한 기본 값은 다음 표에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-920">The default values for the properties are shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-921">속성</span><span class="sxs-lookup"><span data-stu-id="b509c-921">Property</span></span>|<span data-ttu-id="b509c-922">기본값</span><span class="sxs-lookup"><span data-stu-id="b509c-922">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|<span data-ttu-id="b509c-923">영 (0)</span><span class="sxs-lookup"><span data-stu-id="b509c-923">Zero (0)</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|<span data-ttu-id="b509c-924">바이트는 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="b509c-924">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|<span data-ttu-id="b509c-925">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="b509c-925">Empty string ("")</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 <span data-ttu-id="b509c-926">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-926">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-927">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-927">Workgroup mode</span></span>|<span data-ttu-id="b509c-928">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-928">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-929">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-929">Local computer</span></span>|<span data-ttu-id="b509c-930">예</span><span class="sxs-lookup"><span data-stu-id="b509c-930">Yes</span></span>|  
|<span data-ttu-id="b509c-931">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-931">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-932">예</span><span class="sxs-lookup"><span data-stu-id="b509c-932">Yes</span></span>|  
|<span data-ttu-id="b509c-933">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-933">Remote computer</span></span>|<span data-ttu-id="b509c-934">예</span><span class="sxs-lookup"><span data-stu-id="b509c-934">Yes</span></span>|  
|<span data-ttu-id="b509c-935">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-935">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-936">예</span><span class="sxs-lookup"><span data-stu-id="b509c-936">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-937">다음 코드 예제에서는 메시지를 보낼 기본 속성을 확인 하는 메시지의 우선 순위를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-937">The following code example uses the priority of a message to determine default properties to send for the message.</span></span>  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-938">큐에 대한 기본 속성을 설정할 수 없습니다(예: 속성 중 하나가 잘못된 경우).</span><span class="sxs-lookup"><span data-stu-id="b509c-938">The default properties could not be set for the queue, possibly because one of the properties is not valid.</span></span></exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Messaging.MessageQueue.Delete path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-939">삭제할 큐의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-939">The location of the queue to be deleted.</span></span></param>
        <summary><span data-ttu-id="b509c-940">메시지 큐 서버에 있는 큐를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-940">Deletes a queue on a Message Queuing server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-941">구문은 `path` 매개 변수는 큐의 유형에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-941">The syntax for the `path` parameter depends on the type of queue.</span></span>  
  
|<span data-ttu-id="b509c-942">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-942">Queue type</span></span>|<span data-ttu-id="b509c-943">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-943">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-944">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-944">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="b509c-945">개인 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-945">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="b509c-946">자세한 구문에 대 한 참조를 <xref:System.Messaging.MessageQueue.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-946">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="b509c-947">사용할 수 있습니다 합니다 <xref:System.Messaging.MessageQueue.FormatName%2A> 또는 <xref:System.Messaging.MessageQueue.Label%2A> 큐 경로 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-947">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path.</span></span>  
  
|<span data-ttu-id="b509c-948">참조</span><span class="sxs-lookup"><span data-stu-id="b509c-948">Reference</span></span>|<span data-ttu-id="b509c-949">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-949">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="b509c-950">형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-950">Format name</span></span>|<span data-ttu-id="b509c-951">FormatName: [ *형식 이름을* ]</span><span class="sxs-lookup"><span data-stu-id="b509c-951">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="b509c-952">레이블</span><span class="sxs-lookup"><span data-stu-id="b509c-952">Label</span></span>|<span data-ttu-id="b509c-953">레이블: [ *레이블* ]</span><span class="sxs-lookup"><span data-stu-id="b509c-953">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="b509c-954">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-954">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-955">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-955">Workgroup mode</span></span>|<span data-ttu-id="b509c-956">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-956">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-957">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-957">Local computer</span></span>|<span data-ttu-id="b509c-958">예</span><span class="sxs-lookup"><span data-stu-id="b509c-958">Yes</span></span>|  
|<span data-ttu-id="b509c-959">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-959">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-960">예</span><span class="sxs-lookup"><span data-stu-id="b509c-960">Yes</span></span>|  
|<span data-ttu-id="b509c-961">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-961">Remote computer</span></span>|<span data-ttu-id="b509c-962">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-962">No</span></span>|  
|<span data-ttu-id="b509c-963">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-963">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-964">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-964">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-965">있는 경우 다음 코드 예제는 메시지 큐의 큐를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-965">The following code example deletes a Message Queuing queue, if it exists.</span></span>  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-966"><paramref name="path" /> 매개 변수가 <see langword="null" />이거나 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-966">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-967"><paramref name="path" /> 매개 변수에 대한 구문이 잘못된 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-967">The syntax for the <paramref name="path" /> parameter is not valid.</span></span>  
  
<span data-ttu-id="b509c-968">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-968">-or-</span></span> 
<span data-ttu-id="b509c-969">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-969">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName="DenySharedReceive">
      <MemberSignature Language="C#" Value="public bool DenySharedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DenySharedReceive" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.DenySharedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property DenySharedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DenySharedReceive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DenySharedReceive : bool with get, set" Usage="System.Messaging.MessageQueue.DenySharedReceive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_DenySharedReceive")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-970">이 <see cref="T:System.Messaging.MessageQueue" />가 메시지 큐에서 메시지를 받기 위한 단독 액세스 권한을 갖는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-970">Gets or sets a value that indicates whether this <see cref="T:System.Messaging.MessageQueue" /> has exclusive access to receive messages from the Message Queuing queue.</span></span></summary>
        <value><span data-ttu-id="b509c-971">이 <see cref="T:System.Messaging.MessageQueue" />가 큐에서 메시지를 받기 위한 단독 권한을 갖는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-971"><see langword="true" /> if this <see cref="T:System.Messaging.MessageQueue" /> has exclusive rights to receive messages from the queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b509c-972">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-972">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-973"><xref:System.Messaging.MessageQueue.DenySharedReceive%2A> 이 참조 하는 큐의 공유 모드를 지정 <xref:System.Messaging.MessageQueue>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-973"><xref:System.Messaging.MessageQueue.DenySharedReceive%2A> specifies the shared mode of the queue referenced by this <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="b509c-974">설정 <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> 하 `true` 만 나타내기 위해이 <xref:System.Messaging.MessageQueue> 지정 된 큐에서 메시지를 받거나 피킹에 액세스할 수 있어야 <xref:System.Messaging.MessageQueue.Path%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-974">Set <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> to `true` to indicate that only this <xref:System.Messaging.MessageQueue> should have access to peek or receive messages from the queue with the specified <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="b509c-975">다른 경우 <xref:System.Messaging.MessageQueue> 또는 다른 응용 프로그램은 동일한 큐 리소스에 해당 인스턴스를 사용 하 여 연결 또는 응용 프로그램을 피킹하거나 받을 메시지를 수 있지만 이러한 계속 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-975">If another <xref:System.Messaging.MessageQueue> or another application is associated with the same queue resource, that instance or application will not be able to peek or receive messages, but it can still send them.</span></span>  
  
 <span data-ttu-id="b509c-976">하는 경우 <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> 는 `false`, 큐가 여러 응용 프로그램, 보기, 메시지 송수신에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-976">If <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> is `false`, the queue is available to multiple applications for sending, peeking, or receiving messages.</span></span>  
  
 <span data-ttu-id="b509c-977">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-977">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-978">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-978">Workgroup mode</span></span>|<span data-ttu-id="b509c-979">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-979">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-980">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-980">Local computer</span></span>|<span data-ttu-id="b509c-981">예</span><span class="sxs-lookup"><span data-stu-id="b509c-981">Yes</span></span>|  
|<span data-ttu-id="b509c-982">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-982">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-983">예</span><span class="sxs-lookup"><span data-stu-id="b509c-983">Yes</span></span>|  
|<span data-ttu-id="b509c-984">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-984">Remote computer</span></span>|<span data-ttu-id="b509c-985">예</span><span class="sxs-lookup"><span data-stu-id="b509c-985">Yes</span></span>|  
|<span data-ttu-id="b509c-986">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-986">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-987">예</span><span class="sxs-lookup"><span data-stu-id="b509c-987">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-988">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-988">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#10](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="P:System.Messaging.MessageQueue.EnableConnectionCache" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="messageQueue.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b509c-989">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-989"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b509c-990"><see cref="T:System.Messaging.MessageQueue" />에서 사용하는 리소스(메모리 제외)를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-990">Disposes of the resources (other than memory) used by the <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-991"><xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 사용을 마치면 <xref:System.Messaging.MessageQueue>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-991">Call <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> when you are finished using the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="b509c-992"><xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 메서드를 사용하면 <xref:System.Messaging.MessageQueue>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-992">The <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> method leaves the <xref:System.Messaging.MessageQueue> in an unusable state.</span></span> <span data-ttu-id="b509c-993">호출한 후 <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Messaging.MessageQueue> 차지 했던 메모리를 가비지 수집에 의해 회수 될 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-993">After calling <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>, you must release all references to the <xref:System.Messaging.MessageQueue> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="b509c-994">호출 해야 <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 에 대 한 마지막 참조를 해제 하기 전에 <xref:System.Messaging.MessageQueue>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-994">You should call <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> before you release your last reference to the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="b509c-995">이 고, 그렇지 리소스를 <xref:System.Messaging.MessageQueue> 가 사용 하 여 확보 되지 것입니다. 가비지 컬렉션 호출 될 때까지 <xref:System.Messaging.MessageQueue> 개체의 소멸자입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-995">Otherwise, the resources the <xref:System.Messaging.MessageQueue> is using will not be freed until garbage collection calls the <xref:System.Messaging.MessageQueue> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
      </Docs>
    </Member>
    <Member MemberName="EnableConnectionCache">
      <MemberSignature Language="C#" Value="public static bool EnableConnectionCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableConnectionCache" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.EnableConnectionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableConnectionCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableConnectionCache { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableConnectionCache : bool with get, set" Usage="System.Messaging.MessageQueue.EnableConnectionCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-996">연결 캐시가 응용 프로그램에 의해 유지 관리될지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-996">Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</span></span></summary>
        <value><span data-ttu-id="b509c-997">연결 캐시를 만들어 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-997"><see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-998">연결 캐시는 처리 큐에 쓰기 또는 읽기를 포함 하는 구조에 대 한 참조의 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-998">A connection cache is a list of references to structures that contain read or write handles to queues.</span></span> <span data-ttu-id="b509c-999">때 <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> 됩니다 `true`, <xref:System.Messaging.MessageQueue> 호출할 때마다 캐시에서 처리를 활용 <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, 또는 <xref:System.Messaging.MessageQueue.Receive%2A>, 열린 새 핸들 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-999">When <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> is `true`, the <xref:System.Messaging.MessageQueue> borrows handles from the cache each time you call <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, or <xref:System.Messaging.MessageQueue.Receive%2A>, rather than open new handles.</span></span> <span data-ttu-id="b509c-1000">이 경우 성능을 향상 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1000">This can improve performance.</span></span> <span data-ttu-id="b509c-1001">분리도 연결 캐시를 사용 하는 <xref:System.Messaging.MessageQueue> 네트워크 토폴로지 변경으로 인해 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1001">Using a connection cache also insulates the <xref:System.Messaging.MessageQueue> from changes in the network topology.</span></span>  
  
 <span data-ttu-id="b509c-1002">큐에 새 연결을 만들면 연결 캐시가 꽉는 <xref:System.Messaging.MessageQueue> 새 연결을 사용 하 여 가장 최근에 액세스 된 구조를 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1002">If you create a new connection to a queue when the connection cache is full, the <xref:System.Messaging.MessageQueue> overwrites the least recently accessed structure with the new connection.</span></span> <span data-ttu-id="b509c-1003">호출 하 여 완전히 캐시를 지울 수 <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, 예를 들어, 이전 읽기 및 쓰기 핸들을 사용할 더 이상 사용 하는 큐의 형식 이름이 변경 된 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-1003">You can clear the cache entirely by calling <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, for example, if the format names of the queues you are working with have changed so that the previous read and write handles are no longer valid.</span></span>  
  
 <span data-ttu-id="b509c-1004">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1004">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1005">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1005">Workgroup mode</span></span>|<span data-ttu-id="b509c-1006">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1006">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1007">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1007">Local computer</span></span>|<span data-ttu-id="b509c-1008">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1008">Yes</span></span>|  
|<span data-ttu-id="b509c-1009">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1009">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1010">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1010">Yes</span></span>|  
|<span data-ttu-id="b509c-1011">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1011">Remote computer</span></span>|<span data-ttu-id="b509c-1012">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1012">Yes</span></span>|  
|<span data-ttu-id="b509c-1013">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1013">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1014">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1014">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1015">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1015">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#11](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.ClearConnectionCache" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueue.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_EncryptionRequired")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1016">큐에서 비개인(암호화되지 않은) 메시지만 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1016">Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</span></span></summary>
        <value><span data-ttu-id="b509c-1017"><see cref="T:System.Messaging.EncryptionRequired" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1017">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values.</span></span> <span data-ttu-id="b509c-1018">기본값은 <see langword="None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1018">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1019">큐에 전송 된 메시지에는 암호화가 필요한을 지정 하면 메시지 본문만 암호화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1019">When you specify that encryption is required for the messages sent to a queue, only the message bodies are encrypted.</span></span> <span data-ttu-id="b509c-1020">다른 멤버 (예를 들어 합니다 <xref:System.Messaging.Message.Label%2A> 및 <xref:System.Messaging.Message.SenderId%2A> 속성)를 암호화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1020">The other members (for example, the <xref:System.Messaging.Message.Label%2A> and <xref:System.Messaging.Message.SenderId%2A> properties) cannot be encrypted.</span></span>  
  
 <span data-ttu-id="b509c-1021">메시지 큐를 수정이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1021">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="b509c-1022">따라서 다른 <xref:System.Messaging.MessageQueue> 인스턴스는 변경 내용의 영향입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1022">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="b509c-1023">개인 메시지를 통해 메시지를 암호화 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1023">Encrypting a message makes the message private.</span></span> <span data-ttu-id="b509c-1024">큐의 암호화 요구 사항 수를 지정할 수 있습니다 `None`, `Body`, 또는 `Optional` 설정 하 여는 <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> 속성 적절 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1024">You can specify the queue's encryption requirement to be `None`, `Body`, or `Optional` by setting the <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> property appropriately.</span></span> <span data-ttu-id="b509c-1025"><xref:System.Messaging.Message.UseEncryption%2A> 설정은 메시지 큐의 암호화 요구 사항 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1025">The <xref:System.Messaging.Message.UseEncryption%2A> setting of the message must correspond to the encryption requirement of the queue.</span></span> <span data-ttu-id="b509c-1026">메시지 암호화 되지 않았지만 큐를 지정 하는 경우 `Body`, 메시지 암호화 되어 있지만 큐를 지정 하는 경우 또는 `None`, 큐에서 메시지는 거부 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1026">If the message is not encrypted but the queue specifies `Body`, or if the message is encrypted but the queue specifies `None`, the message is rejected by the queue.</span></span> <span data-ttu-id="b509c-1027">이 이벤트의 부정 승인 메시지를 요청 하는 송신 응용 프로그램 메시지 큐는 보내는 응용 프로그램 메시지의 거부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1027">If the sending application requests a negative acknowledgment message in this event, Message Queuing indicates the message's rejection to the sending application.</span></span> <span data-ttu-id="b509c-1028">경우는 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 속성은 `true`, 암호화 실패 한 메시지는 배달 못 한 편지 큐로 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1028">If the <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, a message that fails encryption is sent to the dead-letter queue.</span></span> <span data-ttu-id="b509c-1029">그렇지 않은 경우 메시지가 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1029">Otherwise, the message is lost.</span></span>  
  
 <span data-ttu-id="b509c-1030">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1030">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1031">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1031">Workgroup mode</span></span>|<span data-ttu-id="b509c-1032">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1032">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1033">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1033">Local computer</span></span>|<span data-ttu-id="b509c-1034">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1034">Yes</span></span>|  
|<span data-ttu-id="b509c-1035">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1035">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1036">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1036">Yes</span></span>|  
|<span data-ttu-id="b509c-1037">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1037">Remote computer</span></span>|<span data-ttu-id="b509c-1038">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1038">No</span></span>|  
|<span data-ttu-id="b509c-1039">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1039">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1040">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1040">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1041">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1041">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#12](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1042">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1042">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="EndPeek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message EndPeek (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message EndPeek(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndPeek (asyncResult As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ EndPeek(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndPeek : IAsyncResult -&gt; System.Messaging.Message" Usage="messageQueue.EndPeek asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b509c-1043"><see cref="T:System.IAsyncResult" />는 종료한 후 최종 결과를 검색해 올 비동기 피킹(peeking) 작업을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1043">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous peek operation to finish and from which to retrieve an end result.</span></span></param>
        <summary><span data-ttu-id="b509c-1044">지정된 비동기 피킹(peeking) 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1044">Completes the specified asynchronous peek operation.</span></span></summary>
        <returns><span data-ttu-id="b509c-1045">완료된 비동기 작업과 관련된 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1045">The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1046">경우는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 에 의해 시작 된 작업을 완료 합니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1046">When the <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> completes the operation that was initiated by the <xref:System.Messaging.MessageQueue.BeginPeek%2A> call.</span></span> <span data-ttu-id="b509c-1047">이렇게 하려면 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 는 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1047">To do so, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> peeks the message.</span></span>  
  
 <span data-ttu-id="b509c-1048"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 그러면 제한 시간을 지정할 수는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트를 큐에 메시지가 표시 되기 전에 제한 시간이 발생 하는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1048"><xref:System.Messaging.MessageQueue.BeginPeek%2A> can specify a time-out, which causes the <xref:System.Messaging.MessageQueue.PeekCompleted> event to be raised if the time-out occurs before a message appears in the queue.</span></span> <span data-ttu-id="b509c-1049">메시지가 큐에 대 한 후속 호출에서 도착 시간 초과가 발생 하는 경우 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1049">When a time-out occurs without a message arriving in the queue, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> throws an exception.</span></span>  
  
 <span data-ttu-id="b509c-1050"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 발생 시킨 메시지를 읽는 데 사용 되는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1050"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is used to read the message that caused the <xref:System.Messaging.MessageQueue.PeekCompleted> event to be raised.</span></span>  
  
 <span data-ttu-id="b509c-1051">비동기적으로 메시지를 피킹할 수 계속 하려면 다시 호출 하면 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 호출한 후 <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1051">If you want to continue to asynchronously peek messages, you can again call <xref:System.Messaging.MessageQueue.BeginPeek%2A> after calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="b509c-1052">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1052">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1053">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1053">Workgroup mode</span></span>|<span data-ttu-id="b509c-1054">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1054">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1055">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1055">Local computer</span></span>|<span data-ttu-id="b509c-1056">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1056">Yes</span></span>|  
|<span data-ttu-id="b509c-1057">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1057">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1058">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1058">Yes</span></span>|  
|<span data-ttu-id="b509c-1059">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1059">Remote computer</span></span>|<span data-ttu-id="b509c-1060">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1060">No</span></span>|  
|<span data-ttu-id="b509c-1061">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1061">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1062">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1062">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1063">다음 코드 예제에서는 명명 된 이벤트 처리기를 만듭니다 `MyPeekCompleted`에 연결 합니다 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트 처리기 대리자를 호출 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 경로에 있는 큐에 비동기 작업을 시작 하려면 ". \myQueue"입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1063">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="b509c-1064">경우는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 하 고 예제는 메시지를 피킹합니다 화면으로 해당 본문을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1064">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="b509c-1065">이 예제에서는 호출 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 새 비동기 작업을 시작 하려면 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1065">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-1066"><paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1066">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1067"><paramref name="asyncResult" /> 매개 변수의 구문이 잘못된 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-1067">The syntax of the <paramref name="asyncResult" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1068">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1068">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message EndReceive (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message EndReceive(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ EndReceive(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult -&gt; System.Messaging.Message" Usage="messageQueue.EndReceive asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b509c-1069"><see cref="T:System.IAsyncResult" />는 종료한 후 최종 결과를 검색해 올 비동기 수신 작업을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1069">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous receive operation to finish and from which to retrieve an end result.</span></span></param>
        <summary><span data-ttu-id="b509c-1070">지정된 비동기 수신 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1070">Completes the specified asynchronous receive operation.</span></span></summary>
        <returns><span data-ttu-id="b509c-1071">완료된 비동기 작업과 관련된 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1071">The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1072">경우는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 에 의해 시작 된 작업을 완료 합니다 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1072">When the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> completes the operation that was initiated by the <xref:System.Messaging.MessageQueue.BeginReceive%2A> call.</span></span> <span data-ttu-id="b509c-1073">이렇게 하려면 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1073">To do so, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> receives the message.</span></span>  
  
 <span data-ttu-id="b509c-1074"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 그러면 제한 시간을 지정할 수는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트를 큐에 메시지가 표시 되기 전에 제한 시간이 발생 하는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1074"><xref:System.Messaging.MessageQueue.BeginReceive%2A> can specify a time-out, which causes the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event to be raised if the time-out occurs before a message appears in the queue.</span></span> <span data-ttu-id="b509c-1075">메시지가 큐에 대 한 후속 호출에서 도착 시간 초과가 발생 하는 경우 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1075">When a time-out occurs without a message arriving in the queue, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> throws an exception.</span></span>  
  
 <span data-ttu-id="b509c-1076"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 메시지를 발생 시킨 (큐에서 제거) 읽는 데 사용 되는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1076"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is used to read (removing from the queue) the message that caused the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event to be raised.</span></span>  
  
 <span data-ttu-id="b509c-1077">계속 비동기적으로 메시지를 수신 하려는 경우 다시 호출 하면 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 호출한 후 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1077">If you want to continue to asynchronously receive messages, you can again call <xref:System.Messaging.MessageQueue.BeginReceive%2A> after calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="b509c-1078">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1078">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1079">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1079">Workgroup mode</span></span>|<span data-ttu-id="b509c-1080">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1080">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1081">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1081">Local computer</span></span>|<span data-ttu-id="b509c-1082">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1082">Yes</span></span>|  
|<span data-ttu-id="b509c-1083">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1083">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1084">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1084">Yes</span></span>|  
|<span data-ttu-id="b509c-1085">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1085">Remote computer</span></span>|<span data-ttu-id="b509c-1086">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1086">No</span></span>|  
|<span data-ttu-id="b509c-1087">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1087">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1088">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1088">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1089">다음 코드 예제에서는 비동기 요청을 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1089">The following code example chains asynchronous requests.</span></span> <span data-ttu-id="b509c-1090">"MyQueue"를 호출 하는 로컬 컴퓨터에는 큐가 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1090">It assumes there is a queue on the local computer called "myQueue".</span></span> <span data-ttu-id="b509c-1091">합니다 `Main` 함수를 처리 하는 비동기 작업을 시작 합니다 `MyReceiveCompleted` 루틴입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1091">The `Main` function begins the asynchronous operation that is handled by the `MyReceiveCompleted` routine.</span></span> <span data-ttu-id="b509c-1092">`MyReceiveCompleted` 현재 메시지를 처리 하 고 새 시작 비동기 수신 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1092">`MyReceiveCompleted` processes the current message and begins a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_mre.cpp#1)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_mre.cs#1)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_mre.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-1093"><paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1093">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1094"><paramref name="asyncResult" /> 매개 변수의 구문이 잘못된 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-1094">The syntax of the <paramref name="asyncResult" /> parameter is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1095">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1095">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Messaging.MessageQueue.Exists path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b509c-1096">찾을 큐의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1096">The location of the queue to find.</span></span></param>
        <summary><span data-ttu-id="b509c-1097">지정된 경로에 메시지 큐가 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1097">Determines whether a Message Queuing queue exists at the specified path.</span></span></summary>
        <returns><span data-ttu-id="b509c-1098">지정된 경로에 큐가 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1098"><see langword="true" /> if a queue with the specified path exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1099"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 메서드 메시지 큐가 지정된 된 경로에 있는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1099">The <xref:System.Messaging.MessageQueue.Exists%28System.String%29> method determines whether a Message Queuing queue exists at a specified path.</span></span> <span data-ttu-id="b509c-1100">지정 된 형식 이름의 큐가 있는지 확인 하려면 방법이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1100">No method exists to determine whether a queue with a specified format name exists.</span></span> <span data-ttu-id="b509c-1101">형식 이름 구문 및 다른 경로 구문 형식에 대 한 자세한 내용은 참조는 <xref:System.Messaging.MessageQueue.Path%2A> 속성입니다.)</span><span class="sxs-lookup"><span data-stu-id="b509c-1101">For more information about the format name syntax and other path syntax forms, see the <xref:System.Messaging.MessageQueue.Path%2A> property.)</span></span>  
  
 <span data-ttu-id="b509c-1102"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 비용이 많이 드는 작업이입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1102"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> is an expensive operation.</span></span> <span data-ttu-id="b509c-1103">응용 프로그램 내에서 필요한 경우에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1103">Use it only when it is necessary within the application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b509c-1104">합니다 <xref:System.Messaging.MessageQueue.Exists%28System.String%29> 메서드를 지원 하지 않습니다는 <xref:System.Messaging.MessageQueue.FormatName%2A> 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1104">The <xref:System.Messaging.MessageQueue.Exists%28System.String%29> method does not support the <xref:System.Messaging.MessageQueue.FormatName%2A> prefix.</span></span>  
  
 <span data-ttu-id="b509c-1105">구문은 `path` 매개 변수는 다음 표에 나와 있는 것 처럼 큐의 유형에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1105">The syntax for the `path` parameter depends on the type of queue, as shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-1106">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-1106">Queue type</span></span>|<span data-ttu-id="b509c-1107">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-1107">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-1108">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1108">Public queue</span></span>|`MachineName`\\`QueueName`|  
  
 <span data-ttu-id="b509c-1109"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 원격 개인 큐의 존재 여부를 확인 하려면 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1109"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> cannot be called to verify the existence of a remote private queue.</span></span>  
  
 <span data-ttu-id="b509c-1110">자세한 구문에 대 한 참조를 <xref:System.Messaging.MessageQueue.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1110">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="b509c-1111">사용할 수 있습니다는 <xref:System.Messaging.MessageQueue.Label%2A> 큐 경로 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1111">Alternatively, you can use the <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path.</span></span>  
  
|<span data-ttu-id="b509c-1112">참조</span><span class="sxs-lookup"><span data-stu-id="b509c-1112">Reference</span></span>|<span data-ttu-id="b509c-1113">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-1113">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="b509c-1114">레이블</span><span class="sxs-lookup"><span data-stu-id="b509c-1114">Label</span></span>|<span data-ttu-id="b509c-1115">레이블: [ `label` ]</span><span class="sxs-lookup"><span data-stu-id="b509c-1115">Label:[ `label` ]</span></span>|  
  
 <span data-ttu-id="b509c-1116">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1116">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1117">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1117">Workgroup mode</span></span>|<span data-ttu-id="b509c-1118">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1118">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1119">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1119">Local computer</span></span>|<span data-ttu-id="b509c-1120">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1120">Yes</span></span>|  
|<span data-ttu-id="b509c-1121">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1121">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1122">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1122">No</span></span>|  
|<span data-ttu-id="b509c-1123">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1123">Remote computer</span></span>|<span data-ttu-id="b509c-1124">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1124">No</span></span>|  
|<span data-ttu-id="b509c-1125">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1125">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1126">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1126">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1127">다음 코드 예제에서는 메시지 큐가 존재 하 고 다음 삭제 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1127">The following code example verifies whether a Message Queuing queue exists, and then deletes it.</span></span>  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1128"><paramref name="path" /> 구문이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1128">The <paramref name="path" /> syntax is not valid.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1129">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1129">An error occurred when accessing a Message Queuing method.</span></span>  
  
<span data-ttu-id="b509c-1130">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-1130">-or-</span></span> 
<span data-ttu-id="b509c-1131"><see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> 메서드가 원격 개인 큐에서 호출되는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1131">The <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> method is being called on a remote private queue</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-1132">큐가 있는지 여부를 확인할 때 응용 프로그램이 형식 이름 구문을 사용했습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1132">The application used format name syntax when verifying queue existence.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName="FormatName">
      <MemberSignature Language="C#" Value="public string FormatName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.FormatName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormatName : string" Usage="System.Messaging.MessageQueue.FormatName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_FormatName")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1133">큐를 작성할 때 메시지 큐가 발생시킨 고유한 큐 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1133">Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</span></span></summary>
        <value><span data-ttu-id="b509c-1134">네트워크에서 고유한 큐 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1134">The name for the queue, which is unique on the network.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1135"><xref:System.Messaging.MessageQueue.FormatName%2A> 속성 큐의 형식 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1135">The <xref:System.Messaging.MessageQueue.FormatName%2A> property contains the format name of the queue.</span></span> <span data-ttu-id="b509c-1136">메시지 큐 큐를 열고 및 액세스 하는 방법을 식별 하는 형식 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1136">Message Queuing uses the format name to identify which queue to open and how to access it.</span></span> <span data-ttu-id="b509c-1137">큐의 특징 대부분을 달리 형식 이름을 아니므로 메시지 큐 응용 프로그램 큐 속성을 메시지 큐 관리 도구를 통해 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1137">Unlike most of a queue's characteristics, the format name is not a Message Queuing application queue property, so you cannot access it through the Message Queuing management tool.</span></span> <span data-ttu-id="b509c-1138">형식 이름은 큐에 대해 고유한 이름을 단순히 메시지 큐는 큐 또는 나중에 응용 프로그램을 생성 하는 만들 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1138">The format name is simply a unique name for the queue, which Message Queuing generates when it creates the queue or which the application generates later.</span></span>  
  
 <span data-ttu-id="b509c-1139">경로 이름 구문을 사용 하 여 경로 지정 하는 경우 (같은 `myComputer\myQueue`)를 읽거나 큐에 쓸 때 형식 이름 구문을 사용 하는 대신 주 도메인 컨트롤러 (사용 하는 Active Directory)는 다음과 같이 변환 됩니다.는 <xref:System.Messaging.MessageQueue.Path%2A> 에 연결된 <xref:System.Messaging.MessageQueue.FormatName%2A> 큐에 액세스 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1139">If you specify a path using the path name syntax (such as `myComputer\myQueue`) rather than using the format name syntax when you read or write to the queue, the primary domain controller (which uses Active Directory) translates the <xref:System.Messaging.MessageQueue.Path%2A> into the associated <xref:System.Messaging.MessageQueue.FormatName%2A> before accessing the queue.</span></span> <span data-ttu-id="b509c-1140">응용 프로그램을 오프 라인으로 작업 하는 경우에 형식의 이름 구문만;을 사용 해야 합니다. 이 고, 그렇지 주 도메인 컨트롤러는 경로 변환 하는 데 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1140">If your application is working offline, you must use the format name syntax; otherwise, the primary domain controller will not be available to perform the path translation.</span></span>  
  
 <span data-ttu-id="b509c-1141">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1141">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1142">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1142">Workgroup mode</span></span>|<span data-ttu-id="b509c-1143">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1143">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1144">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1144">Local computer</span></span>|<span data-ttu-id="b509c-1145">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1145">Yes</span></span>|  
|<span data-ttu-id="b509c-1146">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1146">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1147">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1147">Yes</span></span>|  
|<span data-ttu-id="b509c-1148">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1148">Remote computer</span></span>|<span data-ttu-id="b509c-1149">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1149">Yes</span></span>|  
|<span data-ttu-id="b509c-1150">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1150">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1151">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1151">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1152">다음 코드 예제에서는 메시지 큐의 값을 표시 <xref:System.Messaging.MessageQueue.FormatName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1152">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.FormatName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#13](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1153"><see cref="P:System.Messaging.MessageQueue.Path" />이 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1153">The <see cref="P:System.Messaging.MessageQueue.Path" /> is not set.</span></span>  
  
<span data-ttu-id="b509c-1154">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-1154">-or-</span></span> 
<span data-ttu-id="b509c-1155">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1155">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public System.Messaging.IMessageFormatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.IMessageFormatter Formatter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatter As IMessageFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::IMessageFormatter ^ Formatter { System::Messaging::IMessageFormatter ^ get(); void set(System::Messaging::IMessageFormatter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Formatter : System.Messaging.IMessageFormatter with get, set" Usage="System.Messaging.MessageQueue.Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageFormatterConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Formatter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.IMessageFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1156">큐에서 읽거나 쓴 메시지 본문으로 개체를 serialize하거나 그 메시지 본문에서 개체를 deserialize하는 데 사용되는 포맷터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1156">Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</span></span></summary>
        <value><span data-ttu-id="b509c-1157">메시지 본문에서 쓰거나 읽는 스트림을 만드는 <see cref="T:System.Messaging.IMessageFormatter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1157">The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.</span></span> <span data-ttu-id="b509c-1158">기본값은 <see cref="T:System.Messaging.XmlMessageFormatter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1158">The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1159"><xref:System.Messaging.MessageQueue.Formatter%2A> 속성 응용 프로그램 읽기 또는 큐에 기록할 때 메시지를 변환 하는 포맷터 개체의 인스턴스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1159">The <xref:System.Messaging.MessageQueue.Formatter%2A> property contains an instance of a formatter object, which transforms messages when your application reads or writes to the queue.</span></span>  
  
 <span data-ttu-id="b509c-1160">응용 프로그램 큐에 메시지를 보내면, 포맷터 개체를 스트림으로 serialize 하 고 메시지 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1160">When the application sends message to the queue, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="b509c-1161">포맷터에 메시지 데이터를 큐에서 읽을 때 합니다 <xref:System.Messaging.Message.Body%2A> 의 속성을 <xref:System.Messaging.Message>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1161">When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="b509c-1162"><xref:System.Messaging.XmlMessageFormatter> 는 느슨하게 결합 되므로이 형식을 사용 하는 경우 보낸 사람 및 받는 사람 입력 동일한 개체를 할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1162">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="b509c-1163">합니다 <xref:System.Messaging.ActiveXMessageFormatter> 고 <xref:System.Messaging.BinaryMessageFormatter> 이진 표현으로 데이터를 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1163">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="b509c-1164"><xref:System.Messaging.ActiveXMessageFormatter> COM 구성 요소를 받거나 보낼 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1164">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="b509c-1165"><xref:System.Messaging.BinaryMessageFormatter> 및 <xref:System.Messaging.ActiveXMessageFormatter> 보다 더 빠른 처리량을 제공 합니다 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1165"><xref:System.Messaging.BinaryMessageFormatter> and <xref:System.Messaging.ActiveXMessageFormatter> provide faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="b509c-1166"><xref:System.Messaging.ActiveXMessageFormatter> Visual Basic 6.0 메시지 큐 응용 프로그램과 상호 운용성을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1166">The <xref:System.Messaging.ActiveXMessageFormatter> allows interoperability with Visual Basic 6.0 Message Queuing applications.</span></span>  
  
 <span data-ttu-id="b509c-1167">응용 프로그램 큐에 메시지를 보낼 때 합니다 <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> 기본 메시지 속성을 사용 하는 해당 메시지에만 적용 됩니다 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1167">When your application sends messages to the queue, the <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> applies only to those messages that use the default message properties, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span></span> <span data-ttu-id="b509c-1168">보내는 경우는 <xref:System.Messaging.Message> 큐에 메시지 큐에서 사용에 정의 된 포맷터는 <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> 대신 본문을 serialize 할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1168">If you send a <xref:System.Messaging.Message> to the queue, Message Queuing uses the formatter defined in the <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property to serialize the body instead.</span></span>  
  
 <span data-ttu-id="b509c-1169">합니다 <xref:System.Messaging.MessageQueue> 클래스는 항상 사용을 <xref:System.Messaging.Message> 받거나 큐에서 메시지 보기.</span><span class="sxs-lookup"><span data-stu-id="b509c-1169">The <xref:System.Messaging.MessageQueue> class will always use a <xref:System.Messaging.Message> to receive or peek a message from the queue.</span></span> <span data-ttu-id="b509c-1170">사용 하 여 메시지가 deserialize 되는 <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1170">The message is deserialized using the <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b509c-1171">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1171">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1172">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1172">Workgroup mode</span></span>|<span data-ttu-id="b509c-1173">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1173">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1174">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1174">Local computer</span></span>|<span data-ttu-id="b509c-1175">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1175">Yes</span></span>|  
|<span data-ttu-id="b509c-1176">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1176">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1177">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1177">Yes</span></span>|  
|<span data-ttu-id="b509c-1178">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1178">Remote computer</span></span>|<span data-ttu-id="b509c-1179">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1179">No</span></span>|  
|<span data-ttu-id="b509c-1180">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1180">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1181">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1181">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1182">다음 코드 예제에서는 사용 하 여 메시지 본문을 서식 지정 하는 방법을 보여 줍니다 <xref:System.Messaging.BinaryMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1182">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="b509c-1183">다음 코드 예제에서는 사용 하 여 메시지 본문을 서식 지정 하는 방법을 보여 줍니다 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1183">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
      </Docs>
    </Member>
    <Member MemberName="GetAllMessages">
      <MemberSignature Language="C#" Value="public System.Messaging.Message[] GetAllMessages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message[] GetAllMessages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetAllMessages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMessages () As Message()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Messaging::Message ^&gt; ^ GetAllMessages();" />
      <MemberSignature Language="F#" Value="member this.GetAllMessages : unit -&gt; System.Messaging.Message[]" Usage="messageQueue.GetAllMessages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1184">큐에 있는 메시지를 모두 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1184">Returns all the messages that are in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-1185">큐에 있는 모든 메시지를 메시지 큐에서 표시되는 것과 동일한 순서로 나타내는 <see cref="T:System.Messaging.Message" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1185">An array of type <see cref="T:System.Messaging.Message" /> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1186"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> 이러한 메시지에 큐의 메시지, 동적이 아닌 링크의 정적 스냅숏을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1186"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> returns a static snapshot of the messages in the queue, not dynamic links to those messages.</span></span> <span data-ttu-id="b509c-1187">따라서 큐의 메시지를 수정 하는 배열을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1187">Therefore, you cannot use the array to modify the messages in the queue.</span></span> <span data-ttu-id="b509c-1188">(예: 메시지를 삭제 하는 기능) 큐를 사용 하 여 실시간으로 동적 상호 작용을 원한다 면 호출 된 <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> 큐에서 메시지의 동적 목록을 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-1188">If you want real-time, dynamic interaction with the queue (such as the ability to delete messages), call the <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> method, which returns a dynamic list of the messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-1189">때문에 <xref:System.Messaging.MessageQueue.GetAllMessages%2A> 메서드가 호출 된 시점에 큐에서 메시지의 복사본을 반환 합니다, 큐에 도착 하는 새 메시지 또는 메시지 큐에서 제거 되는 배열 반영 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1189">Because <xref:System.Messaging.MessageQueue.GetAllMessages%2A> returns a copy of the messages in the queue at the time the method was called, the array does not reflect new messages that arrive in the queue or messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="b509c-1190"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> 의해 필터링 되지 않은 속성만 검색 된 <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1190"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> retrieves only those properties not filtered out by the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property.</span></span>  
  
 <span data-ttu-id="b509c-1191">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1191">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1192">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1192">Workgroup mode</span></span>|<span data-ttu-id="b509c-1193">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1193">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1194">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1194">Local computer</span></span>|<span data-ttu-id="b509c-1195">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1195">Yes</span></span>|  
|<span data-ttu-id="b509c-1196">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1196">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1197">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1197">Yes</span></span>|  
|<span data-ttu-id="b509c-1198">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1198">Remote computer</span></span>|<span data-ttu-id="b509c-1199">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1199">No</span></span>|  
|<span data-ttu-id="b509c-1200">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1200">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1201">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1201">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1202">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.GetAllMessages%2A>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1202">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#21](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#21)]
 [!code-csharp[MessageQueue2#21](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1203">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1203">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="messageQueue.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method returns a MessageEnumerator that implements RemoveCurrent family of methods incorrectly. Please use GetMessageEnumerator2 instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1204">큐의 메시지를 열거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1204">Enumerates the messages in a queue.</span></span> <span data-ttu-id="b509c-1205"><see cref="M:System.Messaging.MessageQueue.GetEnumerator" />는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1205"><see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> is deprecated.</span></span> <span data-ttu-id="b509c-1206"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />를 대신 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1206"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</span></span></summary>
        <returns><span data-ttu-id="b509c-1207">큐에 있는 메시지에 대한 동적 연결을 제공하는 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1207">A <see cref="T:System.Collections.IEnumerator" /> that provides a dynamic connection to the messages in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1208">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1208">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1209">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1209">Workgroup mode</span></span>|<span data-ttu-id="b509c-1210">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1210">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1211">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1211">Local computer</span></span>|<span data-ttu-id="b509c-1212">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1212">Yes</span></span>|  
|<span data-ttu-id="b509c-1213">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1213">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1214">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1214">Yes</span></span>|  
|<span data-ttu-id="b509c-1215">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1215">Remote computer</span></span>|<span data-ttu-id="b509c-1216">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1216">No</span></span>|  
|<span data-ttu-id="b509c-1217">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1217">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1218">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1218">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1219">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.GetEnumerator%2A>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1219">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.GetEnumerator%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#22](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#22)]
 [!code-csharp[MessageQueue2#22](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetMachineId">
      <MemberSignature Language="C#" Value="public static Guid GetMachineId (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetMachineId(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMachineId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMachineId (machineName As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetMachineId(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetMachineId : string -&gt; Guid" Usage="System.Messaging.MessageQueue.GetMachineId machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="b509c-1220">큐가 포함된 컴퓨터의 이름이며 앞에 백슬래시 두 개(\\\\)가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1220">The name of the computer that contains the queue, without the two preceding backslashes (\\\\).</span></span></param>
        <summary><span data-ttu-id="b509c-1221">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐가 있는 컴퓨터의 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1221">Gets the identifier of the computer on which the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> is located.</span></span></summary>
        <returns><span data-ttu-id="b509c-1222">큐가 있는 컴퓨터의 고유 식별자를 나타내는 <see cref="T:System.Guid" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1222">A <see cref="T:System.Guid" /> that represents a unique identifier for the computer on which the queue is located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1223">컴퓨터의 식별자를 사용 하 여 다른 두 가지 용도로: 컴퓨터 저널을 읽고 보안 인증서를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1223">You can use a computer's identifier for two purposes, among others: to read the computer journal and to set security certificates.</span></span> <span data-ttu-id="b509c-1224">그러나 호출할 수 없습니다 <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29> 작업 하는 경우 오프 라인 응용 프로그램에 도메인 컨트롤러에서 디렉터리 서비스에 액세스할 수 있어야 하기 때문에 원격 컴퓨터에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1224">However, you cannot call <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29> for a remote computer when you are working offline because the application must have access to the directory service on the domain controller.</span></span>  
  
 <span data-ttu-id="b509c-1225">컴퓨터 식별자 (또는 컴퓨터 identifier)를 <xref:System.Guid> 메시지 큐 엔터프라이즈에 컴퓨터가 추가 될 때 만들어지는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1225">The computer identifier (or machine identifier) is a <xref:System.Guid> that Message Queuing creates when a computer is added to the enterprise.</span></span> <span data-ttu-id="b509c-1226">메시지 큐에서는 사용 하 여 컴퓨터 식별자를 `Machine` 하 고 `Journal` 키워드 구문을 컴퓨터 저널의 형식 이름을 만드는 데 `Machine=<computeridentifier>;Journal`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1226">Message Queuing combines the computer identifier with the `Machine` and `Journal` keywords to create the machine journal's format name, which has the syntax `Machine=<computeridentifier>;Journal`.</span></span> <span data-ttu-id="b509c-1227">컴퓨터 저널을 라고도 하는 업무 일지 큐로는 복사본을 저장 하는 시스템 큐 응용 프로그램에서 생성 된 경우 메시지를 <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1227">The machine journal, which is also known as the journal queue, is a system queue that stores copies of application-generated messages when the <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="b509c-1228">이 구문은 업무 일지 큐에 대 한 형식 이름을 생성 하는 경우에 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1228">This syntax for the journal is only valid when constructing the format name for the queue.</span></span> <span data-ttu-id="b509c-1229">경로 이름 구문은 `MachineName` \\ `Journal$`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1229">The path name syntax is `MachineName`\\`Journal$`.</span></span>  
  
 <span data-ttu-id="b509c-1230">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1230">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1231">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1231">Workgroup mode</span></span>|<span data-ttu-id="b509c-1232">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1232">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1233">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1233">Local computer</span></span>|<span data-ttu-id="b509c-1234">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1234">No</span></span>|  
|<span data-ttu-id="b509c-1235">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1235">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1236">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1236">No</span></span>|  
|<span data-ttu-id="b509c-1237">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1237">Remote computer</span></span>|<span data-ttu-id="b509c-1238">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1238">No</span></span>|  
|<span data-ttu-id="b509c-1239">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1239">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1240">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1240">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1241">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1241">The following code example calls <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>.</span></span>  
  
 [!code-csharp[MessageQueue#14](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1242">오프라인으로 작업하는 경우와 같이 디렉터리 서비스를 사용할 수 없기 때문에 컴퓨터 식별자를 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1242">The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.</span></span>  
  
<span data-ttu-id="b509c-1243">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-1243">-or-</span></span> 
<span data-ttu-id="b509c-1244">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1244">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageEnumerator">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageEnumerator GetMessageEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.MessageEnumerator GetMessageEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageEnumerator () As MessageEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::MessageEnumerator ^ GetMessageEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetMessageEnumerator : unit -&gt; System.Messaging.MessageEnumerator" Usage="messageQueue.GetMessageEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method returns a MessageEnumerator that implements RemoveCurrent family of methods incorrectly. Please use GetMessageEnumerator2 instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1245">큐에 있는 모든 메시지에 대해 열거자 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1245">Creates an enumerator object for all the messages in the queue.</span></span> <span data-ttu-id="b509c-1246"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" />는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1246"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> is deprecated.</span></span> <span data-ttu-id="b509c-1247"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />를 대신 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1247"><see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</span></span></summary>
        <returns><span data-ttu-id="b509c-1248">큐에 있는 메시지를 보유하는 <see cref="T:System.Messaging.MessageEnumerator" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1248">The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1249"><xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> 큐에 있는 모든 메시지의 동적 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1249"><xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> creates a dynamic list of all the messages in a queue.</span></span> <span data-ttu-id="b509c-1250">제거할 수 있습니다 큐에서 열거자의 현재 위치에서 메시지를 호출 하 여 <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> 에 대 한 합니다 <xref:System.Messaging.MessageEnumerator> 는 <xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1250">You can remove from the queue the message at the enumerator's current position by calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> for the <xref:System.Messaging.MessageEnumerator> that <xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> returns.</span></span>  
  
 <span data-ttu-id="b509c-1251">커서 큐에 메시지의 동적 목록과 사용 하 여 연결 이므로 열거형 메시지 현재 커서 위치 초과 하는 경우 큐에서 메시지에 대 한 수정 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1251">Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</span></span> <span data-ttu-id="b509c-1252">예를 들어, 열거자 우선 순위가 낮은 메시지 보다 커서의 현재 위치 뒤에 배치 하지만 해당 위치 앞에 삽입 하는 우선 순위가 높은 메시지가 아닌에 자동으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1252">For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</span></span> <span data-ttu-id="b509c-1253">그러나 다시 설정할 수 있습니다 열거형 하므로 커서를 다시 목록의 시작 부분에 호출 하 여 이동 <xref:System.Messaging.MessageEnumerator.Reset%2A> 에 대 한는 <xref:System.Messaging.MessageEnumerator>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1253">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageEnumerator.Reset%2A> for the <xref:System.Messaging.MessageEnumerator>.</span></span>  
  
 <span data-ttu-id="b509c-1254">열거형에 있는 메시지의 순서 우선 순위가 높은 메시지 우선 순위가 낮은 항목 보다 먼저 나타납니다 있으므로 큐에 순서를 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1254">The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</span></span>  
  
 <span data-ttu-id="b509c-1255">호출에 대 한 동적 연결 하지 않고 큐에서 메시지의 정적 스냅숏을 원한다 면 <xref:System.Messaging.MessageQueue.GetAllMessages%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1255">If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span> <span data-ttu-id="b509c-1256">이 메서드는 배열을 반환 <xref:System.Messaging.Message> 메서드가 호출 된 시간에 메시지를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1256">This method returns an array of <xref:System.Messaging.Message> objects, which represent the messages at the time the method was called.</span></span>  
  
 <span data-ttu-id="b509c-1257">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1257">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1258">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1258">Workgroup mode</span></span>|<span data-ttu-id="b509c-1259">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1259">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1260">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1260">Local computer</span></span>|<span data-ttu-id="b509c-1261">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1261">Yes</span></span>|  
|<span data-ttu-id="b509c-1262">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1262">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1263">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1263">Yes</span></span>|  
|<span data-ttu-id="b509c-1264">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1264">Remote computer</span></span>|<span data-ttu-id="b509c-1265">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1265">Yes</span></span>|  
|<span data-ttu-id="b509c-1266">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1266">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1267">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1267">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1268">다음 코드 예제에서는 큐에서 메시지의 동적 목록을 가져옵니다 및 포함 된 모든 메시지를 계산 합니다 <xref:System.Messaging.Message.Priority%2A> 속성이 설정 <xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1268">The following code example gets a dynamic list of messages in a queue and counts all messages with the <xref:System.Messaging.Message.Priority%2A> property set to <xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CPP/mqgetmessageenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CS/mqgetmessageenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/VB/mqgetmessageenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetAllMessages" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageEnumerator2">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageEnumerator GetMessageEnumerator2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.MessageEnumerator GetMessageEnumerator2() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageEnumerator2 () As MessageEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::MessageEnumerator ^ GetMessageEnumerator2();" />
      <MemberSignature Language="F#" Value="member this.GetMessageEnumerator2 : unit -&gt; System.Messaging.MessageEnumerator" Usage="messageQueue.GetMessageEnumerator2 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1269">큐에 있는 모든 메시지에 대해 열거자 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1269">Creates an enumerator object for all the messages in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-1270">큐에 있는 메시지를 보유하는 <see cref="T:System.Messaging.MessageEnumerator" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1270">The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1271"><xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> 큐에 있는 모든 메시지의 동적 목록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1271"><xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> creates a dynamic list of all the messages in a queue.</span></span> <span data-ttu-id="b509c-1272">제거할 수 있습니다 큐에서 열거자의 현재 위치에서 메시지를 호출 하 여 <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> 에 대 한 합니다 <xref:System.Messaging.MessageEnumerator> 는 <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1272">You can remove from the queue the message at the enumerator's current position by calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> for the <xref:System.Messaging.MessageEnumerator> that <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> returns.</span></span>  
  
 <span data-ttu-id="b509c-1273">커서 큐에 메시지의 동적 목록과 사용 하 여 연결 이므로 열거형 메시지 현재 커서 위치 초과 하는 경우 큐에서 메시지에 대 한 수정 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1273">Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</span></span> <span data-ttu-id="b509c-1274">예를 들어, 열거자 우선 순위가 낮은 메시지 보다 커서의 현재 위치 뒤에 배치 하지만 해당 위치 앞에 삽입 하는 우선 순위가 높은 메시지가 아닌에 자동으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1274">For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</span></span> <span data-ttu-id="b509c-1275">그러나 다시 설정할 수 있습니다 열거형 하므로 커서를 다시 목록의 시작 부분에 호출 하 여 이동 <xref:System.Messaging.MessageEnumerator.Reset%2A> 에 대 한는 <xref:System.Messaging.MessageEnumerator>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1275">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageEnumerator.Reset%2A> for the <xref:System.Messaging.MessageEnumerator>.</span></span>  
  
 <span data-ttu-id="b509c-1276">열거형에 있는 메시지의 순서 우선 순위가 높은 메시지 우선 순위가 낮은 항목 보다 먼저 나타납니다 있으므로 큐에 순서를 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1276">The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</span></span>  
  
 <span data-ttu-id="b509c-1277">호출에 대 한 동적 연결 하지 않고 큐에서 메시지의 정적 스냅숏을 원한다 면 <xref:System.Messaging.MessageQueue.GetAllMessages%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1277">If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span> <span data-ttu-id="b509c-1278">이 메서드는 배열을 반환 <xref:System.Messaging.Message> 메서드가 호출 된 시간에 메시지를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1278">This method returns an array of <xref:System.Messaging.Message> objects, which represent the messages at the time the method was called.</span></span>  
  
 <span data-ttu-id="b509c-1279">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1279">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1280">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1280">Workgroup mode</span></span>|<span data-ttu-id="b509c-1281">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1281">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1282">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1282">Local computer</span></span>|<span data-ttu-id="b509c-1283">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1283">Yes</span></span>|  
|<span data-ttu-id="b509c-1284">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1284">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1285">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1285">Yes</span></span>|  
|<span data-ttu-id="b509c-1286">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1286">Remote computer</span></span>|<span data-ttu-id="b509c-1287">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1287">Yes</span></span>|  
|<span data-ttu-id="b509c-1288">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1288">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1289">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1289">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetAllMessages" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMessageQueueEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-1290">네트워크에 있는 공개 큐의 동적 목록에 대한 열거자 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1290">Creates an enumerator object for a dynamic listing of the public queues on the network.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMessageQueueEnumerator">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMessageQueueEnumerator () As MessageQueueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueueEnumerator ^ GetMessageQueueEnumerator();" />
      <MemberSignature Language="F#" Value="static member GetMessageQueueEnumerator : unit -&gt; System.Messaging.MessageQueueEnumerator" Usage="System.Messaging.MessageQueue.GetMessageQueueEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1291">앞으로만 이동 가능한 커서 의미 체계 기능을 제공하여 네트워크에 있는 모든 공개 큐를 열거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1291">Provides forward-only cursor semantics to enumerate through all public queues on the network.</span></span></summary>
        <returns><span data-ttu-id="b509c-1292">네트워크에 있는 모든 공개 메시지 큐의 동적 목록을 제공하는 <see cref="T:System.Messaging.MessageQueueEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1292">A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of all the public message queues on the network.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1293">이 오버 로드 <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> 네트워크에 있는 모든 공개 큐의 열거형을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1293">This overload of <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> returns an enumeration of all the public queues that are on the network.</span></span>  
  
 <span data-ttu-id="b509c-1294">커서가 동적 목록과 관련 되어 있으므로 열거형 삭제 또는 커서의 현재 위치 뒤에 추가 하는 큐에 대 한 큐 목록에 대 한 수정 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1294">Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue list for queues deleted or added beyond the cursor's current position.</span></span> <span data-ttu-id="b509c-1295">추가 또는 삭제는 커서의 현재 위치 앞에 배치 하는 큐의 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1295">Additions or deletion of queues located before the cursor's current position are not reflected.</span></span> <span data-ttu-id="b509c-1296">예를 들어, 열거자의 커서 위치 뒤에 추가 큐 있지만 아닌 해당 위치 앞에 삽입에 자동으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1296">For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</span></span> <span data-ttu-id="b509c-1297">그러나 다시 설정할 수 있습니다 열거형 하므로 커서를 다시 목록의 시작 부분에 호출 하 여 이동 <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> 에 대 한는 <xref:System.Messaging.MessageQueueEnumerator>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1297">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> for the <xref:System.Messaging.MessageQueueEnumerator>.</span></span>  
  
 <span data-ttu-id="b509c-1298">네트워크에서 큐의 정의 된 순서가 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1298">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="b509c-1299">열거자 정렬 되지 않은, 예를 들어, 컴퓨터, 레이블, 공용 또는 개인 상태 또는 기타 액세스 가능한 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1299">An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</span></span>  
  
 <span data-ttu-id="b509c-1300">동적 연결을 보다는 네트워크에 있는 큐의 정적 스냅숏을 원한다 면 호출 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 또는 <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1300">If you want a static snapshot of the queues on the network rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> or <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>.</span></span> <span data-ttu-id="b509c-1301">이러한 두 메서드는 각각의 배열을 반환 <xref:System.Messaging.MessageQueue> 메서드가 호출 된 시간에 큐를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1301">Each of these two methods returns an array of <xref:System.Messaging.MessageQueue> objects, which represent the queues at the time the method was called.</span></span>  
  
 <span data-ttu-id="b509c-1302">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1302">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1303">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1303">Workgroup mode</span></span>|<span data-ttu-id="b509c-1304">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1304">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1305">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1305">Local computer</span></span>|<span data-ttu-id="b509c-1306">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1306">No</span></span>|  
|<span data-ttu-id="b509c-1307">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1307">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1308">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1308">No</span></span>|  
|<span data-ttu-id="b509c-1309">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1309">Remote computer</span></span>|<span data-ttu-id="b509c-1310">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1310">No</span></span>|  
|<span data-ttu-id="b509c-1311">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1311">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1312">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1312">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1313">다음 코드 예제에서는 네트워크의 모든 메시지 큐를 통해 반복 하 고 각 큐에 대 한 경로 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1313">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="b509c-1314">마지막으로 네트워크에서 공개 큐의 수를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1314">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageQueueEnumerator">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator (System.Messaging.MessageQueueCriteria criteria);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator(class System.Messaging.MessageQueueCriteria criteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMessageQueueEnumerator (criteria As MessageQueueCriteria) As MessageQueueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueueEnumerator ^ GetMessageQueueEnumerator(System::Messaging::MessageQueueCriteria ^ criteria);" />
      <MemberSignature Language="F#" Value="static member GetMessageQueueEnumerator : System.Messaging.MessageQueueCriteria -&gt; System.Messaging.MessageQueueEnumerator" Usage="System.Messaging.MessageQueue.GetMessageQueueEnumerator criteria" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.Messaging.MessageQueueCriteria" />
      </Parameters>
      <Docs>
        <param name="criteria"><span data-ttu-id="b509c-1315">사용 가능한 메시지 큐를 필터링하는 데 사용되는 기준이 포함된 <see cref="T:System.Messaging.MessageQueueCriteria" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1315">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the available message queues.</span></span></param>
        <summary><span data-ttu-id="b509c-1316">앞으로만 이동 가능한 커서 의미 체계 기능 제공하여 네트워크에 있는 공개 큐 중 지정된 기준을 만족하는 큐를 모두 열거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1316">Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="b509c-1317">네트워크에 있는 공개 메시지 큐 중 <paramref name="criteria" /> 매개 변수가 지정한 제한 사항을 만족시키는 큐에 대한 동적 목록을 제공하는 <see cref="T:System.Messaging.MessageQueueEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1317">A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <paramref name="criteria" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1318">이 오버 로드 <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> 응용 프로그램 조건에 정의 된 조건을 충족 하는 네트워크에 있는 모든 공개 큐의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1318">This overload of <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> returns a listing of all the public queues on the network that satisfy criteria defined in the application criteria.</span></span> <span data-ttu-id="b509c-1319">를 포함 하는 조건을 작성 또는 수정 시간, 컴퓨터 이름, 레이블, 범주 또는 이러한 조건의 조합을 예를 들어, 큐를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1319">You can specify the criteria to include, for example, queue creation or modification time, computer name, label, category, or any combination of these.</span></span>  
  
 <span data-ttu-id="b509c-1320">커서와 동적 목록과 사용 하 여 연결 된 있으므로 열거형에는 커서의 현재 위치 뒤에 발생 하는 큐에 대 한 수정 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1320">Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue that occurs beyond the cursor's current position.</span></span> <span data-ttu-id="b509c-1321">커서의 현재 위치 앞에 있는 큐에 변경 내용이 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1321">Changes to queues located before the cursor's current position are not reflected.</span></span> <span data-ttu-id="b509c-1322">예를 들어, 열거자의 커서 위치 뒤에 추가 큐 있지만 아닌 해당 위치 앞에 삽입에 자동으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1322">For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</span></span> <span data-ttu-id="b509c-1323">그러나 다시 설정할 수 있습니다 열거형 하므로 커서를 다시 목록의 시작 부분에 호출 하 여 이동 <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> 에 대 한는 <xref:System.Messaging.MessageQueueEnumerator>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1323">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> for the <xref:System.Messaging.MessageQueueEnumerator>.</span></span>  
  
 <span data-ttu-id="b509c-1324">네트워크에서 큐의 정의 된 순서가 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1324">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="b509c-1325">열거자 정렬 되지 않은, 예를 들어, 컴퓨터, 레이블, 공용 또는 개인 상태 또는 기타 액세스 가능한 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1325">An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</span></span>  
  
 <span data-ttu-id="b509c-1326">동적 연결을 보다는 네트워크에 있는 큐의 정적 스냅숏을 원한다 면에 조건을 지정 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 호출 또는 <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1326">If you want a static snapshot of the queues on the network rather than a dynamic connection to them, specify criteria for <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> or call <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>.</span></span> <span data-ttu-id="b509c-1327">이러한 두 메서드는 각각의 배열을 반환 <xref:System.Messaging.MessageQueue> 메서드가 호출 된 시간에 큐를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1327">Each of these two methods returns an array of <xref:System.Messaging.MessageQueue> objects, which represent the queues at the time the method was called.</span></span> <span data-ttu-id="b509c-1328">호출 <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, 또는 <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> 호출할 때와 동일한 결과 제공 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 의 필터링 조건을 사용 하 여 <xref:System.Messaging.MessageQueue.Category%2A>를 <xref:System.Messaging.MessageQueue.Label%2A>, 및 <xref:System.Messaging.MessageQueue.MachineName%2A>, 각각.</span><span class="sxs-lookup"><span data-stu-id="b509c-1328">Calling <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, or <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> provides the same results as calling <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> with the filtering criteria of <xref:System.Messaging.MessageQueue.Category%2A>, <xref:System.Messaging.MessageQueue.Label%2A>, and <xref:System.Messaging.MessageQueue.MachineName%2A>, respectively.</span></span>  
  
 <span data-ttu-id="b509c-1329">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1329">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1330">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1330">Workgroup mode</span></span>|<span data-ttu-id="b509c-1331">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1331">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1332">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1332">Local computer</span></span>|<span data-ttu-id="b509c-1333">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1333">No</span></span>|  
|<span data-ttu-id="b509c-1334">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1334">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1335">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1335">No</span></span>|  
|<span data-ttu-id="b509c-1336">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1336">Remote computer</span></span>|<span data-ttu-id="b509c-1337">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1337">No</span></span>|  
|<span data-ttu-id="b509c-1338">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1338">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1339">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1339">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1340">다음 코드 예제에서는 메시지 큐를 통해 반복 하 고 "MyComputer" 컴퓨터에 있는 마지막 날에 생성 된 각 큐의 경로 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1340">The following code example iterates through message queues and displays the path of each queue that was created in the last day and that exists on the computer "MyComputer".</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CPP/mqgetmessagequeueenumerator_criteria.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CS/mqgetmessagequeueenumerator_criteria.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/VB/mqgetmessagequeueenumerator_criteria.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetPrivateQueuesByMachine">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPrivateQueuesByMachine (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPrivateQueuesByMachine(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPrivateQueuesByMachine (machineName As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPrivateQueuesByMachine(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetPrivateQueuesByMachine : string -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPrivateQueuesByMachine machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="b509c-1341">개인 큐를 검색할 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1341">The computer from which to retrieve the private queues.</span></span></param>
        <summary><span data-ttu-id="b509c-1342">지정된 컴퓨터에 있는 개인 큐를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1342">Retrieves all the private queues on the specified computer.</span></span></summary>
        <returns><span data-ttu-id="b509c-1343">검색된 개인 큐를 참조하는 <see cref="T:System.Messaging.MessageQueue" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1343">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved private queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1344"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> 지정한 컴퓨터에 있는 큐의 정적 스냅숏을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1344"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> retrieves a static snapshot of the queues on a specified computer.</span></span>  
  
 <span data-ttu-id="b509c-1345">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1345">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1346">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1346">Workgroup mode</span></span>|<span data-ttu-id="b509c-1347">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1347">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1348">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1348">Local computer</span></span>|<span data-ttu-id="b509c-1349">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1349">Yes</span></span>|  
|<span data-ttu-id="b509c-1350">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1350">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1351">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1351">Yes</span></span>|  
|<span data-ttu-id="b509c-1352">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1352">Remote computer</span></span>|<span data-ttu-id="b509c-1353">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1353">Yes</span></span>|  
|<span data-ttu-id="b509c-1354">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1354">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1355">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1355">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1356">다음 코드 예제에서는 큐 목록을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1356">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1357"><paramref name="machineName" /> 매개 변수가 <see langword="null" />이거나 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1357">The <paramref name="machineName" /> parameter is <see langword="null" /> or an empty string ("").</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1358">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1358">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPublicQueues">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-1359">네트워크에 있는 공개 큐를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1359">Retrieves all the public queues on the network.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPublicQueues">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueues ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueues" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueues () As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueues();" />
      <MemberSignature Language="F#" Value="static member GetPublicQueues : unit -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1360">네트워크에 있는 공개 큐를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1360">Retrieves all the public queues on the network.</span></span></summary>
        <returns><span data-ttu-id="b509c-1361">검색된 공개 큐를 참조하는 <see cref="T:System.Messaging.MessageQueue" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1361">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1362">네트워크에 있는 모든 공개 큐의 전체 목록을 원하는 경우이 오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1362">Use this overload if you want a complete list of all the public queues on the network.</span></span> <span data-ttu-id="b509c-1363">와 같은 특정 조건을 기준으로 목록을 제한 하려는 경우 <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, 또는이 메서드의 다른 오버 로드를 사용 하는 마지막으로 수정한 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1363">If you want to restrict the list by certain criteria, such as <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, or last modified time use another overload of this method.</span></span> <span data-ttu-id="b509c-1364">(사용할 수 있습니다 <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>하십시오 <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, 또는 <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>.)</span><span class="sxs-lookup"><span data-stu-id="b509c-1364">(Alternatively, you can use <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, or <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>.)</span></span>  
  
 <span data-ttu-id="b509c-1365"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 큐의 정적 스냅숏을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1365"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="b509c-1366">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1366">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span>  
  
 <span data-ttu-id="b509c-1367">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1367">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1368">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1368">Workgroup mode</span></span>|<span data-ttu-id="b509c-1369">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1369">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1370">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1370">Local computer</span></span>|<span data-ttu-id="b509c-1371">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1371">No</span></span>|  
|<span data-ttu-id="b509c-1372">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1372">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1373">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1373">No</span></span>|  
|<span data-ttu-id="b509c-1374">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1374">Remote computer</span></span>|<span data-ttu-id="b509c-1375">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1375">No</span></span>|  
|<span data-ttu-id="b509c-1376">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1376">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1377">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1377">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1378">다음 코드 예제에서는 큐 목록을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1378">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1379">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1379">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueues">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueues (System.Messaging.MessageQueueCriteria criteria);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueues(class System.Messaging.MessageQueueCriteria criteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueues (criteria As MessageQueueCriteria) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueues(System::Messaging::MessageQueueCriteria ^ criteria);" />
      <MemberSignature Language="F#" Value="static member GetPublicQueues : System.Messaging.MessageQueueCriteria -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueues criteria" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.Messaging.MessageQueueCriteria" />
      </Parameters>
      <Docs>
        <param name="criteria"><span data-ttu-id="b509c-1380">큐를 필터링하는 데 사용되는 기준이 포함된 <see cref="T:System.Messaging.MessageQueueCriteria" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1380">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the queues.</span></span></param>
        <summary><span data-ttu-id="b509c-1381">네트워크에 있는 공개 큐 중 지정된 기준을 만족시키는 큐를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1381">Retrieves all the public queues on the network that meet the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="b509c-1382">검색된 공개 큐를 참조하는 <see cref="T:System.Messaging.MessageQueue" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1382">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1383">레이블, 범주 또는 컴퓨터 이름으로 네트워크에 있는 모든 공개 큐를 필터링 하려는 경우는 <xref:System.Messaging.MessageQueue> 해당 기능을 제공 하는 특정 메서드를 포함 하는 클래스 (<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>를 <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, 및 <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>각각).</span><span class="sxs-lookup"><span data-stu-id="b509c-1383">If you want to filter all the public queues on the network by label, category, or computer name, the <xref:System.Messaging.MessageQueue> class contains specific methods that provide that functionality (<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, and <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>, respectively).</span></span> <span data-ttu-id="b509c-1384">이 오버 로드를 사용 하 여 (예를 들어, 하려는 경우 레이블을 범주를 지정 합니다.) 이러한 조건 중 하나 이상 충족 하는 네트워크에서 공개 큐를 모든 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1384">Use this overload to get a list of all the public queues on the network that meet more than one of these criteria (for example, if you want to specify both a label and a category).</span></span> <span data-ttu-id="b509c-1385">필터링 할 수도 있습니다 메시지 조건으로 이외의 <xref:System.Messaging.MessageQueue.Label%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, 및 <xref:System.Messaging.MessageQueue.MachineName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1385">You can also filter by message criteria other than <xref:System.Messaging.MessageQueue.Label%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, and <xref:System.Messaging.MessageQueue.MachineName%2A>.</span></span> <span data-ttu-id="b509c-1386">예를 들어 큐의 마지막 수정 시간을 기준으로 필터링 하려면이 오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1386">For example, you use this overload to filter by a queue's last-modified time.</span></span> <span data-ttu-id="b509c-1387">새 인스턴스를 만들기만 하면 됩니다 합니다 <xref:System.Messaging.MessageQueueCriteria> 클래스 인스턴스의 적절 한 속성을 설정 하 고로 인스턴스를 전달 합니다 `criteria` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1387">Simply create a new instance of the <xref:System.Messaging.MessageQueueCriteria> class, set the appropriate properties in the instance, and pass the instance as the `criteria` parameter.</span></span>  
  
 <span data-ttu-id="b509c-1388"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 큐의 정적 스냅숏을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1388"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="b509c-1389">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1389">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span>  
  
 <span data-ttu-id="b509c-1390">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1390">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1391">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1391">Workgroup mode</span></span>|<span data-ttu-id="b509c-1392">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1392">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1393">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1393">Local computer</span></span>|<span data-ttu-id="b509c-1394">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1394">No</span></span>|  
|<span data-ttu-id="b509c-1395">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1395">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1396">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1396">No</span></span>|  
|<span data-ttu-id="b509c-1397">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1397">Remote computer</span></span>|<span data-ttu-id="b509c-1398">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1398">No</span></span>|  
|<span data-ttu-id="b509c-1399">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1399">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1400">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1400">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1401">다음 코드 예제에서는 큐 목록을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1401">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1402">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1402">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueCriteria" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByCategory">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByCategory (Guid category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByCategory(valuetype System.Guid category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByCategory (category As Guid) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByCategory(Guid category);" />
      <MemberSignature Language="F#" Value="static member GetPublicQueuesByCategory : Guid -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueuesByCategory category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="b509c-1403">검색할 큐 집합을 그룹화하는 <see cref="T:System.Guid" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1403">A <see cref="T:System.Guid" /> that groups the set of queues to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b509c-1404">네트워크에 있는 공개 큐 중 지정된 범주에 속한 큐를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1404">Retrieves all the public queues on the network that belong to the specified category.</span></span></summary>
        <returns><span data-ttu-id="b509c-1405">검색된 공개 큐를 참조하는 <see cref="T:System.Messaging.MessageQueue" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1405">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1406">이 메서드를 사용 하 여 범주별으로 공개 큐를 필터링 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1406">Use this method to filter the public queues by category.</span></span> <span data-ttu-id="b509c-1407"><xref:System.Messaging.MessageQueue.Category%2A> 속성은 메시지 큐 형식의 ID 속성 (즉, 읽기/쓰기) 특정 큐에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1407">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type ID property (which is read/write) of a particular queue.</span></span> <span data-ttu-id="b509c-1408">사용할 수 있지만 <xref:System.Guid.NewGuid%2A> 는 모든 고유 범주 값을 만들려면 <xref:System.Guid> 값 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1408">Although you can use <xref:System.Guid.NewGuid%2A> to create a category value that is unique across all <xref:System.Guid> values, it is not necessary.</span></span> <span data-ttu-id="b509c-1409">범주 값이 제거 되지 않은 다른 모든 다른 범주에만 구별 되도록 <xref:System.Guid> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1409">The category value needs to be distinct only from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="b509c-1410">예를 들어, 할당할 수 있습니다 {00000000-0000-0000-0000-000000000001} 으로 <xref:System.Messaging.MessageQueue.Category%2A> 큐 집합이 하나에 대 한 및 {00000000-0000-0000-0000-000000000002} 로 <xref:System.Messaging.MessageQueue.Category%2A> 다른 집합에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1410">For example, you can assign {00000000-0000-0000-0000-000000000001} as the <xref:System.Messaging.MessageQueue.Category%2A> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <xref:System.Messaging.MessageQueue.Category%2A> for another set.</span></span>  
  
 <span data-ttu-id="b509c-1411"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29> 큐의 정적 스냅숏을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1411"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="b509c-1412">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1412">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="b509c-1413">일부로 범주를 지정할 수 있습니다는 <xref:System.Messaging.MessageQueueCriteria> 메서드로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1413">You can specify the category as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="b509c-1414">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1414">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1415">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1415">Workgroup mode</span></span>|<span data-ttu-id="b509c-1416">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1416">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1417">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1417">Local computer</span></span>|<span data-ttu-id="b509c-1418">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1418">No</span></span>|  
|<span data-ttu-id="b509c-1419">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1419">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1420">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1420">No</span></span>|  
|<span data-ttu-id="b509c-1421">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1421">Remote computer</span></span>|<span data-ttu-id="b509c-1422">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1422">No</span></span>|  
|<span data-ttu-id="b509c-1423">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1423">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1424">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1424">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1425">다음 코드 예제에서는 큐 목록을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1425">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1426">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1426">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByLabel">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByLabel (string label);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByLabel(string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByLabel (label As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByLabel(System::String ^ label);" />
      <MemberSignature Language="F#" Value="static member GetPublicQueuesByLabel : string -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueuesByLabel label" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label"><span data-ttu-id="b509c-1427">검색할 큐 집합을 그룹화하는 레이블입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1427">A label that groups the set of queues to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b509c-1428">네트워크에 있는 공개 큐 중 지정된 레이블이 있는 큐를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1428">Retrieves all the public queues on the network that carry the specified label.</span></span></summary>
        <returns><span data-ttu-id="b509c-1429">검색된 공개 큐를 참조하는 <see cref="T:System.Messaging.MessageQueue" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1429">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1430">레이블에 의해 공개 큐를 필터링 하려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1430">Use this method to filter the public queues by label.</span></span>  
  
 <span data-ttu-id="b509c-1431"><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> 큐의 정적 스냅숏을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1431"><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="b509c-1432">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1432">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="b509c-1433">일부분으로 레이블을 지정할 수 있습니다는 <xref:System.Messaging.MessageQueueCriteria> 메서드로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1433">You can specify the label as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="b509c-1434">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1434">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1435">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1435">Workgroup mode</span></span>|<span data-ttu-id="b509c-1436">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1436">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1437">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1437">Local computer</span></span>|<span data-ttu-id="b509c-1438">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1438">No</span></span>|  
|<span data-ttu-id="b509c-1439">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1439">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1440">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1440">No</span></span>|  
|<span data-ttu-id="b509c-1441">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1441">Remote computer</span></span>|<span data-ttu-id="b509c-1442">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1442">No</span></span>|  
|<span data-ttu-id="b509c-1443">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1443">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1444">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1444">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1445">다음 코드 예제에서는 큐 목록을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1445">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1446">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1446">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-1447"><paramref name="label" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1447">The <paramref name="label" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByMachine">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByMachine (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByMachine(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByMachine (machineName As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByMachine(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetPublicQueuesByMachine : string -&gt; System.Messaging.MessageQueue[]" Usage="System.Messaging.MessageQueue.GetPublicQueuesByMachine machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="b509c-1448">검색할 공개 큐 집합을 포함하는 컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1448">The name of the computer that contains the set of public queues to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b509c-1449">지정된 컴퓨터에 있는 공개 큐를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1449">Retrieves all the public queues that reside on the specified computer.</span></span></summary>
        <returns><span data-ttu-id="b509c-1450">컴퓨터에 있는 공개 큐를 참조하는 <see cref="T:System.Messaging.MessageQueue" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1450">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the public queues on the computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1451">이 메서드를 사용 하 여 컴퓨터에서 공개 큐를 필터링 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1451">Use this method to filter the public queues by computer.</span></span>  
  
 <span data-ttu-id="b509c-1452"><xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> 큐의 정적 스냅숏을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1452"><xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="b509c-1453">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1453">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="b509c-1454">일부로 컴퓨터 이름을 지정할 수 있습니다는 <xref:System.Messaging.MessageQueueCriteria> 메서드로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1454">You can specify the computer name as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="b509c-1455">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1455">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1456">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1456">Workgroup mode</span></span>|<span data-ttu-id="b509c-1457">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1457">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1458">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1458">Local computer</span></span>|<span data-ttu-id="b509c-1459">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1459">No</span></span>|  
|<span data-ttu-id="b509c-1460">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1460">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1461">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1461">No</span></span>|  
|<span data-ttu-id="b509c-1462">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1462">Remote computer</span></span>|<span data-ttu-id="b509c-1463">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1463">No</span></span>|  
|<span data-ttu-id="b509c-1464">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1464">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1465">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1465">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1466">다음 코드 예제에서는 큐 목록을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1466">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1467"><paramref name="machineName" /> 매개 변수의 구문이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1467">The <paramref name="machineName" /> parameter has incorrect syntax.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1468">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1468">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityContext">
      <MemberSignature Language="C#" Value="public static System.Messaging.SecurityContext GetSecurityContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.SecurityContext GetSecurityContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSecurityContext () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::SecurityContext ^ GetSecurityContext();" />
      <MemberSignature Language="F#" Value="static member GetSecurityContext : unit -&gt; System.Messaging.SecurityContext" Usage="System.Messaging.MessageQueue.GetSecurityContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1469">이 호출 시 MSMQ가 현재 사용자(스레드 ID)와 연결된 보안 컨텍스트를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1469">Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</span></span></summary>
        <returns><span data-ttu-id="b509c-1470">보안 컨텍스트를 포함하는 <see cref="T:System.Messaging.SecurityContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1470">A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Messaging.Message.SecurityContext" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Messaging.MessageQueue.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_GuidId")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1471">큐의 고유한 메시지 큐 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1471">Gets the unique Message Queuing identifier of the queue.</span></span></summary>
        <value><span data-ttu-id="b509c-1472">메시지 큐 응용 프로그램에 의해 생성된 메시지 식별자를 나타내는 <see cref="P:System.Messaging.MessageQueue.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1472">A <see cref="P:System.Messaging.MessageQueue.Id" /> that represents the message identifier generated by the Message Queuing application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1473">메시지 큐는 <xref:System.Messaging.MessageQueue.Id%2A> 큐를 만들 때 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1473">Message Queuing sets the <xref:System.Messaging.MessageQueue.Id%2A> property when it creates the queue.</span></span> <span data-ttu-id="b509c-1474">이 속성은 공개 큐에 사용할 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1474">This property is only available for public queues.</span></span>  
  
 <span data-ttu-id="b509c-1475">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1475">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1476">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1476">Workgroup mode</span></span>|<span data-ttu-id="b509c-1477">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1477">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1478">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1478">Local computer</span></span>|<span data-ttu-id="b509c-1479">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1479">Yes</span></span>|  
|<span data-ttu-id="b509c-1480">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1480">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1481">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1481">Yes</span></span>|  
|<span data-ttu-id="b509c-1482">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1482">Remote computer</span></span>|<span data-ttu-id="b509c-1483">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1483">No</span></span>|  
|<span data-ttu-id="b509c-1484">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1484">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1485">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1485">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1486">다음 코드 예제에서는 메시지 큐의 값을 표시 <xref:System.Messaging.MessageQueue.Id%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1486">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.Id%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#15](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1487">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1487">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteQueueSize">
      <MemberSignature Language="C#" Value="public static readonly long InfiniteQueueSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 InfiniteQueueSize" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteQueueSize As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long InfiniteQueueSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteQueueSize : int64" Usage="System.Messaging.MessageQueue.InfiniteQueueSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1488">큐에 크기 제한이 없도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1488">Specifies that no size restriction exists for a queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1489">이 멤버는 설정할 때 자주 사용 됩니다 <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> 또는 <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1489">This member is frequently used when setting <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> or <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1490">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.InfiniteQueueSize> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1490">The following code example demonstrates the use of the <xref:System.Messaging.MessageQueue.InfiniteQueueSize> member.</span></span>  
  
 [!code-csharp[MessageQueue#16](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueue.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteTimeout : TimeSpan" Usage="System.Messaging.MessageQueue.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1491">메시지를 피킹하거나 받는 메서드에 시간 제한이 없도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1491">Specifies that no time-out exists for methods that peek or receive messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1492"><xref:System.Messaging.MessageQueue> 두 가지 유형의 메시지 검색을 지원 합니다: 동기 및 비동기입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1492"><xref:System.Messaging.MessageQueue> supports two types of message retrieval: synchronous and asynchronous.</span></span> <span data-ttu-id="b509c-1493">동기 메서드인 <xref:System.Messaging.MessageQueue.Peek%2A> 및 <xref:System.Messaging.MessageQueue.Receive%2A>, 프로세스 스레드가 큐에 도착 하는 새 메시지에 대해 지정 된 시간 간격을 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1493">The synchronous methods, <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.Receive%2A>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-1494">지정 된 시간 간격이 <xref:System.Messaging.MessageQueue.InfiniteTimeout>, 새 메시지가 있을 때까지 프로세스 스레드가 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1494">If the specified time interval is <xref:System.Messaging.MessageQueue.InfiniteTimeout>, the process thread remains blocked until a new message is available.</span></span> <span data-ttu-id="b509c-1495">다른 한편 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 고 <xref:System.Messaging.MessageQueue.BeginReceive%2A> (비동기 메서드), 기본 응용 프로그램 작업을 큐에 메시지가 도착할 때까지 별도 스레드에서 계속 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1495">On the other hand, <xref:System.Messaging.MessageQueue.BeginPeek%2A> and <xref:System.Messaging.MessageQueue.BeginReceive%2A> (the asynchronous methods), allow the main application tasks to continue in a separate thread until a message arrives in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1496">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1496">The following code example demonstrates the use of the <xref:System.Messaging.MessageQueue.InfiniteTimeout> member.</span></span>  
  
 [!code-csharp[MessageQueue#17](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueue.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Label")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1497">큐 설명을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1497">Gets or sets the queue description.</span></span></summary>
        <value><span data-ttu-id="b509c-1498">메시지 큐의 레이블입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1498">The label for the message queue.</span></span> <span data-ttu-id="b509c-1499">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1499">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1500">메시지 큐 레이블의 최대 길이 124 자입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1500">The maximum length of a message queue label is 124 characters.</span></span>  
  
 <span data-ttu-id="b509c-1501"><xref:System.Messaging.MessageQueue.Label%2A> 속성이 모든 큐에서 고유할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1501">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across all queues.</span></span> <span data-ttu-id="b509c-1502">그러나 동일한 여러 큐를 공유 하는 경우 <xref:System.Messaging.MessageQueue.Label%2A>를 사용할 수 없습니다는 <xref:System.Messaging.MessageQueue.Send%28System.Object%29> 이들 모두에 메시지를 브로드캐스팅하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1502">However, if multiple queues share the same <xref:System.Messaging.MessageQueue.Label%2A>, you cannot use the <xref:System.Messaging.MessageQueue.Send%28System.Object%29> method to broadcast a message to all of them.</span></span> <span data-ttu-id="b509c-1503">레이블 구문을 사용 하는 경우는 <xref:System.Messaging.MessageQueue.Path%2A> 메시지를 보낼 때 속성에는 예외가 발생 하는 경우는 <xref:System.Messaging.MessageQueue.Label%2A> 고유 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1503">If you use the label syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property when you send the message, an exception will be thrown if the <xref:System.Messaging.MessageQueue.Label%2A> is not unique.</span></span>  
  
 <span data-ttu-id="b509c-1504">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1504">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1505">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1505">Workgroup mode</span></span>|<span data-ttu-id="b509c-1506">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1506">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1507">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1507">Local computer</span></span>|<span data-ttu-id="b509c-1508">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1508">Yes</span></span>|  
|<span data-ttu-id="b509c-1509">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1509">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1510">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1510">Yes</span></span>|  
|<span data-ttu-id="b509c-1511">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1511">Remote computer</span></span>|<span data-ttu-id="b509c-1512">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1512">No</span></span>|  
|<span data-ttu-id="b509c-1513">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1513">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1514">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1514">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1515">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.Label%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1515">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Label%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#18](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1516">레이블이 잘못된 값으로 설정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1516">The label was set to an invalid value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1517">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1517">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LastModifyTime">
      <MemberSignature Language="C#" Value="public DateTime LastModifyTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastModifyTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.LastModifyTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastModifyTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastModifyTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModifyTime : DateTime" Usage="System.Messaging.MessageQueue.LastModifyTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_LastModifyTime")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1518">큐의 속성이 마지막으로 수정된 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1518">Gets the last time the properties of a queue were modified.</span></span></summary>
        <value><span data-ttu-id="b509c-1519">큐의 속성이 마지막으로 수정된 시간을 알려주는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1519">A <see cref="T:System.DateTime" /> that indicates when the queue properties were last modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1520">큐를 만들 때 마지막으로 수정한 시간 포함 임의의 <xref:System.Messaging.MessageQueue> 와 같은 메시지 큐를 수정 하는 속성 <xref:System.Messaging.MessageQueue.BasePriority%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1520">The last modification time includes when the queue was created and any <xref:System.Messaging.MessageQueue> property that modifies the Message Queuing queue, such as <xref:System.Messaging.MessageQueue.BasePriority%2A>.</span></span> <span data-ttu-id="b509c-1521">값을 <xref:System.Messaging.MessageQueue.LastModifyTime%2A> 속성 로컬 컴퓨터의 시스템 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1521">The value of the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property represents the system time of the local computer.</span></span>  
  
 <span data-ttu-id="b509c-1522">호출 해야 합니다 <xref:System.Messaging.MessageQueue.Refresh%2A> 시작 하기 전에 <xref:System.Messaging.MessageQueue.LastModifyTime%2A> 속성 수정에를 사용 하 여 연결 하는 고, 그렇지 <xref:System.Messaging.MessageQueue> 현재 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1522">You must call <xref:System.Messaging.MessageQueue.Refresh%2A> before getting the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property; otherwise, the modification time associated with this <xref:System.Messaging.MessageQueue> might not be current.</span></span>  
  
 <span data-ttu-id="b509c-1523">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1523">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1524">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1524">Workgroup mode</span></span>|<span data-ttu-id="b509c-1525">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1525">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1526">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1526">Local computer</span></span>|<span data-ttu-id="b509c-1527">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1527">Yes</span></span>|  
|<span data-ttu-id="b509c-1528">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1528">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1529">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1529">Yes</span></span>|  
|<span data-ttu-id="b509c-1530">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1530">Remote computer</span></span>|<span data-ttu-id="b509c-1531">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1531">No</span></span>|  
|<span data-ttu-id="b509c-1532">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1532">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1533">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1533">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1534">다음 코드 예제에서는 메시지 큐의 값을 표시 <xref:System.Messaging.MessageQueue.LastModifyTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1534">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#19](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1535">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1535">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
        <altmember cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Messaging.MessageQueue.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MachineName")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1536">메시지 큐가 있는 컴퓨터의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1536">Gets or sets the name of the computer where the Message Queuing queue is located.</span></span></summary>
        <value><span data-ttu-id="b509c-1537">큐가 있는 컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1537">The name of the computer where the queue is located.</span></span> <span data-ttu-id="b509c-1538">메시지 큐의 기본값은 "."이며, 이는 로컬 컴퓨터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1538">The Message Queuing default is ".", the local computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1539">합니다 <xref:System.Messaging.MessageQueue.MachineName%2A> 큐의 이름 구문 필수 구성 요소인 <xref:System.Messaging.MessageQueue.Path%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1539">The <xref:System.Messaging.MessageQueue.MachineName%2A> is an integral component of the friendly name syntax of the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="b509c-1540">다음 표에서 해당 이름을 사용 하 여 큐 경로 식별 하려는 경우 지정 된 형식의 큐에 대 한 사용 해야 하는 구문을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1540">The following table shows the syntax you should use for a queue of a specified type when you want to identify the queue path using its friendly name.</span></span>  
  
|<span data-ttu-id="b509c-1541">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-1541">Queue type</span></span>|<span data-ttu-id="b509c-1542">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-1542">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-1543">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1543">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="b509c-1544">개인 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1544">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="b509c-1545">저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1545">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="b509c-1546">컴퓨터 저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1546">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="b509c-1547">컴퓨터 배달 못 한 편지 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1547">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="b509c-1548">컴퓨터 트랜잭션 배달 못 한 편지 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1548">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="b509c-1549">사용 하 여 "."를 지정할 때 로컬 컴퓨터에 대 한는 <xref:System.Messaging.MessageQueue.MachineName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1549">Use "." for the local computer when specifying the <xref:System.Messaging.MessageQueue.MachineName%2A>.</span></span> <span data-ttu-id="b509c-1550">컴퓨터 이름에만이 속성에 대 한 예를 들어 인식 `Server0`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1550">Only the computer name is recognized for this property, for example, `Server0`.</span></span> <span data-ttu-id="b509c-1551"><xref:System.Messaging.MessageQueue.MachineName%2A> 속성 IP 주소 형식은 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1551">The <xref:System.Messaging.MessageQueue.MachineName%2A> property does not support the IP address format.</span></span>  
  
 <span data-ttu-id="b509c-1552">정의 하는 경우는 <xref:System.Messaging.MessageQueue.Path%2A> 의 측면에서 <xref:System.Messaging.MessageQueue.MachineName%2A>, 응용 프로그램 도메인 컨트롤러는 경로 변환에 대 한 필수 사항 이므로 오프 라인으로 작업 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1552">If you define the <xref:System.Messaging.MessageQueue.Path%2A> in terms of the <xref:System.Messaging.MessageQueue.MachineName%2A>, the application throws an exception when working offline because the domain controller is required for path translation.</span></span> <span data-ttu-id="b509c-1553">따라서 사용 해야 합니다는 <xref:System.Messaging.MessageQueue.FormatName%2A> 에 대 한는 <xref:System.Messaging.MessageQueue.Path%2A> 오프 라인으로 작업 하는 경우에 구문이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1553">Therefore, you must use the <xref:System.Messaging.MessageQueue.FormatName%2A> for the <xref:System.Messaging.MessageQueue.Path%2A> syntax when working offline.</span></span>  
  
 <span data-ttu-id="b509c-1554"><xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, 및 <xref:System.Messaging.MessageQueue.QueueName%2A> 속성 관련 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1554">The <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, and <xref:System.Messaging.MessageQueue.QueueName%2A> properties are related.</span></span> <span data-ttu-id="b509c-1555">변경 된 <xref:System.Messaging.MessageQueue.MachineName%2A> 속성 원인의 <xref:System.Messaging.MessageQueue.Path%2A> 변경할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1555">Changing the <xref:System.Messaging.MessageQueue.MachineName%2A> property causes the <xref:System.Messaging.MessageQueue.Path%2A> property to change.</span></span> <span data-ttu-id="b509c-1556">새에서 빌드되어 <xref:System.Messaging.MessageQueue.MachineName%2A> 하며 <xref:System.Messaging.MessageQueue.QueueName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1556">It is built from the new <xref:System.Messaging.MessageQueue.MachineName%2A> and the <xref:System.Messaging.MessageQueue.QueueName%2A>.</span></span> <span data-ttu-id="b509c-1557">변경 합니다 <xref:System.Messaging.MessageQueue.Path%2A> (예: 형식 이름 구문을 사용 하 여) 다시 설정 합니다 <xref:System.Messaging.MessageQueue.MachineName%2A> 및 <xref:System.Messaging.MessageQueue.QueueName%2A> 새 큐를 참조 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1557">Changing the <xref:System.Messaging.MessageQueue.Path%2A> (for example, to use the format name syntax) resets the <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties to refer to the new queue.</span></span> <span data-ttu-id="b509c-1558">경우는 <xref:System.Messaging.MessageQueue.QueueName%2A> 속성이 비어 있으면는 <xref:System.Messaging.MessageQueue.Path%2A> 지정할 컴퓨터의 업무 일지 큐에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1558">If the <xref:System.Messaging.MessageQueue.QueueName%2A> property is empty, the <xref:System.Messaging.MessageQueue.Path%2A> is set to the Journal queue of the computer you specify.</span></span>  
  
 <span data-ttu-id="b509c-1559">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1559">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1560">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1560">Workgroup mode</span></span>|<span data-ttu-id="b509c-1561">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1561">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1562">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1562">Local computer</span></span>|<span data-ttu-id="b509c-1563">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1563">Yes</span></span>|  
|<span data-ttu-id="b509c-1564">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1564">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1565">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1565">Yes</span></span>|  
|<span data-ttu-id="b509c-1566">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1566">Remote computer</span></span>|<span data-ttu-id="b509c-1567">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1567">Yes</span></span>|  
|<span data-ttu-id="b509c-1568">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1568">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1569">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1569">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1570">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.MachineName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1570">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MachineName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#20](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1571"><see cref="P:System.Messaging.MessageQueue.MachineName" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1571">The <see cref="P:System.Messaging.MessageQueue.MachineName" /> is <see langword="null" />.</span></span>        
<span data-ttu-id="b509c-1572">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-1572">-or-</span></span>

<span data-ttu-id="b509c-1573">컴퓨터 이름이 잘못되었습니다(예: 구문이 잘못된 경우).</span><span class="sxs-lookup"><span data-stu-id="b509c-1573">The name of the computer is not valid, possibly because the syntax is incorrect.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1574">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1574">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueue.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MaximumJournalSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1575">업무 일지 큐의 최대 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1575">Gets or sets the maximum size of the journal queue.</span></span></summary>
        <value><span data-ttu-id="b509c-1576">업무 일지 큐의 최대 크기입니다(단위: KB).</span><span class="sxs-lookup"><span data-stu-id="b509c-1576">The maximum size, in kilobytes, of the journal queue.</span></span> <span data-ttu-id="b509c-1577">메시지 큐에서는 기본적으로 제한이 없도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1577">The Message Queuing default specifies that no limit exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1578"><xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> 메시지 큐 저널 저장소 제한에 대 한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1578"><xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> provides access to the Message Queuing journal storage limit.</span></span> <span data-ttu-id="b509c-1579">인 경우에만 관련 <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1579">It is relevant only when <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> is `true`.</span></span> <span data-ttu-id="b509c-1580">메시지 큐를 수정이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1580">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="b509c-1581">따라서 다른 <xref:System.Messaging.MessageQueue> 인스턴스는 변경 내용의 영향</span><span class="sxs-lookup"><span data-stu-id="b509c-1581">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change</span></span>  
  
 <span data-ttu-id="b509c-1582">저널 또는 배달 못 한 편지 큐에서 메시지를 저장 하는 경우 정기적으로 큐에서 더 이상 필요 없는 메시지를 제거 하려면을 지워야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1582">If you store messages in a journal or dead-letter queue, you should periodically clear the queue to remove messages that are no longer needed.</span></span> <span data-ttu-id="b509c-1583">이러한 큐의 메시지 큐가 있는 컴퓨터에 대 한 메시지 할당량에 대해 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1583">Messages in such a queue count toward the message quota for the computer where the queue resides.</span></span> <span data-ttu-id="b509c-1584">(관리자 컴퓨터 할당량을 설정 합니다.)</span><span class="sxs-lookup"><span data-stu-id="b509c-1584">(The administrator sets the computer quota.)</span></span>  
  
 <span data-ttu-id="b509c-1585">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1585">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1586">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1586">Workgroup mode</span></span>|<span data-ttu-id="b509c-1587">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1587">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1588">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1588">Local computer</span></span>|<span data-ttu-id="b509c-1589">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1589">Yes</span></span>|  
|<span data-ttu-id="b509c-1590">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1590">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1591">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1591">Yes</span></span>|  
|<span data-ttu-id="b509c-1592">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1592">Remote computer</span></span>|<span data-ttu-id="b509c-1593">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1593">No</span></span>|  
|<span data-ttu-id="b509c-1594">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1594">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1595">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1595">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1596">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1596">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#21](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1597">업무 일지 큐의 최대 크기가 잘못된 값으로 설정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1597">The maximum journal queue size was set to an invalid value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1598">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1598">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumQueueSize" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueue.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MaximumQueueSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1599">큐의 최대 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1599">Gets or sets the maximum size of the queue.</span></span></summary>
        <value><span data-ttu-id="b509c-1600">큐의 최대 크기입니다(단위: KB).</span><span class="sxs-lookup"><span data-stu-id="b509c-1600">The maximum size, in kilobytes, of the queue.</span></span> <span data-ttu-id="b509c-1601">메시지 큐에서는 기본적으로 제한이 없도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1601">The Message Queuing default specifies that no limit exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1602"><xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> 는 메시지 큐 메시지 저장소 한도 관리자를 정의 하는 컴퓨터의 메시지 할당량을 별도로에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1602">The <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> provides access to the Message Queuing message storage limit, which is separate from the computer's message quota that the administrator defines.</span></span> <span data-ttu-id="b509c-1603">메시지 할당량에 대 한 자세한 내용은 참조 하세요. <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1603">For more information about the message quota, see <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>.</span></span>  
  
 <span data-ttu-id="b509c-1604">메시지 큐를 수정이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1604">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="b509c-1605">따라서 다른 <xref:System.Messaging.MessageQueue> 인스턴스는 변경 내용의 영향</span><span class="sxs-lookup"><span data-stu-id="b509c-1605">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change</span></span>  
  
 <span data-ttu-id="b509c-1606">최대 큐 크기 또는 컴퓨터 메시지 할당량을 초과 하려고 하는 경우 메시지가 손실 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1606">If an attempt is made to exceed either the maximum queue size or the computer message quota, messages might be lost.</span></span> <span data-ttu-id="b509c-1607">큐 할당량에 도달 하면 메시지 큐는 부정 승인 메시지를 반환 하 여 큐가 꽉 차면를 보내는 응용 프로그램의 관리 큐를 알립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1607">When the queue quota is reached, Message Queuing notifies the administration queue of the sending application to indicate that the queue is full, by returning a negative acknowledgment message.</span></span> <span data-ttu-id="b509c-1608">큐에서 메시지의 총 크기 제한 아래로 떨어질 때까지 부정 승인을 보내도록 메시지 큐 계속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1608">Message Queuing continues to send negative acknowledgments until the total size of the messages in the queue drops below the limit.</span></span>  
  
 <span data-ttu-id="b509c-1609">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1609">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1610">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1610">Workgroup mode</span></span>|<span data-ttu-id="b509c-1611">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1611">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1612">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1612">Local computer</span></span>|<span data-ttu-id="b509c-1613">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1613">Yes</span></span>|  
|<span data-ttu-id="b509c-1614">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1614">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1615">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1615">Yes</span></span>|  
|<span data-ttu-id="b509c-1616">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1616">Remote computer</span></span>|<span data-ttu-id="b509c-1617">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1617">No</span></span>|  
|<span data-ttu-id="b509c-1618">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1618">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1619">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1619">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1620">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1620">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#22](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1621">큐의 최대 크기에 음수 값이 포함된 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1621">The maximum queue size contains a negative value.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1622">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1622">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="MessageReadPropertyFilter">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePropertyFilter MessageReadPropertyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessagePropertyFilter MessageReadPropertyFilter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MessageReadPropertyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageReadPropertyFilter As MessagePropertyFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePropertyFilter ^ MessageReadPropertyFilter { System::Messaging::MessagePropertyFilter ^ get(); void set(System::Messaging::MessagePropertyFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageReadPropertyFilter : System.Messaging.MessagePropertyFilter with get, set" Usage="System.Messaging.MessageQueue.MessageReadPropertyFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MessageReadPropertyFilter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePropertyFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1623">메시지를 받거나 또는 피킹하는 데 필요한 속성 필터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1623">Gets or sets the property filter for receiving or peeking messages.</span></span></summary>
        <value><span data-ttu-id="b509c-1624">큐가 각각의 메시지에 대해 받거나 피킹하는 속성 집합을 필터링하는 데 사용되는 <see cref="T:System.Messaging.MessagePropertyFilter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1624">The <see cref="T:System.Messaging.MessagePropertyFilter" /> used by the queue to filter the set of properties it receives or peeks for each message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1625">이 필터는 메시지 속성을 제한 하는 부울 값의 집합입니다는 <xref:System.Messaging.MessageQueue> 받거나 피킹하 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1625">This filter is a set of Boolean values restricting the message properties that the <xref:System.Messaging.MessageQueue> receives or peeks.</span></span> <span data-ttu-id="b509c-1626">경우는 <xref:System.Messaging.MessageQueue> 받거나 피킹하는 메시지 서버 큐에서는 속성만 검색 합니다 <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> 값은 `true`.</span><span class="sxs-lookup"><span data-stu-id="b509c-1626">When the <xref:System.Messaging.MessageQueue> receives or peeks a message from the server queue, it retrieves only those properties for which the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> value is `true`.</span></span>  
  
 <span data-ttu-id="b509c-1627">다음에 대 한 초기 속성 값이 표시는 <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1627">The following shows initial property values for the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property.</span></span> <span data-ttu-id="b509c-1628">이러한 설정은 호출과 동일 <xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A> 에 <xref:System.Messaging.MessagePropertyFilter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1628">These settings are identical to calling <xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A> on a <xref:System.Messaging.MessagePropertyFilter>.</span></span>  
  
|<span data-ttu-id="b509c-1629">속성</span><span class="sxs-lookup"><span data-stu-id="b509c-1629">Property</span></span>|<span data-ttu-id="b509c-1630">기본값</span><span class="sxs-lookup"><span data-stu-id="b509c-1630">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.AppSpecific%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.ArrivedTime%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.AttachSenderId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Authenticated%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AuthenticationProviderName%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AuthenticationProviderType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Body%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.ConnectorType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.CorrelationId%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|<span data-ttu-id="b509c-1631">1024 바이트</span><span class="sxs-lookup"><span data-stu-id="b509c-1631">1024 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|<span data-ttu-id="b509c-1632">255 바이트</span><span class="sxs-lookup"><span data-stu-id="b509c-1632">255 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|<span data-ttu-id="b509c-1633">255 바이트</span><span class="sxs-lookup"><span data-stu-id="b509c-1633">255 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DestinationQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.DigitalSignature%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Extension%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.HashAlgorithm%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Id%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.IsFirstInTransaction%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.IsLastInTransaction%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Label%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.MessageType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Priority%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Recoverable%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderCertificate%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderVersion%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SentTime%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.SourceMachine%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TimeToBeReceived%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TimeToReachQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TransactionId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TransactionStatusQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseTracing%2A>|`false`|  
  
 <span data-ttu-id="b509c-1634">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1634">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1635">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1635">Workgroup mode</span></span>|<span data-ttu-id="b509c-1636">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1636">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1637">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1637">Local computer</span></span>|<span data-ttu-id="b509c-1638">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1638">Yes</span></span>|  
|<span data-ttu-id="b509c-1639">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1639">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1640">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1640">Yes</span></span>|  
|<span data-ttu-id="b509c-1641">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1641">Remote computer</span></span>|<span data-ttu-id="b509c-1642">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1642">Yes</span></span>|  
|<span data-ttu-id="b509c-1643">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1643">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1644">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1644">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1645">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> 받을 메시지의 속성을 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1645">The following code example uses the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> to restrict the message properties received.</span></span>  
  
 [!code-cpp[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/CPP/mqmessagereadpropertyfilter.cpp#1)]
 [!code-csharp[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/CS/mqmessagereadpropertyfilter.cs#1)]
 [!code-vb[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/VB/mqmessagereadpropertyfilter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1646">필터가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1646">The filter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueue.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_MulticastAddress")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1647">MSMQ 3.0에서 도입되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1647">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="b509c-1648">큐에 연결된 멀티캐스트 주소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1648">Gets or sets the multicast address associated with the queue.</span></span></summary>
        <value><span data-ttu-id="b509c-1649">아래 형식으로 된 올바른 멀티캐스트 주소가 들어 있는 <see cref="T:System.String" />이거나, 큐가 멀티캐스트 주소에 연결되지 않았음을 나타내는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1649">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span></span>  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1650"><xref:System.Messaging.MessageQueue.MulticastAddress%2A> 비트랜잭션 큐 메시지를 보낼 때 사용할 수 있는 멀티 캐스트 주소를 사용 하 여 연결 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1650">The <xref:System.Messaging.MessageQueue.MulticastAddress%2A> property is used to associate a non-transactional queue with a multicast address that can be used when sending messages.</span></span> <span data-ttu-id="b509c-1651">멀티 캐스트 주소를 사용 하 여 트랜잭션 큐를 연결할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1651">You cannot associate a transactional queue with a multicast address.</span></span> <span data-ttu-id="b509c-1652">보내는 응용 프로그램 메시지를 보내면 멀티 캐스트 주소를, 메시지 큐 메시지의 복사본이 해당 주소와 연결 된 모든 큐에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1652">When the sending application sends messages to a multicast address, Message Queuing sends a copy of the message to every queue associated with that address.</span></span>  
  
 <span data-ttu-id="b509c-1653">IP 멀티 캐스트 주소 224.0.0.0에서 239.255.255.255 1110 같음으로 처음 네 개의 상위 비트는 설정에 해당 하는 클래스 D 범위 내에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1653">IP multicast addresses must be in the class D range from 224.0.0.0 to 239.255.255.255, which corresponds to setting the first four high-order bits equal to 1110.</span></span> <span data-ttu-id="b509c-1654">그러나 특정 범위의이 범위의 주소는 예약 되지 않은 및 멀티 캐스트 메시지를 보내는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1654">However, only certain ranges of addresses in this range are unreserved and available for sending multicast messages.</span></span> <span data-ttu-id="b509c-1655">예약 된 멀티 캐스트 주소의 최신 목록에 대 한 참조를 [번호 기관 IANA (Internet Assigned) 인터넷에 대 한 멀티 캐스트 주소](https://go.microsoft.com/fwlink/?linkid=3859) 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1655">For the latest list of reserved multicast addresses, see the [Internet Assigned Number Authority (IANA) Internet Multicast Addresses](https://go.microsoft.com/fwlink/?linkid=3859) Web page.</span></span> <span data-ttu-id="b509c-1656">포트 번호에 제한은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1656">There are no restrictions on the port number.</span></span>  
  
 <span data-ttu-id="b509c-1657">여러 원본 컴퓨터 멀티 캐스트 메시지를 보내는 경우 특정 큐를 하나의 원본 컴퓨터에서 메시지를 수신 하려는 각 원본 컴퓨터 IP 주소와 포트 번호의 다양 한 조합에 메시지를 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1657">If several source computers are sending multicast messages and you want a specific queue to receive messages from only one source computer, each source computer must send messages to a different combination of IP address and port number.</span></span>  
  
 <span data-ttu-id="b509c-1658">멀티 캐스트 주소에서 큐를 분리 하려면 설정의 <xref:System.Messaging.MessageQueue.MulticastAddress%2A> 속성을 빈 문자열로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1658">To dissociate a queue from a multicast address, set the <xref:System.Messaging.MessageQueue.MulticastAddress%2A> property to a zero-length string.</span></span> <span data-ttu-id="b509c-1659">설정 하지 마십시오 `null`처럼 그러면는 <xref:System.ArgumentNullException>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1659">Do not set it to `null`, as this will result in a <xref:System.ArgumentNullException>.</span></span>  
  
 <span data-ttu-id="b509c-1660">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1660">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1661">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1661">Workgroup mode</span></span>|<span data-ttu-id="b509c-1662">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1662">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1663">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1663">Local computer</span></span>|<span data-ttu-id="b509c-1664">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1664">Yes</span></span>|  
|<span data-ttu-id="b509c-1665">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1665">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1666">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1666">Yes</span></span>|  
|<span data-ttu-id="b509c-1667">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1667">Remote computer</span></span>|<span data-ttu-id="b509c-1668">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1668">No</span></span>|  
|<span data-ttu-id="b509c-1669">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1669">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1670">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1670">No</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b509c-1671">MSMQ 3.0이 설치되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1671">MSMQ 3.0 is not installed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueue.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Path")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1672">큐의 경로를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1672">Gets or sets the queue's path.</span></span> <span data-ttu-id="b509c-1673"><see cref="P:System.Messaging.MessageQueue.Path" />를 설정하면 <see cref="T:System.Messaging.MessageQueue" />가 새 큐를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1673">Setting the <see cref="P:System.Messaging.MessageQueue.Path" /> causes the <see cref="T:System.Messaging.MessageQueue" /> to point to a new queue.</span></span></summary>
        <value><span data-ttu-id="b509c-1674"><see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1674">The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="b509c-1675">기본값은 사용하는 <see cref="M:System.Messaging.MessageQueue.#ctor" /> 생성자에 따라 달라지는데, <see langword="null" />이거나 생성자의 <paramref name="path" /> 매개 변수에 의해 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1675">The default depends on which <see cref="M:System.Messaging.MessageQueue.#ctor" /> constructor you use; it is either <see langword="null" /> or is specified by the constructor's <paramref name="path" /> parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1676">구문은 <xref:System.Messaging.MessageQueue.Path%2A> 속성 유형에 따라 큐의 해당 지점에는 다음 표에 나와 있는 것 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1676">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it points to, as shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-1677">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-1677">Queue type</span></span>|<span data-ttu-id="b509c-1678">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-1678">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-1679">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1679">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="b509c-1680">개인 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1680">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="b509c-1681">저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1681">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="b509c-1682">컴퓨터 저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1682">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="b509c-1683">컴퓨터 배달 못 한 편지 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1683">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="b509c-1684">컴퓨터 트랜잭션 배달 못 한 편지 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-1684">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="b509c-1685">사용 하 여 "."를 로컬 컴퓨터를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1685">Use "." to represent the local computer.</span></span>  
  
 <span data-ttu-id="b509c-1686"><xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, 및 <xref:System.Messaging.MessageQueue.QueueName%2A> 속성 관련 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1686">The <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, and <xref:System.Messaging.MessageQueue.QueueName%2A> properties are related.</span></span> <span data-ttu-id="b509c-1687">변경 된 <xref:System.Messaging.MessageQueue.MachineName%2A> 속성 원인의 <xref:System.Messaging.MessageQueue.Path%2A> 변경할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1687">Changing the <xref:System.Messaging.MessageQueue.MachineName%2A> property causes the <xref:System.Messaging.MessageQueue.Path%2A> property to change.</span></span> <span data-ttu-id="b509c-1688">새에서 빌드되어 <xref:System.Messaging.MessageQueue.MachineName%2A> 하며 <xref:System.Messaging.MessageQueue.QueueName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1688">It is built from the new <xref:System.Messaging.MessageQueue.MachineName%2A> and the <xref:System.Messaging.MessageQueue.QueueName%2A>.</span></span> <span data-ttu-id="b509c-1689">변경 합니다 <xref:System.Messaging.MessageQueue.Path%2A> (예: 형식 이름 구문을 사용 하 여) 다시 설정 합니다 <xref:System.Messaging.MessageQueue.MachineName%2A> 및 <xref:System.Messaging.MessageQueue.QueueName%2A> 새 큐를 참조 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1689">Changing the <xref:System.Messaging.MessageQueue.Path%2A> (for example, to use the format name syntax) resets the <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties to refer to the new queue.</span></span>  
  
 <span data-ttu-id="b509c-1690">사용할 수 있습니다는 <xref:System.Messaging.MessageQueue.FormatName%2A> 또는 <xref:System.Messaging.MessageQueue.Label%2A> 다음 표에 나와 있는 것 처럼 큐 경로 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1690">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path, as shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-1691">참조</span><span class="sxs-lookup"><span data-stu-id="b509c-1691">Reference</span></span>|<span data-ttu-id="b509c-1692">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-1692">Syntax</span></span>|<span data-ttu-id="b509c-1693">예제</span><span class="sxs-lookup"><span data-stu-id="b509c-1693">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="b509c-1694">형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1694">Format name</span></span>|<span data-ttu-id="b509c-1695">`FormatName:` [ *형식 이름을* ]</span><span class="sxs-lookup"><span data-stu-id="b509c-1695">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="b509c-1696">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="b509c-1696">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span>|  
|<span data-ttu-id="b509c-1697">레이블</span><span class="sxs-lookup"><span data-stu-id="b509c-1697">Label</span></span>|<span data-ttu-id="b509c-1698">`Label:` [ *레이블* ]</span><span class="sxs-lookup"><span data-stu-id="b509c-1698">`Label:` [ *label* ]</span></span>|<span data-ttu-id="b509c-1699">`Label:` TheLabel</span><span class="sxs-lookup"><span data-stu-id="b509c-1699">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="b509c-1700">레이블 구문을 사용 하는 경우는 <xref:System.Messaging.MessageQueue.Path%2A> 메시지를 보낼 때 속성에는 예외가 발생 하는 경우는 <xref:System.Messaging.MessageQueue.Label%2A> 고유 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1700">If you use the label syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property when you send the message, an exception will be thrown if the <xref:System.Messaging.MessageQueue.Label%2A> is not unique.</span></span>  
  
 <span data-ttu-id="b509c-1701">오프 라인으로 작업 하는 첫 번째 테이블의 이름 구문이 아니라, 형식 이름 구문을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1701">To work offline, you must use the format name syntax, rather than the friendly name syntax in the first table.</span></span> <span data-ttu-id="b509c-1702">그렇지 않은 경우 (Active Directory 상주 하는) 주 도메인 컨트롤러를 형식 이름으로 경로 확인할 수 없기 때문에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1702">Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="b509c-1703">새 경로 설정 합니다. 메시지 큐를 닫고 모든 핸들을 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1703">Setting a new path closes the message queue and releases all handles.</span></span>  
  
 <span data-ttu-id="b509c-1704">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1704">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1705">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1705">Workgroup mode</span></span>|<span data-ttu-id="b509c-1706">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1706">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1707">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1707">Local computer</span></span>|<span data-ttu-id="b509c-1708">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1708">Yes</span></span>|  
|<span data-ttu-id="b509c-1709">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1709">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1710">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1710">Yes</span></span>|  
|<span data-ttu-id="b509c-1711">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1711">Remote computer</span></span>|<span data-ttu-id="b509c-1712">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1712">Yes</span></span>|  
|<span data-ttu-id="b509c-1713">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1713">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1714">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1714">Yes</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="b509c-1715">작업 그룹 모드에서에 개인 큐를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1715">In workgroup mode you can only use private queues.</span></span> <span data-ttu-id="b509c-1716">개인 큐 구문을 사용 하 여 경로 지정할 `MachineName` \\ `Private$` \\ `QueueName`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1716">You specify the path using the private queue syntax `MachineName`\\`Private$`\\`QueueName`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1717">다음 코드 예제에서는 새 <xref:System.Messaging.MessageQueue> 다양 한 경로 이름을 구문 형식을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1717">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="b509c-1718">각각의 경우에서 경로가 생성자에 정의 된 큐에 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1718">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1719">경로가 잘못되었습니다(예: 구문이 잘못된 경우)</span><span class="sxs-lookup"><span data-stu-id="b509c-1719">The path is not valid, possibly because the syntax is not valid.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Peek">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe><span data-ttu-id="b509c-1720">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1720">The method is not thread safe.</span></span></threadsafe>
        <summary><span data-ttu-id="b509c-1721">큐에 있는 첫 번째 메시지의 복사본을 반환하지만 큐에서 메시지를 제거하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1721">Returns a copy of the first message in the queue without removing the message from the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; System.Messaging.Message" Usage="messageQueue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1722">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐의 첫 번째 메시지를 반환하지만 제거(피킹)하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1722">Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="b509c-1723"><see cref="M:System.Messaging.MessageQueue.Peek" /> 메서드는 동기적이므로 메시지를 사용할 수 있을 때까지 현재 스레드를 차단시킵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1723">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available.</span></span></summary>
        <returns><span data-ttu-id="b509c-1724">큐에 있는 첫 번째 메시지를 나타내는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1724">The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1725">메시지가 큐에 있는 될 때까지 대기 또는 큐를 피킹할이 오버 로드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1725">Use this overload to peek a queue, or to wait until a message exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-1726"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드 읽지만 첫 번째 메시지를 큐에서 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1726">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, the first message from the queue.</span></span> <span data-ttu-id="b509c-1727">따라서 반복 호출을 <xref:System.Messaging.MessageQueue.Peek%2A> 우선 순위가 높은 메시지 큐에 도착 하지 않는 한 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1727">Therefore, repeated calls to <xref:System.Messaging.MessageQueue.Peek%2A> return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-1728"><xref:System.Messaging.MessageQueue.Receive%2A> 모두 메서드, 다른 한편으로 읽고 큐에서 첫 번째 메시지를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1728">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes the first message from the queue.</span></span> <span data-ttu-id="b509c-1729">에 대 한 호출을 반복 <xref:System.Messaging.MessageQueue.Receive%2A>, 따라서 서로 다른 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1729">Repeated calls to <xref:System.Messaging.MessageQueue.Receive%2A>, therefore, return different messages.</span></span>  
  
 <span data-ttu-id="b509c-1730">메시지 큐는 우선 순위 및 도착 시간에 따라 큐에 메시지를 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1730">Message Queuing orders messages in the queue according to priority and arrival time.</span></span> <span data-ttu-id="b509c-1731">최신 메시지의 우선 순위가 높은 경우에 이전 앞에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1731">A newer message is placed before an older one only if it is of a higher priority.</span></span>  
  
 <span data-ttu-id="b509c-1732">큐에 메시지가 도착할 때까지 대기하는 동안 현재 스레드를 차단하는 것이 허용되는 경우에만 <xref:System.Messaging.MessageQueue.Peek%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1732">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-1733">이 오버 로드 제한 시간을 지정 하지 않으므로, 응용 프로그램이 무기한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1733">Because this overload does not specify a time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="b509c-1734">대기하지 않고 응용 프로그램 처리를 계속하려면 비동기 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1734">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span> <span data-ttu-id="b509c-1735">오버 로드를 사용 하 여 큐에 도착 하는 메시지에 대 한 제한 시간을 지정할 수도 있습니다 <xref:System.Messaging.MessageQueue.Peek%2A> 제한 시간을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1735">Alternatively, you can specify a time-out for a message to arrive in the queue by using the overload of <xref:System.Messaging.MessageQueue.Peek%2A> that specifies a time-out.</span></span>  
  
 <span data-ttu-id="b509c-1736">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1736">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1737">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1737">Workgroup mode</span></span>|<span data-ttu-id="b509c-1738">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1738">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1739">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1739">Local computer</span></span>|<span data-ttu-id="b509c-1740">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1740">Yes</span></span>|  
|<span data-ttu-id="b509c-1741">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1741">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1742">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1742">Yes</span></span>|  
|<span data-ttu-id="b509c-1743">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1743">Remote computer</span></span>|<span data-ttu-id="b509c-1744">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1744">No</span></span>|  
|<span data-ttu-id="b509c-1745">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1745">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1746">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1746">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1747">다음 예에서는 <xref:System.Messaging.MessageQueue.Peek%2A> 큐 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-1747">The following examples use the <xref:System.Messaging.MessageQueue.Peek%2A> method on a queue.</span></span>  
  
 <span data-ttu-id="b509c-1748">첫 번째 예제에서는 응용 프로그램 메시지를 큐에서 사용할 수 있을 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1748">In the first example, the application waits until a message becomes available in the queue.</span></span> <span data-ttu-id="b509c-1749">첫 번째 예제; 도착 하는 메시지 액세스 하지 않음을 참고 단순히 메시지가 도착할 때까지 처리 일시 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1749">Note that the first example does not access the message that arrives; it merely pauses processing until a message arrives.</span></span> <span data-ttu-id="b509c-1750">경우 메시지가 큐에 이미 있는 즉시 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1750">If a message already exists in the queue, it will return immediately.</span></span>  
  
 <span data-ttu-id="b509c-1751">두 번째 예제에서는 응용 프로그램 정의 포함 하는 메시지 `Order` 클래스 큐에 전송 되 고 큐에서 피킹 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1751">In the second example, a message that contains an application-defined `Order` class is sent to the queue, and then peeked from the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Peek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Peek_noparms/CPP/mqpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Peek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Peek_noparms/CS/mqpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.Peek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Peek_noparms/VB/mqpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1752">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1752">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-1753">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1753">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Peek : TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.Peek timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-1754">큐가 메시지를 포함하도록 대기하는 최대 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1754">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</span></span></param>
        <summary><span data-ttu-id="b509c-1755">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐의 첫 번째 메시지를 반환하지만 제거(피킹)하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1755">Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="b509c-1756"><see cref="M:System.Messaging.MessageQueue.Peek" /> 메서드는 동기적이므로 메시지를 사용할 수 있거나 지정된 시간이 초과될 때까지 현재 실행 스레드를 차단시킵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1756">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-1757">큐에 있는 첫 번째 메시지를 나타내는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1757">The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1758">이 오버 로드를 사용 하 여 큐를 피킹할 또는 큐에 있는 지정된 된 메시지가 될 때 까지의 시간 동안 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1758">Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</span></span> <span data-ttu-id="b509c-1759">메시지가 큐에 이미 있는 경우 메서드가 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1759">The method returns immediately if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-1760"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드 읽지만 첫 번째 메시지를 큐에서 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1760">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, the first message from the queue.</span></span> <span data-ttu-id="b509c-1761">따라서 반복 호출을 <xref:System.Messaging.MessageQueue.Peek%2A> 우선 순위가 높은 메시지 큐에 도착 하지 않는 한 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1761">Therefore, repeated calls to <xref:System.Messaging.MessageQueue.Peek%2A> return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-1762"><xref:System.Messaging.MessageQueue.Receive%2A> 모두 메서드, 다른 한편으로 읽고 큐에서 첫 번째 메시지를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1762">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes the first message from the queue.</span></span> <span data-ttu-id="b509c-1763">에 대 한 호출을 반복 <xref:System.Messaging.MessageQueue.Receive%2A>, 따라서 서로 다른 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1763">Repeated calls to <xref:System.Messaging.MessageQueue.Receive%2A>, therefore, return different messages.</span></span>  
  
 <span data-ttu-id="b509c-1764">메시지 큐는 우선 순위 및 도착 시간에 따라 큐에 메시지를 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1764">Message Queuing orders messages in the queue according to priority and arrival time.</span></span> <span data-ttu-id="b509c-1765">최신 메시지의 우선 순위가 높은 경우에 이전 앞에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1765">A newer message is placed before an older one only if it is of a higher priority.</span></span>  
  
 <span data-ttu-id="b509c-1766">큐에 메시지가 도착할 때까지 대기하는 동안 현재 스레드를 차단하는 것이 허용되는 경우에만 <xref:System.Messaging.MessageQueue.Peek%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1766">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-1767">시간에 또는 무기한으로 지정 된 기간까지 스레드가 차단 됩니다 지정한 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1767">The thread will be blocked up to the specified period of time, or indefinitely if you indicated <xref:System.Messaging.MessageQueue.InfiniteTimeout>.</span></span> <span data-ttu-id="b509c-1768">대기하지 않고 응용 프로그램 처리를 계속하려면 비동기 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1768">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-1769">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1769">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1770">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1770">Workgroup mode</span></span>|<span data-ttu-id="b509c-1771">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1771">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1772">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1772">Local computer</span></span>|<span data-ttu-id="b509c-1773">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1773">Yes</span></span>|  
|<span data-ttu-id="b509c-1774">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1774">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1775">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1775">Yes</span></span>|  
|<span data-ttu-id="b509c-1776">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1776">Remote computer</span></span>|<span data-ttu-id="b509c-1777">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1777">No</span></span>|  
|<span data-ttu-id="b509c-1778">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1778">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1779">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1779">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1780">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.Peek%2A> 제한 시간이 큐가 비어 있는지 여부를 확인 하려면 0 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-1780">The following code example uses the <xref:System.Messaging.MessageQueue.Peek%2A> method with a time-out of zero to check whether the queue is empty.</span></span>  
  
 [!code-cpp[MessageQueue.Peek_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Peek_timeout/CPP/mqpeek_timeout.cpp#1)]
 [!code-csharp[MessageQueue.Peek_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Peek_timeout/CS/mqpeek_timeout.cs#1)]
 [!code-vb[MessageQueue.Peek_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Peek_timeout/VB/mqpeek_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1781"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1781">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1782">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1782">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-1783">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1783">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.PeekAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::PeekAction action);" />
      <MemberSignature Language="F#" Value="member this.Peek : TimeSpan * System.Messaging.Cursor * System.Messaging.PeekAction -&gt; System.Messaging.Message" Usage="messageQueue.Peek (timeout, cursor, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="action" Type="System.Messaging.PeekAction" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-1784">큐가 메시지를 포함하도록 대기하는 최대 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1784">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</span></span></param>
        <param name="cursor"><span data-ttu-id="b509c-1785">메시지 큐에서 특정 위치를 유지하는 <see cref="T:System.Messaging.Cursor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1785">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="action"><span data-ttu-id="b509c-1786"><see cref="T:System.Messaging.PeekAction" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1786">One of the <see cref="T:System.Messaging.PeekAction" /> values.</span></span> <span data-ttu-id="b509c-1787">이 값은 큐의 현재 메시지를 피킹할지 또는 다음 메시지를 피킹할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1787">Indicates whether to peek at the current message in the queue, or the next message.</span></span></param>
        <summary><span data-ttu-id="b509c-1788">지정된 커서를 사용하여 큐에 있는 현재 또는 다음 메시지를 제거하지 않고 반환(피킹)합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1788">Returns without removing (peeks) the current or next message in the queue, using the specified cursor.</span></span> <span data-ttu-id="b509c-1789"><see cref="M:System.Messaging.MessageQueue.Peek" /> 메서드는 동기적이므로 메시지를 사용할 수 있거나 지정된 시간이 초과될 때까지 현재 실행 스레드를 차단시킵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1789">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-1790">큐에 있는 메시지를 나타내는 <see cref="T:System.Messaging.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1790">A <see cref="T:System.Messaging.Message" /> that represents a message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1791">이 오버 로드를 사용 하 여 큐를 피킹할 또는 큐에 있는 지정된 된 메시지가 될 때 까지의 시간 동안 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1791">Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</span></span> <span data-ttu-id="b509c-1792">메시지가 큐에 이미 있는 경우 메서드가 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1792">The method returns immediately if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="b509c-1793"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드 읽지만 큐에서 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1793">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, a message from the queue.</span></span> <span data-ttu-id="b509c-1794"><xref:System.Messaging.MessageQueue.Receive%2A> 모두 메서드, 다른 한편으로 읽고 큐에서 메시지를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1794">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes a message from the queue.</span></span>  
  
 <span data-ttu-id="b509c-1795">큐에 메시지가 도착할 때까지 대기하는 동안 현재 스레드를 차단하는 것이 허용되는 경우에만 <xref:System.Messaging.MessageQueue.Peek%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1795">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-1796">시간에 또는 무기한으로 지정 된 기간까지 스레드가 차단 되 지정한 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1796">The thread is blocked up to the specified period of time, or indefinitely if you indicated <xref:System.Messaging.MessageQueue.InfiniteTimeout>.</span></span> <span data-ttu-id="b509c-1797">대기하지 않고 응용 프로그램 처리를 계속하려면 비동기 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1797">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-1798">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1798">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1799">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1799">Workgroup mode</span></span>|<span data-ttu-id="b509c-1800">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1800">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1801">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1801">Local computer</span></span>|<span data-ttu-id="b509c-1802">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1802">Yes</span></span>|  
|<span data-ttu-id="b509c-1803">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1803">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1804">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1804">Yes</span></span>|  
|<span data-ttu-id="b509c-1805">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1805">Remote computer</span></span>|<span data-ttu-id="b509c-1806">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1806">No</span></span>|  
|<span data-ttu-id="b509c-1807">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1807">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1808">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1808">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b509c-1809"><paramref name="action" /> 매개 변수에 대해 <see langword="PeekAction.Current" /> 또는 <see langword="PeekAction.Next" /> 이외의 값을 지정했습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1809">A value other than <see langword="PeekAction.Current" /> or <see langword="PeekAction.Next" /> was specified for the <paramref name="action" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-1810"><paramref name="cursor" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1810">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1811"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1811">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span> <span data-ttu-id="b509c-1812"><paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1812">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1813">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1813">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-1814">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1814">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.PeekAction" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekByCorrelationId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-1815">주어진 상관 관계 식별자를 갖는 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1815">Peeks a message that matches a given correlation identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByCorrelationId (string correlationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByCorrelationId(string correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByCorrelationId (correlationId As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByCorrelationId(System::String ^ correlationId);" />
      <MemberSignature Language="F#" Value="member this.PeekByCorrelationId : string -&gt; System.Messaging.Message" Usage="messageQueue.PeekByCorrelationId correlationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="b509c-1816">피킹할 메시지의 <see cref="P:System.Messaging.Message.CorrelationId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1816">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</span></span></param>
        <summary><span data-ttu-id="b509c-1817">주어진 상관 관계 식별자를 갖는 메시지를 피킹합니다. 지정된 상관 관계 식별자가 포함된 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1817">Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-1818">전달된 <paramref name="correlationId" /> 매개 변수와 <see cref="T:System.Messaging.Message" />가 일치하는 <see cref="P:System.Messaging.Message.CorrelationId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1818">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1819">이 메서드가 참조 하는 큐에서 찾습니다를 <xref:System.Messaging.MessageQueue> 메시지에 대 한 해당 <xref:System.Messaging.Message.CorrelationId%2A> 지정 된 일치 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1819">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="b509c-1820">메시지가 발견 되지 일치 하는 경우는 `correlationID` 매개 변수 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1820">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b509c-1821"><xref:System.Messaging.Message.CorrelationId%2A> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐로 보낸 메시지를 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1821">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="b509c-1822">다른 두 메서드는 큐의 메시지 피킹을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1822">Two other methods allow you to peek messages in a queue.</span></span> <span data-ttu-id="b509c-1823">합니다 <xref:System.Messaging.MessageQueue.Peek%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드 고유 식별자를 지정 하 여 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1823">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="b509c-1824">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1824">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1825">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1825">Workgroup mode</span></span>|<span data-ttu-id="b509c-1826">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1826">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1827">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1827">Local computer</span></span>|<span data-ttu-id="b509c-1828">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1828">Yes</span></span>|  
|<span data-ttu-id="b509c-1829">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1829">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1830">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1830">Yes</span></span>|  
|<span data-ttu-id="b509c-1831">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1831">Remote computer</span></span>|<span data-ttu-id="b509c-1832">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1832">No</span></span>|  
|<span data-ttu-id="b509c-1833">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1833">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1834">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1834">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1835">다음 코드 예제에서는 큐에서 주문을 포함 하는 메시지를 송수신 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1835">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="b509c-1836">원본 메시지가 도달 하거나이 특히 긍정 승인을 요청 큐에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1836">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-1837"><paramref name="correlationId" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1837">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-1838">지정된 <paramref name="correlationId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1838">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1839">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1839">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="PeekByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByCorrelationId (string correlationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByCorrelationId(string correlationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByCorrelationId (correlationId As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByCorrelationId(System::String ^ correlationId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.PeekByCorrelationId : string * TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.PeekByCorrelationId (correlationId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="b509c-1840">피킹할 메시지의 <see cref="P:System.Messaging.Message.CorrelationId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1840">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</span></span></param>
        <param name="timeout"><span data-ttu-id="b509c-1841">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1841">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="b509c-1842">주어진 상관 관계 식별자를 갖는 메시지를 피킹하며, 지정된 상관 관계 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1842">Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-1843">전달된 <paramref name="correlationId" /> 매개 변수와 <see cref="T:System.Messaging.Message" />가 일치하는 <see cref="P:System.Messaging.Message.CorrelationId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1843">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1844">이 메서드가 참조 하는 큐에서 찾습니다를 <xref:System.Messaging.MessageQueue> 메시지에 대 한 해당 <xref:System.Messaging.Message.CorrelationId%2A> 지정 된 일치 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1844">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="b509c-1845">일치 하는 메시지가 없으면 합니다 `correlationID` 매개 변수를 새 메시지 없이 지정 된 기간 내에서 큐에 도착할는 `timeout` 매개 변수 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1845">If no message is found that matches the `correlationID` parameter, and no new message arrives in the queue within the period specified by the `timeout` parameter, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b509c-1846">`timeout` 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1846">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="b509c-1847">새 메시지가 큐에 도착할 때까지 기다리는 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1847">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-1848">때마다 새 메시지가 도착 하면이 메서드를 검사 합니다 <xref:System.Messaging.Message.CorrelationId%2A> 일치 하는지 확인 하려면 새 메시지의는 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1848">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="b509c-1849">그렇지 않은 경우이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1849">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="b509c-1850">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것 없이 새 메시지 도착 한 시간 제한 기간이 만료 될 때까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드에 대 한 가능한 <xref:System.Messaging.Message.CorrelationId%2A> 일치 하는 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1850">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="b509c-1851"><xref:System.Messaging.Message.CorrelationId%2A> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐로 보낸 메시지를 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1851">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="b509c-1852">다른 두 메서드는 큐의 메시지 피킹을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1852">Two other methods allow you to peek messages in a queue.</span></span> <span data-ttu-id="b509c-1853">합니다 <xref:System.Messaging.MessageQueue.Peek%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드 고유 식별자를 지정 하 여 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1853">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="b509c-1854">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1854">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1855">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1855">Workgroup mode</span></span>|<span data-ttu-id="b509c-1856">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1856">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1857">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1857">Local computer</span></span>|<span data-ttu-id="b509c-1858">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1858">Yes</span></span>|  
|<span data-ttu-id="b509c-1859">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1859">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1860">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1860">Yes</span></span>|  
|<span data-ttu-id="b509c-1861">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1861">Remote computer</span></span>|<span data-ttu-id="b509c-1862">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1862">No</span></span>|  
|<span data-ttu-id="b509c-1863">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1863">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1864">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1864">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1865">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1865">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#5](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#5)]
 [!code-csharp[MessageQueue2#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-1866"><paramref name="correlationId" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1866">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1867"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1867">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-1868">지정된 <paramref name="correlationId" />가 들어 있는 메시지가 큐에 없고 제한 시간이 만료되기 전에 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1868">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1869">제한 시간이 만료되기 전에 메시지가 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1869">A message did not arrive before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-1870">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-1870">-or-</span></span> 
<span data-ttu-id="b509c-1871">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1871">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekById">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-1872">지정된 메시지 식별자가 포함된 메시지의 복사본을 반환하지만 큐에서 해당 메시지를 제거하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1872">Returns a copy of the message that has the specified message identifier without removing the message from the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekById (id As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.PeekById : string -&gt; System.Messaging.Message" Usage="messageQueue.PeekById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="b509c-1873">피킹할 메시지의 <see cref="P:System.Messaging.Message.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1873">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</span></span></param>
        <summary><span data-ttu-id="b509c-1874">메시지 식별자가 <paramref name="id" /> 매개 변수와 일치하는 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1874">Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="b509c-1875"><see cref="T:System.Messaging.Message" /> 속성이 <paramref name="id" /> 매개 변수와 일치하는 <see cref="P:System.Messaging.Message.Id" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1875">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1876">사용 하 여 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 큐에서 제거 하지 않고 읽기 알려진된 메시지 식별자를 가진 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1876">Use <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> to read, without removing from the queue, a message that has a known message identifier.</span></span> <span data-ttu-id="b509c-1877">메시지의 식별자가 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에서 메시지 큐 엔터프라이즈 전체에서 고유 합니다 지정 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1877">The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="b509c-1878">이 오버 로드 된 큐 메시지를 포함 하지 않는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1878">This overload throws an exception if the queue does not currently contain the message.</span></span>  
  
 <span data-ttu-id="b509c-1879">두 개의 추가 메서드를 사용 하면 큐에서 피킹 메시지: <xref:System.Messaging.MessageQueue.Peek%2A> 고 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1879">Two additional methods allow you to peek messages in a queue: <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="b509c-1880"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 큐에서 첫 번째 메시지를 반환 합니다. <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 승인, 보고서, 또는 큐로 보낸 메시지의 결과로 생성 된 응용 프로그램에서 생성 한 응답 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1880">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue; <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="b509c-1881">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1881">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1882">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1882">Workgroup mode</span></span>|<span data-ttu-id="b509c-1883">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1883">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1884">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1884">Local computer</span></span>|<span data-ttu-id="b509c-1885">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1885">Yes</span></span>|  
|<span data-ttu-id="b509c-1886">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1886">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1887">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1887">Yes</span></span>|  
|<span data-ttu-id="b509c-1888">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1888">Remote computer</span></span>|<span data-ttu-id="b509c-1889">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1889">No</span></span>|  
|<span data-ttu-id="b509c-1890">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1890">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1891">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1891">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1892">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1892">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#6](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#6)]
 [!code-csharp[MessageQueue2#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-1893"><paramref name="id" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1893">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-1894">지정된 <paramref name="id" />의 메시지가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1894">No message with the specified <paramref name="id" /> exists.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1895">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1895">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="PeekById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekById (string id, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekById(string id, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekById (id As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekById(System::String ^ id, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.PeekById : string * TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.PeekById (id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="b509c-1896">피킹할 메시지의 <see cref="P:System.Messaging.Message.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1896">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</span></span></param>
        <param name="timeout"><span data-ttu-id="b509c-1897">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1897">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="b509c-1898">메시지 식별자가 <paramref name="id" /> 매개 변수와 일치하는 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1898">Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</span></span> <span data-ttu-id="b509c-1899">큐에 메시지가 표시되거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1899">Waits until the message appears in the queue or a time-out occurs.</span></span></summary>
        <returns><span data-ttu-id="b509c-1900"><see cref="T:System.Messaging.Message" /> 속성이 <paramref name="id" /> 매개 변수와 일치하는 <see cref="P:System.Messaging.Message.Id" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1900">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1901">사용 하 여 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 큐에서 제거 하지 않고 읽기 알려진된 메시지 식별자를 가진 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1901">Use <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> to read, without removing from the queue, a message that has a known message identifier.</span></span> <span data-ttu-id="b509c-1902">메시지의 식별자가 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에서 메시지 큐 엔터프라이즈 전체에서 고유 합니다 지정 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1902">The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="b509c-1903">이 오버 로드는 큐 메시지를 포함 하지 않는 경우 시간 제한이 발생 하기 전에 새 메시지가 도착 하지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1903">This overload throws an exception if the queue does not currently contain the message and a new message does not arrive before the time-out occurs.</span></span>  
  
 <span data-ttu-id="b509c-1904">`timeout` 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1904">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="b509c-1905">새 메시지가 큐에 도착할 때까지 기다리는 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1905">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-1906">때마다 새 메시지가 도착 하면이 메서드를 검사 합니다 <xref:System.Messaging.Message.Id%2A> 일치 하는지 확인 하려면 새 메시지의는 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1906">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="b509c-1907">그렇지 않은 경우이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1907">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="b509c-1908">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것 없이 새 메시지 도착 한 시간 제한 기간이 만료 될 때까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드에 대 한 가능한 <xref:System.Messaging.Message.Id%2A> 일치 하는 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1908">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="b509c-1909">두 개의 추가 메서드를 사용 하면 큐에서 피킹 메시지: <xref:System.Messaging.MessageQueue.Peek%2A> 고 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1909">Two additional methods allow you to peek messages in a queue: <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="b509c-1910"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 큐에서 첫 번째 메시지를 반환 합니다. <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 승인, 보고서, 또는 큐로 보낸 메시지의 결과로 생성 된 응용 프로그램에서 생성 한 응답 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1910">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue; <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="b509c-1911">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1911">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1912">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1912">Workgroup mode</span></span>|<span data-ttu-id="b509c-1913">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1913">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1914">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1914">Local computer</span></span>|<span data-ttu-id="b509c-1915">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1915">Yes</span></span>|  
|<span data-ttu-id="b509c-1916">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1916">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1917">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1917">Yes</span></span>|  
|<span data-ttu-id="b509c-1918">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1918">Remote computer</span></span>|<span data-ttu-id="b509c-1919">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1919">No</span></span>|  
|<span data-ttu-id="b509c-1920">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1920">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1921">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1921">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1922">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1922">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#7](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#7)]
 [!code-csharp[MessageQueue2#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-1923"><paramref name="id" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1923">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-1924"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1924">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-1925">지정된 <paramref name="id" />가 들어 있는 메시지가 큐에 없고 <paramref name="timeout" /> 매개 변수가 지정한 기간이 만료되기 전에 메시지가 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1925">The message with the specified <paramref name="id" /> does not exist in the queue and did not arrive before the period specified by the <paramref name="timeout" /> parameter expired.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1926">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1926">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekByLookupId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-1927">MSMQ 3.0에서 도입되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1927">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="b509c-1928">큐의 특정 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1928">Peeks at a specific message from the queue.</span></span> <span data-ttu-id="b509c-1929">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1929">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByLookupId (long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByLookupId(int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByLookupId (lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByLookupId(long lookupId);" />
      <MemberSignature Language="F#" Value="member this.PeekByLookupId : int64 -&gt; System.Messaging.Message" Usage="messageQueue.PeekByLookupId lookupId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lookupId" Type="System.Int64" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="lookupId"><span data-ttu-id="b509c-1930">피킹할 메시지의 <see cref="P:System.Messaging.Message.LookupId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1930">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at.</span></span></param>
        <summary><span data-ttu-id="b509c-1931">MSMQ 3.0에서 도입되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1931">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="b509c-1932">비트랜잭션 큐에서 지정된 조회 식별자를 갖는 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1932">Peeks at the message that matches the given lookup identifier from a non-transactional queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-1933">전달된 <paramref name="lookupId" /> 매개 변수와 <see cref="T:System.Messaging.Message" /> 속성이 일치하는 <see cref="P:System.Messaging.Message.LookupId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1933">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1934">큐에서 제거 하지 않고 알려진된 조회 식별자를 갖는 메시지를 읽으려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1934">Use this method to read a message with a known lookup identifier without removing it from the queue.</span></span> <span data-ttu-id="b509c-1935">이 메서드는 메시지 큐에 없는 경우 즉시 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1935">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="b509c-1936">합니다 <xref:System.Messaging.Message.LookupId%2A> 메시지의 속성은 큐에 고유한 메시지 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 지정 된 `lookupId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1936">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="b509c-1937">지정한 lookup 식별자와 메시지를 읽고 큐에서 제거를 사용 하 여를 <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-1937">To read a message with a specified lookup identifier and remove it from the queue, use the <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-1938">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1938">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1939">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1939">Workgroup mode</span></span>|<span data-ttu-id="b509c-1940">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1940">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1941">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1941">Local computer</span></span>|<span data-ttu-id="b509c-1942">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1942">Yes</span></span>|  
|<span data-ttu-id="b509c-1943">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1943">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1944">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1944">Yes</span></span>|  
|<span data-ttu-id="b509c-1945">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1945">Remote computer</span></span>|<span data-ttu-id="b509c-1946">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1946">No</span></span>|  
|<span data-ttu-id="b509c-1947">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1947">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1948">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1948">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b509c-1949">MSMQ 3.0이 설치되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1949">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-1950">지정된 <paramref name="lookupId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1950">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1951">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1951">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="PeekByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByLookupId (System.Messaging.MessageLookupAction action, long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByLookupId (action As MessageLookupAction, lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByLookupId(System::Messaging::MessageLookupAction action, long lookupId);" />
      <MemberSignature Language="F#" Value="member this.PeekByLookupId : System.Messaging.MessageLookupAction * int64 -&gt; System.Messaging.Message" Usage="messageQueue.PeekByLookupId (action, lookupId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lookupId" Type="System.Int64" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="b509c-1952">큐에서 메시지를 읽는 방법을 지정하는 <see cref="T:System.Messaging.MessageLookupAction" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1952">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span></span> <span data-ttu-id="b509c-1953">다음 중 하나를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1953">Specify one of the following:</span></span> 
 <span data-ttu-id="b509c-1954"><see langword="MessageLookupAction.Current" />: <paramref name="lookupId" />로 지정된 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1954"><see langword="MessageLookupAction.Current" />: Peeks at the message specified by <paramref name="lookupId" />.</span></span>  
  
 <span data-ttu-id="b509c-1955"><see langword="MessageLookupAction.Next" />: <paramref name="lookupId" />로 지정된 메시지의 뒤에 있는 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1955"><see langword="MessageLookupAction.Next" />: Peeks at the message following the message specified by <paramref name="lookupId" />.</span></span>  
  
 <span data-ttu-id="b509c-1956"><see langword="MessageLookupAction.Previous" />: <paramref name="lookupId" />로 지정된 메시지의 앞에 있는 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1956"><see langword="MessageLookupAction.Previous" />: Peeks at the message preceding the message specified by <paramref name="lookupId" />.</span></span>  
  
 <span data-ttu-id="b509c-1957"><see langword="MessageLookupAction.First" />: 큐에 있는 첫 번째 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1957"><see langword="MessageLookupAction.First" />: Peeks at the first message in the queue.</span></span> <span data-ttu-id="b509c-1958"><paramref name="lookupId" /> 매개 변수는 0으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1958">The <paramref name="lookupId" /> parameter must be set to 0.</span></span>  
  
 <span data-ttu-id="b509c-1959"><see langword="MessageLookupAction.Last" />: 큐에 있는 마지막 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1959"><see langword="MessageLookupAction.Last" />: Peeks at the last message in the queue.</span></span> <span data-ttu-id="b509c-1960"><paramref name="lookupId" /> 매개 변수는 0으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1960">The <paramref name="lookupId" /> parameter must be set to 0.</span></span></param>
        <param name="lookupId"><span data-ttu-id="b509c-1961">0에서 피킹할 메시지의 <see cref="P:System.Messaging.Message.LookupId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1961">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at, or 0.</span></span> <span data-ttu-id="b509c-1962">0은 큐에 있는 첫 번째 또는 마지막 메시지에 액세스할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1962">0 is used when accessing the first or last message in the queue.</span></span></param>
        <summary><span data-ttu-id="b509c-1963">MSMQ 3.0에서 도입되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1963">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="b509c-1964">큐의 특정 메시지를 피킹합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1964">Peeks at a specific message from the queue.</span></span> <span data-ttu-id="b509c-1965">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1965">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-1966">전달된 <paramref name="action" /> 및 <paramref name="lookupId" /> 매개 변수로 지정된 <see cref="T:System.Messaging.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1966">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1967">큐에서 제거 하지 않고 알려진된 조회 식별자를 갖는 메시지를 읽으려면이 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1967">Use this method to read a message with a known lookup identifier without removing it from the queue.</span></span> <span data-ttu-id="b509c-1968">이 메서드는 메시지 큐에 없는 경우 즉시 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1968">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="b509c-1969">합니다 <xref:System.Messaging.Message.LookupId%2A> 메시지의 속성은 큐에 고유한 메시지 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 지정 된 `lookupId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1969">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="b509c-1970">지정한 식별자를 가진 메시지를 읽고 큐에서 제거를 사용 하 여를 <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-1970">To read a message with a specified identifier and remove it from the queue, use the <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-1971">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1971">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-1972">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-1972">Workgroup mode</span></span>|<span data-ttu-id="b509c-1973">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-1973">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-1974">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1974">Local computer</span></span>|<span data-ttu-id="b509c-1975">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1975">Yes</span></span>|  
|<span data-ttu-id="b509c-1976">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1976">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-1977">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1977">Yes</span></span>|  
|<span data-ttu-id="b509c-1978">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-1978">Remote computer</span></span>|<span data-ttu-id="b509c-1979">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-1979">No</span></span>|  
|<span data-ttu-id="b509c-1980">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-1980">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-1981">예</span><span class="sxs-lookup"><span data-stu-id="b509c-1981">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b509c-1982">MSMQ 3.0이 설치되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1982">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-1983">지정된 <paramref name="lookupId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1983">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-1984">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1984">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-1985"><paramref name="action" /> 매개 변수가 <see cref="T:System.Messaging.MessageLookupAction" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-1985">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="PeekCompleted">
      <MemberSignature Language="C#" Value="public event System.Messaging.PeekCompletedEventHandler PeekCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Messaging.PeekCompletedEventHandler PeekCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Messaging.MessageQueue.PeekCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PeekCompleted As PeekCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Messaging::PeekCompletedEventHandler ^ PeekCompleted;" />
      <MemberSignature Language="F#" Value="member this.PeekCompleted : System.Messaging.PeekCompletedEventHandler " Usage="member this.PeekCompleted : System.Messaging.PeekCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_PeekCompleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.PeekCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-1986">큐에서 메시지를 제거하지 않고 메시지를 읽는 경우에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1986">Occurs when a message is read without being removed from the queue.</span></span> <span data-ttu-id="b509c-1987">이는 비동기 작업인 <see cref="M:System.Messaging.MessageQueue.BeginPeek" />의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1987">This is a result of the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginPeek" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1988"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 비동기 처리에 발생 하는 데 사용 되는 <xref:System.Messaging.MessageQueue.PeekCompleted> 메시지 큐에서 사용할 수 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-1988"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is used in asynchronous processing to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message is available in the queue.</span></span>  
  
 <span data-ttu-id="b509c-1989"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 호출 하 여 시작 작업을 완료 하는 데 사용 됩니다 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 고 메시지를 피킹할 때는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1989"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is used to complete the operation initiated by a call to <xref:System.Messaging.MessageQueue.BeginPeek%2A> and peek the message when the <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised.</span></span>  
  
 <span data-ttu-id="b509c-1990"><xref:System.Messaging.PeekCompletedEventHandler> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1990">When you create a <xref:System.Messaging.PeekCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="b509c-1991">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1991">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="b509c-1992">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1992">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="b509c-1993">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1993">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b509c-1994">다음 코드 예제에서는 명명 된 이벤트 처리기를 만듭니다 `MyPeekCompleted`에 연결 합니다 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트 처리기 대리자를 호출 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 경로에 있는 큐에 비동기 작업을 시작 하려면 ". \myQueue"입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1994">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="b509c-1995">경우는 <xref:System.Messaging.MessageQueue.PeekCompleted> 이벤트가 발생 하 고 예제는 메시지를 피킹합니다 화면으로 해당 본문을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1995">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="b509c-1996">이 예제에서는 호출 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 다시 새 비동기 작업을 시작 하려면</span><span class="sxs-lookup"><span data-stu-id="b509c-1996">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Sub Purge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Purge();" />
      <MemberSignature Language="F#" Value="member this.Purge : unit -&gt; unit" Usage="messageQueue.Purge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-1997">큐에 포함된 모든 메시지를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1997">Deletes all the messages contained in the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-1998">큐를 비우면 메시지 큐에 영향을 주는 큐 수정 플래그를 설정 하 여 <xref:System.Messaging.MessageQueue.LastModifyTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1998">Purging the queue causes Message Queuing to set the queue modification flag, which affects the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property.</span></span> <span data-ttu-id="b509c-1999">큐에서 제거 되는 메시지는 손실 됩니다. 배달 못 한 편지 큐 또는 저널 큐에 전송 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-1999">Messages that are purged from the queue are lost; they are not sent to the dead-letter queue or the journal queue.</span></span>  
  
 <span data-ttu-id="b509c-2000">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2000">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2001">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2001">Workgroup mode</span></span>|<span data-ttu-id="b509c-2002">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2002">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2003">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2003">Local computer</span></span>|<span data-ttu-id="b509c-2004">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2004">Yes</span></span>|  
|<span data-ttu-id="b509c-2005">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2005">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2006">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2006">Yes</span></span>|  
|<span data-ttu-id="b509c-2007">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2007">Remote computer</span></span>|<span data-ttu-id="b509c-2008">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2008">No</span></span>|  
|<span data-ttu-id="b509c-2009">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2009">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2010">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2010">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2011">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.Purge%2A>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2011">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Purge%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#29](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#29)]
 [!code-csharp[MessageQueue2#29](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2012">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2012">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
        <altmember cref="M:System.Messaging.MessageQueue.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public string QueueName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QueueName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueueName : string with get, set" Usage="System.Messaging.MessageQueue.QueueName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_QueueName")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-2013">큐를 식별하는 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2013">Gets or sets the friendly name that identifies the queue.</span></span></summary>
        <value><span data-ttu-id="b509c-2014">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐를 식별하는 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2014">The name that identifies the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="b509c-2015">이 값은 <see langword="null" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2015">The value cannot be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2016">결합할 수 있습니다 합니다 <xref:System.Messaging.MessageQueue.QueueName%2A> 사용 하 여는 <xref:System.Messaging.MessageQueue.MachineName%2A> 친숙 한 만들려면 <xref:System.Messaging.MessageQueue.Path%2A> 큐의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2016">You can combine the <xref:System.Messaging.MessageQueue.QueueName%2A> with the <xref:System.Messaging.MessageQueue.MachineName%2A> to create a friendly <xref:System.Messaging.MessageQueue.Path%2A> name for the queue.</span></span> <span data-ttu-id="b509c-2017">이름 변형에 대 한 구문을 <xref:System.Messaging.MessageQueue.Path%2A> 속성 표에 표시 된 것과 같이 큐의 유형에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2017">The syntax for the friendly name variation of the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue, as shown in the following table.</span></span>  
  
|<span data-ttu-id="b509c-2018">큐 유형</span><span class="sxs-lookup"><span data-stu-id="b509c-2018">Queue type</span></span>|<span data-ttu-id="b509c-2019">구문</span><span class="sxs-lookup"><span data-stu-id="b509c-2019">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="b509c-2020">공개 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-2020">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="b509c-2021">개인 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-2021">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="b509c-2022">저널 큐</span><span class="sxs-lookup"><span data-stu-id="b509c-2022">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
  
 <span data-ttu-id="b509c-2023">사용 하 여 "."를 로컬 컴퓨터를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2023">Use "." to represent the local computer.</span></span>  
  
 <span data-ttu-id="b509c-2024">변경 된 <xref:System.Messaging.MessageQueue.QueueName%2A> 속성에 영향을 줍니다는 <xref:System.Messaging.MessageQueue.Path%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2024">Changing the <xref:System.Messaging.MessageQueue.QueueName%2A> property affects the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span> <span data-ttu-id="b509c-2025">설정 하는 경우는 <xref:System.Messaging.MessageQueue.QueueName%2A> 설정 하지 않고는 <xref:System.Messaging.MessageQueue.MachineName%2A> 속성을 <xref:System.Messaging.MessageQueue.Path%2A> 속성이 됩니다.\\ `QueueName`.</span><span class="sxs-lookup"><span data-stu-id="b509c-2025">If you set the <xref:System.Messaging.MessageQueue.QueueName%2A> without setting the <xref:System.Messaging.MessageQueue.MachineName%2A> property, the <xref:System.Messaging.MessageQueue.Path%2A> property becomes .\\`QueueName`.</span></span> <span data-ttu-id="b509c-2026">그렇지 않으면 합니다 <xref:System.Messaging.MessageQueue.Path%2A> 됩니다 `MachineName` \\ `QueueName`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2026">Otherwise, the <xref:System.Messaging.MessageQueue.Path%2A> becomes `MachineName`\\`QueueName`.</span></span>  
  
 <span data-ttu-id="b509c-2027">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2027">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2028">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2028">Workgroup mode</span></span>|<span data-ttu-id="b509c-2029">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2029">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2030">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2030">Local computer</span></span>|<span data-ttu-id="b509c-2031">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2031">Yes</span></span>|  
|<span data-ttu-id="b509c-2032">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2032">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2033">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2033">Yes</span></span>|  
|<span data-ttu-id="b509c-2034">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2034">Remote computer</span></span>|<span data-ttu-id="b509c-2035">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2035">Yes</span></span>|  
|<span data-ttu-id="b509c-2036">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2036">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2037">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2037">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2038">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.QueueName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2038">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.QueueName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#24](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2039">큐 이름이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2039">The queue name is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="ReadHandle">
      <MemberSignature Language="C#" Value="public IntPtr ReadHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ReadHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.ReadHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ReadHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadHandle : nativeint" Usage="System.Messaging.MessageQueue.ReadHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_ReadHandle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-2040">메시지 큐에서 메시지를 읽는 데 사용되는 기본 핸들을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2040">Gets the native handle used to read messages from the message queue.</span></span></summary>
        <value><span data-ttu-id="b509c-2041">큐에서 메시지를 피킹하거나 받는 데 사용하는 네이티브 큐 개체에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2041">A handle to the native queue object that you use for peeking and receiving messages from the queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2042"><xref:System.Messaging.MessageQueue.ReadHandle%2A> 큐에서 메시지를 주고받는 보기에 사용 되는 메시지 큐 개체에 대 한 네이티브 Windows 핸들을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2042">The <xref:System.Messaging.MessageQueue.ReadHandle%2A> provides a native Windows handle to the message queue object that is used for peeking and receiving messages from the queue.</span></span> <span data-ttu-id="b509c-2043">큐의 경로 변경 하면 핸들이 닫히고 새 값으로.</span><span class="sxs-lookup"><span data-stu-id="b509c-2043">If you change the path of the queue, the handle is closed and reopened with a new value.</span></span>  
  
 <span data-ttu-id="b509c-2044">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2044">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2045">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2045">Workgroup mode</span></span>|<span data-ttu-id="b509c-2046">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2046">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2047">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2047">Local computer</span></span>|<span data-ttu-id="b509c-2048">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2048">Yes</span></span>|  
|<span data-ttu-id="b509c-2049">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2049">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2050">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2050">Yes</span></span>|  
|<span data-ttu-id="b509c-2051">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2051">Remote computer</span></span>|<span data-ttu-id="b509c-2052">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2052">No</span></span>|  
|<span data-ttu-id="b509c-2053">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2053">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2054">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2054">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2055">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2055">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.CanRead" />
        <altmember cref="P:System.Messaging.MessageQueue.WriteHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Receive">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe><span data-ttu-id="b509c-2056">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2056">The method is not thread safe.</span></span></threadsafe>
        <summary><span data-ttu-id="b509c-2057">큐에 있는 첫 번째 메시지를 받고, 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2057">Receives the first message in the queue, removing it from the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive();" />
      <MemberSignature Language="F#" Value="member this.Receive : unit -&gt; System.Messaging.Message" Usage="messageQueue.Receive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-2058"><see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐에서 사용할 수 있는 첫 번째 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2058">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="b509c-2059">이 호출은 동기적이므로 메시지를 사용할 수 있을 때까지 현재 실행 스레드를 중단합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2059">This call is synchronous, and blocks the current thread of execution until a message is available.</span></span></summary>
        <returns><span data-ttu-id="b509c-2060">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2060">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2061">이 오버 로드를 사용 하 여 큐에서 메시지를 받거나 큐에 메시지가 있을 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2061">Use this overload to receive a message from a queue, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2062"><xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 제거 하므로 동기적으로 메시지를 읽고 메서드를 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2062">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="b509c-2063">에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.Receive%2A> 새로운, 또는 큐에서 우선 순위가 높은 메시지를 수행 하는 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2063">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue, or new, higher priority messages.</span></span>  
  
 <span data-ttu-id="b509c-2064">큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2064">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="b509c-2065"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2065">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2066">호출 하 여 <xref:System.Messaging.MessageQueue.Receive%2A> 것이 허용 되는 현재 스레드를 메시지가 큐에 도착할 때까지 대기 하는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2066">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2067">이 오버 로드는 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드는 무기한 시간 제한을 지정, 응용 프로그램이 무기한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2067">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="b509c-2068">응용 프로그램 처리 메시지를 기다리지 않고 계속 해야 하는 경우 비동기 메서드를 사용 하 여 고려해 야 <xref:System.Messaging.MessageQueue.BeginReceive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2068">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2069">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2069">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2070">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2070">Workgroup mode</span></span>|<span data-ttu-id="b509c-2071">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2071">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2072">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2072">Local computer</span></span>|<span data-ttu-id="b509c-2073">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2073">Yes</span></span>|  
|<span data-ttu-id="b509c-2074">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2074">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2075">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2075">Yes</span></span>|  
|<span data-ttu-id="b509c-2076">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2076">Remote computer</span></span>|<span data-ttu-id="b509c-2077">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2077">No</span></span>|  
|<span data-ttu-id="b509c-2078">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2078">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2079">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2079">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2080">다음 코드 예제에서는 큐에서 메시지를 수신 및 화면에 해당 메시지에 대 한 정보를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2080">The following code example receives a message from a queue and outputs information about that message to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CPP/mqreceive_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Receive_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CS/mqreceive_noparms.cs#1)]
 [!code-vb[MessageQueue.Receive_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_noparms/VB/mqreceive_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2081">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2081">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.Receive transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="b509c-2082"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2082">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2083"><see cref="T:System.Messaging.MessageQueue" />가 참조하는 트랜잭션 큐에서 사용할 수 있는 첫 번째 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2083">Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="b509c-2084">이 호출은 동기적이므로 메시지를 사용할 수 있을 때까지 현재 실행 스레드를 중단합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2084">This call is synchronous, and blocks the current thread of execution until a message is available.</span></span></summary>
        <returns><span data-ttu-id="b509c-2085">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2085">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2086">이 오버 로드를 사용 하 여 정의한 내부 트랜잭션 컨텍스트를 사용 하 여 트랜잭션 큐 로부터 메시지를 수신 하는 `transaction` 매개 변수 또는 큐에 메시지가 있을 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2086">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2087"><xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 제거 하므로 동기적으로 메시지를 읽고 메서드를 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2087">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="b509c-2088">에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 나오는 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2088">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2089">트랜잭션 큐에이 메서드는, 때문에 수신 된 메시지 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2089">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2090">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2090">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2091">큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2091">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="b509c-2092"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2092">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2093">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.Peek%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2093">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="b509c-2094">때문에 <xref:System.Messaging.MessageQueue.Peek%2A> 큐에 메시지를 제거 하지 않습니다에 대 한 호출으로 롤백할 수 <xref:System.Messaging.MessageQueueTransaction.Abort%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2094">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2095">호출 하 여 <xref:System.Messaging.MessageQueue.Receive%2A> 것이 허용 되는 현재 스레드를 메시지가 큐에 도착할 때까지 대기 하는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2095">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2096">이 오버 로드는 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드는 무기한 시간 제한을 지정, 응용 프로그램이 무기한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2096">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="b509c-2097">응용 프로그램 처리 메시지를 기다리지 않고 계속 해야 하는 경우 비동기 메서드를 사용 하 여 고려해 야 <xref:System.Messaging.MessageQueue.BeginReceive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2097">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2098">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2098">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2099">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2099">Workgroup mode</span></span>|<span data-ttu-id="b509c-2100">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2100">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2101">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2101">Local computer</span></span>|<span data-ttu-id="b509c-2102">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2102">Yes</span></span>|  
|<span data-ttu-id="b509c-2103">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2103">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2104">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2104">Yes</span></span>|  
|<span data-ttu-id="b509c-2105">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2105">Remote computer</span></span>|<span data-ttu-id="b509c-2106">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2106">No</span></span>|  
|<span data-ttu-id="b509c-2107">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2107">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2108">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2108">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2109">다음 코드 예제에서는 로컬 컴퓨터의 트랜잭션 큐에 연결 하 고 큐에 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2109">The following code example connects to a transactional queue on the local computer and sends a message to the queue.</span></span> <span data-ttu-id="b509c-2110">그런 다음 주문을 포함 하는 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2110">It then receives the message that contains an order.</span></span> <span data-ttu-id="b509c-2111">비트랜잭션 큐를 발견할 경우 throw 됩니다 예외 및 트랜잭션 롤백하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2111">If it encounters a non-transactional queue, it will throw and exception and rollback the transaction.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_transaction/CPP/mqreceive_transaction.cpp#1)]
 [!code-csharp[MessageQueue.Receive_transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_transaction/CS/mqreceive_transaction.cs#1)]
 [!code-vb[MessageQueue.Receive_transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_transaction/VB/mqreceive_transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2112">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2112">An error occurred when accessing a Message Queuing method.</span></span>  
  
<span data-ttu-id="b509c-2113">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2113">-or-</span></span> 
<span data-ttu-id="b509c-2114">비트랜잭션 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2114">The queue is non-transactional.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-2115">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2115">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.Receive transactionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="transactionType"><span data-ttu-id="b509c-2116"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2116">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-2117"><see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐에서 사용할 수 있는 첫 번째 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2117">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="b509c-2118">이 호출은 동기적이므로 메시지를 사용할 수 있을 때까지 현재 실행 스레드를 중단합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2118">This call is synchronous, and blocks the current thread of execution until a message is available.</span></span></summary>
        <returns><span data-ttu-id="b509c-2119">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2119">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2120">이 오버 로드를 사용 하 여 정의한 트랜잭션 컨텍스트를 사용 하 여 큐에서 메시지를 수신 하는 `transactionType` 매개 변수 또는 큐에 메시지가 있을 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2120">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2121">지정할 `Automatic` 에 대 한는 `transactionType` 매개 변수가 이미 있는 경우 외부 트랜잭션 컨텍스트를 사용 하 여 메시지를 수신 하려는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2121">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="b509c-2122">지정 `Single` 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2122">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-2123">지정할 수 있습니다 `None` 트랜잭션 컨텍스트 외부에서 트랜잭션 큐 로부터 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2123">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="b509c-2124"><xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 제거 하므로 동기적으로 메시지를 읽고 메서드를 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2124">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="b509c-2125">에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 나오는 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2125">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2126">를 트랜잭션 큐 로부터 메시지를 받으려면이 메서드를 호출 하면 수신 된 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2126">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2127">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2127">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2128">큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2128">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="b509c-2129"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2129">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2130">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.Peek%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2130">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="b509c-2131">때문에 <xref:System.Messaging.MessageQueue.Peek%2A> 큐에 메시지를 제거 하지 않습니다에 대 한 호출으로 롤백할 수 <xref:System.Messaging.MessageQueueTransaction.Abort%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2131">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2132">호출 하 여 <xref:System.Messaging.MessageQueue.Receive%2A> 것이 허용 되는 현재 스레드를 메시지가 큐에 도착할 때까지 대기 하는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2132">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2133">이 오버 로드는 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드는 무기한 시간 제한을 지정, 응용 프로그램이 무기한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2133">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="b509c-2134">응용 프로그램 처리 메시지를 기다리지 않고 계속 해야 하는 경우 비동기 메서드를 사용 하 여 고려해 야 <xref:System.Messaging.MessageQueue.BeginReceive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2134">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2135">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2135">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2136">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2136">Workgroup mode</span></span>|<span data-ttu-id="b509c-2137">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2137">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2138">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2138">Local computer</span></span>|<span data-ttu-id="b509c-2139">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2139">Yes</span></span>|  
|<span data-ttu-id="b509c-2140">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2140">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2141">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2141">Yes</span></span>|  
|<span data-ttu-id="b509c-2142">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2142">Remote computer</span></span>|<span data-ttu-id="b509c-2143">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2143">No</span></span>|  
|<span data-ttu-id="b509c-2144">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2144">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2145">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2145">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2146">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2146">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#9](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#9)]
 [!code-csharp[MessageQueue2#9](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2147">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2147">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2148"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2148">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-2149">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2149">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.Receive timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-2150">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2150">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="b509c-2151"><see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐의 첫 번째 메시지를 받고, 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2151">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2152">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2152">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2153">이 오버로드를 사용하여 메시지를 받고, 큐에 메시지가 없는 경우에는 지정된 시간 내에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2153">Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2154"><xref:System.Messaging.MessageQueue.Receive%2A> 동기적으로 메시지를 읽고 메서드를 사용 하면 큐에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2154">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, removing it from the queue.</span></span> <span data-ttu-id="b509c-2155">에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.Receive%2A> 새로운, 또는 큐에서 우선 순위가 높은 메시지를 수행 하는 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2155">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue, or new, higher priority messages.</span></span>  
  
 <span data-ttu-id="b509c-2156">큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2156">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="b509c-2157"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2157">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2158">호출 하 여 <xref:System.Messaging.MessageQueue.Receive%2A> 것이 허용 되는 현재 스레드를 메시지가 큐에 도착할 때까지 대기 하는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2158">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2159">스레드가 지정 된 기간의 시간 또는 무기한으로 차단 됩니다의 값을 지정 하는 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 에 대 한는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2159">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="b509c-2160">응용 프로그램 처리 메시지를 기다리지 않고 계속 해야 하는 경우 비동기 메서드를 사용 하 여 고려해 야 <xref:System.Messaging.MessageQueue.BeginReceive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2160">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2161">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2161">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2162">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2162">Workgroup mode</span></span>|<span data-ttu-id="b509c-2163">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2163">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2164">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2164">Local computer</span></span>|<span data-ttu-id="b509c-2165">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2165">Yes</span></span>|  
|<span data-ttu-id="b509c-2166">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2166">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2167">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2167">Yes</span></span>|  
|<span data-ttu-id="b509c-2168">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2168">Remote computer</span></span>|<span data-ttu-id="b509c-2169">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2169">No</span></span>|  
|<span data-ttu-id="b509c-2170">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2170">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2171">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2171">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2172">다음 코드 예제에서는 큐에서 메시지를 수신 및 화면에 해당 메시지에 대 한 정보를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2172">The following code example receives a message from a queue and outputs information about that message to the screen.</span></span> <span data-ttu-id="b509c-2173">이 예제에서는 메시지가 큐에 도착할 때까지 기다리는 동안 최대 5 초 동안 실행이 일시 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2173">The example pauses execution for up to five seconds while waiting for a message to arrive in the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_timeout/CPP/mqreceive_timeout.cpp#1)]
 [!code-csharp[MessageQueue.Receive_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_timeout/CS/mqreceive_timeout.cs#1)]
 [!code-vb[MessageQueue.Receive_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_timeout/VB/mqreceive_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2174"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2174">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2175">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2175">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2176">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2176">-or-</span></span> 
<span data-ttu-id="b509c-2177">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2177">An error occurred when accessing a Message Queuing method</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-2178">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2178">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.Cursor -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, cursor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-2179">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2179">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="cursor"><span data-ttu-id="b509c-2180">메시지 큐에서 특정 위치를 유지하는 <see cref="T:System.Messaging.Cursor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2180">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <summary><span data-ttu-id="b509c-2181">지정된 커서를 사용하여 큐에 있는 현재 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2181">Receives the current message in the queue, using a specified cursor.</span></span> <span data-ttu-id="b509c-2182">사용할 수 있는 메시지가 없는 경우 이 메서드는 메시지를 사용할 수 있거나 시간 제한이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2182">If no message is available, this method waits until either a message is available, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2183">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2183">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2184"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2184">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2185">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2185">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2186">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2186">-or-</span></span> 
<span data-ttu-id="b509c-2187">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2187">An error occurred when accessing a Message Queuing method</span></span> 
<span data-ttu-id="b509c-2188">이 오버로드를 사용하여 메시지를 받고, 큐에 메시지가 없는 경우에는 지정된 시간 내에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2188">Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-2189">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2189">The method is not thread safe.</span></span></threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-2190">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2190">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-2191"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2191">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2192"><see cref="T:System.Messaging.MessageQueue" />가 참조하는 트랜잭션 큐의 첫 번째 메시지를 받으며, 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2192">Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2193">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2193">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2194">이 오버 로드를 사용 하 여 정의한 내부 트랜잭션 컨텍스트를 사용 하 여 트랜잭션 큐 로부터 메시지를 수신 하는 `transaction` 매개 변수, 및는 지정 된 기간 내 큐에 메시지가 없는 경우 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2194">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, and return within a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2195"><xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 제거 하므로 동기적으로 메시지를 읽고 메서드를 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2195">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="b509c-2196">에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 나오는 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2196">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2197">트랜잭션 큐에이 메서드는, 때문에 수신 된 메시지 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2197">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2198">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2198">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2199">큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2199">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="b509c-2200"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2200">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2201">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.Peek%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2201">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="b509c-2202">때문에 <xref:System.Messaging.MessageQueue.Peek%2A> 큐에 메시지를 제거 하지 않습니다에 대 한 호출으로 롤백할 수 <xref:System.Messaging.MessageQueueTransaction.Abort%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2202">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2203">호출 하 여 <xref:System.Messaging.MessageQueue.Receive%2A> 것이 허용 되는 현재 스레드를 메시지가 큐에 도착할 때까지 대기 하는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2203">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2204">스레드가 지정 된 기간의 시간 또는 무기한으로 차단 됩니다의 값을 지정 하는 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 에 대 한는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2204">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="b509c-2205">응용 프로그램 처리 메시지를 기다리지 않고 계속 해야 하는 경우 비동기 메서드를 사용 하 여 고려해 야 <xref:System.Messaging.MessageQueue.BeginReceive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2205">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2206">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2206">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2207">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2207">Workgroup mode</span></span>|<span data-ttu-id="b509c-2208">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2208">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2209">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2209">Local computer</span></span>|<span data-ttu-id="b509c-2210">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2210">Yes</span></span>|  
|<span data-ttu-id="b509c-2211">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2211">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2212">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2212">Yes</span></span>|  
|<span data-ttu-id="b509c-2213">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2213">Remote computer</span></span>|<span data-ttu-id="b509c-2214">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2214">No</span></span>|  
|<span data-ttu-id="b509c-2215">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2215">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2216">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2216">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2217">다음 코드 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2217">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/CPP/mqreceive_timeouttransaction.cpp#1)]
 [!code-csharp[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/CS/mqreceive_timeouttransaction.cs#1)]
 [!code-vb[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/VB/mqreceive_timeouttransaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2218"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2218">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2219">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2219">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2220">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2220">-or-</span></span> 
<span data-ttu-id="b509c-2221">비트랜잭션 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2221">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="b509c-2222">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2222">-or-</span></span> 
<span data-ttu-id="b509c-2223">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2223">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-2224">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2224">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-2225">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2225">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-2226"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2226">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-2227"><see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐에서 사용할 수 있는 첫 번째 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2227">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span></span> <span data-ttu-id="b509c-2228">이 호출은 동기적이므로 큐에 메시지를 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2228">This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2229">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <see cref="T:System.Messaging.Message" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2229">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2230">이 오버 로드를 사용 하 여 정의한 트랜잭션 컨텍스트를 사용 하 여 큐에서 메시지를 수신 하는 `transactionType` 매개 변수 및 지정 된 기간 동안 큐에 메시지가 없는 경우 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2230">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2231">지정할 `Automatic` 에 대 한는 `transactionType` 매개 변수가 이미 있는 경우 외부 트랜잭션 컨텍스트를 사용 하 여 메시지를 수신 하려는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2231">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="b509c-2232">지정 `Single` 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2232">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-2233">지정할 수 있습니다 `None` 트랜잭션 컨텍스트 외부에서 트랜잭션 큐 로부터 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2233">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="b509c-2234"><xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 제거 하므로 동기적으로 메시지를 읽고 메서드를 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2234">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="b509c-2235">에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 나오는 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2235">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2236">를 트랜잭션 큐 로부터 메시지를 받으려면이 메서드를 호출 하면 수신 된 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2236">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2237">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2237">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2238">큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2238">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="b509c-2239"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2239">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2240">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.Peek%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2240">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="b509c-2241">때문에 <xref:System.Messaging.MessageQueue.Peek%2A> 큐에 메시지를 제거 하지 않습니다에 대 한 호출으로 롤백할 수 <xref:System.Messaging.MessageQueueTransaction.Abort%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2241">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2242">호출 하 여 <xref:System.Messaging.MessageQueue.Receive%2A> 것이 허용 되는 현재 스레드를 메시지가 큐에 도착할 때까지 대기 하는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2242">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2243">스레드가 지정 된 기간의 시간 또는 무기한으로 차단 됩니다의 값을 지정 하는 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 에 대 한는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2243">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="b509c-2244">응용 프로그램 처리 메시지를 기다리지 않고 계속 해야 하는 경우 비동기 메서드를 사용 하 여 고려해 야 <xref:System.Messaging.MessageQueue.BeginReceive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2244">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2245">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2245">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2246">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2246">Workgroup mode</span></span>|<span data-ttu-id="b509c-2247">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2247">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2248">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2248">Local computer</span></span>|<span data-ttu-id="b509c-2249">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2249">Yes</span></span>|  
|<span data-ttu-id="b509c-2250">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2250">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2251">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2251">Yes</span></span>|  
|<span data-ttu-id="b509c-2252">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2252">Remote computer</span></span>|<span data-ttu-id="b509c-2253">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2253">No</span></span>|  
|<span data-ttu-id="b509c-2254">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2254">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2255">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2255">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2256">다음 코드 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2256">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[MessageQueue2#8](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#8)]
 [!code-csharp[MessageQueue2#8](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2257"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2257">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2258"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2258">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2259">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2259">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2260">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2260">-or-</span></span> 
<span data-ttu-id="b509c-2261">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2261">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-2262">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2262">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.Cursor * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, cursor, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-2263">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2263">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="cursor"><span data-ttu-id="b509c-2264">메시지 큐에서 특정 위치를 유지하는 <see cref="T:System.Messaging.Cursor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2264">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-2265"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2265">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2266">지정된 커서를 사용하여 큐에 있는 현재 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2266">Receives the current message in the queue, using a specified cursor.</span></span> <span data-ttu-id="b509c-2267">사용할 수 있는 메시지가 없는 경우 이 메서드는 메시지를 사용할 수 있거나 시간 제한이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2267">If no message is available, this method waits until either a message is available, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2268">큐에 있는 메시지를 참조하는 <see cref="T:System.Messaging.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2268">A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2269">이 오버 로드를 사용 하 여 정의한 내부 트랜잭션 컨텍스트를 사용 하 여 트랜잭션 큐 로부터 메시지를 수신 하는 `transaction` 매개 변수, 및는 지정 된 기간 내 큐에 메시지가 없는 경우 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2269">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, and return within a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2270"><xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 제거 하므로 동기적으로 메시지를 읽고 메서드를 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2270">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="b509c-2271">에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 나오는 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2271">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2272">트랜잭션 큐에이 메서드는, 때문에 트랜잭션이 중단 되 면 수신 되는 메시지 큐로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2272">Because this method is called on a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2273">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2273">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2274">큐에서 제거 하지 않고 큐의 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2274">To read a message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="b509c-2275">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.Peek%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2275">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="b509c-2276">때문에 <xref:System.Messaging.MessageQueue.Peek%2A> 큐에 메시지를 제거 하지 않습니다, 호출 하 여 롤백하지 즉 <xref:System.Messaging.MessageQueueTransaction.Abort%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2276">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there is nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2277">호출 하 여 <xref:System.Messaging.MessageQueue.Receive%2A> 것이 허용 되는 현재 스레드를 메시지가 큐에 도착할 때까지 대기 하는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2277">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2278">스레드는 지정 된 기간의 시간 또는 무기한으로 차단 값을 지정 하는 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 에 대 한는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2278">The thread is blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="b509c-2279">응용 프로그램 처리 메시지를 기다리지 않고 계속 해야 하는 경우 비동기 메서드를 사용 하 여 고려해 야 <xref:System.Messaging.MessageQueue.BeginReceive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2279">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2280">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2280">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2281">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2281">Workgroup mode</span></span>|<span data-ttu-id="b509c-2282">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2282">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2283">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2283">Local computer</span></span>|<span data-ttu-id="b509c-2284">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2284">Yes</span></span>|  
|<span data-ttu-id="b509c-2285">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2285">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2286">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2286">Yes</span></span>|  
|<span data-ttu-id="b509c-2287">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2287">Remote computer</span></span>|<span data-ttu-id="b509c-2288">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2288">No</span></span>|  
|<span data-ttu-id="b509c-2289">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2289">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2290">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2290">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2291"><paramref name="cursor" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2291">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b509c-2292">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2292">-or-</span></span> 
<span data-ttu-id="b509c-2293"><paramref name="transaction" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2293">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2294"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2294">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span> <span data-ttu-id="b509c-2295"><paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2295">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2296">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2296">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2297">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2297">-or-</span></span> 
<span data-ttu-id="b509c-2298">비트랜잭션 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2298">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="b509c-2299">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2299">-or-</span></span> 
<span data-ttu-id="b509c-2300">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2300">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-2301">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2301">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Receive : TimeSpan * System.Messaging.Cursor * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.Receive (timeout, cursor, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b509c-2302">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2302">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="cursor"><span data-ttu-id="b509c-2303">메시지 큐에서 특정 위치를 유지하는 <see cref="T:System.Messaging.Cursor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2303">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-2304">메시지와 연결할 트랜잭션 컨텍스트 형식을 설명하는 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2304">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values that describes the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-2305">지정된 커서를 사용하여 큐에 있는 현재 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2305">Receives the current message in the queue, using a specified cursor.</span></span> <span data-ttu-id="b509c-2306">사용할 수 있는 메시지가 없는 경우 이 메서드는 메시지를 사용할 수 있거나 시간 제한이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2306">If no message is available, this method waits until either a message is available, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2307">큐에 있는 메시지를 참조하는 <see cref="T:System.Messaging.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2307">A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2308">이 오버 로드를 사용 하 여 정의한 트랜잭션 컨텍스트를 사용 하 여 큐에서 메시지를 수신 하는 `transactionType` 매개 변수 및 지정 된 기간 동안 큐에 메시지가 없는 경우 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2308">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2309">지정할 `Automatic` 에 대 한는 `transactionType` 매개 변수가 이미 있는 경우 외부 트랜잭션 컨텍스트를 사용 하 여 메시지를 수신 하려는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2309">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="b509c-2310">지정 `Single` 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2310">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-2311">지정할 수 있습니다 `None` 트랜잭션 컨텍스트 외부에서 트랜잭션 큐 로부터 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2311">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="b509c-2312"><xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 제거 하므로 동기적으로 메시지를 읽고 메서드를 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2312">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="b509c-2313">에 대 한 후속 호출 <xref:System.Messaging.MessageQueue.Receive%2A> 큐에서 나오는 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2313">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2314">를 트랜잭션 큐 로부터 메시지를 받으려면이 메서드를 호출 하면 트랜잭션이 중단 되 면 수신 되는 메시지 큐로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2314">If this method is called to receive a message from a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2315">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2315">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2316">큐에서 제거 하지 않고 큐의 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.Peek%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2316">To read a message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="b509c-2317">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.Peek%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2317">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="b509c-2318">때문에 <xref:System.Messaging.MessageQueue.Peek%2A> 큐에 메시지를 제거 하지 않습니다, 호출 하 여 롤백하지 즉 <xref:System.Messaging.MessageQueueTransaction.Abort%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2318">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there is nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2319">호출 하 여 <xref:System.Messaging.MessageQueue.Receive%2A> 것이 허용 되는 현재 스레드를 메시지가 큐에 도착할 때까지 대기 하는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2319">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2320">스레드는 지정 된 기간의 시간 또는 무기한으로 차단 값을 지정 하는 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 에 대 한는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2320">The thread is blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="b509c-2321">응용 프로그램 처리 메시지를 기다리지 않고 계속 해야 하는 경우 비동기 메서드를 사용 하 여 고려해 야 <xref:System.Messaging.MessageQueue.BeginReceive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2321">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="b509c-2322">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2322">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2323">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2323">Workgroup mode</span></span>|<span data-ttu-id="b509c-2324">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2324">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2325">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2325">Local computer</span></span>|<span data-ttu-id="b509c-2326">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2326">Yes</span></span>|  
|<span data-ttu-id="b509c-2327">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2327">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2328">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2328">Yes</span></span>|  
|<span data-ttu-id="b509c-2329">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2329">Remote computer</span></span>|<span data-ttu-id="b509c-2330">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2330">No</span></span>|  
|<span data-ttu-id="b509c-2331">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2331">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2332">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2332">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2333"><paramref name="cursor" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2333">The <paramref name="cursor" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2334"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2334">The value specified for the <paramref name="timeout" /> parameter is not valid.</span></span> <span data-ttu-id="b509c-2335"><paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2335">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2336"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2336">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2337">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2337">A message did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2338">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2338">-or-</span></span> 
<span data-ttu-id="b509c-2339">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2339">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <threadsafe><span data-ttu-id="b509c-2340">메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2340">The method is not thread safe.</span></span></threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveByCorrelationId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-2341">주어진 상관 관계 식별자를 갖는 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2341">Receives a message that matches a given correlation identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId correlationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="b509c-2342">받을 메시지의 <see cref="P:System.Messaging.Message.CorrelationId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2342">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <summary><span data-ttu-id="b509c-2343">주어진 상관 관계 식별자를 갖는 메시지를 비트랜잭션 큐로부터 받습니다. 지정된 상관 관계 식별자가 포함된 메시지가 큐에 현재 존재하지 않는 경우에는 바로 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2343">Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2344">전달된 <paramref name="correlationId" /> 매개 변수와 <see cref="T:System.Messaging.Message" />가 일치하는 <see cref="P:System.Messaging.Message.CorrelationId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2344">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2345">이 메서드가 참조 하는 비트랜잭션 큐에서 찾습니다를 <xref:System.Messaging.MessageQueue> 메시지에 대 한 해당 <xref:System.Messaging.Message.CorrelationId%2A> 지정 된 일치 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2345">This method looks in the non-transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2346">메시지가 발견 되지 일치 하는 경우는 `correlationID` 매개 변수 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2346">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="b509c-2347">이 고, 그렇지 메시지 큐에서 제거 되 고 응용 프로그램에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2347">Otherwise, the message is removed from the queue and returned to the application.</span></span>  
  
 <span data-ttu-id="b509c-2348"><xref:System.Messaging.Message.CorrelationId%2A> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐로 보낸 메시지를 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2348">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="b509c-2349">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2349">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2350">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 메서드 고유 식별자를 지정 하 여 메시지를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2350">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method retrieves a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="b509c-2351">큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2351">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2352"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2352">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2353">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2353">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2354">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2354">Workgroup mode</span></span>|<span data-ttu-id="b509c-2355">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2355">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2356">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2356">Local computer</span></span>|<span data-ttu-id="b509c-2357">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2357">Yes</span></span>|  
|<span data-ttu-id="b509c-2358">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2358">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2359">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2359">Yes</span></span>|  
|<span data-ttu-id="b509c-2360">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2360">Remote computer</span></span>|<span data-ttu-id="b509c-2361">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2361">No</span></span>|  
|<span data-ttu-id="b509c-2362">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2362">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2363">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2363">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2364">다음 코드 예제에서는 큐에서 주문을 포함 하는 메시지를 송수신 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2364">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="b509c-2365">원본 메시지가 도달 하거나이 특히 긍정 승인을 요청 큐에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2365">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2366"><paramref name="correlationId" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2366">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2367">지정된 <paramref name="correlationId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2367">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2368">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2368">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="b509c-2369">받을 메시지의 <see cref="P:System.Messaging.Message.CorrelationId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2369">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-2370"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2370">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2371">주어진 상관 관계 식별자를 갖는 메시지를 트랜잭션 큐로부터 받습니다. 지정된 상관 관계 식별자가 포함된 메시지가 큐에 현재 존재하지 않는 경우에는 바로 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2371">Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2372">전달된 <paramref name="correlationId" /> 매개 변수와 <see cref="T:System.Messaging.Message" />가 일치하는 <see cref="P:System.Messaging.Message.CorrelationId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2372">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2373">이 메서드는 참조 하는 트랜잭션 큐에서 검색를 <xref:System.Messaging.MessageQueue> 메시지에 대 한 해당 <xref:System.Messaging.Message.CorrelationId%2A> 지정 된 일치 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2373">This method looks in the transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2374">메시지가 발견 되지 일치 하는 경우는 `correlationID` 매개 변수 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2374">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="b509c-2375">메시지 큐에서 제거 되 고 정의한 내부 트랜잭션 컨텍스트를 사용 하 여 응용 프로그램에 반환 되는 고, 그렇지는 `transaction` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2375">Otherwise, the message is removed from the queue and returned to the application using the internal transaction context defined by the `transaction` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2376">트랜잭션 큐에이 메서드는, 때문에 수신 된 메시지 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2376">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2377">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2377">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2378"><xref:System.Messaging.Message.CorrelationId%2A> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐로 보낸 메시지를 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2378">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="b509c-2379">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2379">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2380">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 메서드 고유 식별자를 지정 하 여 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2380">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="b509c-2381">큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2381">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2382"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2382">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2383">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2383">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="b509c-2384">때문에 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2384">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2385">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2385">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2386">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2386">Workgroup mode</span></span>|<span data-ttu-id="b509c-2387">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2387">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2388">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2388">Local computer</span></span>|<span data-ttu-id="b509c-2389">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2389">Yes</span></span>|  
|<span data-ttu-id="b509c-2390">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2390">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2391">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2391">Yes</span></span>|  
|<span data-ttu-id="b509c-2392">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2392">Remote computer</span></span>|<span data-ttu-id="b509c-2393">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2393">No</span></span>|  
|<span data-ttu-id="b509c-2394">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2394">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2395">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2395">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2396">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2396">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#14](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#14)]
 [!code-csharp[MessageQueue2#14](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2397"><paramref name="correlationId" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2397">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b509c-2398">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2398">-or-</span></span> 
<span data-ttu-id="b509c-2399"><paramref name="transaction" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2399">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2400">지정된 <paramref name="correlationId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2400">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2401">비트랜잭션 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2401">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="b509c-2402">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2402">-or-</span></span> 
<span data-ttu-id="b509c-2403">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2403">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="b509c-2404">받을 메시지의 <see cref="P:System.Messaging.Message.CorrelationId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2404">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-2405"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2405">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-2406">주어진 상관 관계 식별자를 갖는 메시지를 받습니다. 지정된 상관 관계 식별자가 들어 있는 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2406">Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2407">전달된 <paramref name="correlationId" /> 매개 변수와 <see cref="T:System.Messaging.Message" />가 일치하는 <see cref="P:System.Messaging.Message.CorrelationId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2407">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2408">이 메서드가 참조 하는 큐에서 찾습니다를 <xref:System.Messaging.MessageQueue> 메시지에 대 한 해당 <xref:System.Messaging.Message.CorrelationId%2A> 지정 된 일치 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2408">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2409">메시지가 발견 되지 일치 하는 경우는 `correlationID` 매개 변수 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2409">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="b509c-2410">메시지 큐에서 제거 되 고 정의한 트랜잭션 컨텍스트를 사용 하 여 응용 프로그램에 반환 되는 고, 그렇지는 `transactionType` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2410">Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2411">지정할 `Automatic` 에 대 한는 `transactionType` 매개 변수가 이미 있는 경우 외부 트랜잭션 컨텍스트를 사용 하 여 메시지를 수신 하려는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2411">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="b509c-2412">지정 `Single` 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2412">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-2413">지정할 수 있습니다 `None` 트랜잭션 컨텍스트 외부에서 트랜잭션 큐 로부터 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2413">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="b509c-2414">를 트랜잭션 큐 로부터 메시지를 받으려면이 메서드를 호출 하면 수신 된 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2414">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2415">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2415">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2416"><xref:System.Messaging.Message.CorrelationId%2A> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐로 보낸 메시지를 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2416">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="b509c-2417">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2417">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2418">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 메서드 고유 식별자를 지정 하 여 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2418">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="b509c-2419">큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2419">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2420"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2420">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2421">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2421">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="b509c-2422">때문에 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2422">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2423">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2423">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2424">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2424">Workgroup mode</span></span>|<span data-ttu-id="b509c-2425">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2425">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2426">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2426">Local computer</span></span>|<span data-ttu-id="b509c-2427">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2427">Yes</span></span>|  
|<span data-ttu-id="b509c-2428">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2428">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2429">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2429">Yes</span></span>|  
|<span data-ttu-id="b509c-2430">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2430">Remote computer</span></span>|<span data-ttu-id="b509c-2431">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2431">No</span></span>|  
|<span data-ttu-id="b509c-2432">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2432">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2433">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2433">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2434">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2434">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#11](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#11)]
 [!code-csharp[MessageQueue2#11](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2435"><paramref name="correlationId" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2435">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2436">지정된 <paramref name="correlationId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2436">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2437"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2437">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2438">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2438">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="b509c-2439">받을 메시지의 <see cref="P:System.Messaging.Message.CorrelationId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2439">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="b509c-2440">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2440">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="b509c-2441">주어진 상관 관계 식별자를 갖는 메시지를 비트랜잭션 큐로부터 받고, 지정된 상관 관계 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2441">Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2442">전달된 <paramref name="correlationId" /> 매개 변수와 <see cref="T:System.Messaging.Message" />가 일치하는 <see cref="P:System.Messaging.Message.CorrelationId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2442">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2443">이 메서드가 참조 하는 비트랜잭션 큐에서 찾습니다를 <xref:System.Messaging.MessageQueue> 메시지에 대 한 해당 <xref:System.Messaging.Message.CorrelationId%2A> 지정 된 일치 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2443">This method looks in the non-transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2444">상관 관계 식별자를 사용 하 여 메시지에서 지정 하는 경우이 메서드가 즉시 반환 된 `correlationId` 매개 변수는 큐에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2444">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue.</span></span> <span data-ttu-id="b509c-2445">이 고, 그렇지 메서드는 새 메시지가 도착에 대 한 지정 된 기간을 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2445">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="b509c-2446">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2446">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b509c-2447">`timeout` 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2447">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="b509c-2448">새 메시지가 큐에 도착할 때까지 기다리는 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2448">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2449">때마다 새 메시지가 도착 하면이 메서드를 검사 합니다 <xref:System.Messaging.Message.CorrelationId%2A> 일치 하는지 확인 하려면 새 메시지의는 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2449">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2450">그렇지 않은 경우이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2450">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="b509c-2451">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것 없이 새 메시지 도착 한 시간 제한 기간이 만료 될 때까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드에 대 한 가능한 <xref:System.Messaging.Message.CorrelationId%2A> 일치 하는 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2451">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2452"><xref:System.Messaging.Message.CorrelationId%2A> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐로 보낸 메시지를 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2452">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="b509c-2453">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2453">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2454">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 메서드 고유 식별자를 지정 하 여 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2454">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="b509c-2455">큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2455">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2456"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2456">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2457">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2457">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2458">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2458">Workgroup mode</span></span>|<span data-ttu-id="b509c-2459">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2459">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2460">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2460">Local computer</span></span>|<span data-ttu-id="b509c-2461">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2461">Yes</span></span>|  
|<span data-ttu-id="b509c-2462">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2462">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2463">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2463">Yes</span></span>|  
|<span data-ttu-id="b509c-2464">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2464">Remote computer</span></span>|<span data-ttu-id="b509c-2465">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2465">No</span></span>|  
|<span data-ttu-id="b509c-2466">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2466">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2467">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2467">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2468">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2468">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#10](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#10)]
 [!code-csharp[MessageQueue2#10](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2469"><paramref name="correlationId" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2469">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2470"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2470">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2471">지정된 <paramref name="correlationId" />가 들어 있는 메시지가 큐에 없고 제한 시간이 만료되기 전에 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2471">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2472">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2472">-or-</span></span> 
<span data-ttu-id="b509c-2473">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2473">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * TimeSpan * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, timeout, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="b509c-2474">받을 메시지의 <see cref="P:System.Messaging.Message.CorrelationId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2474">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="b509c-2475">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2475">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-2476"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2476">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2477">주어진 상관 관계 식별자를 갖는 메시지를 트랜잭션 큐로부터 받고, 지정된 상관 관계 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2477">Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2478">전달된 <paramref name="correlationId" /> 매개 변수와 <see cref="T:System.Messaging.Message" />가 일치하는 <see cref="P:System.Messaging.Message.CorrelationId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2478">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2479">이 메서드는 참조 하는 트랜잭션 큐에서 검색를 <xref:System.Messaging.MessageQueue> 메시지에 대 한 해당 <xref:System.Messaging.Message.CorrelationId%2A> 지정 된 일치 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2479">This method looks in the transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2480">상관 관계 식별자를 사용 하 여 메시지에서 지정 하는 경우이 메서드가 즉시 반환 합니다 `correlationId` 매개 변수는 정의한 내부 트랜잭션 컨텍스트를 사용 하 여 큐에는 `transaction` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2480">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="b509c-2481">이 고, 그렇지 메서드는 새 메시지가 도착에 대 한 지정 된 기간을 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2481">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="b509c-2482">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2482">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b509c-2483">`timeout` 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2483">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="b509c-2484">새 메시지가 큐에 도착할 때까지 기다리는 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2484">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2485">때마다 새 메시지가 도착 하면이 메서드를 검사 합니다 <xref:System.Messaging.Message.CorrelationId%2A> 일치 하는지 확인 하려면 새 메시지의는 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2485">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2486">그렇지 않은 경우이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2486">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="b509c-2487">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것 없이 새 메시지 도착 한 시간 제한 기간이 만료 될 때까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드에 대 한 가능한 <xref:System.Messaging.Message.CorrelationId%2A> 일치 하는 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2487">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2488">트랜잭션 큐에이 메서드는, 때문에 수신 된 메시지 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2488">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2489">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2489">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2490"><xref:System.Messaging.Message.CorrelationId%2A> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐로 보낸 메시지를 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2490">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="b509c-2491">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2491">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2492">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 메서드 고유 식별자를 지정 하 여 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2492">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="b509c-2493">큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2493">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2494"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2494">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2495">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2495">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="b509c-2496">때문에 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2496">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2497">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2497">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2498">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2498">Workgroup mode</span></span>|<span data-ttu-id="b509c-2499">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2499">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2500">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2500">Local computer</span></span>|<span data-ttu-id="b509c-2501">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2501">Yes</span></span>|  
|<span data-ttu-id="b509c-2502">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2502">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2503">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2503">Yes</span></span>|  
|<span data-ttu-id="b509c-2504">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2504">Remote computer</span></span>|<span data-ttu-id="b509c-2505">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2505">No</span></span>|  
|<span data-ttu-id="b509c-2506">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2506">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2507">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2507">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2508">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2508">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#13)]
 [!code-csharp[MessageQueue2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2509"><paramref name="correlationId" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2509">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b509c-2510">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2510">-or-</span></span> 
<span data-ttu-id="b509c-2511"><paramref name="transaction" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2511">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2512"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2512">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2513">지정된 <paramref name="correlationId" />가 들어 있는 메시지가 큐에 없고 제한 시간이 만료되기 전에 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2513">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2514">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2514">-or-</span></span> 
<span data-ttu-id="b509c-2515">비트랜잭션 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2515">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="b509c-2516">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2516">-or-</span></span> 
<span data-ttu-id="b509c-2517">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2517">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByCorrelationId : string * TimeSpan * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByCorrelationId (correlationId, timeout, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="correlationId"><span data-ttu-id="b509c-2518">받을 메시지의 <see cref="P:System.Messaging.Message.CorrelationId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2518">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="b509c-2519">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2519">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-2520"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2520">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-2521">주어진 상관 관계 식별자를 갖는 메시지를 받고, 지정된 상관 관계 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2521">Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2522">전달된 <paramref name="correlationId" /> 매개 변수와 <see cref="T:System.Messaging.Message" />가 일치하는 <see cref="P:System.Messaging.Message.CorrelationId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2522">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2523">이 메서드가 참조 하는 큐에서 찾습니다를 <xref:System.Messaging.MessageQueue> 메시지에 대 한 해당 <xref:System.Messaging.Message.CorrelationId%2A> 지정 된 일치 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2523">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2524">상관 관계 식별자를 사용 하 여 메시지에서 지정 하는 경우이 메서드가 즉시 반환 합니다 `correlationId` 매개 변수는 여 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에는 `transactionType` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2524">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="b509c-2525">이 고, 그렇지 메서드는 새 메시지가 도착에 대 한 지정 된 기간을 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2525">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="b509c-2526">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2526">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b509c-2527">`timeout` 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2527">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="b509c-2528">새 메시지가 큐에 도착할 때까지 기다리는 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2528">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2529">때마다 새 메시지가 도착 하면이 메서드를 검사 합니다 <xref:System.Messaging.Message.CorrelationId%2A> 일치 하는지 확인 하려면 새 메시지의는 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2529">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2530">그렇지 않은 경우이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2530">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="b509c-2531">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것 없이 새 메시지 도착 한 시간 제한 기간이 만료 될 때까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드에 대 한 가능한 <xref:System.Messaging.Message.CorrelationId%2A> 일치 하는 `correlationId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2531">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span> <span data-ttu-id="b509c-2532">지정할 `Automatic` 에 대 한는 `transactionType` 매개 변수가 이미 있는 경우 외부 트랜잭션 컨텍스트를 사용 하 여 메시지를 수신 하려는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2532">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="b509c-2533">지정 `Single` 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2533">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-2534">지정할 수 있습니다 `None` 트랜잭션 컨텍스트 외부에서 트랜잭션 큐 로부터 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2534">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="b509c-2535">를 트랜잭션 큐 로부터 메시지를 받으려면이 메서드를 호출 하면 수신 된 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2535">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2536">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2536">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2537"><xref:System.Messaging.Message.CorrelationId%2A> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐로 보낸 메시지를 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2537">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="b509c-2538">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2538">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2539">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 메서드 고유 식별자를 지정 하 여 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2539">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="b509c-2540">큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2540">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2541"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2541">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2542">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2542">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="b509c-2543">때문에 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2543">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2544">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2544">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2545">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2545">Workgroup mode</span></span>|<span data-ttu-id="b509c-2546">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2546">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2547">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2547">Local computer</span></span>|<span data-ttu-id="b509c-2548">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2548">Yes</span></span>|  
|<span data-ttu-id="b509c-2549">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2549">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2550">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2550">Yes</span></span>|  
|<span data-ttu-id="b509c-2551">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2551">Remote computer</span></span>|<span data-ttu-id="b509c-2552">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2552">No</span></span>|  
|<span data-ttu-id="b509c-2553">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2553">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2554">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2554">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2555">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2555">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#12](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#12)]
 [!code-csharp[MessageQueue2#12](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2556"><paramref name="correlationId" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2556">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2557">지정된 <paramref name="correlationId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2557">The message with the specified <paramref name="correlationId" /> could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2558"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2558">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2559"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2559">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2560">지정된 <paramref name="correlationId" />가 들어 있는 메시지가 큐에 없고 제한 시간이 만료되기 전에 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2560">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2561">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2561">-or-</span></span> 
<span data-ttu-id="b509c-2562">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2562">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveById">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-2563">주어진 식별자를 갖는 메시지를 받고, 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2563">Receives the message that matches the given identifier, removing it from the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="b509c-2564">받을 메시지의 <see cref="P:System.Messaging.Message.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2564">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <summary><span data-ttu-id="b509c-2565">주어진 식별자를 갖는 메시지를 비트랜잭션 큐로부터 받습니다. 지정된 식별자가 들어 있는 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2565">Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2566">전달된 <paramref name="id" /> 매개 변수와 <see cref="T:System.Messaging.Message" /> 속성이 일치하는 <see cref="P:System.Messaging.Message.Id" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2566">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2567">이 메서드를 사용 하 여 알려진된 식별자를 사용 하 여 메시지를 읽고 큐에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2567">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="b509c-2568">이 메서드는 메시지 큐에 없는 경우 즉시 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2568">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2569">합니다 <xref:System.Messaging.Message.Id%2A> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에서 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유 합니다 지정 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2569">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2570">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2570">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2571">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> 메서드는 승인, 보고서 또는 큐로 보낸 메시지의 결과로 생성 된 응용 프로그램에서 생성 한 응답 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2571">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="b509c-2572">큐에서 제거 하지 않고 지정 된 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2572">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2573"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2573">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2574">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2574">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2575">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2575">Workgroup mode</span></span>|<span data-ttu-id="b509c-2576">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2576">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2577">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2577">Local computer</span></span>|<span data-ttu-id="b509c-2578">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2578">Yes</span></span>|  
|<span data-ttu-id="b509c-2579">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2579">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2580">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2580">Yes</span></span>|  
|<span data-ttu-id="b509c-2581">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2581">Remote computer</span></span>|<span data-ttu-id="b509c-2582">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2582">No</span></span>|  
|<span data-ttu-id="b509c-2583">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2583">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2584">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2584">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2585">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2585">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#16](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#16)]
 [!code-csharp[MessageQueue2#16](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2586"><paramref name="id" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2586">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2587">지정된 <paramref name="id" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2587">The message with the specified <paramref name="id" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2588">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2588">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="b509c-2589">받을 메시지의 <see cref="P:System.Messaging.Message.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2589">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-2590"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2590">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2591">주어진 식별자를 갖는 메시지를 트랜잭션 큐로부터 받습니다. 지정된 식별자가 포함된 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2591">Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2592">전달된 <paramref name="id" /> 매개 변수와 <see cref="T:System.Messaging.Message" /> 속성이 일치하는 <see cref="P:System.Messaging.Message.Id" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2592">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2593">이 메서드를 사용 하 여 알려진된 식별자를 사용 하 여 메시지를 읽고 정의한 내부 트랜잭션 컨텍스트를 사용 하 여 큐에서 제거 된 `transaction` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2593">Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="b509c-2594">이 메서드는 즉시 예외를 throw 하면 메시지가 큐에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2594">This method throws an exception immediately if the message is not in the queue</span></span>  
  
 <span data-ttu-id="b509c-2595">합니다 <xref:System.Messaging.Message.Id%2A> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에서 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유 합니다 지정 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2595">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2596">트랜잭션 큐에이 메서드는, 때문에 수신 된 메시지 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2596">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2597">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2597">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2598">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2598">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2599">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> 메서드는 승인, 보고서 또는 큐로 보낸 메시지의 결과로 생성 된 응용 프로그램에서 생성 한 응답 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2599">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="b509c-2600">큐에서 제거 하지 않고 지정 된 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2600">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2601"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2601">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2602">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2602">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="b509c-2603">때문에 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2603">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2604">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2604">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2605">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2605">Workgroup mode</span></span>|<span data-ttu-id="b509c-2606">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2606">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2607">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2607">Local computer</span></span>|<span data-ttu-id="b509c-2608">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2608">Yes</span></span>|  
|<span data-ttu-id="b509c-2609">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2609">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2610">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2610">Yes</span></span>|  
|<span data-ttu-id="b509c-2611">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2611">Remote computer</span></span>|<span data-ttu-id="b509c-2612">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2612">No</span></span>|  
|<span data-ttu-id="b509c-2613">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2613">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2614">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2614">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2615">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2615">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#17](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#17)]
 [!code-csharp[MessageQueue2#17](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2616"><paramref name="id" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2616">The <paramref name="id" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b509c-2617">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2617">-or-</span></span> 
<span data-ttu-id="b509c-2618"><paramref name="transaction" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2618">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2619">지정된 <paramref name="id" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2619">The message with the specified <paramref name="id" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2620">비트랜잭션 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2620">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="b509c-2621">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2621">-or-</span></span> 
<span data-ttu-id="b509c-2622">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2622">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="b509c-2623">받을 메시지의 <see cref="P:System.Messaging.Message.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2623">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-2624"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2624">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-2625">주어진 식별자를 갖는 메시지를 받습니다. 지정된 식별자가 포함된 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2625">Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2626">전달된 <paramref name="id" /> 매개 변수와 <see cref="T:System.Messaging.Message" /> 속성이 일치하는 <see cref="P:System.Messaging.Message.Id" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2626">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2627">이 메서드를 사용 하 여 알려진된 식별자를 사용 하 여 메시지를 읽고 큐에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2627">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="b509c-2628">이 메서드는 메시지 큐에 없는 경우 즉시 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2628">This method throws an exception immediately if the message is not in the queue.</span></span> <span data-ttu-id="b509c-2629">메시지 큐에서 제거 되 고 정의한 트랜잭션 컨텍스트를 사용 하 여 응용 프로그램에 반환 되는 고, 그렇지는 `transactionType` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2629">Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2630">지정할 `Automatic` 에 대 한는 `transactionType` 매개 변수가 이미 있는 경우 외부 트랜잭션 컨텍스트를 사용 하 여 메시지를 수신 하려는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2630">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="b509c-2631">지정 `Single` 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2631">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-2632">지정할 수 있습니다 `None` 트랜잭션 컨텍스트 외부에서 트랜잭션 큐 로부터 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2632">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="b509c-2633">합니다 <xref:System.Messaging.Message.Id%2A> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에서 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유 합니다 지정 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2633">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="b509c-2634">지정한 식별자를 가진 메시지는 큐와 연결 된 것과 다른 경우 <xref:System.Messaging.MessageQueue> 인스턴스 메시지를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2634">If the message with the specified identifier is in a queue other than the one associated with this <xref:System.Messaging.MessageQueue> instance, the message will not be found.</span></span>  
  
 <span data-ttu-id="b509c-2635">를 트랜잭션 큐 로부터 메시지를 받으려면이 메서드를 호출 하면 수신 된 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2635">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2636">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2636">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2637">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2637">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2638">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> 메서드는 승인, 보고서 또는 큐로 보낸 메시지의 결과로 생성 된 응용 프로그램에서 생성 한 응답 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2638">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="b509c-2639">큐에서 제거 하지 않고 지정 된 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2639">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2640"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2640">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2641">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2641">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="b509c-2642">때문에 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2642">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2643">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2643">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2644">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2644">Workgroup mode</span></span>|<span data-ttu-id="b509c-2645">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2645">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2646">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2646">Local computer</span></span>|<span data-ttu-id="b509c-2647">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2647">Yes</span></span>|  
|<span data-ttu-id="b509c-2648">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2648">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2649">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2649">Yes</span></span>|  
|<span data-ttu-id="b509c-2650">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2650">Remote computer</span></span>|<span data-ttu-id="b509c-2651">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2651">No</span></span>|  
|<span data-ttu-id="b509c-2652">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2652">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2653">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2653">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2654">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2654">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#15)]
 [!code-csharp[MessageQueue2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2655"><paramref name="id" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2655">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2656">지정된 <paramref name="id" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2656">The message with the specified <paramref name="id" /> could not be found.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2657"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2657">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2658">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2658">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * TimeSpan -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="b509c-2659">받을 메시지의 <see cref="P:System.Messaging.Message.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2659">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="b509c-2660">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2660">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <summary><span data-ttu-id="b509c-2661">주어진 식별자를 갖는 메시지를 비트랜잭션 큐로부터 받고, 지정된 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2661">Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2662">전달된 <paramref name="id" /> 매개 변수와 <see cref="T:System.Messaging.Message" /> 속성이 일치하는 <see cref="P:System.Messaging.Message.Id" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2662">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2663">이 메서드를 사용 하 여 알려진된 식별자를 사용 하 여 메시지를 읽고 큐에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2663">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="b509c-2664">식별자를 사용 하 여 메시지에서 지정 하는 경우이 메서드가 즉시 반환 된 `id` 매개 변수는 큐에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2664">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue.</span></span> <span data-ttu-id="b509c-2665">이 고, 그렇지 메서드는 새 메시지가 도착에 대 한 지정 된 기간을 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2665">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="b509c-2666">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2666">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b509c-2667">`timeout` 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2667">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="b509c-2668">새 메시지가 큐에 도착할 때까지 기다리는 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2668">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2669">때마다 새 메시지가 도착 하면이 메서드를 검사 합니다 <xref:System.Messaging.Message.Id%2A> 일치 하는지 확인 하려면 새 메시지의는 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2669">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="b509c-2670">그렇지 않은 경우이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2670">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="b509c-2671">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것 없이 새 메시지 도착 한 시간 제한 기간이 만료 될 때까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드에 대 한 가능한 <xref:System.Messaging.Message.Id%2A> 일치 하는 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2671">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2672">합니다 <xref:System.Messaging.Message.Id%2A> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에서 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유 합니다 지정 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2672">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2673">이 오버 로드를 사용 하 여 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 것이 현재 스레드를 차단 하 여 새 메시지에 지정한 제한 시간 내에서 큐에 도착 하는 데 계속으로 허용 되는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2673">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="b509c-2674">스레드가 차단 됩니다에 대 한 최소 시간의 또는 무기한으로 지정된 된 기간 값을 지정 하는 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 에 대 한 합니다 `timeout` 매개 변수를 새 메시지에 지정한 제한 시간 내에서 큐에 도착 하는 데 계속 또는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2674">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2675">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2675">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2676">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> 메서드는 승인, 보고서 또는 큐로 보낸 메시지의 결과로 생성 된 응용 프로그램에서 생성 한 응답 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2676">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="b509c-2677">큐에서 제거 하지 않고 지정 된 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2677">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2678"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2678">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2679">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2679">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2680">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2680">Workgroup mode</span></span>|<span data-ttu-id="b509c-2681">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2681">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2682">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2682">Local computer</span></span>|<span data-ttu-id="b509c-2683">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2683">Yes</span></span>|  
|<span data-ttu-id="b509c-2684">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2684">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2685">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2685">Yes</span></span>|  
|<span data-ttu-id="b509c-2686">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2686">Remote computer</span></span>|<span data-ttu-id="b509c-2687">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2687">No</span></span>|  
|<span data-ttu-id="b509c-2688">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2688">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2689">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2689">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2690">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2690">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#20](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#20)]
 [!code-csharp[MessageQueue2#20](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2691"><paramref name="id" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2691">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2692"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2692">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2693">제한 시간이 만료되기 전에 <paramref name="id" />가 지정된 메시지가 큐에 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2693">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2694">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2694">-or-</span></span> 
<span data-ttu-id="b509c-2695">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2695">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * TimeSpan * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, timeout, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="b509c-2696">받을 메시지의 <see cref="P:System.Messaging.Message.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2696">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="b509c-2697">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2697">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-2698"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2698">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2699">주어진 식별자를 갖는 메시지를 트랜잭션 큐로부터 받고, 지정된 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2699">Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2700">전달된 <paramref name="id" /> 매개 변수와 <see cref="T:System.Messaging.Message" /> 속성이 일치하는 <see cref="P:System.Messaging.Message.Id" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2700">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2701">이 메서드를 사용 하 여 알려진된 식별자를 사용 하 여 메시지를 읽고 정의한 내부 트랜잭션 컨텍스트를 사용 하 여 큐에서 제거 된 `transaction` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2701">Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="b509c-2702">식별자를 사용 하 여 메시지에서 지정 하는 경우이 메서드가 즉시 반환 된 `id` 매개 변수는 큐에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2702">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue.</span></span> <span data-ttu-id="b509c-2703">이 고, 그렇지 메서드는 새 메시지가 도착에 대 한 지정 된 기간을 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2703">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="b509c-2704">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2704">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b509c-2705">`timeout` 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2705">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="b509c-2706">새 메시지가 큐에 도착할 때까지 기다리는 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2706">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2707">때마다 새 메시지가 도착 하면이 메서드를 검사 합니다 <xref:System.Messaging.Message.Id%2A> 일치 하는지 확인 하려면 새 메시지의는 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2707">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="b509c-2708">그렇지 않은 경우이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2708">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="b509c-2709">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것 없이 새 메시지 도착 한 시간 제한 기간이 만료 될 때까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드에 대 한 가능한 <xref:System.Messaging.Message.Id%2A> 일치 하는 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2709">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2710">합니다 <xref:System.Messaging.Message.Id%2A> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에서 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유 합니다 지정 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2710">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2711">이 오버 로드를 사용 하 여 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 것이 현재 스레드를 차단 하 여 새 메시지에 지정한 제한 시간 내에서 큐에 도착 하는 데 계속으로 허용 되는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2711">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="b509c-2712">스레드가 차단 됩니다에 대 한 최소 시간의 또는 무기한으로 지정된 된 기간 값을 지정 하는 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 에 대 한는 `timeout` 매개 변수를 지정 된 시간 제한 기간 내에서 큐에 도착 하는 데 계속 새 메시지 또는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2712">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the timeout period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2713">트랜잭션 큐에이 메서드는, 때문에 수신 된 메시지 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2713">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2714">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2714">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2715">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2715">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2716">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> 메서드는 승인, 보고서 또는 큐로 보낸 메시지의 결과로 생성 된 응용 프로그램에서 생성 한 응답 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2716">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="b509c-2717">큐에서 제거 하지 않고 지정 된 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2717">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2718"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드는 항상 반환 된 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출에 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2718">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2719">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2719">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="b509c-2720">때문에 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2720">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2721">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2721">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2722">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2722">Workgroup mode</span></span>|<span data-ttu-id="b509c-2723">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2723">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2724">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2724">Local computer</span></span>|<span data-ttu-id="b509c-2725">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2725">Yes</span></span>|  
|<span data-ttu-id="b509c-2726">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2726">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2727">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2727">Yes</span></span>|  
|<span data-ttu-id="b509c-2728">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2728">Remote computer</span></span>|<span data-ttu-id="b509c-2729">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2729">No</span></span>|  
|<span data-ttu-id="b509c-2730">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2730">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2731">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2731">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2732">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2732">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#18)]
 [!code-csharp[MessageQueue2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2733"><paramref name="id" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2733">The <paramref name="id" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b509c-2734">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2734">-or-</span></span> 
<span data-ttu-id="b509c-2735"><paramref name="transaction" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2735">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2736"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2736">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2737">제한 시간이 만료되기 전에 <paramref name="id" />가 지정된 메시지가 큐에 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2737">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2738">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2738">-or-</span></span> 
<span data-ttu-id="b509c-2739">비트랜잭션 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2739">The queue is non-transactional.</span></span>  
  
<span data-ttu-id="b509c-2740">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2740">-or-</span></span> 
<span data-ttu-id="b509c-2741">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2741">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveById : string * TimeSpan * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveById (id, timeout, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="b509c-2742">받을 메시지의 <see cref="P:System.Messaging.Message.Id" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2742">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span></span></param>
        <param name="timeout"><span data-ttu-id="b509c-2743">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2743">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-2744"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2744">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-2745">주어진 식별자를 갖는 메시지를 받고, 지정된 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2745">Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span></span></summary>
        <returns><span data-ttu-id="b509c-2746">전달된 <paramref name="id" /> 매개 변수와 <see cref="T:System.Messaging.Message" /> 속성이 일치하는 <see cref="P:System.Messaging.Message.Id" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2746">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2747">이 메서드를 사용 하 여 알려진된 식별자를 사용 하 여 메시지를 읽고 큐에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2747">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="b509c-2748">식별자를 사용 하 여 메시지에서 지정 하는 경우이 메서드가 즉시 반환 합니다 `id` 매개 변수는 여 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에는 `transactionType` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2748">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="b509c-2749">이 고, 그렇지 메서드는 새 메시지가 도착에 대 한 지정 된 기간을 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2749">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="b509c-2750">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2750">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="b509c-2751">`timeout` 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2751">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="b509c-2752">새 메시지가 큐에 도착할 때까지 기다리는 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2752">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="b509c-2753">때마다 새 메시지가 도착 하면이 메서드를 검사 합니다 <xref:System.Messaging.Message.Id%2A> 일치 하는지 확인 하려면 새 메시지의는 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2753">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="b509c-2754">그렇지 않은 경우이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2754">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="b509c-2755">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것 없이 새 메시지 도착 한 시간 제한 기간이 만료 될 때까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드에 대 한 가능한 <xref:System.Messaging.Message.Id%2A> 일치 하는 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2755">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2756">지정할 `Automatic` 에 대 한는 `transactionType` 매개 변수가 이미 있는 경우 외부 트랜잭션 컨텍스트를 사용 하 여 메시지를 수신 하려는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2756">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="b509c-2757">지정 `Single` 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2757">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-2758">지정할 수 있습니다 `None` 트랜잭션 컨텍스트 외부에서 트랜잭션 큐 로부터 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2758">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="b509c-2759">합니다 <xref:System.Messaging.Message.Id%2A> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에서 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유 합니다 지정 `id` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2759">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="b509c-2760">지정한 식별자를 가진 메시지는 큐와 연결 된 것과 다른 경우 <xref:System.Messaging.MessageQueue> 인스턴스 메시지를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2760">If the message with the specified identifier is in a queue other than the one associated with this <xref:System.Messaging.MessageQueue> instance, the message will not be found.</span></span>  
  
 <span data-ttu-id="b509c-2761">이 오버 로드를 사용 하 여 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 것이 현재 스레드를 차단 하 여 새 메시지에 지정한 제한 시간 내에서 큐에 도착 하는 데 계속으로 허용 되는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2761">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="b509c-2762">스레드가 차단 됩니다에 대 한 최소 시간의 또는 무기한으로 지정된 된 기간 값을 지정 하는 경우 <xref:System.Messaging.MessageQueue.InfiniteTimeout> 에 대 한 합니다 `timeout` 매개 변수를 새 메시지에 지정한 제한 시간 내에서 큐에 도착 하는 데 계속 또는 `timeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2762">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2763">를 트랜잭션 큐 로부터 메시지를 받으려면이 메서드를 호출 하면 수신 된 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2763">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2764">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2764">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2765">다른 두 메서드를 사용 하면 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2765">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="b509c-2766">합니다 <xref:System.Messaging.MessageQueue.Receive%2A> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> 메서드는 승인, 보고서 또는 큐로 보낸 메시지의 결과로 생성 된 응용 프로그램에서 생성 한 응답 메시지를 검색 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2766">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="b509c-2767">큐에서 제거 하지 않고 지정 된 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2767">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="b509c-2768"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 메서드는 항상 반환 첫 번째 메시지 큐에서 우선 순위가 높은 메시지 큐에 도착 하지 않으면 후속 메서드 호출이 동일한 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2768">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="b509c-2769">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2769">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="b509c-2770">때문에 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2770">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2771">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2771">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2772">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2772">Workgroup mode</span></span>|<span data-ttu-id="b509c-2773">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2773">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2774">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2774">Local computer</span></span>|<span data-ttu-id="b509c-2775">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2775">Yes</span></span>|  
|<span data-ttu-id="b509c-2776">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2776">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2777">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2777">Yes</span></span>|  
|<span data-ttu-id="b509c-2778">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2778">Remote computer</span></span>|<span data-ttu-id="b509c-2779">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2779">No</span></span>|  
|<span data-ttu-id="b509c-2780">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2780">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2781">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2781">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2782">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2782">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#19](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#19)]
 [!code-csharp[MessageQueue2#19](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-2783"><paramref name="id" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2783">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-2784"><paramref name="timeout" /> 매개 변수에 지정된 값이 잘못된 경우. <paramref name="timeout" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />보다 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2784">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2785">제한 시간이 만료되기 전에 <paramref name="id" />가 지정된 메시지가 큐에 도착하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2785">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span></span>  
  
<span data-ttu-id="b509c-2786">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2786">-or-</span></span> 
<span data-ttu-id="b509c-2787">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2787">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2788"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2788">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveByLookupId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-2789">MSMQ 3.0에서 도입되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2789">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="b509c-2790">큐에서 특정 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2790">Receives a specific message from the queue.</span></span> <span data-ttu-id="b509c-2791">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2791">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(long lookupId);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByLookupId : int64 -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByLookupId lookupId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lookupId" Type="System.Int64" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="lookupId"><span data-ttu-id="b509c-2792">받을 메시지의 <see cref="P:System.Messaging.Message.LookupId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2792">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive.</span></span></param>
        <summary><span data-ttu-id="b509c-2793">MSMQ 3.0에서 도입되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2793">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="b509c-2794">비트랜잭션 큐에서 지정된 조회 식별자를 갖는 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2794">Receives the message that matches the given lookup identifier from a non-transactional queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2795">전달된 <paramref name="lookupId" /> 매개 변수와 <see cref="T:System.Messaging.Message" /> 속성이 일치하는 <see cref="P:System.Messaging.Message.LookupId" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2795">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2796">이 메서드를 사용 하 여 알려진된 조회 식별자를 갖는 메시지를 읽고 큐에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2796">Use this method to read a message with a known lookup identifier and remove it from the queue.</span></span> <span data-ttu-id="b509c-2797">이 메서드는 메시지 큐에 없는 경우 즉시 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2797">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2798">합니다 <xref:System.Messaging.Message.LookupId%2A> 메시지의 속성은 큐에 고유한 메시지 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 지정 된 `lookupId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2798">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2799">지정한 lookup 식별자와 메시지 큐에서 제거 하지 않고 읽기를 사용 하 여를 <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2799">To read a message with a specified lookup identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="b509c-2800">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2800">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2801">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2801">Workgroup mode</span></span>|<span data-ttu-id="b509c-2802">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2802">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2803">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2803">Local computer</span></span>|<span data-ttu-id="b509c-2804">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2804">Yes</span></span>|  
|<span data-ttu-id="b509c-2805">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2805">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2806">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2806">Yes</span></span>|  
|<span data-ttu-id="b509c-2807">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2807">Remote computer</span></span>|<span data-ttu-id="b509c-2808">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2808">No</span></span>|  
|<span data-ttu-id="b509c-2809">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2809">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2810">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2810">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b509c-2811">MSMQ 3.0이 설치되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2811">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2812">지정된 <paramref name="lookupId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2812">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2813">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2813">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (action As MessageLookupAction, lookupId As Long, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(System::Messaging::MessageLookupAction action, long lookupId, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByLookupId : System.Messaging.MessageLookupAction * int64 * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByLookupId (action, lookupId, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lookupId" Type="System.Int64" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="b509c-2814">큐에서 메시지를 읽는 방법을 지정하는 <see cref="T:System.Messaging.MessageLookupAction" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2814">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span></span> <span data-ttu-id="b509c-2815">다음 중 하나를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2815">Specify one of the following:</span></span> 
 <span data-ttu-id="b509c-2816"><see langword="MessageLookupAction.Current" />: <paramref name="lookupId" />로 지정된 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2816"><see langword="MessageLookupAction.Current" />: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="b509c-2817"><see langword="MessageLookupAction.Next" />: <paramref name="lookupId" />로 지정된 메시지의 뒤에 있는 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2817"><see langword="MessageLookupAction.Next" />: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="b509c-2818"><see langword="MessageLookupAction.Previous" />: <paramref name="lookupId" />로 지정된 메시지의 앞에 있는 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2818"><see langword="MessageLookupAction.Previous" />: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="b509c-2819"><see langword="MessageLookupAction.First" />: 큐에 있는 첫 번째 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2819"><see langword="MessageLookupAction.First" />: Receives the first message in the queue and removes it from the queue.</span></span> <span data-ttu-id="b509c-2820"><paramref name="lookupId" /> 매개 변수는 0으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2820">The <paramref name="lookupId" /> parameter must be set to 0.</span></span>  
  
 <span data-ttu-id="b509c-2821"><see langword="MessageLookupAction.Last" />: 큐에 있는 마지막 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2821"><see langword="MessageLookupAction.Last" />: Receives the last message in the queue and removes it from the queue.</span></span> <span data-ttu-id="b509c-2822"><paramref name="lookupId" /> 매개 변수는 0으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2822">The <paramref name="lookupId" /> parameter must be set to 0.</span></span></param>
        <param name="lookupId"><span data-ttu-id="b509c-2823">0을 수신할 메시지의 <see cref="P:System.Messaging.Message.LookupId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2823">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.</span></span> <span data-ttu-id="b509c-2824">0은 큐에 있는 첫 번째 또는 마지막 메시지에 액세스할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2824">0 is used when accessing the first or last message in the queue.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-2825"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2825">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2826">MSMQ 3.0에서 도입되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2826">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="b509c-2827">트랜잭션 큐에서 특정 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2827">Receives a specific message from a transactional queue.</span></span> <span data-ttu-id="b509c-2828">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2828">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2829">전달된 <paramref name="lookupId" /> 및 <paramref name="action" /> 매개 변수로 지정된 <see cref="T:System.Messaging.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2829">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="lookupId" /> and <paramref name="action" /> parameters passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2830">이 메서드를 사용 하 여 알려진된 조회 식별자를 갖는 메시지를 읽고 정의한 트랜잭션 컨텍스트를 사용 하 여 큐에서 제거 된 `transaction` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2830">Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="b509c-2831">이 메서드는 메시지 큐에 없는 경우 즉시 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2831">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2832">합니다 <xref:System.Messaging.Message.LookupId%2A> 메시지의 속성은 큐에 고유한 메시지 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 지정 된 `lookupId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2832">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2833">트랜잭션 큐에이 메서드는, 때문에 수신 된 메시지 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2833">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2834">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2834">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2835">큐에서 제거 하지 않고 지정 된 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2835">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span> <span data-ttu-id="b509c-2836">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2836">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>.</span></span> <span data-ttu-id="b509c-2837">때문에 <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에서 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2837">Because <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2838">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2838">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2839">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2839">Workgroup mode</span></span>|<span data-ttu-id="b509c-2840">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2840">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2841">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2841">Local computer</span></span>|<span data-ttu-id="b509c-2842">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2842">Yes</span></span>|  
|<span data-ttu-id="b509c-2843">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2843">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2844">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2844">Yes</span></span>|  
|<span data-ttu-id="b509c-2845">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2845">Remote computer</span></span>|<span data-ttu-id="b509c-2846">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2846">No</span></span>|  
|<span data-ttu-id="b509c-2847">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2847">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2848">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2848">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b509c-2849">MSMQ 3.0이 설치되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2849">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2850">지정된 <paramref name="lookupId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2850">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2851">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2851">An error occurred when accessing a Message Queuing method.</span></span>  
  
<span data-ttu-id="b509c-2852">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2852">-or-</span></span> 
<span data-ttu-id="b509c-2853">비트랜잭션 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2853">The queue is non-transactional.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2854"><paramref name="action" /> 매개 변수가 <see cref="T:System.Messaging.MessageLookupAction" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2854">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (action As MessageLookupAction, lookupId As Long, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(System::Messaging::MessageLookupAction action, long lookupId, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.ReceiveByLookupId : System.Messaging.MessageLookupAction * int64 * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageQueue.ReceiveByLookupId (action, lookupId, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lookupId" Type="System.Int64" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="b509c-2855">큐에서 메시지를 읽는 방법을 지정하는 <see cref="T:System.Messaging.MessageLookupAction" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2855">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span></span> <span data-ttu-id="b509c-2856">다음 중 하나를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2856">Specify one of the following:</span></span> 
 <span data-ttu-id="b509c-2857"><see langword="MessageLookupAction.Current" />: <paramref name="lookupId" />로 지정된 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2857"><see langword="MessageLookupAction.Current" />: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="b509c-2858"><see langword="MessageLookupAction.Next" />: <paramref name="lookupId" />로 지정된 메시지의 뒤에 있는 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2858"><see langword="MessageLookupAction.Next" />: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="b509c-2859"><see langword="MessageLookupAction.Previous" />: <paramref name="lookupId" />로 지정된 메시지의 앞에 있는 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2859"><see langword="MessageLookupAction.Previous" />: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.</span></span>  
  
 <span data-ttu-id="b509c-2860"><see langword="MessageLookupAction.First" />: 큐에 있는 첫 번째 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2860"><see langword="MessageLookupAction.First" />: Receives the first message in the queue and removes it from the queue.</span></span> <span data-ttu-id="b509c-2861"><paramref name="lookupId" /> 매개 변수는 0으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2861">The <paramref name="lookupId" /> parameter must be set to 0.</span></span>  
  
 <span data-ttu-id="b509c-2862"><see langword="MessageLookupAction.Last" />: 큐에 있는 마지막 메시지를 받고 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2862"><see langword="MessageLookupAction.Last" />: Receives the last message in the queue and removes it from the queue.</span></span> <span data-ttu-id="b509c-2863"><paramref name="lookupId" /> 매개 변수는 0으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2863">The <paramref name="lookupId" /> parameter must be set to 0.</span></span></param>
        <param name="lookupId"><span data-ttu-id="b509c-2864">0을 수신할 메시지의 <see cref="P:System.Messaging.Message.LookupId" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2864">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.</span></span> <span data-ttu-id="b509c-2865">0은 큐에 있는 첫 번째 또는 마지막 메시지에 액세스할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2865">0 is used when accessing the first or last message in the queue.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-2866"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2866">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-2867">MSMQ 3.0에서 도입되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2867">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="b509c-2868">지정된 트랜잭션 컨텍스트를 사용하여 큐에서 특정 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2868">Receives a specific message from the queue, using the specified transaction context.</span></span> <span data-ttu-id="b509c-2869">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2869">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span></span></summary>
        <returns><span data-ttu-id="b509c-2870">전달된 <paramref name="action" /> 및 <paramref name="lookupId" /> 매개 변수로 지정된 <see cref="T:System.Messaging.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2870">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2871">이 메서드를 사용 하 여 알려진된 조회 식별자를 갖는 메시지를 읽고 정의한 트랜잭션 컨텍스트를 사용 하 여 큐에서 제거 된 `transactionType` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2871">Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="b509c-2872">이 메서드는 메시지 큐에 없는 경우 즉시 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2872">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2873">합니다 <xref:System.Messaging.Message.LookupId%2A> 메시지의 속성은 큐에 고유한 메시지 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 지정 된 `lookupId` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2873">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="b509c-2874">큐에서 제거 하지 않고 지정 된 식별자를 사용 하 여 메시지를 읽으려면, 사용 된 <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b509c-2874">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span> <span data-ttu-id="b509c-2875">호출 하 여 반환 된 메시지와 연결 된 트랜잭션 컨텍스트가 없는 <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2875">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>.</span></span> <span data-ttu-id="b509c-2876">때문에 <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> 트랜잭션이 중단 된 경우에 다시 롤포워드할 수, 큐에서 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2876">Because <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="b509c-2877">지정할 `Automatic` 에 대 한는 `transactionType` 매개 변수가 이미 있는 경우 외부 트랜잭션 컨텍스트를 사용 하 여 메시지를 수신 하려는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2877">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="b509c-2878">지정 `Single` 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2878">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-2879">지정할 수 있습니다 `None` 트랜잭션 컨텍스트 외부에서 트랜잭션 큐 로부터 메시지를 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2879">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="b509c-2880">를 트랜잭션 큐 로부터 메시지를 받으려면이 메서드를 호출 하면 수신 된 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2880">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="b509c-2881">메시지가 제거 되지 않습니다 영구적으로 큐에서 트랜잭션이 커밋될 때까지.</span><span class="sxs-lookup"><span data-stu-id="b509c-2881">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="b509c-2882">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2882">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2883">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2883">Workgroup mode</span></span>|<span data-ttu-id="b509c-2884">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2884">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2885">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2885">Local computer</span></span>|<span data-ttu-id="b509c-2886">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2886">Yes</span></span>|  
|<span data-ttu-id="b509c-2887">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2887">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2888">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2888">Yes</span></span>|  
|<span data-ttu-id="b509c-2889">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2889">Remote computer</span></span>|<span data-ttu-id="b509c-2890">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2890">No</span></span>|  
|<span data-ttu-id="b509c-2891">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2891">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2892">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2892">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b509c-2893">MSMQ 3.0이 설치되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2893">MSMQ 3.0 is not installed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b509c-2894">지정된 <paramref name="lookupId" />의 메시지를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2894">The message with the specified <paramref name="lookupId" /> could not be found.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2895">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2895">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-2896"><paramref name="action" /> 매개 변수가 <see cref="T:System.Messaging.MessageLookupAction" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2896">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span></span>  
  
<span data-ttu-id="b509c-2897">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2897">-or-</span></span> 
<span data-ttu-id="b509c-2898"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2898">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveCompleted">
      <MemberSignature Language="C#" Value="public event System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReceiveCompleted As ReceiveCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Messaging::ReceiveCompletedEventHandler ^ ReceiveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ReceiveCompleted : System.Messaging.ReceiveCompletedEventHandler " Usage="member this.ReceiveCompleted : System.Messaging.ReceiveCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_ReceiveCompleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.ReceiveCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-2899">큐에서 메시지가 제거된 경우에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2899">Occurs when a message has been removed from the queue.</span></span> <span data-ttu-id="b509c-2900">이 이벤트는 비동기 작업인 <see cref="M:System.Messaging.MessageQueue.BeginReceive" />에 의해 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2900">This event is raised by the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginReceive" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2901"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 비동기 처리에 발생 하는 데 사용 되는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 메시지 큐에서 사용할 수 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-2901"><xref:System.Messaging.MessageQueue.BeginReceive%2A> is used in asynchronous processing to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message is available in the queue.</span></span>  
  
 <span data-ttu-id="b509c-2902"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 호출 하 여 시작 작업을 완료 하는 데 사용 됩니다 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 고 메시지를 피킹할 때는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2902"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is used to complete the operation initiated by a call to <xref:System.Messaging.MessageQueue.BeginReceive%2A> and peek the message when the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised.</span></span>  
  
 <span data-ttu-id="b509c-2903"><xref:System.Messaging.ReceiveCompletedEventHandler> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2903">When you create a <xref:System.Messaging.ReceiveCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="b509c-2904">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2904">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="b509c-2905">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2905">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="b509c-2906">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2906">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2907">다음 코드 예제에서는 명명 된 이벤트 처리기를 만듭니다 `MyReceiveCompleted`에 연결 합니다 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트 처리기 대리자를 호출 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 시작 하는 비동기 수신 작업 경로에 있는 큐에 ". \myQueue"입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2907">The following code example creates an event handler named `MyReceiveCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginReceive%2A> to initiate an asynchronous receive operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="b509c-2908">경우는 <xref:System.Messaging.MessageQueue.ReceiveCompleted> 이벤트가 발생 하면이 예제에서는 메시지를 받고 해당 본문을 화면에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2908">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the example receives the message and writes its body to the screen.</span></span> <span data-ttu-id="b509c-2909">이 예제에서는 호출 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 새 시작을 다시 비동기 수신 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2909">The example then calls <xref:System.Messaging.MessageQueue.BeginReceive%2A> again to initiate a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="messageQueue.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-2910"><see cref="T:System.Messaging.MessageQueue" />가 제공하는 속성을 새로 고쳐 리소스의 현재 상태를 반영합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2910">Refreshes the properties presented by the <see cref="T:System.Messaging.MessageQueue" /> to reflect the current state of the resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2911"><xref:System.Messaging.MessageQueue.Refresh%2A> 속성의 동기화를 <xref:System.Messaging.MessageQueue> 연결된 메시지 큐 서버 리소스를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2911"><xref:System.Messaging.MessageQueue.Refresh%2A> synchronizes the properties of a <xref:System.Messaging.MessageQueue> with its associated Message Queuing server resource.</span></span> <span data-ttu-id="b509c-2912">경우 모든 속성을 같은 <xref:System.Messaging.MessageQueue.Label%2A> 또는 <xref:System.Messaging.MessageQueue.Category%2A>, 이후에 서버에서 변경 된를 <xref:System.Messaging.MessageQueue> 만들어진 <xref:System.Messaging.MessageQueue.Refresh%2A> 업데이트를 <xref:System.Messaging.MessageQueue> 새 정보로.</span><span class="sxs-lookup"><span data-stu-id="b509c-2912">If any property, such as <xref:System.Messaging.MessageQueue.Label%2A> or <xref:System.Messaging.MessageQueue.Category%2A>, has changed on the server since the time the <xref:System.Messaging.MessageQueue> was created, <xref:System.Messaging.MessageQueue.Refresh%2A> updates the <xref:System.Messaging.MessageQueue> with the new information.</span></span>  
  
 <span data-ttu-id="b509c-2913">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2913">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2914">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2914">Workgroup mode</span></span>|<span data-ttu-id="b509c-2915">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2915">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2916">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2916">Local computer</span></span>|<span data-ttu-id="b509c-2917">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2917">Yes</span></span>|  
|<span data-ttu-id="b509c-2918">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2918">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2919">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2919">Yes</span></span>|  
|<span data-ttu-id="b509c-2920">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2920">Remote computer</span></span>|<span data-ttu-id="b509c-2921">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2921">No</span></span>|  
|<span data-ttu-id="b509c-2922">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2922">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2923">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2923">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2924">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.Refresh%2A>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2924">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Refresh%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#28](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#28)]
 [!code-csharp[MessageQueue2#28](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      </Docs>
    </Member>
    <Member MemberName="ResetPermissions">
      <MemberSignature Language="C#" Value="public void ResetPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ResetPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPermissions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPermissions();" />
      <MemberSignature Language="F#" Value="member this.ResetPermissions : unit -&gt; unit" Usage="messageQueue.ResetPermissions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b509c-2925">사용 권한 목록을 운영 체제의 기본값으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2925">Resets the permission list to the operating system's default values.</span></span> <span data-ttu-id="b509c-2926">기본 목록에 추가한 큐 권한을 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2926">Removes any queue permissions you have appended to the default list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2927">호출 하는 경우 <xref:System.Messaging.MessageQueue.ResetPermissions%2A>, 사용 권한 목록에서 기본값으로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2927">When you call <xref:System.Messaging.MessageQueue.ResetPermissions%2A>, you return the permission list to its default values.</span></span> <span data-ttu-id="b509c-2928">일반적으로이 큐 작성자 모든 사용 권한을 부여 하 고 Everyone 그룹에 게 다음 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2928">Generally, this grants the queue creator all permissions, and gives the group Everyone the following rights:</span></span>  
  
-   <span data-ttu-id="b509c-2929">큐의 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2929">Get the properties of the queue.</span></span>  
  
-   <span data-ttu-id="b509c-2930">큐 권한을 얻습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2930">Get queue permissions.</span></span>  
  
-   <span data-ttu-id="b509c-2931">큐에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2931">Write to the queue.</span></span>  
  
 <span data-ttu-id="b509c-2932">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2932">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2933">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2933">Workgroup mode</span></span>|<span data-ttu-id="b509c-2934">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2934">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2935">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2935">Local computer</span></span>|<span data-ttu-id="b509c-2936">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2936">Yes</span></span>|  
|<span data-ttu-id="b509c-2937">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2937">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2938">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2938">Yes</span></span>|  
|<span data-ttu-id="b509c-2939">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2939">Remote computer</span></span>|<span data-ttu-id="b509c-2940">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2940">No</span></span>|  
|<span data-ttu-id="b509c-2941">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2941">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2942">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2942">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2943">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.ResetPermissions%2A>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2943">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ResetPermissions%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#27](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#27)]
 [!code-csharp[MessageQueue2#27](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2944">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2944">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-2945">큐에 개체를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2945">Sends an object to a queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Send : obj -&gt; unit" Usage="messageQueue.Send obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b509c-2946">큐에 보낼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2946">The object to send to the queue.</span></span></param>
        <summary><span data-ttu-id="b509c-2947">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 비트랜잭션 큐에 개체를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2947">Sends an object to non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2948">이 오버 로드를 사용 하 여 포함 된 메시지를 보내려고 합니다 `obj` 매개 변수를 참조 하는 큐는 <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="b509c-2948">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="b509c-2949">큐에 보내는 개체 수를 <xref:System.Messaging.Message> 또는 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2949">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="b509c-2950">이외의 다른 모든 개체를 전송 하는 경우는 <xref:System.Messaging.Message>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2950">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="b509c-2951">이 오버 로드를 사용 하 여 트랜잭션 큐로 메시지를 보낼 경우 메시지 배달 못 한 편지 큐로 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2951">If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</span></span> <span data-ttu-id="b509c-2952">받아들이는 오버 로드를 사용 하 여 다른 메시지를 포함 하는 트랜잭션의 일부가 되도록 메시지를 하려는 경우는 <xref:System.Messaging.MessageQueueTransaction> 또는 <xref:System.Messaging.MessageQueueTransactionType> 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2952">If you want the message to be part of a transaction that contains other messages, use an overload that takes a <xref:System.Messaging.MessageQueueTransaction> or <xref:System.Messaging.MessageQueueTransactionType> as a parameter.</span></span>  
  
 <span data-ttu-id="b509c-2953">설정 하지 않은 경우는 <xref:System.Messaging.MessageQueue.Formatter%2A> 호출 하기 전에 속성 <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, 포맷터가 기본값으로 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2953">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="b509c-2954">합니다 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성 이외의 다른 모든 개체에 적용 되는 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2954">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="b509c-2955">를 지정 하면 예를 들어, 레이블 또는 사용 하 여 우선 순위를 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 멤버를이 값은 형식이 아닌 개체를 포함 하는 모든 메시지에 적용 <xref:System.Messaging.Message> 경우 응용 프로그램 큐로 보냅니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2955">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="b509c-2956">보낼 때를 <xref:System.Messaging.Message>에 대 한 속성 값을 설정 합니다 <xref:System.Messaging.Message> 보다 우선적으로 적용 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 및 메시지의 <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> 속성 우선 순위가 큐의 <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2956">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b509c-2957">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2957">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2958">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2958">Workgroup mode</span></span>|<span data-ttu-id="b509c-2959">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2959">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2960">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2960">Local computer</span></span>|<span data-ttu-id="b509c-2961">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2961">Yes</span></span>|  
|<span data-ttu-id="b509c-2962">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2962">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2963">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2963">Yes</span></span>|  
|<span data-ttu-id="b509c-2964">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2964">Remote computer</span></span>|<span data-ttu-id="b509c-2965">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2965">No</span></span>|  
|<span data-ttu-id="b509c-2966">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2966">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2967">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2967">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2968">다음 코드 예제에서는 메시지 큐에 연결 하 고 큐에 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2968">The following code example connects to a message queue and sends a message to the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Send_obj#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Send_obj/CPP/mqsend_generic.cpp#1)]
 [!code-csharp[MessageQueue.Send_obj#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Send_obj/CS/mqsend_generic.cs#1)]
 [!code-vb[MessageQueue.Send_obj#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Send_obj/VB/mqsend_generic.vb#1)]  
  
 <span data-ttu-id="b509c-2969">다음 코드 예제에서는 응용 프로그램 정의 보냅니다 `Order` 큐에 클래스 및 해당 큐에서 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2969">The following code example sends an application-defined `Order` class to a queue and then receives a message from that queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-2970"><see cref="P:System.Messaging.MessageQueue.Path" /> 속성이 설정되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2970">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="b509c-2971">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-2971">-or-</span></span> 
<span data-ttu-id="b509c-2972">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-2972">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, transaction As MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * System.Messaging.MessageQueueTransaction -&gt; unit" Usage="messageQueue.Send (obj, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b509c-2973">큐에 보낼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2973">The object to send to the queue.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-2974"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-2974">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-2975">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 트랜잭션 큐에 개체를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2975">Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-2976">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼 합니다 `obj` 매개 변수를 참조 하는 트랜잭션 큐를 <xref:System.Messaging.MessageQueue>, 정의한 내부 트랜잭션 컨텍스트를 사용 하는 `transaction` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b509c-2976">Use this overload to send a message that contains the `obj` parameter to the transactional queue referenced by the <xref:System.Messaging.MessageQueue>, using an internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="b509c-2977">큐에 보내는 개체 수를 <xref:System.Messaging.Message> 또는 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2977">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="b509c-2978">이외의 다른 모든 개체를 전송 하는 경우는 <xref:System.Messaging.Message>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2978">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="b509c-2979">이 오버 로드를 사용 하 여 비트랜잭션 큐에 메시지를 보낼 경우 예외를 throw 하지 않고 배달 못 한 편지 큐로 메시지를 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2979">If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</span></span>  
  
 <span data-ttu-id="b509c-2980">설정 하지 않은 경우는 <xref:System.Messaging.MessageQueue.Formatter%2A> 호출 하기 전에 속성 <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, 포맷터가 기본값으로 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2980">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="b509c-2981">합니다 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성 이외의 다른 모든 개체에 적용 되는 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2981">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="b509c-2982">를 지정 하면 예를 들어, 레이블 또는 사용 하 여 우선 순위를 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 멤버를이 값은 형식이 아닌 개체를 포함 하는 모든 메시지에 적용 <xref:System.Messaging.Message> 경우 응용 프로그램 큐로 보냅니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2982">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="b509c-2983">보낼 때를 <xref:System.Messaging.Message>에 대 한 속성 값을 설정 합니다 <xref:System.Messaging.Message> 보다 우선적으로 적용 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 및 메시지의 <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> 속성 우선 순위가 큐의 <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2983">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b509c-2984"><xref:System.Messaging.MessageQueueTransaction> 스레딩 아파트를 인식 하며 따라서 아파트 상태가 `STA`, 트랜잭션이 여러 스레드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2984"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="b509c-2985">에 주 스레드의 상태를 설정 하는 Visual Basic `STA`이므로 적용 해야 합니다는 <xref:System.MTAThreadAttribute> 에 `Main` 서브루틴입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2985">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="b509c-2986">그렇지 않으면 다른 스레드를 사용하여 트랜잭션 메시지를 전달할 때 <xref:System.Messaging.MessageQueueException> 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2986">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="b509c-2987">적용 된 <xref:System.MTAThreadAttribute> 다음 조각을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2987">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="b509c-2988">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2988">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-2989">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-2989">Workgroup mode</span></span>|<span data-ttu-id="b509c-2990">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-2990">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-2991">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2991">Local computer</span></span>|<span data-ttu-id="b509c-2992">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2992">Yes</span></span>|  
|<span data-ttu-id="b509c-2993">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2993">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-2994">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2994">Yes</span></span>|  
|<span data-ttu-id="b509c-2995">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-2995">Remote computer</span></span>|<span data-ttu-id="b509c-2996">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-2996">No</span></span>|  
|<span data-ttu-id="b509c-2997">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-2997">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-2998">예</span><span class="sxs-lookup"><span data-stu-id="b509c-2998">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-2999">다음 코드 예제에서는 문자열은 트랜잭션 큐로 보내고 큐에서 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-2999">The following code example sends a string to a transactional queue and then receives a message from that queue.</span></span>  
  
 [!code-cpp[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/CPP/mqsend_objtransaction.cpp#1)]
 [!code-csharp[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/CS/mqsend_objtransaction.cs#1)]
 [!code-vb[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/VB/mqsend_objtransaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-3000"><paramref name="transaction" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3000">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3001"><see cref="P:System.Messaging.MessageQueue.Path" /> 속성이 설정되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3001">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="b509c-3002">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-3002">-or-</span></span> 
<span data-ttu-id="b509c-3003">메시지 큐 응용 프로그램에서 트랜잭션을 잘못 사용했음을 나타냈습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3003">The Message Queuing application indicated an incorrect transaction use.</span></span>  
  
<span data-ttu-id="b509c-3004">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-3004">-or-</span></span> 
<span data-ttu-id="b509c-3005">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3005">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, transactionType As MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * System.Messaging.MessageQueueTransactionType -&gt; unit" Usage="messageQueue.Send (obj, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b509c-3006">큐에 보낼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3006">The object to send to the queue.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-3007"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3007">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-3008">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐에 개체를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3008">Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3009">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼 합니다 `obj` 매개 변수를 참조 하는 큐를 <xref:System.Messaging.MessageQueue>, 정의한 트랜잭션 컨텍스트를 사용 하는 `transactionType` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b509c-3009">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="b509c-3010">지정할 `Automatic` 에 대 한는 `transactionType` 외부 트랜잭션 컨텍스트를 이미 있으면 매개 변수를 사용 하는 메시지를 보내는 원하는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3010">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</span></span> <span data-ttu-id="b509c-3011">지정 `Single` 내부 단일 트랜잭션으로 메시지를 전송 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-3011">Specify `Single` if you want to send the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-3012">지정할 수 있습니다 `None` 트랜잭션 메시지가 비트랜잭션 스레드로 전송 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-3012">You can specify `None` if you want to send a transactional message to a non-transactional thread.</span></span>  
  
 <span data-ttu-id="b509c-3013">큐에 보내는 개체 수를 <xref:System.Messaging.Message> 또는 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3013">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="b509c-3014">이외의 다른 모든 개체를 전송 하는 경우는 <xref:System.Messaging.Message>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3014">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="b509c-3015">설정 하지 않은 경우는 <xref:System.Messaging.MessageQueue.Formatter%2A> 호출 하기 전에 속성 <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, 포맷터가 기본값으로 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3015">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="b509c-3016">합니다 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성 이외의 다른 모든 개체에 적용 되는 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3016">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="b509c-3017">를 지정 하면 예를 들어, 레이블 또는 사용 하 여 우선 순위를 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 멤버를이 값은 형식이 아닌 개체를 포함 하는 모든 메시지에 적용 <xref:System.Messaging.Message> 경우 응용 프로그램 큐로 보냅니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3017">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="b509c-3018">보낼 때를 <xref:System.Messaging.Message>에 대 한 속성 값을 설정 합니다 <xref:System.Messaging.Message> 보다 우선적으로 적용 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 및 메시지의 <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> 속성 우선 순위가 큐의 <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3018">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b509c-3019">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3019">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3020">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3020">Workgroup mode</span></span>|<span data-ttu-id="b509c-3021">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3021">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3022">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3022">Local computer</span></span>|<span data-ttu-id="b509c-3023">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3023">Yes</span></span>|  
|<span data-ttu-id="b509c-3024">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3024">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3025">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3025">Yes</span></span>|  
|<span data-ttu-id="b509c-3026">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3026">Remote computer</span></span>|<span data-ttu-id="b509c-3027">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3027">No</span></span>|  
|<span data-ttu-id="b509c-3028">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3028">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3029">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3029">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3030">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3030">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#2)]
 [!code-csharp[MessageQueue2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-3031"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3031">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3032"><see cref="P:System.Messaging.MessageQueue.Path" /> 속성이 설정되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3032">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="b509c-3033">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-3033">-or-</span></span> 
<span data-ttu-id="b509c-3034">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3034">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * string -&gt; unit" Usage="messageQueue.Send (obj, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b509c-3035">큐에 보낼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3035">The object to send to the queue.</span></span></param>
        <param name="label"><span data-ttu-id="b509c-3036">메시지의 레이블입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3036">The label of the message.</span></span></param>
        <summary><span data-ttu-id="b509c-3037">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 비트랜잭션 큐에 개체를 보내고 메시지에 레이블을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3037">Sends an object to the non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3038">이 오버 로드를 사용 하 여 포함 된 메시지를 보내려고 합니다 `obj` 매개 변수를 참조 하는 큐는 <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="b509c-3038">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="b509c-3039">이 오버 로드를 사용 하 여 메시지를 식별 하는 문자열 레이블을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3039">With this overload, you can specify the string label that identifies the message.</span></span> <span data-ttu-id="b509c-3040">큐에 보내는 개체 수를 <xref:System.Messaging.Message>, 구조, 데이터 개체 또는 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3040">The object you send to the queue can be a <xref:System.Messaging.Message>, a structure, a data object, or any managed object.</span></span> <span data-ttu-id="b509c-3041">이외의 다른 모든 개체를 전송 하는 경우는 <xref:System.Messaging.Message>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3041">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="b509c-3042">메시지 레이블에 메시지 큐 레이블을 다릅니다 되지만 둘 다 응용 프로그램 종속 되어 상속 메시지 큐에 의미가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3042">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="b509c-3043">이 오버 로드를 사용 하 여 트랜잭션 큐로 메시지를 보낼 경우 메시지 배달 못 한 편지 큐로 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3043">If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</span></span> <span data-ttu-id="b509c-3044">받아들이는 오버 로드를 사용 하 여 다른 메시지를 포함 하는 트랜잭션의 일부가 되도록 메시지를 하려는 경우는 <xref:System.Messaging.MessageQueueTransaction> 또는 <xref:System.Messaging.MessageQueueTransactionType> 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3044">If you want the message to be part of a transaction that contains other messages, use an overload that takes a <xref:System.Messaging.MessageQueueTransaction> or <xref:System.Messaging.MessageQueueTransactionType> as a parameter.</span></span>  
  
 <span data-ttu-id="b509c-3045">합니다 <xref:System.Messaging.MessageQueue.Path%2A> 속성을이 <xref:System.Messaging.MessageQueue> 메시지를 보내기 전에 인스턴스를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3045">The <xref:System.Messaging.MessageQueue.Path%2A> property for this <xref:System.Messaging.MessageQueue> instance must be specified before you send the message.</span></span> <span data-ttu-id="b509c-3046">설정 하지 않은 경우는 <xref:System.Messaging.MessageQueue.Formatter%2A> 호출 하기 전에 속성 <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, 포맷터가 기본값으로 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3046">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="b509c-3047">합니다 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성 이외의 다른 모든 개체에 적용 되는 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3047">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="b509c-3048">를 지정 하면 예를 들어, 레이블 또는 사용 하 여 우선 순위를 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 멤버를이 값은 형식이 아닌 개체를 포함 하는 모든 메시지에 적용 <xref:System.Messaging.Message> 경우 응용 프로그램 큐로 보냅니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3048">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="b509c-3049">보낼 때를 <xref:System.Messaging.Message>에 대 한 속성 값을 설정 합니다 <xref:System.Messaging.Message> 보다 우선적으로 적용 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 및 메시지의 <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> 속성 우선 순위가 큐의 <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3049">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b509c-3050">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3050">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3051">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3051">Workgroup mode</span></span>|<span data-ttu-id="b509c-3052">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3052">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3053">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3053">Local computer</span></span>|<span data-ttu-id="b509c-3054">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3054">Yes</span></span>|  
|<span data-ttu-id="b509c-3055">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3055">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3056">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3056">Yes</span></span>|  
|<span data-ttu-id="b509c-3057">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3057">Remote computer</span></span>|<span data-ttu-id="b509c-3058">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3058">No</span></span>|  
|<span data-ttu-id="b509c-3059">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3059">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3060">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3060">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3061">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3061">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueue2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-3062"><paramref name="label" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3062">The <paramref name="label" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3063"><see cref="P:System.Messaging.MessageQueue.Path" /> 속성이 설정되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3063">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="b509c-3064">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-3064">-or-</span></span> 
<span data-ttu-id="b509c-3065">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3065">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String, transaction As MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * string * System.Messaging.MessageQueueTransaction -&gt; unit" Usage="messageQueue.Send (obj, label, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b509c-3066">큐에 보낼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3066">The object to send to the queue.</span></span></param>
        <param name="label"><span data-ttu-id="b509c-3067">메시지의 레이블입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3067">The label of the message.</span></span></param>
        <param name="transaction"><span data-ttu-id="b509c-3068"><see cref="T:System.Messaging.MessageQueueTransaction" /> 개체</span><span class="sxs-lookup"><span data-stu-id="b509c-3068">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span></span></param>
        <summary><span data-ttu-id="b509c-3069">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 트랜잭션 큐에 개체를 보내고 메시지에 레이블을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3069">Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3070">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼 합니다 `obj` 매개 변수를 참조 하는 트랜잭션 큐를 <xref:System.Messaging.MessageQueue>, 정의한 내부 트랜잭션 컨텍스트를 사용 하는 `transaction` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b509c-3070">Use this overload to send a message that contains the `obj` parameter to the transactional queue referenced by the <xref:System.Messaging.MessageQueue>, using an internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="b509c-3071">이 오버 로드를 사용 하 여 메시지를 식별 하는 문자열 레이블을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3071">With this overload, you can specify the string label that identifies the message.</span></span> <span data-ttu-id="b509c-3072">큐에 보내는 개체 수를 <xref:System.Messaging.Message>, 구조, 데이터 개체 또는 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3072">The object you send to the queue can be a <xref:System.Messaging.Message>, a structure, a data object, or any managed object.</span></span> <span data-ttu-id="b509c-3073">이외의 다른 모든 개체를 전송 하는 경우는 <xref:System.Messaging.Message>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3073">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="b509c-3074">메시지 레이블에 메시지 큐 레이블을 다릅니다 되지만 둘 다 응용 프로그램 종속 되어 상속 메시지 큐에 의미가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3074">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="b509c-3075">이 오버 로드를 사용 하 여 비트랜잭션 큐에 메시지를 보낼 경우 예외를 throw 하지 않고 배달 못 한 편지 큐로 메시지를 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3075">If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</span></span>  
  
 <span data-ttu-id="b509c-3076">설정 하지 않은 경우는 <xref:System.Messaging.MessageQueue.Formatter%2A> 호출 하기 전에 속성 <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, 포맷터가 기본값으로 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3076">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="b509c-3077">합니다 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성 이외의 다른 모든 개체에 적용 되는 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3077">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="b509c-3078">를 지정 하면 예를 들어, 레이블 또는 사용 하 여 우선 순위를 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 멤버를이 값은 형식이 아닌 개체를 포함 하는 모든 메시지에 적용 <xref:System.Messaging.Message> 경우 응용 프로그램 큐로 보냅니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3078">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="b509c-3079">보내면를 <xref:System.Messaging.Message>에 대 한 속성 값을 설정 합니다 <xref:System.Messaging.Message> 보다 우선적으로 적용 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 및 메시지의 <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> 속성 우선 순위가 큐의 <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> 속성</span><span class="sxs-lookup"><span data-stu-id="b509c-3079">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property</span></span>  
  
 <span data-ttu-id="b509c-3080"><xref:System.Messaging.MessageQueueTransaction> 스레딩 아파트를 인식 하며 따라서 아파트 상태가 `STA`, 트랜잭션이 여러 스레드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3080"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="b509c-3081">에 주 스레드의 상태를 설정 하는 Visual Basic `STA`이므로 적용 해야 합니다는 <xref:System.MTAThreadAttribute> 에 `Main` 서브루틴입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3081">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="b509c-3082">그렇지 않으면 다른 스레드를 사용하여 트랜잭션 메시지를 전달할 때 <xref:System.Messaging.MessageQueueException> 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3082">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="b509c-3083">적용 된 <xref:System.MTAThreadAttribute> 다음 조각을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3083">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="b509c-3084">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3084">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3085">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3085">Workgroup mode</span></span>|<span data-ttu-id="b509c-3086">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3086">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3087">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3087">Local computer</span></span>|<span data-ttu-id="b509c-3088">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3088">Yes</span></span>|  
|<span data-ttu-id="b509c-3089">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3089">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3090">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3090">Yes</span></span>|  
|<span data-ttu-id="b509c-3091">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3091">Remote computer</span></span>|<span data-ttu-id="b509c-3092">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3092">No</span></span>|  
|<span data-ttu-id="b509c-3093">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3093">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3094">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3094">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3095">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3095">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#4](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#4)]
 [!code-csharp[MessageQueue2#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-3096"><paramref name="label" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3096">The <paramref name="label" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b509c-3097">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-3097">-or-</span></span> 
<span data-ttu-id="b509c-3098"><paramref name="transaction" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3098">The <paramref name="transaction" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3099"><see cref="P:System.Messaging.MessageQueue.Path" /> 속성이 설정되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3099">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="b509c-3100">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-3100">-or-</span></span> 
<span data-ttu-id="b509c-3101">메시지 큐 응용 프로그램에서 트랜잭션을 잘못 사용했음을 나타냈습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3101">The Message Queuing application indicated an incorrect transaction usage.</span></span>  
  
<span data-ttu-id="b509c-3102">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-3102">-or-</span></span> 
<span data-ttu-id="b509c-3103">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3103">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String, transactionType As MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.Send : obj * string * System.Messaging.MessageQueueTransactionType -&gt; unit" Usage="messageQueue.Send (obj, label, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b509c-3104">큐에 보낼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3104">The object to send to the queue.</span></span></param>
        <param name="label"><span data-ttu-id="b509c-3105">메시지의 레이블입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3105">The label of the message.</span></span></param>
        <param name="transactionType"><span data-ttu-id="b509c-3106"><see cref="T:System.Messaging.MessageQueueTransactionType" /> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3106">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span></span></param>
        <summary><span data-ttu-id="b509c-3107">이 <see cref="T:System.Messaging.MessageQueue" />가 참조하는 큐에 개체를 보내고 메시지에 레이블을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3107">Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3108">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼 합니다 `obj` 매개 변수를 참조 하는 큐를 <xref:System.Messaging.MessageQueue>, 정의한 트랜잭션 컨텍스트를 사용 하는 `transactionType` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b509c-3108">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="b509c-3109">지정할 `Automatic` 에 대 한는 `transactionType` 외부 트랜잭션 컨텍스트를 이미 있으면 매개 변수를 사용 하는 메시지를 보내는 원하는 스레드에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3109">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</span></span> <span data-ttu-id="b509c-3110">지정 `Single` 내부 단일 트랜잭션으로 메시지를 전송 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-3110">Specify `Single` if you want to send the message as a single internal transaction.</span></span> <span data-ttu-id="b509c-3111">지정할 수 있습니다 `None` 트랜잭션 메시지가 비트랜잭션 스레드로 전송 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-3111">You can specify `None` if you want to send a transactional message to a non-transactional thread.</span></span>  
  
 <span data-ttu-id="b509c-3112">큐에 보내는 개체 수를 <xref:System.Messaging.Message> 또는 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3112">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="b509c-3113">이외의 다른 모든 개체를 전송 하는 경우는 <xref:System.Messaging.Message>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3113">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span> <span data-ttu-id="b509c-3114">이 오버 로드를 사용 하 여 메시지를 식별 하는 문자열 레이블을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3114">With this overload, you can specify the string label that identifies the message.</span></span>  
  
 <span data-ttu-id="b509c-3115">메시지 레이블에 메시지 큐 레이블을 다릅니다 되지만 둘 다 응용 프로그램 종속 되어 상속 메시지 큐에 의미가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3115">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="b509c-3116">설정 하지 않은 경우는 <xref:System.Messaging.MessageQueue.Formatter%2A> 호출 하기 전에 속성 <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, 포맷터가 기본값으로 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3116">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="b509c-3117">합니다 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성 이외의 다른 모든 개체에 적용 되는 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3117">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="b509c-3118">를 지정 하면 예를 들어, 레이블 또는 사용 하 여 우선 순위를 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 멤버를이 값은 형식이 아닌 개체를 포함 하는 모든 메시지에 적용 <xref:System.Messaging.Message> 경우 응용 프로그램 큐로 보냅니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3118">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="b509c-3119">보낼 때를 <xref:System.Messaging.Message>에 대 한 속성 값을 설정 합니다 <xref:System.Messaging.Message> 보다 우선적으로 적용 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, 및 메시지의 <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> 속성 우선 순위가 큐의 <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3119">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b509c-3120">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3120">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3121">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3121">Workgroup mode</span></span>|<span data-ttu-id="b509c-3122">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3122">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3123">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3123">Local computer</span></span>|<span data-ttu-id="b509c-3124">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3124">Yes</span></span>|  
|<span data-ttu-id="b509c-3125">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3125">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3126">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3126">Yes</span></span>|  
|<span data-ttu-id="b509c-3127">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3127">Remote computer</span></span>|<span data-ttu-id="b509c-3128">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3128">No</span></span>|  
|<span data-ttu-id="b509c-3129">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3129">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3130">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3130">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3131">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3131">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#3](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#3)]
 [!code-csharp[MessageQueue2#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b509c-3132"><paramref name="label" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3132">The <paramref name="label" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueTransaction"><span data-ttu-id="b509c-3133">메시지 큐 응용 프로그램에서 트랜잭션을 잘못 사용했음을 나타냈습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3133">The Message Queuing application indicated an incorrect transaction usage.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b509c-3134"><paramref name="transactionType" /> 매개 변수가 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 멤버 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3134">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3135"><see cref="P:System.Messaging.MessageQueue.Path" /> 속성이 설정되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3135">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span></span>  
  
<span data-ttu-id="b509c-3136">또는</span><span class="sxs-lookup"><span data-stu-id="b509c-3136">-or-</span></span> 
<span data-ttu-id="b509c-3137">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3137">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetPermissions">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b509c-3138">현재 집합에 사용 권한을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3138">Adds permissions to the current set.</span></span> <span data-ttu-id="b509c-3139">큐 속성 및 큐에 있는 메시지에 대해 액세스 권한이 있는 사용자를 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3139">This controls who has access rights to queue properties and messages in the queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Messaging.AccessControlList dacl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(class System.Messaging.AccessControlList dacl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (dacl As AccessControlList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Messaging::AccessControlList ^ dacl);" />
      <MemberSignature Language="F#" Value="member this.SetPermissions : System.Messaging.AccessControlList -&gt; unit" Usage="messageQueue.SetPermissions dacl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dacl" Type="System.Messaging.AccessControlList" />
      </Parameters>
      <Docs>
        <param name="dacl"><span data-ttu-id="b509c-3140">부여할 사용 권한 및 트러스티를 지정하는 액세스 제어 항목이 하나 이상 포함된 <see cref="T:System.Messaging.AccessControlList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3140">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and the permissions to grant.</span></span></param>
        <summary><span data-ttu-id="b509c-3141">액세스 제어 목록의 내용을 기준으로 큐에 액세스 권한을 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3141">Assigns access rights to the queue based on the contents of an access control list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3142">이 오버 로드를 사용 하 여 권한을 부여, 거부 또는 트러스티 및 사용 권한 정보를 지정 하려면 액세스 제어 항목의 컬렉션을 사용 하 여 권한을 취소.</span><span class="sxs-lookup"><span data-stu-id="b509c-3142">Use this overload to grant, deny, or revoke rights by using a collection of access control entries to specify trustee and permissions information.</span></span> <span data-ttu-id="b509c-3143">이 사용 됩니다, 예를 들어, 한 번에 여러 사용자에 게 권한을 부여 하려면.</span><span class="sxs-lookup"><span data-stu-id="b509c-3143">This is used, for example, to grant permissions to multiple users at the same time.</span></span>  
  
 <span data-ttu-id="b509c-3144">트러스티를 생성할 때 지정 하는 `ace` 매개 변수는 개별 사용자, 사용자, 그룹 또는 컴퓨터 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3144">The trustee you specify when you construct the `ace` parameter can be an individual user, a group of users, or a computer.</span></span> <span data-ttu-id="b509c-3145">트러스티가 개별, 형식을 사용 하 여 `DOMAIN` \\ `user`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3145">If the trustee is an individual, use the format `DOMAIN`\\`user`.</span></span> <span data-ttu-id="b509c-3146">지정할 수 있습니다 "." 트러스티 로컬 컴퓨터에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3146">You can specify "." for the trustee to indicate the local computer.</span></span>  
  
 <span data-ttu-id="b509c-3147">사용 권한을 통해 할당 <xref:System.Messaging.MessageQueue.SetPermissions%2A> 기존 목록에 대 한 권한을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3147">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="b509c-3148">기본적으로 공용 또는 개인 큐의 작성자가 전체 컨트롤 및 도메인 그룹 모든 권한이 큐 속성을 가져오고 사용 권한 가져오기, 큐에 작성 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3148">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="b509c-3149">호출 하는 경우 <xref:System.Messaging.MessageQueue.SetPermissions%2A>, 사용자 및 권한 정보를 기존 목록 맨 아래에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3149">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="b509c-3150">각 시스템 검사 <xref:System.Messaging.AccessControlEntry> 다음 이벤트 중 하나가 발생할 때까지 시퀀스에서:</span><span class="sxs-lookup"><span data-stu-id="b509c-3150">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="b509c-3151">액세스가 거부 되었습니다 <xref:System.Messaging.AccessControlEntry> 스레드의 액세스 토큰에 나열 된 트러스티 중 하나에 요청 된 액세스 권한을 명시적으로 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3151">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="b509c-3152">하나 이상의 액세스가 허용 된 <xref:System.Messaging.AccessControlEntry> 트러스티를 명시적으로 스레드 액세스 토큰에 나열 된 모든 요청 된 액세스 권한 부여에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3152">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="b509c-3153">모든 <xref:System.Messaging.AccessControlEntry> 가 항목을 체크 이며 여전히 하나 이상의 요청 된 액세스 권한이 허용 되지 않은 명시적으로, 경우에 암시적으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3153">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="b509c-3154">생성 하는 경우는 `dacl` 매개 변수를 추가한 <xref:System.Messaging.AccessControlEntry> 인스턴스를 프로그램 <xref:System.Messaging.AccessControlList> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3154">When you construct the `dacl` parameter, you add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="b509c-3155">각 액세스 제어 항목을 생성 하는 경우에 제네릭 또는 표준 액세스 권한을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3155">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="b509c-3156">큐에 대 한 권한을 다음의 조합일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3156">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="b509c-3157">삭제</span><span class="sxs-lookup"><span data-stu-id="b509c-3157">Delete</span></span>  
  
-   <span data-ttu-id="b509c-3158">보안 읽기</span><span class="sxs-lookup"><span data-stu-id="b509c-3158">Read Security</span></span>  
  
-   <span data-ttu-id="b509c-3159">보안 쓰기</span><span class="sxs-lookup"><span data-stu-id="b509c-3159">Write Security</span></span>  
  
-   <span data-ttu-id="b509c-3160">동기화</span><span class="sxs-lookup"><span data-stu-id="b509c-3160">Synchronize</span></span>  
  
-   <span data-ttu-id="b509c-3161">소유자 수정</span><span class="sxs-lookup"><span data-stu-id="b509c-3161">Modify Owner</span></span>  
  
-   <span data-ttu-id="b509c-3162">읽기</span><span class="sxs-lookup"><span data-stu-id="b509c-3162">Read</span></span>  
  
-   <span data-ttu-id="b509c-3163">Write</span><span class="sxs-lookup"><span data-stu-id="b509c-3163">Write</span></span>  
  
-   <span data-ttu-id="b509c-3164">실행</span><span class="sxs-lookup"><span data-stu-id="b509c-3164">Execute</span></span>  
  
-   <span data-ttu-id="b509c-3165">필수</span><span class="sxs-lookup"><span data-stu-id="b509c-3165">Required</span></span>  
  
-   <span data-ttu-id="b509c-3166">모두</span><span class="sxs-lookup"><span data-stu-id="b509c-3166">All</span></span>  
  
-   <span data-ttu-id="b509c-3167">없음</span><span class="sxs-lookup"><span data-stu-id="b509c-3167">None</span></span>  
  
 <span data-ttu-id="b509c-3168">이러한 권리는 비트 OR 연산자를 사용 하 여 결합할 수 있는 비트 플래그 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3168">These rights are a set of bit flags that you can combine using the OR bitwise operator.</span></span>  
  
-   <span data-ttu-id="b509c-3169">모든 권한</span><span class="sxs-lookup"><span data-stu-id="b509c-3169">Full Control</span></span>  
  
-   <span data-ttu-id="b509c-3170">메시지 삭제</span><span class="sxs-lookup"><span data-stu-id="b509c-3170">Delete Message</span></span>  
  
-   <span data-ttu-id="b509c-3171">메시지를 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3171">Receive Message</span></span>  
  
-   <span data-ttu-id="b509c-3172">메시지 보기</span><span class="sxs-lookup"><span data-stu-id="b509c-3172">Peek Message</span></span>  
  
-   <span data-ttu-id="b509c-3173">저널 메시지 받기</span><span class="sxs-lookup"><span data-stu-id="b509c-3173">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="b509c-3174">큐 속성 가져오기</span><span class="sxs-lookup"><span data-stu-id="b509c-3174">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="b509c-3175">큐 속성 설정</span><span class="sxs-lookup"><span data-stu-id="b509c-3175">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="b509c-3176">사용 권한 가져오기</span><span class="sxs-lookup"><span data-stu-id="b509c-3176">Get Permissions</span></span>  
  
-   <span data-ttu-id="b509c-3177">사용 권한 설정</span><span class="sxs-lookup"><span data-stu-id="b509c-3177">Set Permissions</span></span>  
  
-   <span data-ttu-id="b509c-3178">큐 소유권</span><span class="sxs-lookup"><span data-stu-id="b509c-3178">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="b509c-3179">메시지 작성</span><span class="sxs-lookup"><span data-stu-id="b509c-3179">Write Message</span></span>  
  
 <span data-ttu-id="b509c-3180">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3180">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3181">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3181">Workgroup mode</span></span>|<span data-ttu-id="b509c-3182">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3182">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3183">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3183">Local computer</span></span>|<span data-ttu-id="b509c-3184">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3184">Yes</span></span>|  
|<span data-ttu-id="b509c-3185">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3185">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3186">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3186">Yes</span></span>|  
|<span data-ttu-id="b509c-3187">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3187">Remote computer</span></span>|<span data-ttu-id="b509c-3188">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3188">No</span></span>|  
|<span data-ttu-id="b509c-3189">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3189">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3190">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3190">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3191">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3191">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29>.</span></span>      
  
 [!code-cpp[MessageQueue2#26](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#26)]
 [!code-csharp[MessageQueue2#26](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3192">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3192">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.AccessControlList" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Messaging.MessageQueueAccessControlEntry ace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(class System.Messaging.MessageQueueAccessControlEntry ace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (ace As MessageQueueAccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Messaging::MessageQueueAccessControlEntry ^ ace);" />
      <MemberSignature Language="F#" Value="member this.SetPermissions : System.Messaging.MessageQueueAccessControlEntry -&gt; unit" Usage="messageQueue.SetPermissions ace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ace" Type="System.Messaging.MessageQueueAccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="ace"><span data-ttu-id="b509c-3193">사용자, 액세스 형식 및 사용 권한 형식을 지정하는 <see cref="T:System.Messaging.MessageQueueAccessControlEntry" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3193">A <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> that specifies a user, an access type, and a permission type.</span></span></param>
        <summary><span data-ttu-id="b509c-3194">액세스 제어 항목의 내용을 기준으로 큐에 액세스 권한을 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3194">Assigns access rights to the queue based on the contents of an access control entry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3195">이 오버 로드를 사용 하 여 부여, 거부 또는 트러스티와 권한 정보를 지정 하는 액세스 제어 항목을 사용 하 여 권한을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3195">Use this overload to grant, deny, or revoke rights by using an access control entry to specify trustee and rights information.</span></span>  
  
 <span data-ttu-id="b509c-3196">트러스티를 생성할 때 지정 하는 `ace` 매개 변수는 개별 사용자, 사용자, 그룹 또는 컴퓨터 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3196">The trustee you specify when you construct the `ace` parameter can be an individual user, a group of users, or a computer.</span></span> <span data-ttu-id="b509c-3197">트러스티가 개별, 형식을 사용 하 여 `DOMAIN` \\ `user`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3197">If the trustee is an individual, use the format `DOMAIN`\\`user`.</span></span> <span data-ttu-id="b509c-3198">지정할 수 있습니다 "." 트러스티 로컬 컴퓨터에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3198">You can specify "." for the trustee to indicate the local computer.</span></span>  
  
 <span data-ttu-id="b509c-3199">사용 권한을 통해 할당 <xref:System.Messaging.MessageQueue.SetPermissions%2A> 기존 목록에 대 한 권한을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3199">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="b509c-3200">기본적으로 공용 또는 개인 큐의 작성자가 전체 컨트롤 및 도메인 그룹 모든 권한이 큐 속성을 가져오고 사용 권한 가져오기, 큐에 작성 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3200">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="b509c-3201">호출 하는 경우 <xref:System.Messaging.MessageQueue.SetPermissions%2A>, 사용자 및 권한 정보를 기존 목록 맨 아래에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3201">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="b509c-3202">각 시스템 검사 <xref:System.Messaging.AccessControlEntry> 다음 이벤트 중 하나가 발생할 때까지 시퀀스에서:</span><span class="sxs-lookup"><span data-stu-id="b509c-3202">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="b509c-3203">액세스가 거부 되었습니다 <xref:System.Messaging.AccessControlEntry> 스레드의 액세스 토큰에 나열 된 트러스티 중 하나에 요청 된 액세스 권한을 명시적으로 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3203">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="b509c-3204">하나 이상의 액세스가 허용 된 <xref:System.Messaging.AccessControlEntry> 트러스티를 명시적으로 스레드 액세스 토큰에 나열 된 모든 요청 된 액세스 권한 부여에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3204">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="b509c-3205">모든 <xref:System.Messaging.AccessControlEntry> 가 항목을 체크 이며 여전히 하나 이상의 요청 된 액세스 권한이 허용 되지 않은 명시적으로, 경우에 암시적으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3205">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="b509c-3206">지정 하는 큐에 대 한 권한을 `rights` 매개 변수를 생성할 때에 <xref:System.Messaging.MessageQueueAccessControlEntry>, 다음의 조합일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3206">The rights to a queue, which you specify in the `rights` parameter when you construct your <xref:System.Messaging.MessageQueueAccessControlEntry>, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="b509c-3207">모든 권한</span><span class="sxs-lookup"><span data-stu-id="b509c-3207">Full Control</span></span>  
  
-   <span data-ttu-id="b509c-3208">메시지 삭제</span><span class="sxs-lookup"><span data-stu-id="b509c-3208">Delete Message</span></span>  
  
-   <span data-ttu-id="b509c-3209">메시지를 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3209">Receive Message</span></span>  
  
-   <span data-ttu-id="b509c-3210">메시지 보기</span><span class="sxs-lookup"><span data-stu-id="b509c-3210">Peek Message</span></span>  
  
-   <span data-ttu-id="b509c-3211">저널 메시지 받기</span><span class="sxs-lookup"><span data-stu-id="b509c-3211">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="b509c-3212">큐 속성 가져오기</span><span class="sxs-lookup"><span data-stu-id="b509c-3212">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="b509c-3213">큐 속성 설정</span><span class="sxs-lookup"><span data-stu-id="b509c-3213">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="b509c-3214">사용 권한 가져오기</span><span class="sxs-lookup"><span data-stu-id="b509c-3214">Get Permissions</span></span>  
  
-   <span data-ttu-id="b509c-3215">사용 권한 설정</span><span class="sxs-lookup"><span data-stu-id="b509c-3215">Set Permissions</span></span>  
  
-   <span data-ttu-id="b509c-3216">큐 소유권</span><span class="sxs-lookup"><span data-stu-id="b509c-3216">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="b509c-3217">메시지 작성</span><span class="sxs-lookup"><span data-stu-id="b509c-3217">Write Message</span></span>  
  
 <span data-ttu-id="b509c-3218">합니다 `rights` 에 대 한 생성자에서 지정 하는 매개 변수를 `ace` 매개 변수는 플래그를 <xref:System.Messaging.MessageQueueAccessRights> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3218">The `rights` parameter you specify in the constructor for the `ace` parameter is a flag of the <xref:System.Messaging.MessageQueueAccessRights> enumeration.</span></span> <span data-ttu-id="b509c-3219">비트 연산자를 사용 하 여 결합할 수 있는 비트 플래그 집합을 나타냅니다 작성 하는 경우 또는 `rights` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3219">It represents a set of bit flags that you can combine using the bitwise operator OR when you build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="b509c-3220">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3220">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3221">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3221">Workgroup mode</span></span>|<span data-ttu-id="b509c-3222">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3222">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3223">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3223">Local computer</span></span>|<span data-ttu-id="b509c-3224">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3224">Yes</span></span>|  
|<span data-ttu-id="b509c-3225">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3225">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3226">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3226">Yes</span></span>|  
|<span data-ttu-id="b509c-3227">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3227">Remote computer</span></span>|<span data-ttu-id="b509c-3228">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3228">No</span></span>|  
|<span data-ttu-id="b509c-3229">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3229">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3230">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3230">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3231">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3231">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#24](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#24)]
 [!code-csharp[MessageQueue2#24](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3232">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3232">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
        <altmember cref="T:System.Messaging.MessageQueueAccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(string user, valuetype System.Messaging.MessageQueueAccessRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (user As String, rights As MessageQueueAccessRights)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::String ^ user, System::Messaging::MessageQueueAccessRights rights);" />
      <MemberSignature Language="F#" Value="member this.SetPermissions : string * System.Messaging.MessageQueueAccessRights -&gt; unit" Usage="messageQueue.SetPermissions (user, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="rights" Type="System.Messaging.MessageQueueAccessRights" />
      </Parameters>
      <Docs>
        <param name="user"><span data-ttu-id="b509c-3233">큐에 대한 추가 권한을 가져오는 개인, 그룹 또는 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3233">The individual, group, or computer that gets additional rights to the queue.</span></span></param>
        <param name="rights"><span data-ttu-id="b509c-3234">전달된 <paramref name="user" />에 메시지 큐 서비스가 할당하는 큐에 대한 권한 집합을 나타내는 <see cref="T:System.Messaging.MessageQueueAccessRights" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3234">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in.</span></span></param>
        <summary><span data-ttu-id="b509c-3235">지정된 액세스 권한을 컴퓨터, 그룹, 또는 사용자에게 부여합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3235">Gives a computer, group, or user the specified access rights.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3236">이 오버 로드를 사용 하 여 개별 사용자 지정된 권한 부여.</span><span class="sxs-lookup"><span data-stu-id="b509c-3236">Use this overload to grant specified rights to an individual user.</span></span> <span data-ttu-id="b509c-3237">사용자는 개별 사용자, 사용자, 그룹 또는 컴퓨터를 포함 하는 모든 유효한 트러스티를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3237">The user can be any valid trustee, which includes individual users, groups of users, or a computer.</span></span> <span data-ttu-id="b509c-3238">사용자가 개인 형식을 사용 하 여 `DOMAIN` \\ `user` 에 대 한는 `user` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3238">If the user is an individual, use the format `DOMAIN`\\`user` for the `user` parameter.</span></span> <span data-ttu-id="b509c-3239">지정할 수 있습니다 "."에 대 한는 `user` 매개 변수를 로컬 컴퓨터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3239">You can specify "." for the `user` parameter to indicate the local computer.</span></span>  
  
 <span data-ttu-id="b509c-3240">사용 권한을 통해 할당 <xref:System.Messaging.MessageQueue.SetPermissions%2A> 기존 목록에 대 한 권한을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3240">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="b509c-3241">기본적으로 공용 또는 개인 큐의 작성자가 전체 컨트롤 및 도메인 그룹 모든 권한이 큐 속성을 가져오고 사용 권한 가져오기, 큐에 작성 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3241">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="b509c-3242">호출 하는 경우 <xref:System.Messaging.MessageQueue.SetPermissions%2A>, 사용자 및 권한 정보를 기존 목록 맨 아래에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3242">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="b509c-3243">각 시스템 검사 <xref:System.Messaging.AccessControlEntry> 다음 이벤트 중 하나가 발생할 때까지 시퀀스에서:</span><span class="sxs-lookup"><span data-stu-id="b509c-3243">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="b509c-3244">액세스가 거부 되었습니다 <xref:System.Messaging.AccessControlEntry> 스레드의 액세스 토큰에 나열 된 트러스티 중 하나에 요청 된 액세스 권한을 명시적으로 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3244">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="b509c-3245">하나 이상의 액세스가 허용 된 <xref:System.Messaging.AccessControlEntry> 트러스티를 명시적으로 스레드 액세스 토큰에 나열 된 모든 요청 된 액세스 권한 부여에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3245">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="b509c-3246">모든 <xref:System.Messaging.AccessControlEntry> 가 항목을 체크 이며 여전히 하나 이상의 요청 된 액세스 권한이 허용 되지 않은 명시적으로, 경우에 암시적으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3246">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="b509c-3247">에 지정 된 큐에 대 한 권한을 `rights` 매개 변수를 다음의 조합일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3247">The rights to a queue, specified in the `rights` parameter, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="b509c-3248">모든 권한</span><span class="sxs-lookup"><span data-stu-id="b509c-3248">Full Control</span></span>  
  
-   <span data-ttu-id="b509c-3249">메시지 삭제</span><span class="sxs-lookup"><span data-stu-id="b509c-3249">Delete Message</span></span>  
  
-   <span data-ttu-id="b509c-3250">메시지를 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3250">Receive Message</span></span>  
  
-   <span data-ttu-id="b509c-3251">메시지 보기</span><span class="sxs-lookup"><span data-stu-id="b509c-3251">Peek Message</span></span>  
  
-   <span data-ttu-id="b509c-3252">저널 메시지 받기</span><span class="sxs-lookup"><span data-stu-id="b509c-3252">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="b509c-3253">큐 속성 가져오기</span><span class="sxs-lookup"><span data-stu-id="b509c-3253">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="b509c-3254">큐 속성 설정</span><span class="sxs-lookup"><span data-stu-id="b509c-3254">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="b509c-3255">사용 권한 가져오기</span><span class="sxs-lookup"><span data-stu-id="b509c-3255">Get Permissions</span></span>  
  
-   <span data-ttu-id="b509c-3256">사용 권한 설정</span><span class="sxs-lookup"><span data-stu-id="b509c-3256">Set Permissions</span></span>  
  
-   <span data-ttu-id="b509c-3257">큐 소유권</span><span class="sxs-lookup"><span data-stu-id="b509c-3257">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="b509c-3258">메시지 작성</span><span class="sxs-lookup"><span data-stu-id="b509c-3258">Write Message</span></span>  
  
 <span data-ttu-id="b509c-3259">합니다 <xref:System.Messaging.MessageQueueAccessRights> 열거형은 빌드 또는 비트 연산자를 사용 하 여 결합할 수 있는 비트 플래그 집합을 나타냅니다.는 `rights` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3259">The <xref:System.Messaging.MessageQueueAccessRights> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="b509c-3260">이 오버 로드를 사용 하 여만 권한을 부여할 수 있습니다. 취소 하거나 거부할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3260">With this overload, you can only grant permissions; you cannot revoke or deny them.</span></span> <span data-ttu-id="b509c-3261">다른 오버 로드를 사용 하 여 명시적으로 부여 <xref:System.Messaging.AccessControlEntryType> 이외의 `Allow`합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3261">You must use a different overload to explicitly grant any <xref:System.Messaging.AccessControlEntryType> other than `Allow`.</span></span>  
  
 <span data-ttu-id="b509c-3262">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3262">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3263">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3263">Workgroup mode</span></span>|<span data-ttu-id="b509c-3264">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3264">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3265">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3265">Local computer</span></span>|<span data-ttu-id="b509c-3266">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3266">Yes</span></span>|  
|<span data-ttu-id="b509c-3267">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3267">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3268">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3268">Yes</span></span>|  
|<span data-ttu-id="b509c-3269">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3269">Remote computer</span></span>|<span data-ttu-id="b509c-3270">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3270">No</span></span>|  
|<span data-ttu-id="b509c-3271">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3271">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3272">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3272">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3273">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3273">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#23](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#23)]
 [!code-csharp[MessageQueue2#23](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b509c-3274"><paramref name="user" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3274">The <paramref name="user" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3275">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3275">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(string user, valuetype System.Messaging.MessageQueueAccessRights rights, valuetype System.Messaging.AccessControlEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (user As String, rights As MessageQueueAccessRights, entryType As AccessControlEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::String ^ user, System::Messaging::MessageQueueAccessRights rights, System::Messaging::AccessControlEntryType entryType);" />
      <MemberSignature Language="F#" Value="member this.SetPermissions : string * System.Messaging.MessageQueueAccessRights * System.Messaging.AccessControlEntryType -&gt; unit" Usage="messageQueue.SetPermissions (user, rights, entryType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="rights" Type="System.Messaging.MessageQueueAccessRights" />
        <Parameter Name="entryType" Type="System.Messaging.AccessControlEntryType" />
      </Parameters>
      <Docs>
        <param name="user"><span data-ttu-id="b509c-3276">큐에 대한 추가 권한을 가져오는 개인, 그룹 또는 컴퓨터입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3276">The individual, group, or computer that gets additional rights to the queue.</span></span></param>
        <param name="rights"><span data-ttu-id="b509c-3277">전달된 <paramref name="user" />에 메시지 큐 서비스가 할당하는 큐에 대한 권한 집합을 나타내는 <see cref="T:System.Messaging.MessageQueueAccessRights" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3277">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in.</span></span></param>
        <param name="entryType"><span data-ttu-id="b509c-3278"><paramref name="rights" /> 매개 변수로 지정된 사용 권한을 부여할지 거부할지 또는 해지할지를 지정하는 <see cref="T:System.Messaging.AccessControlEntryType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3278">A <see cref="T:System.Messaging.AccessControlEntryType" /> that specifies whether to grant, deny, or revoke the permissions specified by the <paramref name="rights" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b509c-3279">지정된 액세스 제어 형식(예: 허용, 거부, 해지, 또는 설정)을 포함하여, 지정된 액세스 권한을 컴퓨터, 그룹 또는 사용자에게 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3279">Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3280">이 오버 로드를 사용 하 여 권한을 부여, 거부 또는 개별 사용자에 대 한 지정 된 권한을 취소.</span><span class="sxs-lookup"><span data-stu-id="b509c-3280">Use this overload to grant, deny, or revoke specified rights for an individual user.</span></span> <span data-ttu-id="b509c-3281">사용자는 개별 사용자, 사용자, 그룹 또는 컴퓨터를 포함 하는 모든 유효한 트러스티를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3281">The user can be any valid trustee, which includes individual users, groups of users, or a computer.</span></span> <span data-ttu-id="b509c-3282">사용자가 개인 형식을 사용 하 여 `DOMAIN` \\ `user` 에 대 한는 `user` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3282">If the user is an individual, use the format `DOMAIN`\\`user` for the `user` parameter.</span></span> <span data-ttu-id="b509c-3283">지정할 수 있습니다 "."에 대 한는 `user` 매개 변수를 로컬 컴퓨터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3283">You can specify "." for the `user` parameter to indicate the local computer.</span></span>  
  
 <span data-ttu-id="b509c-3284">사용 권한을 통해 할당 <xref:System.Messaging.MessageQueue.SetPermissions%2A> 기존 목록에 대 한 권한을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3284">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="b509c-3285">기본적으로 공용 또는 개인 큐의 작성자가 전체 컨트롤 및 도메인 그룹 모든 권한이 큐 속성을 가져오고 사용 권한 가져오기, 큐에 작성 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3285">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="b509c-3286">호출 하는 경우 <xref:System.Messaging.MessageQueue.SetPermissions%2A>, 사용자 및 권한 정보를 기존 목록 맨 아래에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3286">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="b509c-3287">각 시스템 검사 <xref:System.Messaging.AccessControlEntry> 다음 이벤트 중 하나가 발생할 때까지 시퀀스에서:</span><span class="sxs-lookup"><span data-stu-id="b509c-3287">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="b509c-3288">액세스가 거부 되었습니다 <xref:System.Messaging.AccessControlEntry> 스레드의 액세스 토큰에 나열 된 트러스티 중 하나에 요청 된 액세스 권한을 명시적으로 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3288">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="b509c-3289">하나 이상의 액세스가 허용 된 <xref:System.Messaging.AccessControlEntry> 트러스티를 명시적으로 스레드 액세스 토큰에 나열 된 모든 요청 된 액세스 권한 부여에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3289">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="b509c-3290">모든 <xref:System.Messaging.AccessControlEntry> 가 항목을 체크 이며 여전히 하나 이상의 요청 된 액세스 권한이 허용 되지 않은 명시적으로, 경우에 암시적으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3290">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="b509c-3291">에 지정 된 큐에 대 한 권한을 `rights` 매개 변수를 다음의 조합일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3291">The rights to a queue, specified in the `rights` parameter, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="b509c-3292">모든 권한</span><span class="sxs-lookup"><span data-stu-id="b509c-3292">Full Control</span></span>  
  
-   <span data-ttu-id="b509c-3293">메시지 삭제</span><span class="sxs-lookup"><span data-stu-id="b509c-3293">Delete Message</span></span>  
  
-   <span data-ttu-id="b509c-3294">메시지를 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3294">Receive Message</span></span>  
  
-   <span data-ttu-id="b509c-3295">메시지 보기</span><span class="sxs-lookup"><span data-stu-id="b509c-3295">Peek Message</span></span>  
  
-   <span data-ttu-id="b509c-3296">저널 메시지 받기</span><span class="sxs-lookup"><span data-stu-id="b509c-3296">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="b509c-3297">큐 속성 가져오기</span><span class="sxs-lookup"><span data-stu-id="b509c-3297">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="b509c-3298">큐 속성 설정</span><span class="sxs-lookup"><span data-stu-id="b509c-3298">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="b509c-3299">사용 권한 가져오기</span><span class="sxs-lookup"><span data-stu-id="b509c-3299">Get Permissions</span></span>  
  
-   <span data-ttu-id="b509c-3300">사용 권한 설정</span><span class="sxs-lookup"><span data-stu-id="b509c-3300">Set Permissions</span></span>  
  
-   <span data-ttu-id="b509c-3301">큐 소유권</span><span class="sxs-lookup"><span data-stu-id="b509c-3301">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="b509c-3302">메시지 작성</span><span class="sxs-lookup"><span data-stu-id="b509c-3302">Write Message</span></span>  
  
 <span data-ttu-id="b509c-3303">합니다 <xref:System.Messaging.MessageQueueAccessRights> 열거형은 빌드 또는 비트 연산자를 사용 하 여 결합할 수 있는 비트 플래그 집합을 나타냅니다.는 `rights` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3303">The <xref:System.Messaging.MessageQueueAccessRights> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="b509c-3304">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3304">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3305">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3305">Workgroup mode</span></span>|<span data-ttu-id="b509c-3306">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3306">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3307">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3307">Local computer</span></span>|<span data-ttu-id="b509c-3308">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3308">Yes</span></span>|  
|<span data-ttu-id="b509c-3309">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3309">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3310">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3310">Yes</span></span>|  
|<span data-ttu-id="b509c-3311">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3311">Remote computer</span></span>|<span data-ttu-id="b509c-3312">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3312">No</span></span>|  
|<span data-ttu-id="b509c-3313">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3313">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3314">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3314">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3315">다음 코드 예제에서는 <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3315">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#25](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#25)]
 [!code-csharp[MessageQueue2#25](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3316">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3316">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
        <altmember cref="T:System.Messaging.AccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Messaging.MessageQueue.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-3317"><see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 또는 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 이벤트의 결과로 생성된 이벤트 처리기의 호출을 마샬링하는 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3317">Gets or sets the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span></span></summary>
        <value><span data-ttu-id="b509c-3318"><see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 또는 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 이벤트의 결과로 생성된 이벤트 처리기의 호출을 마샬링하는 개체를 나타내는 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3318">A <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, which represents the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span></span> <span data-ttu-id="b509c-3319">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3319">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3320">A <xref:System.Messaging.MessageQueue.ReceiveCompleted> 또는 <xref:System.Messaging.MessageQueue.PeekCompleted> 에서 이벤트가 발생 한 <xref:System.Messaging.MessageQueue.BeginReceive%2A> 또는 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 각각 특정 스레드에 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3320">A <xref:System.Messaging.MessageQueue.ReceiveCompleted> or <xref:System.Messaging.MessageQueue.PeekCompleted> event results from a <xref:System.Messaging.MessageQueue.BeginReceive%2A> or <xref:System.Messaging.MessageQueue.BeginPeek%2A> request, respectively, to a specific thread.</span></span> <span data-ttu-id="b509c-3321">일반적으로 <xref:System.Messaging.MessageQueue.SynchronizingObject%2A> 해당 구성 요소는 특정 스레드에 바인딩되어 있기 때문에 관련된 구성 요소 컨트롤 또는 폼에 배치 된 경우 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3321">Typically, the <xref:System.Messaging.MessageQueue.SynchronizingObject%2A> is set when its related component is placed inside a control or a form, because those components are bound to a specific thread.</span></span>  
  
 <span data-ttu-id="b509c-3322">일반적으로 동기화 개체를 단일 스레드 메서드 호출을 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3322">Typically, the synchronizing object marshals a method call into a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool" Usage="System.Messaging.MessageQueue.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_Transactional")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-3323">큐가 트랜잭션만 허용하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3323">Gets a value that indicates whether the queue accepts only transactions.</span></span></summary>
        <value><span data-ttu-id="b509c-3324">큐가 트랜잭션의 일부로서 전달된 메시지만 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3324"><see langword="true" /> if the queue accepts only messages sent as part of a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3325">트랜잭션 메시징 단일 트랜잭션으로 여러 관련된 메시지의 결합을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3325">Transactional messaging refers to the coupling of several related messages into a single transaction.</span></span> <span data-ttu-id="b509c-3326">트랜잭션의 일부는 메시지를 순서 대로 배달 되도록 하는 대로 메시지를 보내는 한 번만 배달 되 고 대상 큐에서 검색 했습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3326">Sending messages as part of a transaction ensures that the messages are delivered in order, delivered only once, and successfully retrieved from their destination queue.</span></span>  
  
 <span data-ttu-id="b509c-3327">트랜잭션 큐 인 경우에 트랜잭션의 일부로 전송 되는 메시지에만 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3327">If a queue is transactional, it accepts only messages that are sent as part of a transaction.</span></span> <span data-ttu-id="b509c-3328">그러나 비트랜잭션 메시지를 보내거나 수 명시적 트랜잭션를 사용 하지 않고 로컬 트랜잭션 큐에서 받은 <xref:System.Messaging.MessageQueueTransaction.Begin%2A>, <xref:System.Messaging.MessageQueueTransaction.Commit%2A>, 및 <xref:System.Messaging.MessageQueueTransaction.Abort%2A> 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3328">However, a non-transactional message can be sent or received from a local transaction queue without explicitly using transactional <xref:System.Messaging.MessageQueueTransaction.Begin%2A>, <xref:System.Messaging.MessageQueueTransaction.Commit%2A>, and <xref:System.Messaging.MessageQueueTransaction.Abort%2A> syntax.</span></span> <span data-ttu-id="b509c-3329">비트랜잭션 메시지를 트랜잭션 큐로 보낼 경우이 구성 요소는 단일 메시지 트랜잭션을 만듭니다를 제외 하 고 직접 형식 이름을 사용 하 여 원격 컴퓨터에 있는 큐를 참조 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b509c-3329">If a non-transactional message is sent to a transactional queue, this component creates a single-message transaction for it, except in the case of referencing a queue on a remote computer using a direct format name.</span></span> <span data-ttu-id="b509c-3330">이 경우 메시지를 보낼 때 트랜잭션 컨텍스트를 지정 하지 않으면 하나를 만들어지지 않습니다 및 메시지를 배달 못 한 편지 큐로 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3330">In this situation, if you do not specify a transaction context when sending a message, one is not created for you and the message will be sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="b509c-3331">에 트랜잭션 큐로 비트랜잭션 메시지를 보내려면 메시지 예외가 발생할 경우 롤백할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3331">If you send a non-transactional message to a transactional queue, you will not be able to roll back the message in the event of an exception.</span></span>  
  
 <span data-ttu-id="b509c-3332"><xref:System.Messaging.MessageQueueTransaction> 스레딩 아파트를 인식 하며 따라서 아파트 상태가 `STA`, 트랜잭션이 여러 스레드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3332"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="b509c-3333">에 주 스레드의 상태를 설정 하는 Visual Basic `STA`이므로 적용 해야 합니다는 <xref:System.MTAThreadAttribute> 에 `Main` 서브루틴입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3333">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="b509c-3334">그렇지 않으면 다른 스레드를 사용하여 트랜잭션 메시지를 전달할 때 <xref:System.Messaging.MessageQueueException> 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3334">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="b509c-3335">적용 된 <xref:System.MTAThreadAttribute> 다음 조각을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3335">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="b509c-3336">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3336">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3337">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3337">Workgroup mode</span></span>|<span data-ttu-id="b509c-3338">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3338">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3339">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3339">Local computer</span></span>|<span data-ttu-id="b509c-3340">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3340">Yes</span></span>|  
|<span data-ttu-id="b509c-3341">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3341">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3342">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3342">Yes</span></span>|  
|<span data-ttu-id="b509c-3343">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3343">Remote computer</span></span>|<span data-ttu-id="b509c-3344">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3344">No</span></span>|  
|<span data-ttu-id="b509c-3345">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3345">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3346">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3346">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3347">다음 코드 예제에서는 메시지 큐의 값을 표시 <xref:System.Messaging.MessageQueue.Transactional%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3347">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.Transactional%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#27](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3348">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3348">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Begin" />
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Commit" />
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Abort" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueue.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Messaging.MessagingDescription("MQ_WriteHandle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_UseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-3349">받은 메시지가 업무 일지 큐로 복사되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3349">Gets or sets a value that indicates whether received messages are copied to the journal queue.</span></span></summary>
        <value><span data-ttu-id="b509c-3350">큐에서 받은 메시지가 해당 업무 일지 큐로 복사되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3350"><see langword="true" /> if messages received from the queue are copied to its journal queue; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3351">메시지 큐 응용 프로그램에서 새 응용 프로그램 큐를 동일한 위치에 자동으로 관련 된 업무 일지 큐를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3351">When the Message Queuing application creates a new application queue, it automatically creates an associated journal queue in the same location.</span></span> <span data-ttu-id="b509c-3352">업무 일지 큐는 큐에서 제거 된 메시지를 추적에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3352">The journal queue is used to track the messages removed from a queue.</span></span> <span data-ttu-id="b509c-3353">메시지 큐를 수정이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3353">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="b509c-3354">따라서 다른 <xref:System.Messaging.MessageQueue> 인스턴스는 변경 내용의 영향입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3354">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="b509c-3355">업무 일지 큐가 받을 시간 타이머가 만료 나 (Information Store 또는 Active Directory)를 메시지 큐 디렉터리 서비스를 사용 하 여 큐에서 제거 된 메시지 추적 하기 때문에 큐에서 제거 된 메시지를 추적 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3355">The journal queue does not track messages removed from the queue because their time-to-be-received timer expired, nor does it track messages purged from the queue by using a Message Queuing directory service (Information Store or Active Directory).</span></span>  
  
 <span data-ttu-id="b509c-3356">응용 프로그램; 업무 일지 큐에 메시지를 보낼 수 없습니다. 이러한 큐의 읽기 전용 액세스로 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3356">Applications cannot send messages to journal queues; they are limited to read-only access of these queues.</span></span> <span data-ttu-id="b509c-3357">또한 메시지 큐는 저널 큐에서 메시지를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3357">Furthermore, Message Queuing never removes messages from journal queues.</span></span> <span data-ttu-id="b509c-3358">받은 후 또는 큐를 제거 하 여 큐를 사용 하 여 응용 프로그램에서 이러한 메시지를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3358">The application using the queue must clear these messages either by receiving them or by purging the queue.</span></span>  
  
 <span data-ttu-id="b509c-3359">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3359">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3360">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3360">Workgroup mode</span></span>|<span data-ttu-id="b509c-3361">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3361">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3362">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3362">Local computer</span></span>|<span data-ttu-id="b509c-3363">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3363">Yes</span></span>|  
|<span data-ttu-id="b509c-3364">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3364">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3365">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3365">Yes</span></span>|  
|<span data-ttu-id="b509c-3366">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3366">Remote computer</span></span>|<span data-ttu-id="b509c-3367">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3367">No</span></span>|  
|<span data-ttu-id="b509c-3368">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3368">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3369">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3369">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b509c-3370">다음 코드 예제를 가져오고 메시지 큐의 값을 설정 <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3370">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#28](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3371">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b509c-3371">An error occurred when accessing a Message Queuing method.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      </Docs>
    </Member>
    <Member MemberName="WriteHandle">
      <MemberSignature Language="C#" Value="public IntPtr WriteHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int WriteHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.WriteHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr WriteHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteHandle : nativeint" Usage="System.Messaging.MessageQueue.WriteHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MQ_WriteHandle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b509c-3372">메시지 큐에 메시지를 보내는 데 사용되는 기본 핸들을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3372">Gets the native handle used to send messages to the message queue.</span></span></summary>
        <value><span data-ttu-id="b509c-3373">큐에 메시지를 보내는 데 사용하는 네이티브 큐 개체에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3373">A handle to the native queue object that you use for sending messages to the queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b509c-3374"><xref:System.Messaging.MessageQueue.WriteHandle%2A> 큐에 메시지를 보내는 데 사용 되는 메시지 큐 개체에 대 한 네이티브 Windows 핸들을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3374">The <xref:System.Messaging.MessageQueue.WriteHandle%2A> provides a native Windows handle to the message queue object that is used for sending messages to the queue.</span></span> <span data-ttu-id="b509c-3375">큐의 경로 변경 하면 핸들이 닫히고 새 값으로.</span><span class="sxs-lookup"><span data-stu-id="b509c-3375">If you change the path of the queue, the handle is closed and reopened with a new value.</span></span>  
  
 <span data-ttu-id="b509c-3376">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3376">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="b509c-3377">작업 그룹 모드</span><span class="sxs-lookup"><span data-stu-id="b509c-3377">Workgroup mode</span></span>|<span data-ttu-id="b509c-3378">사용 가능</span><span class="sxs-lookup"><span data-stu-id="b509c-3378">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="b509c-3379">로컬 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3379">Local computer</span></span>|<span data-ttu-id="b509c-3380">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3380">Yes</span></span>|  
|<span data-ttu-id="b509c-3381">로컬 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3381">Local computer and direct format name</span></span>|<span data-ttu-id="b509c-3382">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3382">Yes</span></span>|  
|<span data-ttu-id="b509c-3383">원격 컴퓨터</span><span class="sxs-lookup"><span data-stu-id="b509c-3383">Remote computer</span></span>|<span data-ttu-id="b509c-3384">아니요</span><span class="sxs-lookup"><span data-stu-id="b509c-3384">No</span></span>|  
|<span data-ttu-id="b509c-3385">원격 컴퓨터와 직접 형식 이름</span><span class="sxs-lookup"><span data-stu-id="b509c-3385">Remote computer and direct format name</span></span>|<span data-ttu-id="b509c-3386">예</span><span class="sxs-lookup"><span data-stu-id="b509c-3386">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="b509c-3387">메시지 큐를 쓰기 작업에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b509c-3387">The message queue is not available for writing.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.CanWrite" />
        <altmember cref="P:System.Messaging.MessageQueue.ReadHandle" />
      </Docs>
    </Member>
  </Members>
</Type>