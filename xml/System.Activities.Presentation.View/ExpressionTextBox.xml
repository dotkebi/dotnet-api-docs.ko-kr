<Type Name="ExpressionTextBox" FullName="System.Activities.Presentation.View.ExpressionTextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35b405dce937664dd9f2ca40e45da5b4a37de09b" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58561748" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionTextBox : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionTextBox extends System.Windows.Controls.UserControl implements class System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ExpressionTextBox" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionTextBox&#xA;Inherits UserControl&#xA;Implements IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionTextBox sealed : System::Windows::Controls::UserControl, System::Windows::Markup::IComponentConnector" />
  <TypeSignature Language="F#" Value="type ExpressionTextBox = class&#xA;    inherit UserControl&#xA;    interface IComponentConnector" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.UserControl</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.0">System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IComponentConnector</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="23943-101">사용자가 활동 디자이너 내에서 식을 편집할 수 있도록 해 주는 컨트롤에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-101">Describes a control that enables the user to edit an expression in an activity designer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23943-102">Visual Studio에서의 <xref:System.Activities.Presentation.View.ExpressionTextBox> 식을 편집할 때 IntelliSense와 같은 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-102">In Visual Studio, the <xref:System.Activities.Presentation.View.ExpressionTextBox> provides features such as IntelliSense when editing an expression.</span></span> <span data-ttu-id="23943-103">이러한 기능은 호스팅 가능 편집기라는 구성 요소에 의해 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-103">Such features are provided by a component called the hostable editor.</span></span> <span data-ttu-id="23943-104">식 편집 인터페이스는 확장 가능하며 식을 편집하는 데 사용하는 편집기는 대체 가능합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-104">The expression editing interface is extensible and the editor used for editing expressions can be replaced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="23943-105">이 구성 요소 다시 Visual Studio 외부에서 호스트 되는 응용 프로그램에서 사용 하기 위해 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="23943-105">This component is not available for use in applications that are being re-hosted outside Visual Studio.</span></span>  
  
 <span data-ttu-id="23943-106">**ExpressionTextBlock** 식을 편집할 때 다음과 같은 방식으로 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-106">**ExpressionTextBlock** works in the following manner when you edit an expression.</span></span>  
  
1.  <span data-ttu-id="23943-107">클릭 하면 프로그램 **ExpressionTextBox**, <xref:System.Activities.Presentation.View.IExpressionEditorInstance> 개체가 만들어지고 Visual Studio에서 호스팅 가능 편집기 세션이 인스턴스화됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-107">When you click on an **ExpressionTextBox**, an <xref:System.Activities.Presentation.View.IExpressionEditorInstance> object is created and a hostable editor session is instantiated in Visual Studio.</span></span>  
  
2.  <span data-ttu-id="23943-108">호스팅 가능 편집기 내에 입력할 때는 기능이 두 가지 방식으로 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-108">When you type inside a hostable editor, note that the features have two sorts of availability.</span></span>  
  
    1.  <span data-ttu-id="23943-109">IntelliSense, 완성 및 색 지정 지원은 즉시 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23943-109">IntelliSense, completion and colorization support is available immediately.</span></span>  
  
    2.  <span data-ttu-id="23943-110">유효성 검사는 백그라운드에서 호출되어 일정 시간이 지나야 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23943-110">Validation is called in the background and is available only after a short interval of time elapses.</span></span> <span data-ttu-id="23943-111">입력 후 식이 올바르지 않으면 호스팅된 컴파일러가 오류를 보고하고 식 오른쪽에 빨간색 오류 아이콘이 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-111">Then, if your expression is invalid, the hosted compiler reports the error and the red error icon displays to the right of your expression.</span></span>  
  
3.  <span data-ttu-id="23943-112">키를 눌러 합니다 **Enter** 키를 **ExpressionTextBox** 에 새 줄에 포커스가 있는 <xref:System.Activities.Presentation.View.IExpressionEditorInstance> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-112">Press the **Enter** key when the **ExpressionTextBox** has the focus to insert new lines in the <xref:System.Activities.Presentation.View.IExpressionEditorInstance> object.</span></span> <span data-ttu-id="23943-113">이렇게 하면 호스팅 가능 편집기 내에서 줄 커밋 작업이 발생하여 서식이 다시 적용되고 물결선이 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-113">This causes a line commit to occur inside the hostable editor, which triggers a pretty listing and the display of squiggles.</span></span>  
  
4.  <span data-ttu-id="23943-114">편집기 인스턴스가 제거 됩니다 때 합니다 **ExpressionTextBox** 포커스를 잃거나 다시 표시 하 고는 **TextBlock**합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-114">The editor instance is destroyed when the **ExpressionTextBox** loses the focus, and the display reverts to a **TextBlock**.</span></span> <span data-ttu-id="23943-115">사용자가 디자이너 화면 또는 속성 표에 있는 경우 모델 항목에 대한 변경 내용이 커밋되고 동일한 식을 표시하는 모든 <xref:System.Activities.Presentation.View.ExpressionTextBox> 컨트롤이 동기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-115">If you are on the designer surface or in the property grid, the change to the model item is committed and all <xref:System.Activities.Presentation.View.ExpressionTextBox> controls displaying that same expression are synchronized.</span></span> <span data-ttu-id="23943-116">그러나 사용자가 대화 상자에 있는 경우에는 확인을 클릭할 때까지 모델 항목에 대한 변경 내용이 커밋되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="23943-116">However, if you are in a dialog box, the change to the model item is not committed until you click OK.</span></span> <span data-ttu-id="23943-117">모델 항목이 커밋되면 <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A>가 호출되고 워크플로 전체의 유효성이 검사됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-117">When the model item is committed, <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> is invoked and the entire workflow is validated.</span></span>  
  
5.  <span data-ttu-id="23943-118">클릭할 때 합니다 **ExpressionTextBox** 새 편집기 인스턴스를 다시 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-118">When you click on the **ExpressionTextBox** again, a new editor instance is created.</span></span> <span data-ttu-id="23943-119">호스팅 가능 편집기에서 서식 다시 적용, 색 지정 및 물결선은 사용자가 편집을 시작하기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-119">In the hostable editor, pretty listing, colorization, and squiggling occurs before you begin editing.</span></span>  
  
 <span data-ttu-id="23943-120">식 텍스트 상자에 바인딩할 **OwnerActivity**를 사용 하 여 <xref:System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter> 데이터 컨텍스트를 올바르게 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-120">To bind the expression text box to **OwnerActivity**, use <xref:System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter> to set the data context correctly.</span></span> <span data-ttu-id="23943-121">다음 코드 샘플에 바인딩하기 위한 올바르게 데이터 컨텍스트를 설정 하는 방법을 보여 줍니다 **OwnerActivity**합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-121">The following code sample demonstrates setting the data context correctly for binding to **OwnerActivity**.</span></span>  
  
```  
<sapc:ModelPropertyEntryToModelItemConverter x:Key="ModelPropertyEntryToContainerConverter"/>  
  
    <DataTemplate x:Key="StringInArgumentPropertyValueEditorTemplate" >  
        <Grid Margin="5" Background="LightGreen" DataContext="{Binding Converter={StaticResource ModelPropertyEntryToContainerConverter}}">  
            <sapv:ExpressionTextBox   
            Expression="{Binding Path=ModelItem.MyVal, Mode=TwoWay,   Converter={StaticResource ArgumentToExpressionConverter},  ConverterParameter=In }"  
            ExpressionType="sys:String"  
            OwnerActivity="{Binding Path=ModelItem}"   
                 />  
        </Grid>  
    </DataTemplate>  
```  
  
 <span data-ttu-id="23943-122">자세한 내용은 <xref:System.Activities.Presentation.View.IExpressionEditorInstance> 및 <xref:System.Activities.Presentation.View.IExpressionEditorService>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="23943-122">For more information, see <xref:System.Activities.Presentation.View.IExpressionEditorInstance> and <xref:System.Activities.Presentation.View.IExpressionEditorService>.</span></span> <span data-ttu-id="23943-123">참조를 [사용자 지정 활동 디자이너에서 ExpressionTextBox 사용](~/docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md) 샘플 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-123">Also see the [Using the ExpressionTextBox in a Custom Activity Designer](~/docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md) sample topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23943-124">사용자 지정 활동 디자이너를 만들 때는 일반적으로 <xref:System.Activities.Presentation.View.ExpressionTextBox>가 선언적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="23943-124">The <xref:System.Activities.Presentation.View.ExpressionTextBox> is usually used declaratively when creating custom activity designers.</span></span> <span data-ttu-id="23943-125">샘플 코드에 대 한 참조를 [ExpressionTextBox101](https://go.microsoft.com/fwlink/?LinkId=193145) 블로그.</span><span class="sxs-lookup"><span data-stu-id="23943-125">For sample code, see the [ExpressionTextBox101](https://go.microsoft.com/fwlink/?LinkId=193145) blog.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23943-126"><see cref="T:System.Activities.Presentation.View.ExpressionTextBox" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="23943-126">Creates a new instance of the <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-127">식 입력란이 Return 키를 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-127">Gets or sets a value that indicates whether the expression text box accepts returns.</span></span></summary>
        <value><span data-ttu-id="23943-128">반환이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-128"><see langword="true" /> if returns are accepted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsReturnProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-129"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-129">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-130">식 입력란이 Tab 키를 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-130">Gets or sets a value that indicates whether the expression text box accepts tabs.</span></span></summary>
        <value><span data-ttu-id="23943-131">탭이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-131"><see langword="true" /> if tabs are accepted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsTabProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.AcceptsTabProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-132"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-132">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="expressionTextBox.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23943-133">편집을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-133">Begins an edit.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteWordCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CompleteWordCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CompleteWordCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.CompleteWordCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CompleteWordCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CompleteWordCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CompleteWordCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.ExpressionTextBox.CompleteWordCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-134">식 입력란의 단어를 완성하는 데 사용되는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-134">The command used to complete words in the expression text box.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseFilterLevelCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DecreaseFilterLevelCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DecreaseFilterLevelCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.DecreaseFilterLevelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecreaseFilterLevelCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DecreaseFilterLevelCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DecreaseFilterLevelCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.ExpressionTextBox.DecreaseFilterLevelCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-135">IntelliSense 필터링을 사용할 때 필터 수준을 **일반** 탭에서 **모두** 탭으로 변경하는 데 사용되는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-135">The command used to change the filter level from the **Common** tab to the **All** tab when you are using IntelliSense filtering.</span></span> <span data-ttu-id="23943-136">식을 편집할 때만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23943-136">This is available only when you edit an expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : string with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-137">기본값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-137">Gets or sets the default value.</span></span></summary>
        <value><span data-ttu-id="23943-138">기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-138">The default value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.DefaultValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultValueProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DefaultValueProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultValueProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.DefaultValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-139"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-139">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorLostLogicalFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditorLostLogicalFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditorLostLogicalFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditorLostLogicalFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditorLostLogicalFocus;" />
      <MemberSignature Language="F#" Value="member this.EditorLostLogicalFocus : System.Windows.RoutedEventHandler " Usage="member this.EditorLostLogicalFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-140">식 편집기가 논리적 포커스를 잃을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-140">Occurs when the expression editor loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23943-141">메서드 호출을 사용하여 의도적으로 포커스를 다른 위치로 이동했지만 이전 키보드 포커스가 다른 범위에 존재하는 경우 논리적 포커스와 키보드 포커스가 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="23943-141">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorLostLogicalFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditorLostLogicalFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditorLostLogicalFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditorLostLogicalFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditorLostLogicalFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditorLostLogicalFocusEvent : System.Windows.RoutedEvent" Usage="System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-142"><see cref="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" /> 라우트된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-142">Identifies the <see cref="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommit">
      <MemberSignature Language="C#" Value="public bool ExplicitCommit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExplicitCommit" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" />
      <MemberSignature Language="VB.NET" Value="Public Property ExplicitCommit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExplicitCommit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExplicitCommit : bool with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-143">커밋이 명시적인지 여부를 확인하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-143">Gets or sets a value that determines whether a commit is explicit.</span></span></summary>
        <value><span data-ttu-id="23943-144">커밋이 명시적이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-144"><see langword="true" /> if the commit is explicit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExplicitCommitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExplicitCommitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExplicitCommitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExplicitCommitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExplicitCommitProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-145"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-145">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ Expression { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-146">식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-146">Gets or sets the expression.</span></span></summary>
        <value><span data-ttu-id="23943-147">식입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-147">The expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23943-148"><xref:System.Activities.Presentation.View.ExpressionTextBox.Expression%2A>은 항상 필수 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-148"><xref:System.Activities.Presentation.View.ExpressionTextBox.Expression%2A> is always required.</span></span> <span data-ttu-id="23943-149">사용 하는 경우를 <xref:System.Activities.Presentation.View.ExpressionTextBox> 선언적으로 인수에 바인딩할 항상 사용 해야 합니다 <xref:System.Activities.Presentation.Converters.ArgumentToExpressionConverter> 식을 설정 하는 인수에 바인딩하는 `ConverterParameter` 를 `In` 또는 `Out` 인수의 방향에 따라.</span><span class="sxs-lookup"><span data-stu-id="23943-149">When using the <xref:System.Activities.Presentation.View.ExpressionTextBox> declaratively to bind to arguments, you must always use the <xref:System.Activities.Presentation.Converters.ArgumentToExpressionConverter> to bind the expression to the argument, setting the `ConverterParameter` to `In` or `Out` depending on the direction of the argument.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public string ExpressionActivityEditor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionActivityEditor" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionActivityEditor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionActivityEditor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionActivityEditor : string with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-150">식 형식 편집기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-150">Gets or sets the expression activity editor.</span></span></summary>
        <value><span data-ttu-id="23943-151">식 동작 편집기입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-151">The expression activity editor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditorOptionName">
      <MemberSignature Language="C#" Value="public const string ExpressionActivityEditorOptionName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExpressionActivityEditorOptionName" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditorOptionName" />
      <MemberSignature Language="VB.NET" Value="Public Const ExpressionActivityEditorOptionName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExpressionActivityEditorOptionName;" />
      <MemberSignature Language="F#" Value="val mutable ExpressionActivityEditorOptionName : string" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditorOptionName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-152">식 동작 편집기 옵션의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-152">Specifies a name of the expression activity editor option.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionActivityEditorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionActivityEditorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionActivityEditorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionActivityEditorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpressionActivityEditorProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-153"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-153">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionEditorService">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionEditorService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionEditorService As IExpressionEditorService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::View::IExpressionEditorService ^ ExpressionEditorService { System::Activities::Presentation::View::IExpressionEditorService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionEditorService : System.Activities.Presentation.View.IExpressionEditorService" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExpressionEditorService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.IExpressionEditorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-154">식 편집기 서비스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="23943-154">Gets the expression editor service.</span></span></summary>
        <value><span data-ttu-id="23943-155">식 편집기 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-155">The expression editor service.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-156"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-156">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-157">식 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-157">Gets or sets the expression type.</span></span></summary>
        <value><span data-ttu-id="23943-158">식 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-158">The expression type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23943-159">형식을 설정하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="23943-159">Setting the type is strongly recommended.</span></span> <span data-ttu-id="23943-160">설정 하지 않은 경우 <xref:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType%2A>를 사용할 수 없습니다는 <xref:System.Activities.Presentation.View.ExpressionTextBox> 대리자에 바인딩할 형식 얻지 유효성 검사에서 호스팅된 컴파일러가 합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-160">If you do not set <xref:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType%2A>, you can't use the <xref:System.Activities.Presentation.View.ExpressionTextBox> to bind to delegate types and you do not get validation from the hosted compiler.</span></span> <span data-ttu-id="23943-161">이 컴파일러 유효성 검사 입력된 식의 형식이 예상된 형식과 일치 하며 주위에 빨간색 상자를 표시 합니다 **ExpressionTextBox** 것에 activity designer의 잘못 된 데이터를 입력 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="23943-161">This compiler validation checks to see if the type of the entered expression matches the expected type, and displays a red box around the **ExpressionTextBox** when invalid data is entered into it on an activity designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpressionTypeProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.ExpressionTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-162"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-162">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalIntellisenseCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand GlobalIntellisenseCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand GlobalIntellisenseCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.GlobalIntellisenseCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GlobalIntellisenseCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ GlobalIntellisenseCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable GlobalIntellisenseCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.ExpressionTextBox.GlobalIntellisenseCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-163">식 입력란의 전역 IntelliSense에 사용되는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-163">The command used for global IntelliSense in the expression text box.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintText">
      <MemberSignature Language="C#" Value="public string HintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HintText" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" />
      <MemberSignature Language="VB.NET" Value="Public Property HintText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HintText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HintText : string with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.HintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-164">힌트 텍스트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-164">Gets or sets the hint text.</span></span></summary>
        <value><span data-ttu-id="23943-165">힌트 텍스트를 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-165">A string that contains the hint text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HintTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HintTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.HintTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HintTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HintTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HintTextProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.HintTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-166"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-166">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-167">가로 스크롤 막대의 표시 유형을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-167">Gets or sets the horizontal scroll bar visibility.</span></span></summary>
        <value><span data-ttu-id="23943-168">가로 스크롤 막대의 표시 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-168">The horizontal scroll bar visibility.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-169"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-169">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseFilterLevelCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand IncreaseFilterLevelCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand IncreaseFilterLevelCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IncreaseFilterLevelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IncreaseFilterLevelCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ IncreaseFilterLevelCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable IncreaseFilterLevelCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.ExpressionTextBox.IncreaseFilterLevelCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-170">IntelliSense 필터링을 사용할 때 필터 수준을 **모두** 탭에서 **일반** 탭으로 변경하는 데 사용되는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-170">The command used to change the filter level from the **All** tab to the **Common** tab when you are using IntelliSense filtering.</span></span> <span data-ttu-id="23943-171">식을 편집할 때만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23943-171">This is available only when you edit an expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit&#xA;override this.InitializeComponent : unit -&gt; unit" Usage="expressionTextBox.InitializeComponent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.InitializeComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23943-172">이 형식을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-172">Initializes this form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23943-173">이 메서드는 태그 컴파일러 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-173">This method is intended for use only by the markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-174">식 입력란이 읽기 전용인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-174">Gets or sets a value that indicates whether the expression textbox is read-only.</span></span></summary>
        <value><span data-ttu-id="23943-175"><see langword="true" /> 식 입력란이 읽기 전용인 지; 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-175"><see langword="true" /> if the expression text-box is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-176"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" /> 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-176">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpression">
      <MemberSignature Language="C#" Value="public bool IsSupportedExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSupportedExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSupportedExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSupportedExpression { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSupportedExpression : bool with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-177">식이 지원되는지 여부를 확인하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-177">Gets or sets a value that determines whether the expression is supported.</span></span></summary>
        <value><span data-ttu-id="23943-178">식이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-178"><see langword="true" /> if the expression is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSupportedExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSupportedExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSupportedExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSupportedExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSupportedExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-179"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-179">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLines : int with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-180">최대 줄 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-180">Gets or sets the maximum number of lines.</span></span></summary>
        <value><span data-ttu-id="23943-181">줄의 최대 수입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-181">The maximum number of lines.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLinesProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.MaxLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-182"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-182">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLines : int with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-183">최소 줄 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-183">Gets or sets the minimum number of lines.</span></span></summary>
        <value><span data-ttu-id="23943-184">최소 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23943-184">The minimum number of lines.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinLinesProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.MinLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-185"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-185">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="expressionTextBox.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" Index="0" FrameworkAlternate="netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="expressionTextBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="expressionTextBox.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="expressionTextBox.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" Index="0" FrameworkAlternate="netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="expressionTextBox.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" Index="0" FrameworkAlternate="netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="expressionTextBox.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" Index="0" FrameworkAlternate="netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="expressionTextBox.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivity">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem OwnerActivity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem OwnerActivity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerActivity As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ OwnerActivity { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerActivity : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-186">소유자 활동을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-186">Gets or sets the owner activity.</span></span></summary>
        <value><span data-ttu-id="23943-187">소유자 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-187">The owner activity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OwnerActivityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OwnerActivityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OwnerActivityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OwnerActivityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OwnerActivityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.OwnerActivityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-188"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-188">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterInfoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ParameterInfoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ParameterInfoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ParameterInfoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterInfoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ParameterInfoCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParameterInfoCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.ExpressionTextBox.ParameterInfoCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-189">식 입력란의 매개 변수 정보에 사용되는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-189">The command used for parameter information in the expression text box.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgument">
      <MemberSignature Language="C#" Value="public string PathToArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathToArgument" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property PathToArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathToArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathToArgument : string with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-190">인수에 대한 경로를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-190">Gets or sets the path to the argument.</span></span></summary>
        <value><span data-ttu-id="23943-191">인수에 경로 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-191">A string that contains the path to the argument.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgumentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathToArgumentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathToArgumentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.PathToArgumentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathToArgumentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathToArgumentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathToArgumentProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.PathToArgumentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-192"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-192">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickInfoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand QuickInfoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand QuickInfoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.QuickInfoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QuickInfoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ QuickInfoCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable QuickInfoCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.ExpressionTextBox.QuickInfoCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-193">식 입력란의 요약 정보에 사용되는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-193">The command used for quick information in the expression text box.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public static void RegisterExpressionActivityEditor (string name, Type expressionActivityEditorType, System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback convertFromString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterExpressionActivityEditor(string name, class System.Type expressionActivityEditorType, class System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback convertFromString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.RegisterExpressionActivityEditor(System.String,System.Type,System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterExpressionActivityEditor (name As String, expressionActivityEditorType As Type, convertFromString As CreateExpressionFromStringCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterExpressionActivityEditor(System::String ^ name, Type ^ expressionActivityEditorType, System::Activities::Presentation::Expressions::CreateExpressionFromStringCallback ^ convertFromString);" />
      <MemberSignature Language="F#" Value="static member RegisterExpressionActivityEditor : string * Type * System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback -&gt; unit" Usage="System.Activities.Presentation.View.ExpressionTextBox.RegisterExpressionActivityEditor (name, expressionActivityEditorType, convertFromString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="expressionActivityEditorType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="convertFromString" Type="System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="23943-194">식 편집기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-194">The name of the expression editor.</span></span></param>
        <param name="expressionActivityEditorType"><span data-ttu-id="23943-195">식 동작 편집기의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-195">The type of the expression activity editor.</span></span></param>
        <param name="convertFromString"><span data-ttu-id="23943-196">식의 문자열 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-196">The string format of the expression.</span></span></param>
        <summary><span data-ttu-id="23943-197">식 동작 편집기를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-197">Registers an expression activity editor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IComponentConnector.Connect">
      <MemberSignature Language="C#" Value="void IComponentConnector.Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Connect (connectionId As Integer, target As Object) Implements IComponentConnector.Connect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IComponentConnector.Connect(int connectionId, System::Object ^ target) = System::Windows::Markup::IComponentConnector::Connect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId"><span data-ttu-id="23943-198">연결 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-198">The connection ID.</span></span></param>
        <param name="target"><span data-ttu-id="23943-199">대상입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-199">The target.</span></span></param>
        <summary><span data-ttu-id="23943-200">이벤트와 이름을 컴파일된 콘텐츠에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-200">Attaches events and names to compiled content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23943-201">이 클래스는 태그 컴파일러 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-201">This class is intended for use only by the markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IStyleConnector.Connect">
      <MemberSignature Language="C#" Value="void IStyleConnector.Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.System#Windows#Markup#IStyleConnector#Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Connect (connectionId As Integer, target As Object) Implements IStyleConnector.Connect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IStyleConnector.Connect(int connectionId, System::Object ^ target) = System::Windows::Markup::IStyleConnector::Connect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0" />
        <Parameter Name="target" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="connectionId"><span data-ttu-id="23943-202">연결 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-202">The connection ID.</span></span></param>
        <param name="target"><span data-ttu-id="23943-203">대상입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-203">The target.</span></span></param>
        <summary><span data-ttu-id="23943-204">StyleBamlReader를 호출하여 컴파일된 콘텐츠에서 EventSetters 및 Templates의 이벤트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-204">Calls the StyleBamlReader to attach events on EventSetters and Templates in compiled content.</span></span></summary>
        <remarks><span data-ttu-id="23943-205">이 인터페이스는 태그 컴파일러 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-205">This interface is intended for use only by the markup compiler.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpression">
      <MemberSignature Language="C#" Value="public bool UseLocationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLocationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLocationExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLocationExpression { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseLocationExpression : bool with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-206">이 인스턴스가 위치 식을 사용하는지 여부를 확인하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-206">Gets or sets a value that determines whether this instance uses the location expression.</span></span></summary>
        <value><span data-ttu-id="23943-207">이 인스턴스가 위치 식을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-207"><see langword="true" /> if this instance uses the location expression; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23943-208">A *위치 식* (또는 l-value 식은) 식별자로 계산 되며 대입문의 왼쪽에 배치 될 수 있는 식의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-208">A *location expression* (or L-value expression) is a type of expression that evaluates to an identifier and can be placed on the left hand side of an assignment statement.</span></span> <span data-ttu-id="23943-209">바인딩하는 경우는 <xref:System.Activities.Presentation.View.ExpressionTextBox> 에 `Out` 인수를이 속성을 설정한 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-209">When you are binding the <xref:System.Activities.Presentation.View.ExpressionTextBox> to an `Out` argument, you would set this property to `True`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UseLocationExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UseLocationExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UseLocationExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UseLocationExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UseLocationExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-210"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-210">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-211">세로 스크롤 막대의 표시 유형을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-211">Gets or sets the vertical scrollbar visibility.</span></span></summary>
        <value><span data-ttu-id="23943-212">세로 스크롤 막대의 표시 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="23943-212">The vertical scrollbar visibility.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23943-213"><see cref="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" /> 종속성 속성을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="23943-213">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>