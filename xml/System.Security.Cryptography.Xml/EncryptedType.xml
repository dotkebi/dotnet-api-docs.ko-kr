<Type Name="EncryptedType" FullName="System.Security.Cryptography.Xml.EncryptedType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e9e1ed40436532c576b1d2a883028252d61317a2" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56773794" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncryptedType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedType abstract" />
  <TypeSignature Language="F#" Value="type EncryptedType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a0b41-101"><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 및 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 클래스가 파생되는 추상 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-101">Represents the abstract base class from which the classes <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> and <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-102">합니다 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스는 추상 기본 클래스를 나타내는 클래스 <xref:System.Security.Cryptography.Xml.EncryptedData> 및 <xref:System.Security.Cryptography.Xml.EncryptedKey> 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-102">The <xref:System.Security.Cryptography.Xml.EncryptedType> class represents the abstract base class from which the classes <xref:System.Security.Cryptography.Xml.EncryptedData> and <xref:System.Security.Cryptography.Xml.EncryptedKey> derive.</span></span> <span data-ttu-id="a0b41-103">이 두 클래스 실제 암호화 된 데이터 또는 XML 암호화의 주요 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-103">These two classes contain the actual encrypted data or key information in XML encryption.</span></span> <span data-ttu-id="a0b41-104">XML 암호화 표준에 맞도록 이러한 두 파생된 클래스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-104">To comply with XML encryption standards, you should use these two derived classes.</span></span>  
  
 <span data-ttu-id="a0b41-105">XML 암호화 표준에 대 한 자세한 내용은 참조 하세요. [XML 암호화 구문 및 처리 버전 1.1](https://www.w3.org/TR/xmlenc-core/)합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-105">For more information on XML encryption standards, see [XML Encryption Syntax and Processing Version 1.1](https://www.w3.org/TR/xmlenc-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-106">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-106">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptedType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncryptedType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0b41-107"><see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-108">이 생성자의 새 인스턴스를 만듭니다를 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-108">This constructor creates a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span> <span data-ttu-id="a0b41-109">이 클래스는 추상 기본 클래스를 나타내는 클래스가 <xref:System.Security.Cryptography.Xml.EncryptedData> 및 <xref:System.Security.Cryptography.Xml.EncryptedKey> 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-109">This class represents the abstract base class from which the classes <xref:System.Security.Cryptography.Xml.EncryptedData> and <xref:System.Security.Cryptography.Xml.EncryptedKey> derive.</span></span> <span data-ttu-id="a0b41-110">XML 암호화 표준에 맞도록 두 파생된 클래스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-110">To comply with XML encryption standards, you should use the two derived classes.</span></span> <span data-ttu-id="a0b41-111">XML 암호화 표준에 대 한 자세한 내용은 참조 하세요. [XML 암호화 구문 및 처리 버전 1.1](https://www.w3.org/TR/xmlenc-core/)합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-111">For more information on XML encryption standards, see [XML Encryption Syntax and Processing Version 1.1](https://www.w3.org/TR/xmlenc-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-112">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-112">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Security.Cryptography.Xml.EncryptionProperty ep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (ep As EncryptionProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::Security::Cryptography::Xml::EncryptionProperty ^ ep);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Security.Cryptography.Xml.EncryptionProperty -&gt; unit" Usage="encryptedType.AddProperty ep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ep" Type="System.Security.Cryptography.Xml.EncryptionProperty" />
      </Parameters>
      <Docs>
        <param name="ep"><span data-ttu-id="a0b41-113"><see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 개체</span><span class="sxs-lookup"><span data-stu-id="a0b41-113">An <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> object.</span></span></param>
        <summary><span data-ttu-id="a0b41-114">XML 암호화에서 현재 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 개체의 <see langword="&lt;EncryptionProperty&gt;" /> 요소에 <see langword="&lt;EncryptedProperties&gt;" /> 자식 요소를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-114">Adds an <see langword="&lt;EncryptionProperty&gt;" /> child element to the <see langword="&lt;EncryptedProperties&gt;" /> element in the current <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> object in XML encryption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-115">이 메서드를 사용 하 여 추가할 수 있습니다 `<EncryptionProperty>` 자식 요소는 `<EncryptedProperties>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-115">This method can be used to add `<EncryptionProperty>` child elements to the `<EncryptedProperties>` element.</span></span> <span data-ttu-id="a0b41-116">합니다 `<EncryptedProperties>` 요소에 대 한 추가 정보를 제공 합니다 `<EncryptedType>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-116">The `<EncryptedProperties>` element provides additional information for the `<EncryptedType>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherData">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherData CipherData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CipherData As CipherData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::CipherData ^ CipherData { System::Security::Cryptography::Xml::CipherData ^ get(); void set(System::Security::Cryptography::Xml::CipherData ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherData : System.Security.Cryptography.Xml.CipherData with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0b41-117"><see cref="T:System.Security.Cryptography.Xml.CipherData" /> 클래스의 인스턴스에 대한 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-117">Gets or sets the <see cref="T:System.Security.Cryptography.Xml.CipherData" /> value for an instance of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> class.</span></span></summary>
        <value><span data-ttu-id="a0b41-118"><see cref="T:System.Security.Cryptography.Xml.CipherData" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-118">A <see cref="T:System.Security.Cryptography.Xml.CipherData" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-119">`<CipherData>` 암호화 된 데이터를 제공 하는 XML 암호화의 필수 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-119">The `<CipherData>` element is a required element in XML encryption that provides the encrypted data.</span></span> <span data-ttu-id="a0b41-120">Base64로 인코딩된 텍스트의 암호화 된 8 진수 시퀀스로 있어야 하거나 합니다 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 속성을 사용 하 여 암호화 된 옥텟 시퀀스를 포함 하는 외부 위치에 대 한 참조를 제공 하거나는 <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-120">It must either contain the encrypted octet sequence as the base64-encoded text of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> property, or provide a reference to an external location containing the encrypted octet sequence using the <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> property.</span></span>  
  
 <span data-ttu-id="a0b41-121">이 요소에 대 한 자세한 내용은 참조 하세요. <xref:System.Security.Cryptography.Xml.CipherData>합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-121">For more information about this element, see <xref:System.Security.Cryptography.Xml.CipherData>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-122">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-122">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0b41-123"><see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> 속성이 <see langword="null" />로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="a0b41-123">The <see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> property was set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0b41-124">XML 암호화에서 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 요소의 <see langword="Encoding" /> 특성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-124">Gets or sets the <see langword="Encoding" /> attribute of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> instance in XML encryption.</span></span></summary>
        <value><span data-ttu-id="a0b41-125">암호화된 데이터의 인코딩을 설명하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-125">A string that describes the encoding of the encrypted data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-126">이 속성은 암호화 된 데이터의 인코딩을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-126">This property describes the encoding of the encrypted data.</span></span> <span data-ttu-id="a0b41-127">예를 들어, 암호화 된 데이터는 base64로 인코딩된 PNG 인 경우 인코딩을 지정할 수 있습니다 'http://www.w3.org/2000/09/xmldsig#base64'.</span><span class="sxs-lookup"><span data-stu-id="a0b41-127">For example, if the encrypted data is a base64-encoded PNG, the encoding could be specified as 'http://www.w3.org/2000/09/xmldsig#base64'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-128">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-128">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span> <span data-ttu-id="a0b41-129">이 샘플의 다양 한 속성을 다음 표시는 <xref:System.Security.Cryptography.Xml.EncryptedData> 콘솔에는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-129">This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionMethod As EncryptionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionMethod ^ EncryptionMethod { System::Security::Cryptography::Xml::EncryptionMethod ^ get(); void set(System::Security::Cryptography::Xml::EncryptionMethod ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionMethod : System.Security.Cryptography.Xml.EncryptionMethod with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0b41-130">XML 암호화에 대한 <see langword="&lt;EncryptionMethod&gt;" /> 요소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-130">Gets or sets the <see langword="&lt;EncryptionMethod&gt;" /> element for XML encryption.</span></span></summary>
        <value><span data-ttu-id="a0b41-131"><see langword="&lt;EncryptionMethod&gt;" /> 요소를 나타내는 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-131">An <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> object that represents the <see langword="&lt;EncryptionMethod&gt;" /> element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-132">`<EncryptionMethod>` 는 암호화 된 데이터에 적용 된 암호화 알고리즘을 설명 하는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-132">The `<EncryptionMethod>` is an optional element that describes the encryption algorithm applied to the encrypted data.</span></span> <span data-ttu-id="a0b41-133">요소가 없으면 수신자가 암호화 알고리즘을 알 수 있어야 합니다 또는 암호 해독이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-133">If the element is absent, the encryption algorithm must be known by the recipient or decryption will fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-134">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-134">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProperties">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncryptionProperties As EncryptionPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ EncryptionProperties { System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionProperties : System.Security.Cryptography.Xml.EncryptionPropertyCollection" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0b41-135">XML 암호화의 <see langword="&lt;EncryptionProperties&gt;" /> 요소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-135">Gets or sets the <see langword="&lt;EncryptionProperties&gt;" /> element in XML encryption.</span></span></summary>
        <value><span data-ttu-id="a0b41-136"><see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 개체</span><span class="sxs-lookup"><span data-stu-id="a0b41-136">An <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-137">합니다 `<EncryptionProperties>` 요소 생성에 대 한 추가 정보를 포함할 수 있습니다는 <xref:System.Security.Cryptography.Xml.EncryptedType> 날짜 및 타임 스탬프 또는 암호화 하는 동안 사용 된 암호화 하드웨어 일련 번호와 같은 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-137">The `<EncryptionProperties>` element can contain additional information about the creation of the <xref:System.Security.Cryptography.Xml.EncryptedType> instance, such as a date and time stamp or the serial number of cryptographic hardware used during encryption.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-138">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-138">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span> <span data-ttu-id="a0b41-139">이 샘플의 다양 한 속성을 다음 표시는 <xref:System.Security.Cryptography.Xml.EncryptedData> 콘솔에는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-139">This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedType.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0b41-140"><see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 개체의 XML 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-140">Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> object.</span></span></summary>
        <returns><span data-ttu-id="a0b41-141">XML 암호화에서 <see langword="&lt;EncryptedType&gt;" /> 요소를 나타내는 <see cref="T:System.Xml.XmlElement" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-141">An <see cref="T:System.Xml.XmlElement" /> object that represents the <see langword="&lt;EncryptedType&gt;" /> element in XML encryption.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-142">이 메서드를 사용 하 여 출력을 `<EncryptedType>` xml에서 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-142">Use this method to output the `<EncryptedType>` element in XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0b41-143">XML 암호화에서 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 요소의 <see langword="Id" /> 특성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-143">Gets or sets the <see langword="Id" /> attribute of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> instance in XML encryption.</span></span></summary>
        <value><span data-ttu-id="a0b41-144"><see langword="Id" /> 요소의 <see langword="&lt;EncryptedType&gt;" /> 특성 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-144">A string of the <see langword="Id" /> attribute of the <see langword="&lt;EncryptedType&gt;" /> element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-145">합니다 `Id` 특성의 선택적 특성은는 `<EncryptedType>` XML 문서 내의 요소에 문자열 식별자를 할당 하기 위한 표준 방법을 제공 하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-145">The `Id` attribute is an optional attribute of the `<EncryptedType>` element that provides a standard method for assigning a string identifier to an element within an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-146">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-146">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span> <span data-ttu-id="a0b41-147">이 샘플의 다양 한 속성을 다음 표시는 <xref:System.Security.Cryptography.Xml.EncryptedData> 콘솔에는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-147">This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0b41-148">XML 암호화에서 <see langword="&lt;KeyInfo&gt;" /> 요소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-148">Gets of sets the <see langword="&lt;KeyInfo&gt;" /> element in XML encryption.</span></span></summary>
        <value><span data-ttu-id="a0b41-149"><see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-149">A <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-150">`<KeyInfo>` 요소는 데이터를 암호화 하는 데 사용 되는 키에 대 한 정보를 포함 하는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-150">The `<KeyInfo>` element is an optional element that contains information about the key used to encrypt the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-151">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-151">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span> <span data-ttu-id="a0b41-152">이 샘플의 다양 한 속성을 다음 표시는 <xref:System.Security.Cryptography.Xml.EncryptedData> 콘솔에는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-152">This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public abstract void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedType.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a0b41-153"><see langword="&lt;EncryptedType&gt;" /> 요소에 사용할 XML 요소를 나타내는 <see cref="T:System.Xml.XmlElement" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-153">An <see cref="T:System.Xml.XmlElement" /> object representing an XML element to use in the <see langword="&lt;EncryptedType&gt;" /> element.</span></span></param>
        <summary><span data-ttu-id="a0b41-154">XML 정보를 XML 암호화의 <see langword="&lt;EncryptedType&gt;" /> 요소로 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-154">Loads XML information into the <see langword="&lt;EncryptedType&gt;" /> element in XML encryption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-155">이 메서드를 사용 하 여 기존 XML 요소를 로드 합니다 <xref:System.Security.Cryptography.Xml.EncryptedType> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-155">Use this method to load an existing XML element into the <xref:System.Security.Cryptography.Xml.EncryptedType> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-156">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-156">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0b41-157">제공된 <paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="a0b41-157">The <paramref name="value" /> provided is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public virtual string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MimeType : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0b41-158">XML 암호화에서 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 요소의 <see langword="MimeType" /> 특성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-158">Gets or sets the <see langword="MimeType" /> attribute of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> instance in XML encryption.</span></span></summary>
        <value><span data-ttu-id="a0b41-159">암호화된 데이터의 미디어 형식을 설명하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-159">A string that describes the media type of the encrypted data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-160">`MimeType` 특성은 암호화 된 데이터의 미디어 형식을 설명 하는 선택적 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-160">The `MimeType` attribute is an optional attribute that describes the media type of the encrypted data.</span></span> <span data-ttu-id="a0b41-161">이 특성의 값으로 정의 된 값을 사용 하 여 문자열인 [RFC 2045: Multipurpose Internet Mail Extensions (MIME) 1 부: 인터넷 메시지 본문의 형식은](https://www.ietf.org/rfc/rfc2045.txt)합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-161">The value of this attribute is a string with values defined by [RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](https://www.ietf.org/rfc/rfc2045.txt).</span></span> <span data-ttu-id="a0b41-162">예를 들어 암호화 된 데이터는 base64로 인코딩된 PNG, 합니다 `Encoding` 특성 'http://www.w3.org/2000/09/xmldsig#base64' 및 `MimeType` ' 이미지/png ' 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-162">For example, if the data that is encrypted is a base64-encoded PNG, the `Encoding` attribute would be 'http://www.w3.org/2000/09/xmldsig#base64' and the `MimeType` would be 'image/png'.</span></span> <span data-ttu-id="a0b41-163">이 특성은 선택 사항 및의 유효성을 검사 하지는 `MimeType` 정보가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-163">This attribute is optional and no validation of the `MimeType` information is required.</span></span> <span data-ttu-id="a0b41-164">특성은 암호화 애플리케이션에서 추가 처리를 수행 해야 합니다는 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-164">The attribute does not indicate that the encryption application must do any additional processing.</span></span> <span data-ttu-id="a0b41-165">이 정보가 필요 하지 않을 식별자에 이미 바인딩되어 있는 경우 확인 된 `Type` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-165">Note that this information may not be necessary if it is already bound to the identifier in the `Type` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-166">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-166">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span> <span data-ttu-id="a0b41-167">이 샘플의 다양 한 속성을 다음 표시는 <xref:System.Security.Cryptography.Xml.EncryptedData> 콘솔에는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-167">This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0b41-168">XML 암호화에서 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 요소의 <see langword="Type" /> 특성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-168">Gets or sets the <see langword="Type" /> attribute of an <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> instance in XML encryption.</span></span></summary>
        <value><span data-ttu-id="a0b41-169">암호화된 데이터의 텍스트 형식을 설명하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-169">A string that describes the text form of the encrypted data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b41-170">`Type` 특성은 암호화 된 콘텐츠의 텍스트 형식에 대 한 형식 정보를 식별 하는 선택적 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-170">The `Type` attribute is an optional attribute that identifies type information about the text form of the encrypted content.</span></span> <span data-ttu-id="a0b41-171">선택 사항 이지만,이 중요 한 특성 및에 설명 된 필수 처리는 [처리 규칙: 암호 해독](https://www.w3.org/TR/xmlenc-core/) (4.2 섹션) XML 암호화 구문 및 처리 사양 (https://www.w3.org/TR/xmlenc-core/)합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-171">While optional, this is an important attribute and is used in mandatory processing described in [Processing Rules: Decryption](https://www.w3.org/TR/xmlenc-core/) (section 4.2) of the XML Encryption Syntax and Processing specification (https://www.w3.org/TR/xmlenc-core/).</span></span> <span data-ttu-id="a0b41-172">경우는 `<EncryptedData>` 종류의 데이터를 포함 하는 요소 `'element'` 또는 요소 `'content'`는 XML 문서에서 데이터를 것이 좋습니다는 대체를 `Type` 특성 제공.</span><span class="sxs-lookup"><span data-stu-id="a0b41-172">If the `<EncryptedData>` element contains data of type `'element'` or element `'content'`, and replaces that data in an XML document, it is strongly recommended that the `Type` attribute be provided.</span></span> <span data-ttu-id="a0b41-173">이 정보 없이 정보를 해독 하는 애플리케이션 없게 됩니다 원래 텍스트 형태로 XML 문서를 자동으로 복원 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-173">Without this information, the application attempting to decrypt the information will be unable to automatically restore the XML document to its original text form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b41-174">다음 코드 예제에는 암호화 및 사용 하 여 XML 요소 암호 해독 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.Xml.EncryptedData> 에서 파생 된 클래스는 <xref:System.Security.Cryptography.Xml.EncryptedType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a0b41-174">The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.</span></span>  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>