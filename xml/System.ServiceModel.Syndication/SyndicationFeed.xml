<Type Name="SyndicationFeed" FullName="System.ServiceModel.Syndication.SyndicationFeed">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04ace032faca8ef26d2d826647d47496a468d40b" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56777317" /></Metadata><TypeSignature Language="C#" Value="public class SyndicationFeed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationFeed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationFeed" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationFeed" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationFeed" />
  <TypeSignature Language="F#" Value="type SyndicationFeed = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="df20d-101">최상위 피드 개체인 &lt;<see langword="feed" />&gt;(Atom 1.0) 및 &lt;<see langword="rss" />&gt;(RSS 2.0)를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-101">Represents a top-level feed object, &lt;<see langword="feed" />&gt; in Atom 1.0 and &lt;<see langword="rss" />&gt; in RSS 2.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-102">Atom 1.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스를 쓸를 <`feed`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-102">When serialized to Atom 1.0, a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is written to a <`feed`> element.</span></span> <span data-ttu-id="df20d-103">다음 표에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 클래스에 정의된 각 속성이 어떻게 Atom 1.0으로 serialize되는지 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-103">The following table shows how each property defined in the <xref:System.ServiceModel.Syndication.SyndicationFeed> class is serialized to Atom 1.0.</span></span>  
  
|<span data-ttu-id="df20d-104">SyndicationFeed 속성</span><span class="sxs-lookup"><span data-stu-id="df20d-104">SyndicationFeed property</span></span>|<span data-ttu-id="df20d-105">Serialize된 형식</span><span class="sxs-lookup"><span data-stu-id="df20d-105">Serialized form</span></span>|  
|------------------------------|---------------------|  
|`AttributeExtensions`|<span data-ttu-id="df20d-106">특성의 <`feed`> 컬렉션의 각 특성에 대 한 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-106">An attribute in the <`feed`> element for each attribute in the collection.</span></span>|  
|`Authors`|<span data-ttu-id="df20d-107"><`author`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationPerson> 컬렉션에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-107">An <`author`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Categories`|<span data-ttu-id="df20d-108"><`category`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationCategory> 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-108">A <`category`> element for each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection.</span></span>|  
|`Contributors`|<span data-ttu-id="df20d-109"><`contributor`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationPerson> 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-109">A <`contributor`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Copyright`|<span data-ttu-id="df20d-110"><`rights`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-110">A <`rights`> element.</span></span>|  
|`Description`|<span data-ttu-id="df20d-111"><`subtitle`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-111">A <`subtitle`> element.</span></span>|  
|`ElementExtensions`|<span data-ttu-id="df20d-112">컬렉션의 각 요소 내에서 작성 되는 <`feed`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-112">Each element in the collection is written within the <`feed`> element.</span></span>|  
|`Generator`|<span data-ttu-id="df20d-113"><`generator`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-113">A <`generator`> element.</span></span>|  
|`Id`|<span data-ttu-id="df20d-114"><`id`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-114">An <`id`>element.</span></span>|  
|`ImageUri`|<span data-ttu-id="df20d-115"><`logo`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-115">A <`logo`> element.</span></span>|  
|`Items`|<span data-ttu-id="df20d-116"><`entry`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationItem> 컬렉션에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-116">An <`entry`> element for each <xref:System.ServiceModel.Syndication.SyndicationItem> in the collection.</span></span>|  
|`Language`|<span data-ttu-id="df20d-117">serialize되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-117">Not serialized.</span></span>|  
|`LastUpdatedTime`|<span data-ttu-id="df20d-118"><`updated`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-118">An <`updated`> element.</span></span>|  
|`Links`|<span data-ttu-id="df20d-119"><`link`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationLink> 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-119">A <`link`> element for each <xref:System.ServiceModel.Syndication.SyndicationLink> in the collection.</span></span>|  
|`Title`|<span data-ttu-id="df20d-120"><`title`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-120">A <`title`> element.</span></span>|  
  
 <span data-ttu-id="df20d-121">RSS 2.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스를 쓸를 <`rss`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-121">When serialized to RSS 2.0, a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is written to an <`rss`> element.</span></span> <span data-ttu-id="df20d-122">다음 표에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 클래스에 정의된 각 속성이 어떻게 RSS 2.0으로 serialize되는지 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-122">The following table shows how each property defined in the <xref:System.ServiceModel.Syndication.SyndicationFeed> class is serialized to RSS 2.0.</span></span>  
  
|<span data-ttu-id="df20d-123">SyndicationFeed 속성</span><span class="sxs-lookup"><span data-stu-id="df20d-123">SyndicationFeed property</span></span>|<span data-ttu-id="df20d-124">Serialize된 형식</span><span class="sxs-lookup"><span data-stu-id="df20d-124">Serialized form</span></span>|  
|------------------------------|---------------------|  
|`AttributeExtensions`|<span data-ttu-id="df20d-125">특성의 <`channel`> 컬렉션의 각 특성에 대 한 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-125">An attribute in the <`channel`> element for each attribute in the collection.</span></span>|  
|`Authors`|<span data-ttu-id="df20d-126"><`managingEditor`> 요소 하나만 <xref:System.ServiceModel.Syndication.SyndicationPerson> 컬렉션에는 고, 그렇지는 <`a10:author`> 요소 각각에 대 한 <xref:System.ServiceModel.Syndication.SyndicationPerson> 컬렉션에.</span><span class="sxs-lookup"><span data-stu-id="df20d-126">A <`managingEditor`> element if only one <xref:System.ServiceModel.Syndication.SyndicationPerson> is in the collection; otherwise, an <`a10:author`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Categories`|<span data-ttu-id="df20d-127"><`category`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationCategory> 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-127">A <`category`> element for each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection.</span></span>|  
|`Contributors`|<span data-ttu-id="df20d-128"><`a10:contributor`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationPerson> 컬렉션에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-128">An <`a10:contributor`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Copyright`|<span data-ttu-id="df20d-129"><`copyright`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-129">A <`copyright`> element.</span></span>|  
|`Description`|<span data-ttu-id="df20d-130"><`description`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-130">A <`description`> element.</span></span>|  
|`ElementExtensions`|<span data-ttu-id="df20d-131">컬렉션의 각 요소 내에서 작성 되는 <`channel`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-131">Each element in the collection is written within the <`channel`> element.</span></span>|  
|`Generator`|<span data-ttu-id="df20d-132"><`generator`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-132">A <`generator`> element.</span></span>|  
|`Id`|<span data-ttu-id="df20d-133"><`a10:id`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-133">An <`a10:id`> element.</span></span>|  
|`ImageUri`|<span data-ttu-id="df20d-134"><`image`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-134">An <`image`> element.</span></span>|  
|`Items`|<span data-ttu-id="df20d-135"><`item`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationItem> 컬렉션에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-135">An <`item`> element for each <xref:System.ServiceModel.Syndication.SyndicationItem> in the collection.</span></span>|  
|`Language`|<span data-ttu-id="df20d-136"><`language`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-136">A <`language`> element.</span></span>|  
|`LastUpdatedTime`|<span data-ttu-id="df20d-137"><`lastBuildDate`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-137">A <`lastBuildDate`> element.</span></span>|  
|`Links`|<span data-ttu-id="df20d-138"><`a10:link`> 요소 마다 <xref:System.ServiceModel.Syndication.SyndicationLink> 컬렉션에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-138">An <`a10:link`> element for each <xref:System.ServiceModel.Syndication.SyndicationLink> in the collection.</span></span>|  
|`Title`|<span data-ttu-id="df20d-139"><`title`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-139">A <`title`> element.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="df20d-140">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스를 만들고 이를 Atom 1.0 및 RSS 2.0으로 serialize하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-140">The following code shows how to create a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance and serialize it to both Atom 1.0 and RSS 2.0.</span></span>  
  
 [!code-csharp[SyndicationFeed#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#0)]
 [!code-vb[SyndicationFeed#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#0)]  
  
 <span data-ttu-id="df20d-141">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed>이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-141">The following XML shows how a <xref:System.ServiceModel.Syndication.SyndicationFeed> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#1)]  
  
 <span data-ttu-id="df20d-142">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스가 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-142">The following XML shows how a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#2](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df20d-143"><see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-143">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df20d-144"><see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-144">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationFeed : seq&lt;System.ServiceModel.Syndication.SyndicationItem&gt; -&gt; System.ServiceModel.Syndication.SyndicationFeed" Usage="new System.ServiceModel.Syndication.SyndicationFeed items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="df20d-145"><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-145">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span></span></param>
        <summary><span data-ttu-id="df20d-146">지정된 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 개체 컬렉션을 사용하여 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-146">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-147">이 생성자에 전달된 <xref:System.ServiceModel.Syndication.SyndicationItem> 개체 컬렉션은 버퍼링됩니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-147">The collection of <xref:System.ServiceModel.Syndication.SyndicationItem> objects passed into this constructor is buffered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-148">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-148">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#3)]
 [!code-vb[SyndicationFeed#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationFeed (System.ServiceModel.Syndication.SyndicationFeed source, bool cloneItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationFeed source, bool cloneItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationFeed, cloneItems As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationFeed(System::ServiceModel::Syndication::SyndicationFeed ^ source, bool cloneItems);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationFeed : System.ServiceModel.Syndication.SyndicationFeed * bool -&gt; System.ServiceModel.Syndication.SyndicationFeed" Usage="new System.ServiceModel.Syndication.SyndicationFeed (source, cloneItems)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationFeed" />
        <Parameter Name="cloneItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="df20d-149">새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-149">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to initialize the new instance.</span></span></param>
        <param name="cloneItems"><span data-ttu-id="df20d-150">소스 인스턴스의 항목을 복제할지 여부를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-150">A value that specifies whether to clone the items in the source instance.</span></span></param>
        <summary><span data-ttu-id="df20d-151">지정된 피드를 사용하여 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-151">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified feed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-152">`cloneItems` 매개 변수가 `true`이면 소스 <xref:System.ServiceModel.Syndication.SyndicationItem> 인스턴스의 모든 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스가 복제되어 새 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 인스턴스의 <xref:System.ServiceModel.Syndication.SyndicationFeed> 컬렉션에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-152">If the `cloneItems` parameter is `true`, all <xref:System.ServiceModel.Syndication.SyndicationItem> instances in the source <xref:System.ServiceModel.Syndication.SyndicationFeed> instance are cloned and added to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span> <span data-ttu-id="df20d-153">`cloneItems` 매개 변수가 `false`이면 새 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 인스턴스의 <xref:System.ServiceModel.Syndication.SyndicationFeed> 컬렉션은 기존 <xref:System.ServiceModel.Syndication.SyndicationItem> 인스턴스에 대한 참조를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-153">If the `cloneItems` parameter is `false`, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance contains references to the existing <xref:System.ServiceModel.Syndication.SyndicationItem> instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationFeed : string * string * Uri -&gt; System.ServiceModel.Syndication.SyndicationFeed" Usage="new System.ServiceModel.Syndication.SyndicationFeed (title, description, feedAlternateLink)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="title"><span data-ttu-id="df20d-154">피드의 제목입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-154">The title of the feed.</span></span></param>
        <param name="description"><span data-ttu-id="df20d-155">피드에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-155">The description of the feed.</span></span></param>
        <param name="feedAlternateLink"><span data-ttu-id="df20d-156">피드의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-156">The URI for the feed.</span></span></param>
        <summary><span data-ttu-id="df20d-157">지정된 제목, 설명 및 URI(Uniform Resource Identifier)를 사용하여 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-157">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, and Uniform Resource Identifier (URI).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df20d-158">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-158">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#4)]
 [!code-vb[SyndicationFeed#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationFeed : string * string * Uri * seq&lt;System.ServiceModel.Syndication.SyndicationItem&gt; -&gt; System.ServiceModel.Syndication.SyndicationFeed" Usage="new System.ServiceModel.Syndication.SyndicationFeed (title, description, feedAlternateLink, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="title"><span data-ttu-id="df20d-159">피드의 제목입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-159">The title of the feed.</span></span></param>
        <param name="description"><span data-ttu-id="df20d-160">피드에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-160">The description of the feed.</span></span></param>
        <param name="feedAlternateLink"><span data-ttu-id="df20d-161">피드의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-161">The URI for the feed.</span></span></param>
        <param name="items"><span data-ttu-id="df20d-162"><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-162">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span></span></param>
        <summary><span data-ttu-id="df20d-163">지정된 제목, 설명, URI 및 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 개체 컬렉션을 사용하여 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-163">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, URI, and collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df20d-164">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-164">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#5)]
 [!code-vb[SyndicationFeed#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, string id, valuetype System.DateTimeOffset lastUpdatedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, id As String, lastUpdatedTime As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::String ^ id, DateTimeOffset lastUpdatedTime);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationFeed : string * string * Uri * string * DateTimeOffset -&gt; System.ServiceModel.Syndication.SyndicationFeed" Usage="new System.ServiceModel.Syndication.SyndicationFeed (title, description, feedAlternateLink, id, lastUpdatedTime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="title"><span data-ttu-id="df20d-165">배포 피드 제목입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-165">The syndication feed title.</span></span></param>
        <param name="description"><span data-ttu-id="df20d-166">배포 피드에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-166">The syndication feed description.</span></span></param>
        <param name="feedAlternateLink"><span data-ttu-id="df20d-167">배포 피드의 대체 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-167">The alternate URI for the syndication feed.</span></span></param>
        <param name="id"><span data-ttu-id="df20d-168">배포 피드의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-168">The ID of the syndication feed.</span></span></param>
        <param name="lastUpdatedTime"><span data-ttu-id="df20d-169">배포 피드가 마지막으로 업데이트된 시간을 포함하는 <see cref="T:System.DateTimeOffset" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-169">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</span></span></param>
        <summary><span data-ttu-id="df20d-170"><see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-170">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df20d-171">다음 코드에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-171">The following code shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#49](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#49)]
 [!code-vb[SyndicationFeed#49](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, string id, valuetype System.DateTimeOffset lastUpdatedTime, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, id As String, lastUpdatedTime As DateTimeOffset, items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::String ^ id, DateTimeOffset lastUpdatedTime, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationFeed : string * string * Uri * string * DateTimeOffset * seq&lt;System.ServiceModel.Syndication.SyndicationItem&gt; -&gt; System.ServiceModel.Syndication.SyndicationFeed" Usage="new System.ServiceModel.Syndication.SyndicationFeed (title, description, feedAlternateLink, id, lastUpdatedTime, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="title"><span data-ttu-id="df20d-172">배포 피드 제목입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-172">The syndication feed title.</span></span></param>
        <param name="description"><span data-ttu-id="df20d-173">배포 피드에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-173">The syndication feed description.</span></span></param>
        <param name="feedAlternateLink"><span data-ttu-id="df20d-174">배포 피드의 대체 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-174">The alternate URI for the syndication feed.</span></span></param>
        <param name="id"><span data-ttu-id="df20d-175">배포 피드의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-175">The ID of the syndication feed.</span></span></param>
        <param name="lastUpdatedTime"><span data-ttu-id="df20d-176">배포 피드가 마지막으로 업데이트된 시간을 포함하는 <see cref="T:System.DateTimeOffset" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-176">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</span></span></param>
        <param name="items"><span data-ttu-id="df20d-177"><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-177">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span></span></param>
        <summary><span data-ttu-id="df20d-178"><see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-178">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df20d-179">다음 코드에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-179">The following code shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#50](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#50)]
 [!code-vb[SyndicationFeed#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-180">특성 확장명 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-180">Gets a collection of attribute extensions.</span></span></summary>
        <value><span data-ttu-id="df20d-181">특성 확장 컬렉션을 포함하는 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-181">A dictionary that contains a collection of attribute extensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-182">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-182">An attribute extension is a valid XML attribute that is not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="df20d-183">Atom 1.0으로 serialize 될 때 컬렉션의 각 사용자 지정 특성에 씌 합니다 <`atom`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-183">When serialized to Atom 1.0, each custom attribute in the collection is written to the <`atom`> element.</span></span> <span data-ttu-id="df20d-184">RSS 2.0으로 serialize 될 때 각 사용자 지정 특성에 씌 합니다 <`channel`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-184">When serialized to RSS 2.0, each custom attribute is written to the <`channel`> element.</span></span> <span data-ttu-id="df20d-185">특성 확장을 추가 하는 예제를 참조 합니다 [Loosely-Typed 확장](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-185">For an example of adding an attribute extension, see the [Loosely-Typed Extensions](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) sample.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-186">다음 코드에서는 배포 피드에 특성 확장을 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-186">The following code shows how to add an attribute extension to a syndication feed.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#0](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/program.cs#0)] 
 [!code-vb[LooselyTypedExtensions#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/program.vb#0)]   
  
 <span data-ttu-id="df20d-187">다음 XML에서는 특성 확장이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-187">The following XML shows how an attribute extension is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#14](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#14)]  
  
 <span data-ttu-id="df20d-188">다음 XML에서는 특성 확장이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-188">The following XML shows how an attribute extension is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#15](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt; Authors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationPerson&gt; Authors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Authors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authors As Collection(Of SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ Authors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authors : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;" Usage="System.ServiceModel.Syndication.SyndicationFeed.Authors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-189">피드 작성자 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-189">Gets a collection of authors of the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-190">피드 작성자를 나타내는 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-190">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the authors of the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-191">Atom 1.0으로 serialize 될 때 각 <xref:System.ServiceModel.Syndication.SyndicationPerson> 컬렉션에 작성 되는 <`author`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-191">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to an <`author`> element.</span></span> <span data-ttu-id="df20d-192">하나만 있으면 RSS 2.0으로 serialize 될 때 <xref:System.ServiceModel.Syndication.SyndicationPerson> 가 컬렉션에 쓸 때를 <`managingEditor`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-192">When serialized to RSS 2.0, if only a single <xref:System.ServiceModel.Syndication.SyndicationPerson> exists in the collection, it is written to a <`managingEditor`> element.</span></span> <span data-ttu-id="df20d-193">그렇지 않은 경우 각 <xref:System.ServiceModel.Syndication.SyndicationPerson> 에 기록 됩니다는 <`a10:author`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-193">Otherwise, each <xref:System.ServiceModel.Syndication.SyndicationPerson> is written to an <`a10:author`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-194">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A>의 <xref:System.ServiceModel.Syndication.SyndicationFeed> 컬렉션에 작성자를 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-194">The following code shows how to add an author to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#8)]
 [!code-vb[SyndicationFeed#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#8)]  
  
 <span data-ttu-id="df20d-195">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-195">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#16](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#16)]  
  
 <span data-ttu-id="df20d-196">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-196">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#17](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-197"><see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 인스턴스의 기본 URI를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-197">Gets or sets the base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span></span></summary>
        <value><span data-ttu-id="df20d-198"><see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 인스턴스의 기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-198">The base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df20d-199">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스의 기본 URI에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-199">The following code shows how to access the base URI of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#48](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#48)]
 [!code-vb[SyndicationFeed#48](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt; Categories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationCategory&gt; Categories" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Categories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Categories As Collection(Of SyndicationCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationCategory ^&gt; ^ Categories { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationCategory ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Categories : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt;" Usage="System.ServiceModel.Syndication.SyndicationFeed.Categories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-200">피드의 범주 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-200">Gets a collection of categories for the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-201">피드의 범주를 나타내는 <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-201">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> objects that represent the categories for the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-202">Atom 1.0으로 serialize 될 때 각 <xref:System.ServiceModel.Syndication.SyndicationCategory> 컬렉션에 작성 되는 <`category`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-202">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection is written to a <`category`> element.</span></span>  
  
 <span data-ttu-id="df20d-203">RSS 2.0으로 serialize 될 때 각 <xref:System.ServiceModel.Syndication.SyndicationCategory> 컬렉션에 작성 되는 <`category`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-203">When serialized to RSS 2.0, each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection is written to a <`category`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-204">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A>의 <xref:System.ServiceModel.Syndication.SyndicationFeed> 컬렉션에 범주를 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-204">The following code shows how to add a category to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#10)]
 [!code-vb[SyndicationFeed#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#10)]  
  
 <span data-ttu-id="df20d-205">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-205">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#18](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#18)]  
  
 <span data-ttu-id="df20d-206">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-206">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#19](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationFeed Clone (bool cloneItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationFeed Clone(bool cloneItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (cloneItems As Boolean) As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationFeed ^ Clone(bool cloneItems);" />
      <MemberSignature Language="F#" Value="abstract member Clone : bool -&gt; System.ServiceModel.Syndication.SyndicationFeed&#xA;override this.Clone : bool -&gt; System.ServiceModel.Syndication.SyndicationFeed" Usage="syndicationFeed.Clone cloneItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneItems"><span data-ttu-id="df20d-207"><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 개체의 복제 여부를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-207">A value that specifies whether the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects are cloned.</span></span></param>
        <summary><span data-ttu-id="df20d-208"><see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 인스턴스의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-208">Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df20d-209">중복된 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-209">A duplicate <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-210">`cloneItems` 매개 변수가 `true`이면 <xref:System.ServiceModel.Syndication.SyndicationFeed> 개체의 모든 항목이 복제되고, 그렇지 않으면 새 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스의 항목 컬렉션은 원래 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스의 항목에 대한 참조를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-210">If the `cloneItems` parameter is `true`, all items within the <xref:System.ServiceModel.Syndication.SyndicationFeed> object are cloned; otherwise, the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance's items collection contain references to the original <xref:System.ServiceModel.Syndication.SyndicationFeed> instance's items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-211">다음 코드에서는 이 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-211">The following code shows how to call this method.</span></span>  
  
 [!code-csharp[SyndicationFeed#47](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#47)]
 [!code-vb[SyndicationFeed#47](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contributors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt; Contributors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationPerson&gt; Contributors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contributors As Collection(Of SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ Contributors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contributors : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;" Usage="System.ServiceModel.Syndication.SyndicationFeed.Contributors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-212">피드 검토자 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-212">Gets a collection of the contributors to the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-213">피드 검토자를 나타내는 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-213">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the contributors to the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-214">Atom 1.0으로 serialize 될 때 각 <xref:System.ServiceModel.Syndication.SyndicationPerson> 컬렉션에 작성 되는 <`contributor`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-214">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to a <`contributor`> element.</span></span>  
  
 <span data-ttu-id="df20d-215">RSS 2.0으로 serialize 될 때 각 <xref:System.ServiceModel.Syndication.SyndicationPerson> 컬렉션에 작성 되는 <`a10:contributor`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-215">When serialized to RSS 2.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to an <`a10:contributor`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-216">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A>의 <xref:System.ServiceModel.Syndication.SyndicationFeed> 컬렉션에 검토자를 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-216">The following code shows how to add a contributor to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#11)]
 [!code-vb[SyndicationFeed#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#11)]  
  
 <span data-ttu-id="df20d-217">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-217">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#20](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#20)]  
  
 <span data-ttu-id="df20d-218">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-218">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#21](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Copyright { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Copyright" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public Property Copyright As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Copyright { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Copyright : System.ServiceModel.Syndication.TextSyndicationContent with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.Copyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-219">피드에 대한 저작권 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-219">Gets or sets copyright information for the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-220">피드에 대한 저작권 정보를 나타내는 <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-220">A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> object that represents copyright information for the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-221">Atom 1.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> 에 기록 되는 <`rights`> 요소.</span><span class="sxs-lookup"><span data-stu-id="df20d-221">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is written to a <`rights`> element.</span></span>  
  
 <span data-ttu-id="df20d-222">RSS 2.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> 에 기록 되는 <`copyright`> 요소.</span><span class="sxs-lookup"><span data-stu-id="df20d-222">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is written to a <`copyright`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-223">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed>의 저작권 정보를 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-223">The following code shows how to set the copyright information for a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#12)]
 [!code-vb[SyndicationFeed#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#12)]  
  
 <span data-ttu-id="df20d-224">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A>가 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-224">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#22](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#22)]  
  
```  
<rights type="text">Copyright 2007</rights>  
```  
  
 <span data-ttu-id="df20d-225">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A>가 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-225">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#23](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCategory">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationCategory CreateCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationCategory CreateCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateCategory () As SyndicationCategory" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationCategory ^ CreateCategory();" />
      <MemberSignature Language="F#" Value="abstract member CreateCategory : unit -&gt; System.ServiceModel.Syndication.SyndicationCategory&#xA;override this.CreateCategory : unit -&gt; System.ServiceModel.Syndication.SyndicationCategory" Usage="syndicationFeed.CreateCategory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationCategory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df20d-226">새 <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-226">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df20d-227">새 <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-227">A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-228">이 메서드는 <xref:System.ServiceModel.Syndication.SyndicationCategory> 개체를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> 컬렉션에 추가하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-228">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationCategory> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationItem CreateItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationItem CreateItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateItem () As SyndicationItem" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationItem ^ CreateItem();" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : unit -&gt; System.ServiceModel.Syndication.SyndicationItem&#xA;override this.CreateItem : unit -&gt; System.ServiceModel.Syndication.SyndicationItem" Usage="syndicationFeed.CreateItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df20d-229">새 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-229">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df20d-230">새 <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-230">A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-231">이 메서드는 <xref:System.ServiceModel.Syndication.SyndicationItem> 개체를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 컬렉션에 추가하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-231">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationItem> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLink">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationLink CreateLink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink CreateLink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateLink () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ CreateLink();" />
      <MemberSignature Language="F#" Value="abstract member CreateLink : unit -&gt; System.ServiceModel.Syndication.SyndicationLink&#xA;override this.CreateLink : unit -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="syndicationFeed.CreateLink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df20d-232">새 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-232">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df20d-233">새 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-233">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-234">이러한 새 <xref:System.ServiceModel.Syndication.SyndicationLink> 인스턴스는 자신을 만드는 데 사용된 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스에 추가되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-234">The new <xref:System.ServiceModel.Syndication.SyndicationLink> instance is not added to the <xref:System.ServiceModel.Syndication.SyndicationFeed> instance used to create it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePerson">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationPerson CreatePerson ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson CreatePerson() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreatePerson () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ CreatePerson();" />
      <MemberSignature Language="F#" Value="abstract member CreatePerson : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson&#xA;override this.CreatePerson : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="syndicationFeed.CreatePerson " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df20d-235">새 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-235">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df20d-236">새 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-236">A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-237">이 메서드는 <xref:System.ServiceModel.Syndication.SyndicationPerson> 개체를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> 또는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 컬렉션에 추가하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-237">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationPerson> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> or <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Description { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : System.ServiceModel.Syndication.TextSyndicationContent with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-238">피드에 대한 설명을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-238">Gets or sets a description of the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-239">피드에 대한 설명을 나타내는 <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-239">A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> object that represents the description of the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-240">Atom 1.0으로 serialize 될 때 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> 에 기록 되는 <`subtitle`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-240">When serialized to Atom 1.0, <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is written to a <`subtitle`> element.</span></span>  
  
 <span data-ttu-id="df20d-241">RSS 2.0으로 serialize 될 때 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> 에 기록 되는 <`description`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-241">When serialized to RSS 2.0, <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is written to a <`description`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-242">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A>의 <xref:System.ServiceModel.Syndication.SyndicationFeed>를 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-242">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#13)]
 [!code-vb[SyndicationFeed#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#13)]  
  
 <span data-ttu-id="df20d-243">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A>이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-243">The following XML shows how <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#24](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#24)]  
  
 <span data-ttu-id="df20d-244">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A>이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-244">The following XML shows how <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#25](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Documentation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationLink Documentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationLink Documentation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Documentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Documentation As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationLink ^ Documentation { System::ServiceModel::Syndication::SyndicationLink ^ get(); void set(System::ServiceModel::Syndication::SyndicationLink ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Documentation : System.ServiceModel.Syndication.SyndicationLink with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.Documentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-245">피드의 요소 확장을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-245">Gets the element extensions for the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-246">피드의 요소 확장을 포함하는 <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-246">A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> instance that contains the element extensions in the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-247">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-247">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="df20d-248">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-248">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span>  
  
 `<mg:MyElement xmlns:mg="http://myserver/elements" />`  
  
 <span data-ttu-id="df20d-249">요소 확장을 추가 하는 예제를 참조 합니다 [Loosely-Typed 확장](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-249">For an example of adding element extensions, see the [Loosely-Typed Extensions](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) sample.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-250">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스에 요소 확장을 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-250">The following code shows how to add element extensions to a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#1](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#1)]
 [!code-vb[LooselyTypedExtensions#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generator">
      <MemberSignature Language="C#" Value="public string Generator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Generator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Generator" />
      <MemberSignature Language="VB.NET" Value="Public Property Generator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Generator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Generator : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.Generator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-251">피드의 생성기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-251">Gets or sets the generator of the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-252">피드를 생성한 도구의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-252">The name of the tool that generated the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-253">Atom 1.0 및 RSS 2.0으로 serialize 될 때 합니다 <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> 에 쓸 때를 <`generator`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-253">When serialized to Atom 1.0 and RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> is written to a <`generator`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-254">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A>의 <xref:System.ServiceModel.Syndication.SyndicationFeed>를 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-254">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#39](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#39)]
 [!code-vb[SyndicationFeed#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#39)]
 [!code-xml[SyndicationFeed#39](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#39)]  
  
 <span data-ttu-id="df20d-255">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> 속성이 Atom 1.0 및 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-255">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> property is serialized to Atom 1.0 and RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#26](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtom10Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Atom10FeedFormatter GetAtom10Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Atom10FeedFormatter GetAtom10Formatter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAtom10Formatter () As Atom10FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Atom10FeedFormatter ^ GetAtom10Formatter();" />
      <MemberSignature Language="F#" Value="member this.GetAtom10Formatter : unit -&gt; System.ServiceModel.Syndication.Atom10FeedFormatter" Usage="syndicationFeed.GetAtom10Formatter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Atom10FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df20d-256"><see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-256">Gets an <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df20d-257"><see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-257">An <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRss20Formatter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df20d-258"><see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-258">Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRss20Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRss20Formatter () As Rss20FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Rss20FeedFormatter ^ GetRss20Formatter();" />
      <MemberSignature Language="F#" Value="member this.GetRss20Formatter : unit -&gt; System.ServiceModel.Syndication.Rss20FeedFormatter" Usage="syndicationFeed.GetRss20Formatter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Rss20FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df20d-259"><see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-259">Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df20d-260"><see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-260">An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRss20Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter (bool serializeExtensionsAsAtom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter(bool serializeExtensionsAsAtom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRss20Formatter (serializeExtensionsAsAtom As Boolean) As Rss20FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Rss20FeedFormatter ^ GetRss20Formatter(bool serializeExtensionsAsAtom);" />
      <MemberSignature Language="F#" Value="member this.GetRss20Formatter : bool -&gt; System.ServiceModel.Syndication.Rss20FeedFormatter" Usage="syndicationFeed.GetRss20Formatter serializeExtensionsAsAtom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Rss20FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializeExtensionsAsAtom" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializeExtensionsAsAtom"><span data-ttu-id="df20d-261">Atom 1.0 네임스페이스를 사용하여 요소 및 특성 확장을 serialize할지 여부를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-261">A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</span></span></param>
        <summary><span data-ttu-id="df20d-262">새 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-262">Gets a new <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df20d-263"><see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-263">An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-264">RSS 2.0 사양은 사양에 지정되지 않은 요소 및 특성이 네임스페이스에 속한 경우에만 이 요소 및 특성을 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-264">The RSS 2.0 specification allows elements and attributes that are not specified in its specification only if they are within a namespace.</span></span> <span data-ttu-id="df20d-265">`serializedExtensionsAsAtom` 매개 변수가 `true`이면 포맷터는 `a10` 네임스페이스 한정자를 모든 확장에 추가하고, 그렇지 않으면 확장이 serialize되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-265">When the `serializedExtensionsAsAtom` parameter is `true`, the formatter automatically adds the `a10` namespace qualifier to all extensions; otherwise, the extensions are not serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-266">피드의 ID를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-266">Gets or sets the ID of the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-267">피드의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-267">The ID of the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-268">Atom 1.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> 에 기록 되는 <`id`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-268">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> is written to an <`id`> element.</span></span>  
  
 <span data-ttu-id="df20d-269">RSS 2.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> 에 기록 되는 <`a10:id`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-269">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> is written to an <`a10:id`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-270">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> 인스턴스에 <xref:System.ServiceModel.Syndication.SyndicationFeed> 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-270">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#40](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#40)]
 [!code-vb[SyndicationFeed#40](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#40)]  
  
 <span data-ttu-id="df20d-271">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-271">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#27](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#27)]  
  
 <span data-ttu-id="df20d-272">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-272">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#28](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public Uri ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ImageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-273">피드의 이미지 URL을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-273">Gets or sets the image URL for the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-274">피드의 이미지 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-274">The URL for the image for the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-275">Atom 1.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> 속성에 기록 되는 <`logo`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-275">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is written to a <`logo`> element.</span></span>  
  
 <span data-ttu-id="df20d-276">RSS 2.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> 속성에 기록 되는 <`image`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-276">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is written to an <`image`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-277">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> 인스턴스에 <xref:System.ServiceModel.Syndication.SyndicationFeed>를 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-277">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#41](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#41)]
 [!code-vb[SyndicationFeed#41](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#41)]  
  
 <span data-ttu-id="df20d-278">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-278">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#29](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#29)]  
  
 <span data-ttu-id="df20d-279">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-279">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#30](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; Items { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Items" />
      <MemberSignature Language="VB.NET" Value="Public Property Items As IEnumerable(Of SyndicationItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Items : seq&lt;System.ServiceModel.Syndication.SyndicationItem&gt; with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-280">피드에 들어 있는 피드 항목 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-280">Gets a collection of the feed items contained in the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-281"><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-281">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-282">Atom 1.0으로 serialize 될 때 합니다 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 컬렉션에 쓸 때 <`entry`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-282">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is written to <`entry`> elements.</span></span>  
  
 <span data-ttu-id="df20d-283">Atom 1.0으로 serialize 될 때 합니다 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 컬렉션에 쓸 때 <`item`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-283">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is written to <`item`> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-284">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 인스턴스의 <xref:System.ServiceModel.Syndication.SyndicationFeed> 컬렉션을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-284">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#42](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#42)]
 [!code-vb[SyndicationFeed#42](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#42)]  
  
 <span data-ttu-id="df20d-285">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-285">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#31](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#31)]  
  
 <span data-ttu-id="df20d-286">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-286">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#32](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-287">피드의 언어를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-287">Gets or sets the language of the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-288">피드가 기록된 언어의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-288">The name of the language the feed is written in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-289">Atom 1.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> 속성에 기록 됩니다 합니다 `lang` 특성을 <`feed`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-289">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is written to the `lang` attribute in the <`feed`> element.</span></span>  
  
 <span data-ttu-id="df20d-290">RSS 2.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> 속성에 기록 되는 <`language`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-290">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is written to the <`language`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-291">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> 인스턴스에 <xref:System.ServiceModel.Syndication.SyndicationFeed> 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-291">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#43](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#43)]
 [!code-vb[SyndicationFeed#43](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#43)]  
  
 <span data-ttu-id="df20d-292">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-292">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#14](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#14)]  
  
 <span data-ttu-id="df20d-293">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-293">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#33](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset LastUpdatedTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastUpdatedTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastUpdatedTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset LastUpdatedTime { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberSignature Language="F#" Value="member this.LastUpdatedTime : DateTimeOffset with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-294">피드가 마지막으로 업데이트된 시간을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-294">Gets or sets the time the feed was last updated.</span></span></summary>
        <value><span data-ttu-id="df20d-295">피드가 마지막으로 업데이트된 시간으로 설정된 <see cref="T:System.DateTimeOffset" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-295">A <see cref="T:System.DateTimeOffset" /> instance set to the time the feed was last updated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-296">Atom 1.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> 속성에 기록 되는 <`updated`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-296">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is written to an <`updated`>element.</span></span>  
  
 <span data-ttu-id="df20d-297">RSS 2.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> 속성에 기록 되는 <`lastBuildDate`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-297">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is written to a <`lastBuildDate`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-298">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> 인스턴스에 <xref:System.ServiceModel.Syndication.SyndicationFeed> 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-298">The following code shows how to se the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#44](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#44)]
 [!code-vb[SyndicationFeed#44](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#44)]  
  
 <span data-ttu-id="df20d-299">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-299">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#34](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#34)]  
  
 <span data-ttu-id="df20d-300">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-300">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#35](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationLink&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As Collection(Of SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationLink ^&gt; ^ Links { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationLink ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt;" Usage="System.ServiceModel.Syndication.SyndicationFeed.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-301">피드와 연결된 링크를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-301">Gets the links associated with the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-302"><see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-302">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-303">Atom 1.0으로 serialize 될 때 합니다 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> 컬렉션의 수에 기록 됩니다 <`link`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-303">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is written to a number of <`link`> elements.</span></span>  
  
 <span data-ttu-id="df20d-304">RSS 2.0으로 serialize 될 때 합니다 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> 컬렉션의 수에 기록 됩니다 <`a10:link`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-304">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is written to a number of <`a10:link`> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-305">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> 인스턴스의 <xref:System.ServiceModel.Syndication.SyndicationFeed> 컬렉션에 링크를 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-305">The following code shows how to add a link to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#45](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#45)]
 [!code-vb[SyndicationFeed#45](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#45)]  
  
 <span data-ttu-id="df20d-306">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-306">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#36](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#36)]  
  
 <span data-ttu-id="df20d-307">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-307">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#36](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationFeed Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationFeed Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationFeed ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; System.ServiceModel.Syndication.SyndicationFeed" Usage="System.ServiceModel.Syndication.SyndicationFeed.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="df20d-308">피드를 로드할 소스 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-308">The <see cref="T:System.Xml.XmlReader" /> to load the feed from.</span></span></param>
        <summary><span data-ttu-id="df20d-309">지정된 XML 판독기로부터 배포 피드를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-309">Loads a syndication feed from the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="df20d-310">로드한 콘텐츠를 포함하는 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-310">A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that contains the loaded contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df20d-311">다음 예제에서는 이 메서드의 호출 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-311">The following example demonstrates how to call this method.</span></span>  
  
 [!code-csharp[SyndicationFeed#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#9)]
 [!code-vb[SyndicationFeed#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load&lt;TSyndicationFeed&gt;">
      <MemberSignature Language="C#" Value="public static TSyndicationFeed Load&lt;TSyndicationFeed&gt; (System.Xml.XmlReader reader) where TSyndicationFeed : System.ServiceModel.Syndication.SyndicationFeednew();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSyndicationFeed Load&lt;.ctor (class System.ServiceModel.Syndication.SyndicationFeed) TSyndicationFeed&gt;(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load(Of TSyndicationFeed As {SyndicationFeedNew}) (reader As XmlReader) As TSyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSyndicationFeed&gt;&#xA; where TSyndicationFeed : System::ServiceModel::Syndication::SyndicationFeedgcnew() static TSyndicationFeed Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; 'SyndicationFeed (requires 'SyndicationFeed :&gt; System.ServiceModel.Syndication.SyndicationFeed and 'SyndicationFeed : (new : unit -&gt; 'SyndicationFeed))" Usage="System.ServiceModel.Syndication.SyndicationFeed.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSyndicationFeed</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSyndicationFeed">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>System.ServiceModel.Syndication.SyndicationFeed</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <typeparam name="TSyndicationFeed"><span data-ttu-id="df20d-312">배포 피드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-312">The syndication feed type.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="df20d-313">읽을 소스 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-313">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <summary><span data-ttu-id="df20d-314">지정된 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />에서 <see cref="T:System.Xml.XmlReader" /> 파생 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-314">Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance from the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="df20d-315">피드를 포함하는 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 파생 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-315">A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance that contains the feed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-316"><xref:System.ServiceModel.Syndication.SyndicationFeed>에서 파생된 클래스로 배포 항목을 로드할 때 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-316">Use this method when you are loading a syndication item into a class derived from <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-317">다음 코드에서는 <xref:System.Xml.XmlReader> 인스턴스에서 배포 피드를 로드하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-317">The following code shows how to load a syndication feed from an <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#9)]
 [!code-vb[SyndicationFeed#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="df20d-318">읽는 동안 잘못된 XML이 발견된 경우</span><span class="sxs-lookup"><span data-stu-id="df20d-318">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAsAtom10">
      <MemberSignature Language="C#" Value="public void SaveAsAtom10 (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAsAtom10(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsAtom10 (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsAtom10(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveAsAtom10 : System.Xml.XmlWriter -&gt; unit" Usage="syndicationFeed.SaveAsAtom10 writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="df20d-319">쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-319">The <see cref="T:System.Xml.XmlWriter" /> to write to.</span></span></param>
        <summary><span data-ttu-id="df20d-320">배포 피드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 Atom 1.0 형식으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-320">Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in Atom 1.0 format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df20d-321">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스를 Atom 1.0 형식으로 기록하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-321">The following code shows how to write out a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance in the Atom 1.0 format.</span></span>  
  
 [!code-csharp[SyndicationFeed#52](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#52)]
 [!code-vb[SyndicationFeed#52](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#52)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsRss20">
      <MemberSignature Language="C#" Value="public void SaveAsRss20 (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAsRss20(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsRss20 (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsRss20(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveAsRss20 : System.Xml.XmlWriter -&gt; unit" Usage="syndicationFeed.SaveAsRss20 writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="df20d-322">쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-322">The <see cref="T:System.Xml.XmlWriter" /> to write to.</span></span></param>
        <summary><span data-ttu-id="df20d-323">배포 피드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 RSS 2.0 형식으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-323">Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in RSS 2.0 format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df20d-324">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 인스턴스를 RSS 2.0 형식으로 기록하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-324">The following code shows how to write out a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance in the RSS 2.0 format.</span></span>  
  
 [!code-csharp[SyndicationFeed#51](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#51)]
 [!code-vb[SyndicationFeed#51](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipDays">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; SkipDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; SkipDays" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.SkipDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SkipDays As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ SkipDays { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SkipDays : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.ServiceModel.Syndication.SyndicationFeed.SkipDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipHours">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;int&gt; SkipHours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;int32&gt; SkipHours" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.SkipHours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SkipHours As Collection(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;int&gt; ^ SkipHours { System::Collections::ObjectModel::Collection&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SkipHours : System.Collections.ObjectModel.Collection&lt;int&gt;" Usage="System.ServiceModel.Syndication.SyndicationFeed.SkipHours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationTextInput TextInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationTextInput TextInput" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Property TextInput As SyndicationTextInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationTextInput ^ TextInput { System::ServiceModel::Syndication::SyndicationTextInput ^ get(); void set(System::ServiceModel::Syndication::SyndicationTextInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.ServiceModel.Syndication.SyndicationTextInput with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.TextInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationTextInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; TimeToLive { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Title { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : System.ServiceModel.Syndication.TextSyndicationContent with get, set" Usage="System.ServiceModel.Syndication.SyndicationFeed.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df20d-325">피드의 제목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-325">Gets or sets the title of the feed.</span></span></summary>
        <value><span data-ttu-id="df20d-326">피드의 제목을 포함하는 <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-326">A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance that contains the title of the feed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-327">Atom 1.0 및 RSS 2.0으로 serialize 될 때를 <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> 속성에 기록 되는 <`title`> 요소.</span><span class="sxs-lookup"><span data-stu-id="df20d-327">When serialized to Atom 1.0 and RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is written to a <`title`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df20d-328">다음 코드에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> 인스턴스의 <xref:System.ServiceModel.Syndication.SyndicationFeed> 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-328">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#46](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#46)]
 [!code-vb[SyndicationFeed#46](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#46)]  
  
 <span data-ttu-id="df20d-329">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-329">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-csharp[SyndicationFeed#39](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#39)]
 [!code-vb[SyndicationFeed#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#39)]
 [!code-xml[SyndicationFeed#39](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#39)]  
  
 <span data-ttu-id="df20d-330">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-330">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#38](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationFeed.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="df20d-331">요소의 이름을 나타내며</span><span class="sxs-lookup"><span data-stu-id="df20d-331">The name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="df20d-332">요소의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-332">The namespace of the element.</span></span></param>
        <param name="value"><span data-ttu-id="df20d-333">구문 분석할 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-333">The attribute to parse.</span></span></param>
        <param name="version"><span data-ttu-id="df20d-334">구문 분석 시 사용할 배포 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-334">The syndication version to use when parsing.</span></span></param>
        <summary><span data-ttu-id="df20d-335">특성 확장의 구문 분석을 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-335">Attempts to parse an attribute extension.</span></span></summary>
        <returns><span data-ttu-id="df20d-336">특성 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-336">A value that specifies whether the attribute extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-337">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-337">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="df20d-338">특성으로 serialize 될 때의 <`feed`> (Atom 1.0)에 대 한 또는 <`rss`> (RSS 1.0)에 대 한 요소에 사용 되는 배포 버전에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-338">They are serialized as an attribute of the <`feed`> (for Atom 1.0) or <`rss`> (for RSS 1.0) element, which depends upon the syndication version being used.</span></span> <span data-ttu-id="df20d-339">이 메서드는 사용자 지정 특성 확장의 deserialization을 처리할 수 있는 확장 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-339">This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</span></span> <span data-ttu-id="df20d-340">이렇게 하려면 <xref:System.ServiceModel.Syndication.SyndicationFeed>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-340">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="df20d-341">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-341">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="df20d-342">읽는 동안 잘못된 XML이 발견된 경우</span><span class="sxs-lookup"><span data-stu-id="df20d-342">Invalid XML Encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationFeed.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="df20d-343">읽을 소스 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-343">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="version"><span data-ttu-id="df20d-344">구문 분석 중 사용할 배포 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-344">The syndication version to use while parsing.</span></span></param>
        <summary><span data-ttu-id="df20d-345">요소 확장의 구문 분석을 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-345">Attempts to parse an element extension.</span></span></summary>
        <returns><span data-ttu-id="df20d-346">요소 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-346">A value that specifies whether the element extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-347">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-347">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="df20d-348">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-348">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="df20d-349">이 메서드는 사용자 지정 요소 확장의 deserialization을 처리할 수 있는 확장 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-349">This method is an extension point that allows you to handle the deserialization of a custom element extension.</span></span> <span data-ttu-id="df20d-350">이렇게 하려면 <xref:System.ServiceModel.Syndication.SyndicationFeed>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-350">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="df20d-351">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-351">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="df20d-352">읽는 동안 잘못된 XML이 발견된 경우</span><span class="sxs-lookup"><span data-stu-id="df20d-352">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationFeed.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="df20d-353">쓸 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-353">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="df20d-354">작성 중 사용할 배포 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-354">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="df20d-355">지정된 배포 버전을 사용하여 지정된 <see cref="T:System.Xml.XmlWriter" />에 특성 확장을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-355">Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-356">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-356">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="df20d-357">특성으로 serialize 될 때의 <`feed`> (Atom 1.0)에 대 한 또는 <`rss`> (RSS 1.0)에 대 한 요소에 사용 되는 배포 버전에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-357">They are serialized as an attribute of the <`feed`> (for Atom 1.0) or <`rss`> (for RSS 1.0) element, which depends upon the syndication version being used.</span></span> <span data-ttu-id="df20d-358">이 메서드는 사용자 지정 특성 확장의 serialization을 처리할 수 있는 확장 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-358">This method is an extension point that allows you to handle the serialization of custom attribute extensions.</span></span> <span data-ttu-id="df20d-359">이렇게 하려면 <xref:System.ServiceModel.Syndication.SyndicationFeed>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-359">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="df20d-360">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-360">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationFeed.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="df20d-361">쓸 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-361">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="df20d-362">작성 중 사용할 배포 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-362">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="df20d-363">지정된 배포 버전을 사용하여 지정된 <see cref="T:System.Xml.XmlWriter" />에 요소 확장을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-363">Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df20d-364">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-364">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="df20d-365">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-365">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="df20d-366">이 메서드는 사용자 지정 요소 확장의 serialization을 처리할 수 있는 확장 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-366">This method is an extension point that allows you to handle the serialization of custom element extensions.</span></span> <span data-ttu-id="df20d-367">이렇게 하려면 <xref:System.ServiceModel.Syndication.SyndicationFeed>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-367">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="df20d-368">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="df20d-368">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>