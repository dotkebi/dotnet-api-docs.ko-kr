<Type Name="SyndicationLink" FullName="System.ServiceModel.Syndication.SyndicationLink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="daa523f275bdac5de190f3ece8285901061b16f2" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56772676" /></Metadata><TypeSignature Language="C#" Value="public class SyndicationLink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationLink extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationLink" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationLink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationLink" />
  <TypeSignature Language="F#" Value="type SyndicationLink = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6704b-101">배포 피드 또는 항목 내부의 링크를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-101">Represents a link within a syndication feed or item.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-102"><xref:System.ServiceModel.Syndication.SyndicationLink>는 <xref:System.ServiceModel.Syndication.SyndicationFeed> 또는 <xref:System.ServiceModel.Syndication.SyndicationItem>에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-102"><xref:System.ServiceModel.Syndication.SyndicationLink> can be added to a <xref:System.ServiceModel.Syndication.SyndicationFeed> or <xref:System.ServiceModel.Syndication.SyndicationItem>.</span></span> <span data-ttu-id="6704b-103">Atom 1.0으로 serialize될 때 <xref:System.ServiceModel.Syndication.SyndicationLink>는 `<link>` 요소로 기록되며, <xref:System.ServiceModel.Syndication.SyndicationLink> 속성은 `<link>` 요소의 특성으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-103">When serialized to Atom 1.0 a <xref:System.ServiceModel.Syndication.SyndicationLink> is written out as a `<link>` element, with the <xref:System.ServiceModel.Syndication.SyndicationLink> properties written out as attributes of the `<link>` element.</span></span> <span data-ttu-id="6704b-104">RSS 2.0으로 serialize 될 때 첫 번째 <xref:System.ServiceModel.Syndication.SyndicationLink> 관계를 사용 하 여 '대체'의 값으로 기록 되는 `<link>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-104">When serialized to RSS 2.0, the first <xref:System.ServiceModel.Syndication.SyndicationLink> with a relationship value of 'alternate' is written out as a `<link>` element.</span></span> <span data-ttu-id="6704b-105">추가 링크는 `<a10:link>` 요소로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-105">Any additional links are written out as a `<a10:link>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-106">다음 예제에서는 <xref:System.ServiceModel.Syndication.SyndicationLink> 클래스를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-106">The following example shows how to use the <xref:System.ServiceModel.Syndication.SyndicationLink> class.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6704b-107"><see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6704b-108"><see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-108">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationLink (System.ServiceModel.Syndication.SyndicationLink source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationLink source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationLink(System::ServiceModel::Syndication::SyndicationLink ^ source);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : System.ServiceModel.Syndication.SyndicationLink -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationLink" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6704b-109">새 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-109">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance used to initialize the new instance.</span></span></param>
        <summary><span data-ttu-id="6704b-110">지정된 인스턴스를 사용하여 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="6704b-111">링크된 리소스의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-111">The URI to the linked resource.</span></span></param>
        <summary><span data-ttu-id="6704b-112">지정된 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />를 사용하여 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6704b-113">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-113">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationLink#1](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#1)]
 [!code-vb[SyndicationLink#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri, string relationshipType, string title, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string relationshipType, string title, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri, System::String ^ relationshipType, System::String ^ title, System::String ^ mediaType, long length);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : Uri * string * string * string * int64 -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink (uri, relationshipType, title, mediaType, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="6704b-114">링크된 리소스의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-114">The URI to the linked resource.</span></span></param>
        <param name="relationshipType"><span data-ttu-id="6704b-115">관계 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-115">The relationship type.</span></span></param>
        <param name="title"><span data-ttu-id="6704b-116">링크의 제목입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-116">The title of the link.</span></span></param>
        <param name="mediaType"><span data-ttu-id="6704b-117">링크의 미디어 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-117">The media type of the link.</span></span></param>
        <param name="length"><span data-ttu-id="6704b-118">연결된 콘텐츠의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-118">The length of the linked content.</span></span></param>
        <summary><span data-ttu-id="6704b-119">지정된 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />, 관계 유형, 제목, 미디어 유형 및 길이를 사용하여 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-119">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />, relation type, title, media type, and length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-120">잘 알려진 관계 유형에는 다음이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-120">Well-known relationship types include:</span></span>  
  
-   <span data-ttu-id="6704b-121">`alternate` - 링크는 포함하는 피드 또는 항목에서 설명하는 대체 버전 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-121">`alternate` - The link identifies an alternate version of the resource described by the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="6704b-122">`related` - 링크는 포함하는 피드 또는 항목과 관련된 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-122">`related` - The link identifies a resource related to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="6704b-123">`self` - 링크는 포함하는 피드 또는 항목에 해당하는 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-123">`self` - The link identifies a resource equivalent to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="6704b-124">`enclosure` - 링크는 크기가 커서 특별히 취급해야 할 수도 있는 관련 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-124">`enclosure` - The link identifies a related resource that is potentially large in size and might require special handling.</span></span> <span data-ttu-id="6704b-125">이 링크 관계는 팟캐스트 또는 오디오 파일이 피드 형태로 배포되는 경우에 자주 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-125">This link relation is often used when podcasts or audio files are distributed in a Feed.</span></span>  
  
-   <span data-ttu-id="6704b-126">`via` - 링크는 포함하는 피드 또는 항목에 제공된 정보의 소스인 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-126">`via` - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-127">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-127">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6704b-128">링크의 특성 확장을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-128">Gets the attribute extensions of the link.</span></span></summary>
        <value><span data-ttu-id="6704b-129">특성 확장 컬렉션을 포함하는 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-129">A dictionary that contains a collection of attribute extensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-130"><xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A>를 사용하면 <xref:System.ServiceModel.Syndication.SyndicationLink>에 사용자 지정 특성을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-130"><xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A> allows you to add custom attributes to the <xref:System.ServiceModel.Syndication.SyndicationLink>.</span></span> <span data-ttu-id="6704b-131">Atom 1.0으로 serialize될 때 이 사용자 지정 특성은 `<link>` 요소 내부에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-131">When serialized to Atom 1.0, the custom attributes appear within the `<link>` element.</span></span> <span data-ttu-id="6704b-132">RSS 2.0으로 serialize될 때 이 사용자 지정 특성은 `<a10:link>` 요소에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-132">When serialized to RSS 2.0, the custom attributes appear in the `<a10:link>` element.</span></span> <span data-ttu-id="6704b-133">유효한 XML 특성을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-133">Any valid XML attribute can be added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-134">다음 코드에서는 배포 링크에 특성 확장을 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-134">The following code shows how to add an attribute extension to a syndication link.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#4)]
 [!code-vb[LooselyTypedExtensions#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6704b-135">배포 링크의 기본 URI를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-135">Gets or sets the base URI of the syndication link.</span></span></summary>
        <value><span data-ttu-id="6704b-136">배포 링크의 기본 URI를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-136">A <see cref="T:System.Uri" /> instance that contains the base URI of the syndication link.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6704b-137">다음 코드에서는 배포 링크의 기본 URI를 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-137">The following code shows how to set the base URI of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationLink Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationLink&#xA;override this.Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="syndicationLink.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6704b-138">현재 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-138">Creates a copy of the current <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></summary>
        <returns><span data-ttu-id="6704b-139">새 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-139">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6704b-140">다음 코드에서는 배포 링크의 복제를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-140">The following code shows how to create a clone of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAlternateLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6704b-141">새 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-141">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-142">이 메서드는 새 <xref:System.ServiceModel.Syndication.SyndicationLink> 개체를 만들고 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A>을 `alternate`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-142">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `alternate`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member CreateAlternateLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="6704b-143">링크된 리소스의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-143">The URI of the linked resource.</span></span></param>
        <summary><span data-ttu-id="6704b-144">지정된 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />를 사용하여 새 <see cref="T:System.Uri" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-144">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" />.</span></span></summary>
        <returns><span data-ttu-id="6704b-145">새 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-145">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6704b-146">다음 예제에서는 대체 링크를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-146">The following example shows how to create an alternate link.</span></span>  
  
 [!code-csharp[SyndicationLink#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#4)]
 [!code-vb[SyndicationLink#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateAlternateLink : Uri * string -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="6704b-147">링크된 리소스의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-147">The URI of the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="6704b-148">링크의 미디어 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-148">The media type of the link.</span></span></param>
        <summary><span data-ttu-id="6704b-149">지정된 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 및 미디어 유형을 사용하여 새 <see cref="T:System.Uri" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-149">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" /> and media type.</span></span></summary>
        <returns><span data-ttu-id="6704b-150">새 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-150">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6704b-151">다음 예제에서는 대체 링크를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-151">The following example shows how to create an alternate link.</span></span>  
  
 [!code-csharp[SyndicationLink#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#5)]
 [!code-vb[SyndicationLink#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaEnclosureLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink (Uri uri, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink(class System.Uri uri, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateMediaEnclosureLink(Uri ^ uri, System::String ^ mediaType, long length);" />
      <MemberSignature Language="F#" Value="static member CreateMediaEnclosureLink : Uri * string * int64 -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink (uri, mediaType, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="6704b-152">링크된 리소스의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-152">The URI of the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="6704b-153">링크의 미디어 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-153">The media type of the link.</span></span></param>
        <param name="length"><span data-ttu-id="6704b-154">연결된 콘텐츠의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-154">The length of the linked content.</span></span></param>
        <summary><span data-ttu-id="6704b-155">지정된 URI, 미디어 유형 및 길이를 사용하여 미디어 동봉물 링크를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-155">Creates a media enclosure link with the specified URI, media type, and length.</span></span></summary>
        <returns><span data-ttu-id="6704b-156">새 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-156">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-157">이 메서드는 새 <xref:System.ServiceModel.Syndication.SyndicationLink> 개체를 만들고 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A>을 `enclosure`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-157">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `enclosure`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-158">다음 예제에서는 미디어 동봉물 링크를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-158">The following example shows how to create a media enclosure link.</span></span>  
  
 [!code-csharp[SyndicationLink#6](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#6)]
 [!code-vb[SyndicationLink#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSelfLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6704b-159"><see cref="T:System.ServiceModel.Syndication.SyndicationLink" />로 설정된 관계 유형을 사용하여 새 <see langword="self" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-159">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the relationship type set to <see langword="self" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-160">이 메서드는 새 <xref:System.ServiceModel.Syndication.SyndicationLink> 개체를 만들고 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A>을 `self`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-160">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member CreateSelfLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="6704b-161">링크된 리소스의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-161">The URI to the linked resource.</span></span></param>
        <summary><span data-ttu-id="6704b-162">지정된 URI 및 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />로 설정된 관계 유형을 사용하여 새 <see langword="self" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-162">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI and relationship type set to <see langword="self" />.</span></span></summary>
        <returns><span data-ttu-id="6704b-163"><see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-163">A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6704b-164">다음 예제에서는 자체 링크를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-164">The following example shows how to create a self link.</span></span>  
  
 [!code-csharp[SyndicationLink#7](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#7)]
 [!code-vb[SyndicationLink#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateSelfLink : Uri * string -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="6704b-165">링크된 리소스의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-165">The URI to the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="6704b-166">링크의 미디어 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-166">The media type of the link.</span></span></param>
        <summary><span data-ttu-id="6704b-167">지정된 URI, 미디어 유형 및 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />로 설정된 관계 유형을 사용하여 새 <see langword="self" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-167">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI, media type, and relationship type set to <see langword="self" />.</span></span></summary>
        <returns><span data-ttu-id="6704b-168"><see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-168">A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6704b-169">다음 예제에서는 자체 링크를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-169">The following example shows how to create a self link.</span></span>  
  
 [!code-csharp[SyndicationLink#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#8)]
 [!code-vb[SyndicationLink#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6704b-170"><see cref="T:System.ServiceModel.Syndication.SyndicationLink" />의 요소 확장을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-170">Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></summary>
        <value><span data-ttu-id="6704b-171"><see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />의 요소 확장을 포함하는 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-171">A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-172">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-172">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6704b-173">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-173">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-174">다음 코드에서는 배포 링크에 요소 확장을 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-174">The following code shows how to add an element extension to a syndication link.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#5)]
 [!code-vb[LooselyTypedExtensions#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAbsoluteUri">
      <MemberSignature Language="C#" Value="public Uri GetAbsoluteUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetAbsoluteUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbsoluteUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetAbsoluteUri();" />
      <MemberSignature Language="F#" Value="member this.GetAbsoluteUri : unit -&gt; Uri" Usage="syndicationLink.GetAbsoluteUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6704b-175"><see cref="T:System.ServiceModel.Syndication.SyndicationLink" />의 절대 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-175">Gets the absolute URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></summary>
        <returns><span data-ttu-id="6704b-176"><see cref="T:System.Uri" />의 절대 URI를 포함하는 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-176">A <see cref="T:System.Uri" /> instance that contains the absolute URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6704b-177">다음 코드에서는 배포 링크의 절대 URI를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-177">The following code shows how to get the absolute URI of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64 with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6704b-178">연결된 리소스의 길이(바이트)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-178">Gets or sets the length of the linked resource in bytes.</span></span></summary>
        <value><span data-ttu-id="6704b-179">링크된 리소스의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-179">The length of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-180"><xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 속성은 Atom 1.0으로 serialize될 때 `length` 요소의 `<link>` 특성에 기록되고,</span><span class="sxs-lookup"><span data-stu-id="6704b-180">When serialized to Atom 1.0 the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is written as a `length` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="6704b-181">RSS 2.0으로 serialize될 때 `length` 요소의 `<a10:link>` 특성으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-181">When serialized to RSS 2.0 this value is written as the `length` attribute of the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-182">다음 코드에서는 배포 링크의 길이를 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-182">The following code shows how to set the length of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="6704b-183">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-183">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="6704b-184">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-184">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6704b-185">연결된 리소스의 미디어 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-185">Gets or sets the media type of the linked resource.</span></span></summary>
        <value><span data-ttu-id="6704b-186">링크된 리소스의 미디어 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-186">The media type of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-187">Atom 1.0으로 serialize될 때 이 값은 `type` 요소의 `<link>` 특성으로 기록되고,</span><span class="sxs-lookup"><span data-stu-id="6704b-187">When serialized to Atom 1.0 this value is written as a `type` attribute in the `<link>` element.</span></span> <span data-ttu-id="6704b-188">RSS 2.0으로 serialize될 때 이 값은 `type` 요소의 `<a10:link>` 특성으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-188">When serialized to RSS 2.0 this value is written as the `type` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-189">다음 코드에서는 배포 링크에 미디어 유형을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-189">The following code shows how to set the media type on a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="6704b-190">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-190">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="6704b-191">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-191">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6704b-192">연결된 리소스의 관계 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-192">Gets or sets the relationship type of the linked resource.</span></span></summary>
        <value><span data-ttu-id="6704b-193">링크된 리소스의 관계 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-193">The relationship type of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-194">잘 알려진 관계 유형에는 다음이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-194">Well-known relationship types include:</span></span>  
  
-   <span data-ttu-id="6704b-195">`alternate` - 링크는 포함하는 피드 또는 항목에서 설명하는 대체 버전 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-195">`alternate` - The link identifies an alternate version of the resource described by the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="6704b-196">`related` - 링크는 포함하는 피드 또는 항목과 관련된 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-196">`related` - The link identifies a resource related to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="6704b-197">`self` - 링크는 포함하는 피드 또는 항목에 해당하는 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-197">`self` - The link identifies a resource equivalent to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="6704b-198">`enclosure` - 링크는 크기가 커서 특별히 취급해야 할 수도 있는 관련 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-198">`enclosure` - The link identifies a related resource that is potentially large in size and might require special handling.</span></span> <span data-ttu-id="6704b-199">이 링크 관계는 팟캐스트 또는 오디오 파일이 피드 형태로 배포되는 경우에 자주 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-199">This link relation is often used when podcasts or audio files are distributed in a Feed.</span></span>  
  
-   <span data-ttu-id="6704b-200">`via` - 링크는 포함하는 피드 또는 항목에 제공된 정보의 소스인 리소스를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-200">`via` - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</span></span>  
  
 <span data-ttu-id="6704b-201">Atom 1.0으로 serialize될 때 이 값은 `rel` 요소의 `<link>` 특성으로 기록되고,</span><span class="sxs-lookup"><span data-stu-id="6704b-201">When serialized to Atom 1.0 this value is written out as the `rel` attribute of the `<link>` element.</span></span> <span data-ttu-id="6704b-202">RSS 2.0으로 serialize될 때 이 값은 `rel` 요소의 `<a10:link>` 특성으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-202">When serialized to RSS 2.0, this value is written out as the `rel` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-203">다음 코드에서는 배포 링크의 관계 유형을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-203">The following code shows how to set the relationship type of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="6704b-204">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-204">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="6704b-205">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-205">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6704b-206">연결된 리소스의 제목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-206">Gets or sets the title of the linked resource.</span></span></summary>
        <value><span data-ttu-id="6704b-207">링크된 리소스의 제목입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-207">The title of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-208">Atom 1.0으로 serialize될 때 이 값은 `title` 요소의 `<link>` 특성으로 기록되고,</span><span class="sxs-lookup"><span data-stu-id="6704b-208">When serialized to Atom 1.0 this value is written out as the `title` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="6704b-209">RSS 2.0으로 serialize될 때 제목은 `title` 요소의 `<a10:link>` 특성으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-209">When serialized to RSS 2.0 the title is written out as the `title` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-210">다음 코드에서는 배포 링크의 제목을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-210">The following code shows how to set the title of a syndication link.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 <span data-ttu-id="6704b-211">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-211">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="6704b-212">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-212">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationLink.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6704b-213">요소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-213">The name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="6704b-214">요소의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-214">The namespace of the element.</span></span></param>
        <param name="value"><span data-ttu-id="6704b-215">구문 분석할 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-215">The attribute to parse.</span></span></param>
        <param name="version"><span data-ttu-id="6704b-216">구문 분석 시 사용할 배포 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-216">The syndication version to use when parsing.</span></span></param>
        <summary><span data-ttu-id="6704b-217">특성 확장의 구문 분석을 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-217">Attempts to parse an attribute extension.</span></span></summary>
        <returns><span data-ttu-id="6704b-218">특성 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-218">A value that specifies whether the attribute extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-219">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-219">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6704b-220">특성으로 serialize 될 때를 `<link`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-220">They are serialized as an attribute of the `<link`> element.</span></span> <span data-ttu-id="6704b-221">이 메서드는 사용자 지정 특성 확장의 deserialization을 처리할 수 있는 확장명 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-221">This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</span></span> <span data-ttu-id="6704b-222">이렇게 하려면 <xref:System.ServiceModel.Syndication.SyndicationLink>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-222">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="6704b-223">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-223">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="6704b-224">읽는 동안 잘못된 XML이 발견된 경우</span><span class="sxs-lookup"><span data-stu-id="6704b-224">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationLink.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6704b-225">읽을 소스 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-225">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="version"><span data-ttu-id="6704b-226">구문 분석 중 사용할 배포 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-226">The syndication version to use while parsing.</span></span></param>
        <summary><span data-ttu-id="6704b-227">요소 확장의 구문 분석을 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-227">Attempts to parse an element extension.</span></span></summary>
        <returns><span data-ttu-id="6704b-228">요소 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-228">A value that specifies whether the element extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-229">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-229">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6704b-230">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-230">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="6704b-231">이 메서드는 사용자 지정 요소 확장의 deserialization을 처리할 수 있는 확장 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-231">This method is an extension point that allows you to handle the deserialization of a custom element extension.</span></span> <span data-ttu-id="6704b-232">이렇게 하려면 <xref:System.ServiceModel.Syndication.SyndicationLink>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-232">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="6704b-233">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-233">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="6704b-234">읽는 동안 잘못된 XML이 발견된 경우</span><span class="sxs-lookup"><span data-stu-id="6704b-234">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6704b-235">연결된 리소스의 URI를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-235">Gets or sets the URI for the linked resource.</span></span></summary>
        <value><span data-ttu-id="6704b-236">링크된 리소스의 URI를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-236">A <see cref="T:System.Uri" /> instance that contains the URI for the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-237">Atom 1.0으로 serialize될 때 이 값은 `href` 요소의 `<link>` 특성으로 기록되고,</span><span class="sxs-lookup"><span data-stu-id="6704b-237">When serialized to Atom 1.0 this value is written out as the `href` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="6704b-238">RSS 2.0으로 serialize될 때 이 값은 `href` 요소의 `<a10:link>` 특성으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-238">When serialized to RSS 2.0, this value is written out as the `href` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6704b-239">다음 코드에서는 배포 링크의 URI를 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-239">The following code shows how to set the URI of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="6704b-240">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-240">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="6704b-241">다음 XML에서는 <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-241">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationLink.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6704b-242">쓸 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-242">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="6704b-243">작성 중 사용할 배포 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-243">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="6704b-244">지정된 배포 버전을 사용하여 지정된 <see cref="T:System.Xml.XmlWriter" />에 특성 확장을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-244">Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-245">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-245">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6704b-246">이러한 특성은 `<link>` 요소의 특성으로서 serialize됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-246">They are serialized as an attribute of the `<link>` element.</span></span> <span data-ttu-id="6704b-247">이 메서드는 사용자 지정 특성 확장의 serialization을 처리할 수 있는 확장명 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-247">This method is an extension point that allows you to handle the serialization of custom attribute extensions.</span></span> <span data-ttu-id="6704b-248">이렇게 하려면 <xref:System.ServiceModel.Syndication.SyndicationLink>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-248">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="6704b-249">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-249">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationLink.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6704b-250">쓸 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-250">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="6704b-251">작성 중 사용할 배포 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-251">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="6704b-252">지정된 배포 버전을 사용하여 지정된 <see cref="T:System.Xml.XmlWriter" />에 요소 확장을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-252">Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6704b-253">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-253">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6704b-254">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-254">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="6704b-255">이 메서드는 사용자 지정 요소 확장의 serialization을 처리할 수 있는 확장 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-255">This method is an extension point that allows you to handle the serialization of custom element extensions.</span></span> <span data-ttu-id="6704b-256">이렇게 하려면 <xref:System.ServiceModel.Syndication.SyndicationLink>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-256">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="6704b-257">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="6704b-257">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>