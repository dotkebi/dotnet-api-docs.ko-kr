<Type Name="RequestCacheLevel" FullName="System.Net.Cache.RequestCacheLevel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66f8774c30d3c10a73e0b4d876ea49f28750a7b8" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58713454" /></Metadata><TypeSignature Language="C#" Value="public enum RequestCacheLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestCacheLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Cache.RequestCacheLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum RequestCacheLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class RequestCacheLevel" />
  <TypeSignature Language="F#" Value="type RequestCacheLevel = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="bc373-101"><see cref="T:System.Net.WebRequest" /> 클래스와 이 클래스의 파생 클래스를 사용하여 가져온 리소스의 캐싱 동작을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-101">Specifies caching behavior for resources obtained using <see cref="T:System.Net.WebRequest" /> and its derived classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc373-102">이 열거형의 멤버는 초기화 하는 데 <xref:System.Net.Cache.RequestCachePolicy> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-102">Members of this enumeration are used to initialize <xref:System.Net.Cache.RequestCachePolicy> objects.</span></span> <span data-ttu-id="bc373-103">에 대 한 현재 설정을 <xref:System.Net.Cache.RequestCachePolicy> 개체에서 사용할 수는 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-103">The current setting for a <xref:System.Net.Cache.RequestCachePolicy> object is available in the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="bc373-104">이 <xref:System.Net.Cache.HttpRequestCacheLevel.BypassCache> 값은.NET Framework와 함께 제공 되는 컴퓨터 구성 파일에 지정 된 기본 캐시 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-104">This <xref:System.Net.Cache.HttpRequestCacheLevel.BypassCache> value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</span></span> <span data-ttu-id="bc373-105">클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-105">No entries are taken from caches, added to caches, or removed from caches between the client and server.</span></span>  
  
 <span data-ttu-id="bc373-106">합니다 <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=nameWithType> 속성에 대 한 기본 캐시 정책을 가져오거나 설정 하는 <xref:System.Net.HttpWebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="bc373-106">The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=nameWithType> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest> instances.</span></span> <span data-ttu-id="bc373-107">합니다 <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> 속성에 대 한 기본 캐시 정책을 가져오거나 설정 되는 <xref:System.Net.WebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="bc373-107">The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest> instances.</span></span> <span data-ttu-id="bc373-108"><xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> 속성은 특정 요청에 대 한 캐시 정책을 가져오거나 설정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-108">The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> property is used to get or set the cache policy for a specific request.</span></span>  
  
 <span data-ttu-id="bc373-109">응답 스트림에 리소스를 검색 하 고 스트림의 끝까지 읽는 경우에 리소스의 복사본이 캐시에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-109">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="bc373-110">이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 기본 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-110">So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc373-111">다음 코드 예제에는 캐시의 경우에 리소스를 반환 하는 정책을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-111">The following code example creates policy that returns a resource only if it is in the cache.</span></span>  
  
 [!code-cpp[NclSimpleCache#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#13)]
 [!code-csharp[NclSimpleCache#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#13)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
    <altmember cref="P:System.Net.WebRequest.CachePolicy" />
    <related type="Article" href="~/docs/framework/network-programming/cache-management-for-network-applications.md"><span data-ttu-id="bc373-112">네트워크 애플리케이션에 대한 캐시 관리</span><span class="sxs-lookup"><span data-stu-id="bc373-112">Cache Management for Network Applications</span></span></related>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md"><span data-ttu-id="bc373-113">RequestCaching 요소 (네트워크 설정)</span><span class="sxs-lookup"><span data-stu-id="bc373-113">RequestCaching Element (Network Settings)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="BypassCache">
      <MemberSignature Language="C#" Value="BypassCache" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.RequestCacheLevel BypassCache = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.RequestCacheLevel.BypassCache" />
      <MemberSignature Language="VB.NET" Value="BypassCache" />
      <MemberSignature Language="C++ CLI" Value="BypassCache" />
      <MemberSignature Language="F#" Value="BypassCache = 1" Usage="System.Net.Cache.RequestCacheLevel.BypassCache" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="bc373-114">서버를 사용하여 요청을 만족시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-114">Satisfies a request by using the server.</span></span> <span data-ttu-id="bc373-115">클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-115">No entries are taken from caches, added to caches, or removed from caches between the client and server.</span></span> <span data-ttu-id="bc373-116">이 동작은 .NET Framework에서 제공하는 시스템 구성 파일에 기본적으로 지정된 캐시 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-116">This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CacheIfAvailable">
      <MemberSignature Language="C#" Value="CacheIfAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.RequestCacheLevel CacheIfAvailable = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable" />
      <MemberSignature Language="VB.NET" Value="CacheIfAvailable" />
      <MemberSignature Language="C++ CLI" Value="CacheIfAvailable" />
      <MemberSignature Language="F#" Value="CacheIfAvailable = 3" Usage="System.Net.Cache.RequestCacheLevel.CacheIfAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="bc373-117">캐시의 리소스를 사용할 수 있는 경우 캐시에서 리소스 요청을 만족시키고, 그렇지 않으면 리소스 요청을 서버로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-117">Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server.</span></span> <span data-ttu-id="bc373-118">요청된 항목을 클라이언트와 서버 사이의 캐시에서 사용할 수 있으면 중간 캐시에서 요청을 만족시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-118">If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc373-119">응답 스트림에 리소스를 검색 하 고 스트림의 끝까지 읽는 경우에 요청 된 리소스의 복사본을 캐시에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-119">A copy of a requested resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="bc373-120">따라서 후속 요청을 동일한 리소스에 대 한 캐시 된 복사본을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-120">So subsequent requests for the same resource would use a cached copy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheOnly">
      <MemberSignature Language="C#" Value="CacheOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.RequestCacheLevel CacheOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.RequestCacheLevel.CacheOnly" />
      <MemberSignature Language="VB.NET" Value="CacheOnly" />
      <MemberSignature Language="C++ CLI" Value="CacheOnly" />
      <MemberSignature Language="F#" Value="CacheOnly = 2" Usage="System.Net.Cache.RequestCacheLevel.CacheOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="bc373-121">로컬로 캐시된 리소스를 사용하여 요청을 만족시키며, 캐시에 해당 항목이 없더라도 요청을 서버로 보내지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-121">Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache.</span></span> <span data-ttu-id="bc373-122">이 캐시 정책 수준이 지정된 경우 클라이언트 캐시에 항목이 없으면 <see cref="T:System.Net.WebException" /> 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-122">When this cache policy level is specified, a <see cref="T:System.Net.WebException" /> exception is thrown if the item is not in the client cache.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.RequestCacheLevel Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.RequestCacheLevel.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Net.Cache.RequestCacheLevel.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="bc373-123">캐시된 리소스 복사본을 사용하거나 서버로 리소스 요청을 보냄으로써 리소스 요청을 만족시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-123">Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server.</span></span> <span data-ttu-id="bc373-124">현재 캐시 정책과 콘텐츠가 캐시에 보관된 기간에 따라 수행할 작업이 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-124">The action taken is determined by the current cache policy and the age of the content in the cache.</span></span> <span data-ttu-id="bc373-125">대부분의 응용 프로그램에서는 이 캐시 수준을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-125">This is the cache level that should be used by most applications.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoCacheNoStore">
      <MemberSignature Language="C#" Value="NoCacheNoStore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.RequestCacheLevel NoCacheNoStore = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore" />
      <MemberSignature Language="VB.NET" Value="NoCacheNoStore" />
      <MemberSignature Language="C++ CLI" Value="NoCacheNoStore" />
      <MemberSignature Language="F#" Value="NoCacheNoStore = 6" Usage="System.Net.Cache.RequestCacheLevel.NoCacheNoStore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="bc373-126">캐시의 리소스를 사용하여 요청을 만족시키지 않고 리소스를 캐시하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-126">Never satisfies a request by using resources from the cache and does not cache resources.</span></span> <span data-ttu-id="bc373-127">리소스가 로컬 캐시에 있으면 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-127">If the resource is present in the local cache, it is removed.</span></span> <span data-ttu-id="bc373-128">이 정책 수준은 중간 캐시에서 리소스를 제거해야 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-128">This policy level indicates to intermediate caches that they should remove the resource.</span></span> <span data-ttu-id="bc373-129">HTTP 캐싱 프로토콜에서 이 작업은 <see langword="no-cache" /> 캐시 제어 지시문을 사용하여 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-129">In the HTTP caching protocol, this is achieved using the <see langword="no-cache" /> cache control directive.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="Reload" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.RequestCacheLevel Reload = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.RequestCacheLevel.Reload" />
      <MemberSignature Language="VB.NET" Value="Reload" />
      <MemberSignature Language="C++ CLI" Value="Reload" />
      <MemberSignature Language="F#" Value="Reload = 5" Usage="System.Net.Cache.RequestCacheLevel.Reload" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="bc373-130">서버를 사용하여 요청을 만족시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-130">Satisfies a request by using the server.</span></span> <span data-ttu-id="bc373-131">응답은 캐시에 저장될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-131">The response might be saved in the cache.</span></span> <span data-ttu-id="bc373-132">HTTP 캐싱 프로토콜에서 이 작업은 <see langword="no-cache" /> 캐시 제어 지시문과 no-cache <see langword="Pragma" /> 헤더를 사용하여 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-132">In the HTTP caching protocol, this is achieved using the <see langword="no-cache" /> cache control directive and the no-cache <see langword="Pragma" /> header.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Revalidate">
      <MemberSignature Language="C#" Value="Revalidate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.RequestCacheLevel Revalidate = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.RequestCacheLevel.Revalidate" />
      <MemberSignature Language="VB.NET" Value="Revalidate" />
      <MemberSignature Language="C++ CLI" Value="Revalidate" />
      <MemberSignature Language="F#" Value="Revalidate = 4" Usage="System.Net.Cache.RequestCacheLevel.Revalidate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="bc373-133">캐시된 리소스 복사본의 타임스탬프가 서버에 있는 리소스의 타임스탬프와 동일하면 캐시된 리소스 복사본을 사용하여 요청을 만족시키고, 그렇지 않으면 서버에서 리소스를 다운로드하여 호출자에게 제공한 다음 캐시에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-133">Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc373-134">응답 스트림에 리소스를 검색 하 고 스트림의 끝까지 읽는 경우에 리소스의 복사본이 캐시에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-134">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="bc373-135">따라서 후속 요청을 동일한 리소스에 대 한 캐시 된 리소스에 대 한 타임 스탬프 서버에서 리소스의 타임 스탬프와 동일한 경우 캐시 된 복사본을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc373-135">So subsequent requests for the same resource would use a cached copy if the timestamp for the cached resource is the same as the timestamp of the resource on the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>