<Type Name="TransmitFileOptions" FullName="System.Net.Sockets.TransmitFileOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b73fc86da441bfd676e6154882f161398db566a9" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56358890" /></Metadata><TypeSignature Language="C#" Value="public enum TransmitFileOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TransmitFileOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TransmitFileOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum TransmitFileOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class TransmitFileOptions" />
  <TypeSignature Language="F#" Value="type TransmitFileOptions = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0164c-101"><see cref="T:System.Net.Sockets.TransmitFileOptions" /> 열거형은 파일 전송 요청에 사용되는 값을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-101">The <see cref="T:System.Net.Sockets.TransmitFileOptions" /> enumeration defines values used in file transfer requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0164c-102">**참고** 파일 전송 된 후 연결 끊기 및 ReuseSocket 돌아갑니다 소켓을 연결이 끊긴 다시 사용할 수 있는 플래그 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-102">**Note** The flags Disconnect and ReuseSocket return the socket to a disconnected, reusable state after the file has been transmitted.</span></span> <span data-ttu-id="0164c-103">서비스 공급자 파일 전송이 완료 되기 전에 소켓을 사용 하 여 연결 된 서비스의 품질을 즉시 삭제할 수 있으므로 여기서 서비스 품질 (QOS) 요청 하는 소켓에서 이러한 플래그는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-103">These flags should not be used on a socket where quality of service (QOS) has been requested, because the service provider might immediately delete any quality of service associated with the socket before the file transfer has completed.</span></span> <span data-ttu-id="0164c-104">소켓의 QOS 지원 위한 좋은 방법은 호출 <xref:System.Net.Sockets.Socket.Close%2A> 파일 전송이 완료 되 면 이러한 플래그에 의존 합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-104">The best approach for a QOS-enabled socket is to call <xref:System.Net.Sockets.Socket.Close%2A> when the file transfer has completed, rather than relying on these flags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0164c-105">다음 예제에서는의 사용을 보여 줍니다 <xref:System.Net.Sockets.TransmitFileOptions.ReuseSocket> 호출에서 <xref:System.Net.Sockets.Socket.SendFile%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-105">The following example demonstrates the use of <xref:System.Net.Sockets.TransmitFileOptions.ReuseSocket> in a call to <xref:System.Net.Sockets.Socket.SendFile%2A>.</span></span> <span data-ttu-id="0164c-106">"Test.txt" 파일을 로컬 컴퓨터의 루트 디렉터리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-106">The file "test.txt" is located in the root directory of the local machine.</span></span> <span data-ttu-id="0164c-107">이 예제에서는 버퍼 및 데이터의 생성 되어 파일을 사용 하 여 원격 호스트에 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-107">In this example, a prebuffer and postbuffer of data are created and sent to the remote host with the file.</span></span> <span data-ttu-id="0164c-108">시스템의 기본 스레드를 사용 하려면 UseDefaultWorkerThread 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-108">To use the system's default thread, UseDefaultWorkerThread is specified.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#4)]
 [!code-csharp[NCLSocketEnhancements#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="Disconnect" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.TransmitFileOptions Disconnect = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />
      <MemberSignature Language="VB.NET" Value="Disconnect" />
      <MemberSignature Language="C++ CLI" Value="Disconnect" />
      <MemberSignature Language="F#" Value="Disconnect = 1" Usage="System.Net.Sockets.TransmitFileOptions.Disconnect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0164c-109">전송을 위해 모든 파일 데이터를 큐에 대기시킨 후 전송 수준에서 연결 끊기를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-109">Start a transport-level disconnect after all the file data has been queued for transmission.</span></span> <span data-ttu-id="0164c-110"><see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />과 함께 사용하면 이 플래그는 파일이 전송된 후에 해당 소켓의 연결을 끊고 다시 사용할 수 있는 상태로 되돌립니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-110">When used with <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />, these flags return the socket to a disconnected, reusable state after the file has been transmitted.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReuseSocket">
      <MemberSignature Language="C#" Value="ReuseSocket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.TransmitFileOptions ReuseSocket = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />
      <MemberSignature Language="VB.NET" Value="ReuseSocket" />
      <MemberSignature Language="C++ CLI" Value="ReuseSocket" />
      <MemberSignature Language="F#" Value="ReuseSocket = 2" Usage="System.Net.Sockets.TransmitFileOptions.ReuseSocket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0164c-111">요청이 완료되면 소켓 핸들을 다시 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-111">The socket handle may be reused when the request completes.</span></span> <span data-ttu-id="0164c-112">이 플래그는 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />도 지정된 경우에만 유효합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-112">This flag is valid only if <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> is also specified.</span></span> <span data-ttu-id="0164c-113"><see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />과 함께 사용하면 이 플래그는 파일이 전송된 후에 해당 소켓의 연결을 끊고 다시 사용할 수 있는 상태로 되돌립니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-113">When used with <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />, these flags return the socket to a disconnected, reusable state after the file has been transmitted.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWorkerThread">
      <MemberSignature Language="C#" Value="UseDefaultWorkerThread" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.TransmitFileOptions UseDefaultWorkerThread = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />
      <MemberSignature Language="VB.NET" Value="UseDefaultWorkerThread" />
      <MemberSignature Language="C++ CLI" Value="UseDefaultWorkerThread" />
      <MemberSignature Language="F#" Value="UseDefaultWorkerThread = 0" Usage="System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0164c-114">기본 스레드를 사용하여 긴 파일 전송 요청을 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-114">Use the default thread to process long file transfer requests.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseKernelApc">
      <MemberSignature Language="C#" Value="UseKernelApc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.TransmitFileOptions UseKernelApc = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc" />
      <MemberSignature Language="VB.NET" Value="UseKernelApc" />
      <MemberSignature Language="C++ CLI" Value="UseKernelApc" />
      <MemberSignature Language="F#" Value="UseKernelApc = 32" Usage="System.Net.Sockets.TransmitFileOptions.UseKernelApc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0164c-115">작업자 스레드 대신 커널 APC(Asynchronous Procedure Call)를 사용하여 긴 파일 전송 요청을 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-115">Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests.</span></span> <span data-ttu-id="0164c-116">긴 요청은 파일 또는 캐시에서 두 번 이상 읽어야 하는 요청으로 정의됩니다. 따라서 이 요청은 파일 크기와 지정된 송신 패킷 길이에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-116">Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseSystemThread">
      <MemberSignature Language="C#" Value="UseSystemThread" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.TransmitFileOptions UseSystemThread = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread" />
      <MemberSignature Language="VB.NET" Value="UseSystemThread" />
      <MemberSignature Language="C++ CLI" Value="UseSystemThread" />
      <MemberSignature Language="F#" Value="UseSystemThread = 16" Usage="System.Net.Sockets.TransmitFileOptions.UseSystemThread" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0164c-117">시스템 스레드를 사용하여 긴 파일 전송 요청을 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-117">Use system threads to process long file transfer requests.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WriteBehind">
      <MemberSignature Language="C#" Value="WriteBehind" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.TransmitFileOptions WriteBehind = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.TransmitFileOptions.WriteBehind" />
      <MemberSignature Language="VB.NET" Value="WriteBehind" />
      <MemberSignature Language="C++ CLI" Value="WriteBehind" />
      <MemberSignature Language="F#" Value="WriteBehind = 4" Usage="System.Net.Sockets.TransmitFileOptions.WriteBehind" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0164c-118">파일 전송 요청을 보류하지 않고 즉시 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-118">Complete the file transfer request immediately, without pending.</span></span> <span data-ttu-id="0164c-119">이 플래그를 지정한 경우 파일이 성공적으로 전송되면 시스템에서 데이터를 받아들인 것이지만 원격 끝점에서 데이터를 승인했는지 여부는 보장할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0164c-119">If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end.</span></span> <span data-ttu-id="0164c-120">이 플래그는 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> 및 <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> 플래그와 함께 사용하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="0164c-120">Do not use this flag with the <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> and <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> flags.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>