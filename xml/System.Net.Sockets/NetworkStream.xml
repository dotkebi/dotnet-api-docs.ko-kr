<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60e22b829f0aa811f1405bd2e0edd58227c7c383" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56384798" /></Metadata><TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type NetworkStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="3b295-101">네트워크 액세스를 위한 데이터의 기본 스트림을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-101">Provides the underlying stream of data for network access.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-102">합니다 <xref:System.Net.Sockets.NetworkStream> 클래스를 통해 데이터를 보내고 받는 메서드를 제공 <xref:System.Net.Sockets.SocketType.Stream> 블로킹 모드에서 소켓입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-102">The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode.</span></span> <span data-ttu-id="3b295-103">및 차단 하는 방법에 대 한 자세한 내용은 비차단 <xref:System.Net.Sockets.Socket>를 참조 하세요 [비동기 클라이언트 소켓을 사용 하 여](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-103">For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md).</span></span> <span data-ttu-id="3b295-104">사용할 수는 <xref:System.Net.Sockets.NetworkStream> 둘 다 동기 및 비동기 데이터 전송에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-104">You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer.</span></span> <span data-ttu-id="3b295-105">동기 및 비동기 통신에 대 한 자세한 내용은 참조 하세요. [소켓](~/docs/framework/network-programming/sockets.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-105">For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).</span></span>  
  
 <span data-ttu-id="3b295-106">만들려는 <xref:System.Net.Sockets.NetworkStream>, 연결을 제공 해야 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-106">To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-107">도 지정할 수 있습니다 <xref:System.IO.FileAccess> 권한을 합니다 <xref:System.Net.Sockets.NetworkStream> 에 대해 제공 된 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-107">You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-108">기본적으로 닫는 합니다 <xref:System.Net.Sockets.NetworkStream> 제공 된 닫지 않습니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-108">By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-109">하려는 경우는 <xref:System.Net.Sockets.NetworkStream> 제공 된 닫을 수 있는 권한이 있어야 <xref:System.Net.Sockets.Socket>를 지정 해야 합니다 `true` 의 값에 대 한는 `ownsSocket` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-109">If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.</span></span>  
  
 <span data-ttu-id="3b295-110">사용 된 <xref:System.Net.Sockets.NetworkStream.Write%2A> 및 <xref:System.Net.Sockets.NetworkStream.Read%2A> 단순한 단일 동기식 차단 I/O 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-110">Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O.</span></span> <span data-ttu-id="3b295-111">별도 스레드를 사용 하 여 I/O를 처리 하려는 경우 사용을 고려 합니다 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 및 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 메서드 또는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 및 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 통신용 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-111">If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.</span></span>  
  
 <span data-ttu-id="3b295-112"><xref:System.Net.Sockets.NetworkStream> 네트워크 데이터 스트림에 대 한 임의 액세스를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-112">The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream.</span></span> <span data-ttu-id="3b295-113">값을 <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> 스트림이 검색을 지원 하는지 여부를 나타내는, 속성은 항상 `false`; 읽기는 <xref:System.Net.Sockets.NetworkStream.Position%2A> 속성을 읽는 <xref:System.Net.Sockets.NetworkStream.Length%2A> 속성 또는 호출을 <xref:System.Net.Sockets.NetworkStream.Seek%2A> 메서드는 throw 된 <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="3b295-113">The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="3b295-114">읽기 및 쓰기 작업의 인스턴스에서 동시에 수행할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream> 동기화에 대 한 필요 없이 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-114">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="3b295-115">쓰기 작업에 대 한 하나의 고유 스레드 및 읽기 작업에 대해 하나의 고유 스레드에 있으면으로 읽기 간의 상호 간섭이 됩니다 되며 쓰기 스레드 및 동기화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-115">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-116">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Net.Sockets.NetworkStream> 연결 된 <xref:System.Net.Sockets.SocketType.Stream> <xref:System.Net.Sockets.Socket> 기본 동기식 차단 I/O를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-116">The following code example demonstrates how to create a <xref:System.Net.Sockets.NetworkStream> from a connected <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> and perform basic synchronous blocking I/O.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3b295-117"><see cref="T:System.Net.Sockets.NetworkStream" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-117">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream socket" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="3b295-118"><see cref="T:System.Net.Sockets.Socket" />에서 데이터를 보내고 받는 데 사용할 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-118">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <summary><span data-ttu-id="3b295-119">지정된 <see cref="T:System.Net.Sockets.NetworkStream" />에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-119">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-120">합니다 <xref:System.Net.Sockets.NetworkStream> 지정 된 읽기/쓰기 액세스를 사용 하 여 만들어집니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-120">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-121"><xref:System.Net.Sockets.NetworkStream> 내부 소유 하지 않는 <xref:System.Net.Sockets.Socket>호출 하면, 합니다 <xref:System.Net.Sockets.NetworkStream.Close%2A> 닫히지 않습니다는 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-121">The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-122">다음 코드 예제를 만드는 예제는 <xref:System.Net.Sockets.NetworkStream> 사용 하 여를 <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="3b295-122">The following code example illustrates how to create a <xref:System.Net.Sockets.NetworkStream> with a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-123"><paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-123">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-124"><paramref name="socket" /> 매개 변수가 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-124">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="3b295-125">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-125">-or-</span></span> 
<span data-ttu-id="3b295-126"><paramref name="socket" /> 매개 변수의 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 속성이 <see cref="F:System.Net.Sockets.SocketType.Stream" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-126">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="3b295-127">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-127">-or-</span></span> 
<span data-ttu-id="3b295-128"><paramref name="socket" /> 매개 변수가 비블로킹 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-128">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="3b295-129">네트워크에서 스트림 사용</span><span class="sxs-lookup"><span data-stu-id="3b295-129">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="3b295-130"><see cref="T:System.Net.Sockets.Socket" />에서 데이터를 보내고 받는 데 사용할 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-130">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="3b295-131"><see cref="T:System.Net.Sockets.NetworkStream" />이 <see cref="T:System.Net.Sockets.Socket" />을 소유하도록 나타내려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-131">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3b295-132">지정된 <see cref="T:System.Net.Sockets.NetworkStream" /> 소유권을 사용하여 지정된 <see cref="T:System.Net.Sockets.Socket" />에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-133">합니다 <xref:System.Net.Sockets.NetworkStream> 지정 된 읽기/쓰기 액세스를 사용 하 여 만들어집니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-133">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-134">경우 값 `ownsSocket` 매개 변수는 `true`, <xref:System.Net.Sockets.NetworkStream> 내부의 소유권을 갖습니다 <xref:System.Net.Sockets.Socket>, 호출 하는 <xref:System.Net.Sockets.NetworkStream.Close%2A> 메서드는 기본도 닫힙니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-134">If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-135">다음 코드 예제는 <xref:System.Net.Sockets.NetworkStream> 의 소유권을 사용 하 여는 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-135">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with ownership of the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-136"><paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-136">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-137"><paramref name="socket" /> 매개 변수가 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-137">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="3b295-138">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-138">-or-</span></span> 
<span data-ttu-id="3b295-139"><paramref name="socket" /> 매개 변수의 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 속성 값이 <see cref="F:System.Net.Sockets.SocketType.Stream" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-139">the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="3b295-140">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-140">-or-</span></span> 
<span data-ttu-id="3b295-141"><paramref name="socket" /> 매개 변수가 비블로킹 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-141">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="3b295-142"><see cref="T:System.Net.Sockets.Socket" />에서 데이터를 보내고 받는 데 사용할 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-142">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="3b295-143">제공된 <see cref="T:System.IO.FileAccess" />을 통해 <see cref="T:System.Net.Sockets.NetworkStream" />에 부여되는 액세스 권한 유형을 지정하는 <see cref="T:System.Net.Sockets.Socket" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-143">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="3b295-144">지정된 액세스 권한을 사용하여 지정된 <see cref="T:System.Net.Sockets.NetworkStream" />에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-144">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-145">합니다 <xref:System.Net.Sockets.NetworkStream> 지정 된 지정된 된 액세스를 사용 하 여 만들어집니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-145">The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-146">이 생성자를 사용 하 여는 <xref:System.Net.Sockets.NetworkStream> 내부 소유 하지 않는 <xref:System.Net.Sockets.Socket>호출 하면,는 <xref:System.Net.Sockets.NetworkStream.Close%2A> 닫히지 않습니다 기본 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-146">With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="3b295-147">`access` 매개 변수 집합을 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 및 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 의 속성을 <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="3b295-147">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-148">지정 하는 경우 <xref:System.IO.FileAccess.Write>, 해당 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-148">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="3b295-149">지정 하는 경우 <xref:System.IO.FileAccess.Read>, 해당 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-149">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="3b295-150">지정 하는 경우 <xref:System.IO.FileAccess.ReadWrite>, 메서드 호출이 둘 다 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-150">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-151">다음 코드 예제는 <xref:System.Net.Sockets.NetworkStream> 읽고 쓸 수는 <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="3b295-151">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-152"><paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-152">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-153"><paramref name="socket" /> 매개 변수가 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-153">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="3b295-154">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-154">-or-</span></span> 
<span data-ttu-id="3b295-155"><paramref name="socket" /> 매개 변수의 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 속성이 <see cref="F:System.Net.Sockets.SocketType.Stream" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-155">the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="3b295-156">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-156">-or-</span></span> 
<span data-ttu-id="3b295-157"><paramref name="socket" /> 매개 변수가 비블로킹 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-157">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="3b295-158"><see cref="T:System.Net.Sockets.Socket" />에서 데이터를 보내고 받는 데 사용할 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-158">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="3b295-159"><see cref="T:System.IO.FileAccess" /> 값의 비트 조합으로, 제공된 <see cref="T:System.Net.Sockets.NetworkStream" />에 대해 <see cref="T:System.Net.Sockets.Socket" />에 부여된 액세스 권한 유형을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-159">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="3b295-160"><see cref="T:System.Net.Sockets.NetworkStream" />이 <see cref="T:System.Net.Sockets.Socket" />을 소유하도록 나타내려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-160">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3b295-161">지정된 액세스 권한과 지정된 <see cref="T:System.Net.Sockets.NetworkStream" /> 소유권을 사용하여 지정된 <see cref="T:System.Net.Sockets.Socket" />에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-161">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-162">합니다 <xref:System.Net.Sockets.NetworkStream> 지정 된 읽기/쓰기 액세스를 사용 하 여 만들어집니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-162">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-163">경우 값을 `ownsSocket` 매개 변수는 `true`, <xref:System.Net.Sockets.NetworkStream> 내부의 소유권을 갖습니다 <xref:System.Net.Sockets.Socket>, 호출 및를 <xref:System.Net.Sockets.NetworkStream.Close%2A> 메서드는 기본도 닫힙니다 <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="3b295-163">If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="3b295-164">`access` 매개 변수 집합을 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 및 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 의 속성을 <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="3b295-164">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-165">지정 하는 경우 <xref:System.IO.FileAccess.Write>, 해당 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-165">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="3b295-166">지정 하는 경우 <xref:System.IO.FileAccess.Read>, 해당 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-166">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="3b295-167">지정 하는 경우 <xref:System.IO.FileAccess.ReadWrite>, 메서드 호출이 둘 다 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-167">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-168">다음 코드 예제는 <xref:System.Net.Sockets.NetworkStream> 읽고 쓸 수는 <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="3b295-168">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-169">소유권을 <xref:System.Net.Sockets.Socket> 이 지정 됩니다 <xref:System.Net.Sockets.NetworkStream> 지정 하 여 `true` 에 대 한는 `ownsSocket` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-169">Ownership of the <xref:System.Net.Sockets.Socket> is given to this <xref:System.Net.Sockets.NetworkStream> by specifying `true` for the `ownsSocket` parameter.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-170"><paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-170">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-171"><paramref name="socket" /> 매개 변수가 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-171">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="3b295-172">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-172">-or-</span></span> 
<span data-ttu-id="3b295-173"><paramref name="socket" /> 매개 변수의 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 속성이 <see cref="F:System.Net.Sockets.SocketType.Stream" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-173">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="3b295-174">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-174">-or-</span></span> 
<span data-ttu-id="3b295-175"><paramref name="socket" /> 매개 변수가 비블로킹 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-175">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginRead (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3b295-176"><see cref="T:System.Byte" />에서 읽은 데이터를 저장하기 위한 메모리 내의 위치에 해당하는 <see cref="T:System.Net.Sockets.NetworkStream" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-176">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="3b295-177">데이터를 저장하기 시작하는 <paramref name="buffer" /> 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-177">The location in <paramref name="buffer" /> to begin storing the data.</span></span></param>
        <param name="size"><span data-ttu-id="3b295-178"><see cref="T:System.Net.Sockets.NetworkStream" />에서 읽을 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-178">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="3b295-179"><see cref="T:System.AsyncCallback" />가 완료될 때 실행되는 <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-179">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="3b295-180">추가 사용자 정의 데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-180">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="3b295-181"><see cref="T:System.Net.Sockets.NetworkStream" />에서 비동기 읽기를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-181">Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <returns><span data-ttu-id="3b295-182">비동기 호출을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-182">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-183"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드는 비동기적으로 들어오는 네트워크 버퍼에서 데이터를 읽기 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-183">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers.</span></span> <span data-ttu-id="3b295-184">호출 된 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 방법을 사용 하면 별도 실행 스레드 내에서 데이터를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-184">Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3b295-185">구현 하는 콜백 메서드를 만들어야 합니다 <xref:System.AsyncCallback> 위임 하 고 해당 이름을 전달 합니다 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-185">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="3b295-186">최소한, 프로그램 `state` 매개 변수를 포함 해야 합니다는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-186">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-187">콜백 메서드에서 받은 데이터를 가져오기 위해 해야 하기 때문에 작은 클래스 또는 읽기 버퍼 및 기타 유용한 정보를 저장 하는 구조를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-187">Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.</span></span> <span data-ttu-id="3b295-188">구조체 또는 클래스 인스턴스를 전달 합니다 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 를 통해 메서드를 `state` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-188">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3b295-189">콜백 메서드를 호출 해야 합니다 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-189">Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method.</span></span> <span data-ttu-id="3b295-190">애플리케이션을 호출할 때 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>를 사용할 때까지 데이터를 수신 또는 오류가 발생 하는 다음 시스템은 별도 스레드에서 지정 된 콜백 메서드 및 블록을 실행 하는 시스템에서 기다리는 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 일까 지 제공 된 <xref:System.Net.Sockets.NetworkStream> 읽기 데이터 또는 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-190">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception.</span></span> <span data-ttu-id="3b295-191">원래 스레드를 호출한 후 차단 하려는 경우는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드를 사용 하 여는 <xref:System.Threading.WaitHandle.WaitOne%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-191">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="3b295-192">호출 <xref:System.Threading.EventWaitHandle.Set%2A> 콜백 메서드에서 원래 스레드가 계속 실행 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="3b295-192">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3b295-193">콜백 메서드를 작성 하는 방법에 대 한 자세한 내용은 참조 하세요. [콜백 메서드로 대리자 마샬링](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-193">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3b295-194">합니다 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드는 지정 된 바이트 수까지 사용 가능한 많은 데이터를 읽습니다는 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-194">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-195">수신 되 면를 <xref:System.IO.IOException>를 확인 합니다 <xref:System.Exception.InnerException%2A> 속성에 의해 발생 했는지를 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-195">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3b295-196">그렇다면 사용를 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 특정 오류 코드를 참조 하는 속성을 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-196">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="3b295-197">읽기 및 쓰기 작업의 인스턴스에서 동시에 수행할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream> 동기화에 대 한 필요 없이 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-197">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="3b295-198">쓰기 작업에 대 한 하나의 고유 스레드 및 읽기 작업에 대해 하나의 고유 스레드에 있으면으로 읽기 간의 상호 간섭이 됩니다 되며 쓰기 스레드 및 동기화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-198">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-199">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 네트워크 스트림에서 비동기적으로 데이터를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-199">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> to read data asynchronously from the network stream.</span></span> <span data-ttu-id="3b295-200">`myReadCallBack` 메서드 구현 합니다 <xref:System.AsyncCallback> 대리자를 시스템에 의해 호출 됩니다 때 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-200">The `myReadCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-201"><paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-201">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3b295-202"><paramref name="offset" /> 매개 변수가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-202">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="3b295-203">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-203">-or-</span></span> 
<span data-ttu-id="3b295-204"><paramref name="offset" /> 매개 변수가 <paramref name="buffer" /> 매개 변수의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-204">The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.</span></span>  
  
<span data-ttu-id="3b295-205">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-205">-or-</span></span> 
<span data-ttu-id="3b295-206"><paramref name="size" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-206">The <paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="3b295-207">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-207">-or-</span></span> 
<span data-ttu-id="3b295-208"><paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수의 값을 뺀 값보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-208">The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-209">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-209">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="3b295-210">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-210">-or-</span></span> 
<span data-ttu-id="3b295-211">네트워크에서 읽는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-211">There was a failure while reading from the network.</span></span>  
  
<span data-ttu-id="3b295-212">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-212">-or-</span></span> 
<span data-ttu-id="3b295-213">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-213">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3b295-214"><see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-214">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginWrite (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3b295-215"><see cref="T:System.Byte" />에 쓸 데이터를 포함하는 <see cref="T:System.Net.Sockets.NetworkStream" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-215">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="3b295-216">데이터를 보내기 시작하는 <paramref name="buffer" /> 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-216">The location in <paramref name="buffer" /> to begin sending the data.</span></span></param>
        <param name="size"><span data-ttu-id="3b295-217"><see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-217">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="3b295-218"><see cref="T:System.AsyncCallback" />가 완료될 때 실행되는 <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-218">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="3b295-219">추가 사용자 정의 데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-219">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="3b295-220">스트림에 비동기 쓰기를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-220">Begins an asynchronous write to a stream.</span></span></summary>
        <returns><span data-ttu-id="3b295-221">비동기 호출을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-221">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-222"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드는 원격 호스트에 비동기 송신 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-222">The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host.</span></span> <span data-ttu-id="3b295-223">호출 된 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 방법을 사용 하면 별도 실행 스레드 내에서 데이터를 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-223">Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3b295-224">구현 하는 콜백 메서드를 만들어야 합니다 <xref:System.AsyncCallback> 위임 하 고 해당 이름을 전달 합니다 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-224">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span> <span data-ttu-id="3b295-225">최소한, 프로그램 `state` 매개 변수를 포함 해야 합니다는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-225">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-226">작은 클래스 또는 구조체를 저장할 콜백이 정보가 더 필요한 경우 만들 수 있습니다는 <xref:System.Net.Sockets.NetworkStream> 및 기타 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-226">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information.</span></span> <span data-ttu-id="3b295-227">구조체 또는 클래스 인스턴스를 전달 합니다 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 를 통해 메서드를 `state` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-227">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3b295-228">콜백 메서드를 구현 해야 합니다 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-228">Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method.</span></span> <span data-ttu-id="3b295-229">애플리케이션을 호출할 때 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, 시스템을 별도 스레드를 사용 하 여 지정 된 콜백 메서드를 실행 하 고에서 차단 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 때까지 <xref:System.Net.Sockets.NetworkStream> 요청 된 바이트의 번호를 전송 하거나 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-229">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="3b295-230">원래 스레드를 호출한 후 차단 하려는 경우는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드를 사용 하 여는 <xref:System.Threading.WaitHandle.WaitOne%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-230">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="3b295-231">호출 <xref:System.Threading.EventWaitHandle.Set%2A> 콜백 메서드에서 원래 스레드가 계속 실행 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="3b295-231">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3b295-232">콜백 메서드를 작성 하는 방법에 대 한 자세한 내용은 참조 하세요. [콜백 메서드로 대리자 마샬링](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-232">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-233">수신 되 면를 <xref:System.IO.IOException>를 확인 합니다 <xref:System.Exception.InnerException%2A> 속성에 의해 발생 했는지를 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-233">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3b295-234">그렇다면 사용를 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 특정 오류 코드를 참조 하는 속성을 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-234">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="3b295-235">읽기 및 쓰기 작업의 인스턴스에서 동시에 수행할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream> 동기화에 대 한 필요 없이 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-235">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="3b295-236">쓰기 작업에 대 한 하나의 고유 스레드 및 읽기 작업에 대해 하나의 고유 스레드에 있으면으로 읽기 간의 상호 간섭이 됩니다 되며 쓰기 스레드 및 동기화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-236">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-237">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 네트워크 스트림에 데이터를 비동기적으로 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-237">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> to write data asynchronously to a network stream.</span></span> <span data-ttu-id="3b295-238">`myWriteCallBack` 메서드 구현 합니다 <xref:System.AsyncCallback> 대리자를 시스템에 의해 호출 됩니다 때 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-238">The `myWriteCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-239"><paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-239">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3b295-240"><paramref name="offset" /> 매개 변수가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-240">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="3b295-241">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-241">-or-</span></span> 
<span data-ttu-id="3b295-242"><paramref name="offset" /> 매개 변수가 <paramref name="buffer" />의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-242">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="3b295-243">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-243">-or-</span></span> 
<span data-ttu-id="3b295-244"><paramref name="size" /> 매개 변수가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-244">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="3b295-245">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-245">-or-</span></span> 
<span data-ttu-id="3b295-246"><paramref name="size" /> 매개 변수가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수의 값을 뺀 값보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-246">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-247">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-247">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="3b295-248">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-248">-or-</span></span> 
<span data-ttu-id="3b295-249">네트워크에 쓰는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-249">There was a failure while writing to the network.</span></span>  
  
<span data-ttu-id="3b295-250">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-250">-or-</span></span> 
<span data-ttu-id="3b295-251">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-251">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3b295-252"><see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-252">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Sockets.NetworkStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-253"><see cref="T:System.Net.Sockets.NetworkStream" />이 읽기를 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-253">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</span></span></summary>
        <value><span data-ttu-id="3b295-254">스트림에서 데이터를 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-254"><see langword="true" /> if data can be read from the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3b295-255">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-255">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-256">하는 경우 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 됩니다 `true`를 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-256">If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="3b295-257">적절 한 제공 <xref:System.IO.FileAccess> 열거형 값 읽기 및 쓰기 가능성을 설정 하려면 생성자에는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-257">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-258">합니다 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 속성을 설정 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-258">The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-259">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 되었는지 확인 하는 <xref:System.Net.Sockets.NetworkStream> 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-259">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanRead%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span> <span data-ttu-id="3b295-260">그런 다음에 읽기 작업을 수행 합니다 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-260">It then performs a read operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-261">스트림이 검색을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-261">Gets a value that indicates whether the stream supports seeking.</span></span> <span data-ttu-id="3b295-262">이 속성은 현재 지원되지 않습니다. 이 속성은 항상 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-262">This property is not currently supported.This property always returns <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="3b295-263"><see cref="T:System.Net.Sockets.NetworkStream" />이 스트림에서 특정 위치를 검색할 수 없음을 나타내기 위해 항상<see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-263"><see langword="false" /> in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-264"><see cref="T:System.Net.Sockets.NetworkStream" />에 제한 시간 속성을 사용할 수 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-264">Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <value><span data-ttu-id="3b295-265">모든 경우에 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-265"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-266">이 속성에서 상속 되었으므로 있는지 <xref:System.IO.Stream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-266">This property is present because it is inherited from <xref:System.IO.Stream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-267"><see cref="T:System.Net.Sockets.NetworkStream" />이 쓰기를 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-267">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</span></span></summary>
        <value><span data-ttu-id="3b295-268"><see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-268"><see langword="true" /> if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3b295-269">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-269">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-270">하는 경우 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 됩니다 `true`를 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-270">If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="3b295-271">적절 한 제공 <xref:System.IO.FileAccess> 열거형 값 읽기 및 쓰기 가능성을 설정 하려면 생성자에는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-271">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-272">합니다 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 속성을 설정 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-272">The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-273">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 되었는지 확인 하는 <xref:System.Net.Sockets.NetworkStream> 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-273">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="3b295-274">그런 다음에 쓰기 작업을 수행 합니다 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-274">It then performs a write operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="networkStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3b295-275"><see cref="T:System.Net.Sockets.NetworkStream" />를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-275">Closes the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="3b295-276">합니다 `Close` 연관 된 비관리 및 관리 되는 리소스를 해제 하는 메서드는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-276">The `Close` method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-277">경우는 <xref:System.Net.Sockets.NetworkStream> 내부 소유 <xref:System.Net.Sockets.Socket>를 함께 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-277">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>

<span data-ttu-id="3b295-278">경우는 <xref:System.Net.Sockets.NetworkStream> 연관 된를 <xref:System.Net.Sockets.TcpClient>, `Close` 메서드는 TCP 연결을 닫을 하지만 연결 된 삭제 하지 않으려면 <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-278">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the `Close` method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>

## Examples  
<span data-ttu-id="3b295-279">다음 코드 예제에서는 닫습니다는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-279">The following code example closes the <xref:System.Net.Sockets.NetworkStream>.</span></span>

```vb
' Example for closing the NetworkStream.
' Close the NetworkStream
myNetworkStream.Close()
```

```csharp
// Example for closing the NetworkStream.

// Close the NetworkStream
myNetworkStream.Close();
```

```cpp
// Example for closing the NetworkStream.
// Close the NetworkStream
myNetworkStream->Close();
```

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="override this.Close : int -&gt; unit" Usage="networkStream.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="3b295-280">닫기 전까지 남은 데이터를 보내기 위한 대기 시간(밀리초)을 지정하는 부호 있는 32비트 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-280">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</span></span></param>
        <summary><span data-ttu-id="3b295-281">데이터를 보낼 수 있도록 지정된 시간 동안 기다린 후에 <see cref="T:System.Net.Sockets.NetworkStream" />을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-281">Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-282">합니다 <xref:System.Net.Sockets.NetworkStream.Close%2A> 연관 된 비관리 및 관리 되는 리소스를 해제 하는 메서드는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-282">The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-283">경우는 <xref:System.Net.Sockets.NetworkStream> 내부 소유 <xref:System.Net.Sockets.Socket>를 함께 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-283">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>  
  
 <span data-ttu-id="3b295-284">경우는 <xref:System.Net.Sockets.NetworkStream> 연관 된를 <xref:System.Net.Sockets.TcpClient>, <xref:System.Net.Sockets.NetworkStream.Close%2A> 메서드는 TCP 연결을 닫을 하지만 연결 된 삭제 하지 않으려면 <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-284">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3b295-285"><paramref name="timeout" /> 매개 변수가 -1보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-285">The <paramref name="timeout" /> parameter is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataAvailable : bool" Usage="System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-286"><see cref="T:System.Net.Sockets.NetworkStream" />의 데이터를 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-286">Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</span></span></summary>
        <value><span data-ttu-id="3b295-287">읽을 스트림에서 데이터를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-287"><see langword="true" /> if data is available on the stream to be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-288">사용 된 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> 데이터를 읽을 수 인지 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-288">Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read.</span></span> <span data-ttu-id="3b295-289">하는 경우 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> 됩니다 `true`에 대 한 호출 <xref:System.Net.Sockets.NetworkStream.Read%2A> 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-289">If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately.</span></span> <span data-ttu-id="3b295-290">원격 호스트 종료 되거나 연결이 닫히면 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> throw 할 수는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-290">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-291">다음 코드 예제에서 읽기를 <xref:System.Net.Sockets.NetworkStream> 으로 데이터를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-291">The following code example reads from the <xref:System.Net.Sockets.NetworkStream> as long as data is available.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3b295-292"><see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-292">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-293">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-293">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="3b295-294"><see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져온 다음, <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows 소켓 버전 2 API 오류 코드</see> 설명서에서 오류에 대한 자세한 설명을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="3b295-294">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code and refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="3b295-295">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-295"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="3b295-296"><see cref="T:System.Net.Sockets.NetworkStream" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-296">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-297">이 메서드는 공용 `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-297">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="3b295-298">`Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-298">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="3b295-299"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-299"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="3b295-300">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Net.Sockets.NetworkStream>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-300">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references.</span></span> <span data-ttu-id="3b295-301">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-301">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3b295-302">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-302">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="3b295-303"><see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span><span class="sxs-lookup"><span data-stu-id="3b295-303">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="3b295-304">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-304">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="3b295-305">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-305">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="networkStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="3b295-306">비동기 호출을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-306">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call.</span></span></param>
        <summary><span data-ttu-id="3b295-307">비동기 읽기의 끝을 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-307">Handles the end of an asynchronous read.</span></span></summary>
        <returns><span data-ttu-id="3b295-308"><see cref="T:System.Net.Sockets.NetworkStream" />에서 읽은 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-308">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-309">합니다 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 에서 시작한 비동기 읽기 작업을 완료 하는 메서드를 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-309">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
 <span data-ttu-id="3b295-310">호출 하기 전에 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>를 구현 하는 콜백 메서드를 만들어야 합니다 <xref:System.AsyncCallback> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-310">Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3b295-311">이 콜백 메서드는 별도의 스레드에서 실행 하 고 후 시스템에 의해 호출 됩니다 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-311">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span> <span data-ttu-id="3b295-312">콜백 메서드를 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드에 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-312">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3b295-313">콜백 메서드 내에서 호출를 <xref:System.IAsyncResult.AsyncState%2A> 의 속성을 <xref:System.IAsyncResult> 에 전달 된 상태 개체를 가져오는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-313">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="3b295-314">수신 추출 <xref:System.Net.Sockets.NetworkStream> 에서이 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-314">Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object.</span></span> <span data-ttu-id="3b295-315">구한 후 합니다 <xref:System.Net.Sockets.NetworkStream>를 호출 합니다 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 읽기 작업을 완료 하 고 읽은 바이트 수를 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-315">After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="3b295-316"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드 데이터를 사용할 때까지 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-316">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available.</span></span> <span data-ttu-id="3b295-317"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드는에 지정 된 바이트 수를 최대 수 만큼의 데이터를 읽습니다 합니다 `size` 의 매개 변수는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-317">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="3b295-318">원격 호스트를 종료 하는 경우는 <xref:System.Net.Sockets.Socket> 연결 및 사용 가능한 모든 데이터 수신 되는 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드는 즉시 완료 되 고 0 바이트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-318">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.</span></span>  
  
 <span data-ttu-id="3b295-319">받은 데이터를 가져오려면 호출 합니다 <xref:System.IAsyncResult.AsyncState%2A> 의 속성을 <xref:System.IAsyncResult>, 결과 상태 개체에 포함 된 버퍼를 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-319">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-320">수신 되 면를 <xref:System.IO.IOException>를 확인 합니다 <xref:System.Exception.InnerException%2A> 속성에 의해 발생 했는지를 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-320">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3b295-321">그렇다면 사용를 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 특정 오류 코드를 참조 하는 속성을 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-321">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-322">다음 코드 예에서 `myReadCallback` 에 제공 됩니다 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 콜백 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-322">In the following code example, `myReadCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> as the callback method.</span></span> <span data-ttu-id="3b295-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 구현 됩니다 `myReadCallback` 비동기 완료를 호출 하 여 시작 읽기 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> is implemented in `myReadCallback` to complete the asynchronous read call started by <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3b295-324"><paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-324">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-325">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-325">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="3b295-326">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-326">-or-</span></span> 
<span data-ttu-id="3b295-327">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-327">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3b295-328"><see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-328">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="networkStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="3b295-329">비동기 호출을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-329">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="3b295-330">비동기 쓰기의 끝을 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-330">Handles the end of an asynchronous write.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 시작 하는 비동기 송신 작업을 완료 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="3b295-332">호출 하기 전에 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>를 구현 하는 콜백 메서드를 만들어야 합니다 <xref:System.AsyncCallback> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-332">Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3b295-333">이 콜백 메서드는 별도의 스레드에서 실행 하 고 후 시스템에 의해 호출 됩니다 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-333">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span> <span data-ttu-id="3b295-334">콜백 메서드를 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드에 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-334">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3b295-335">콜백 메서드 내에서 호출를 <xref:System.IAsyncResult.AsyncState%2A> 의 속성을 `IAsyncResult` 가져오려면 매개 변수는 <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="3b295-335">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-336">구한 후 합니다 <xref:System.Net.Sockets.NetworkStream>를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 성공적으로 송신 작업을 완료 하 고 전송 된 바이트 수를 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-336">After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="3b295-337"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 메서드는 바이트 수가 요청 된 전송 될 때까지 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-337">The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-338">수신 되 면를 <xref:System.IO.IOException>를 확인 합니다 <xref:System.Exception.InnerException%2A> 속성에 의해 발생 했는지를 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-338">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3b295-339">그렇다면 사용를 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 특정 오류 코드를 참조 하는 속성을 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-339">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-340">다음 코드 예에서 `myWriteCallback` 에 제공 됩니다 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 콜백 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-340">In the following code example, `myWriteCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> as the callback method.</span></span> <span data-ttu-id="3b295-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 구현 됩니다 `myWriteCallback` 하 여 시작한 비동기 쓰기 호출을 완료 하기 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> is implemented in `myWriteCallback` to complete the asynchronous write call started by <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-342"><paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-342">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-343">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-343">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="3b295-344">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-344">-or-</span></span> 
<span data-ttu-id="3b295-345">네트워크에 쓰는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-345">An error occurred while writing to the network.</span></span>  
  
<span data-ttu-id="3b295-346">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-346">-or-</span></span> 
<span data-ttu-id="3b295-347">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-347">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3b295-348"><see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-348">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="networkStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3b295-349"><see cref="T:System.Net.Sockets.NetworkStream" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-349">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-350">이 메서드는 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-350">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3b295-351">애플리케이션 코드는이 메서드를 호출 하지 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출 하 여 가비지 수집기에 의해 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지를 수집 하는 동안 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-351">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3b295-352">Finalize 메서드를 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Finalize 메서드 및 소멸자](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)) .</span><span class="sxs-lookup"><span data-stu-id="3b295-352">For more information about using the Finalize method, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="networkStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3b295-353">스트림에서 데이터를 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-353">Flushes data from the stream.</span></span> <span data-ttu-id="3b295-354">이 메서드는 나중에 사용하도록 예약됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-354">This method is reserved for future use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-355"><xref:System.Net.Sockets.NetworkStream.Flush%2A> 메서드 구현을 <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> 메서드 하지만 때문에 <xref:System.Net.Sockets.NetworkStream> 는 네트워크 스트림에 영향을 주지는 버퍼링 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-355">The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no effect on network streams.</span></span> <span data-ttu-id="3b295-356">호출 된 <xref:System.Net.Sockets.NetworkStream.Flush%2A> 메서드는 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-356">Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="3b295-357">이 작업을 취소해야 한다는 알림을 전파하는 데 사용되는 취소 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-357">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="3b295-358">스트림에서 데이터를 비동기 작업으로 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-358">Flushes data from the stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="3b295-359">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-359">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-360">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-360">This operation will not block.</span></span> <span data-ttu-id="3b295-361">반환 된 <xref:System.Threading.Tasks.Task> 개체에서 데이터에 대 한 스트림에서 플러시된 완성 된 <xref:System.Net.Sockets.NetworkStream> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="3b295-361">The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Sockets.NetworkStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-362">스트림에서 사용할 수 있는 데이터의 길이를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-362">Gets the length of the data available on the stream.</span></span> <span data-ttu-id="3b295-363">이 속성은 현재 지원되지 않으며 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-363">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="3b295-364">스트림에서 사용 가능한 데이터의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-364">The length of the data available on the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3b295-365">이 속성을 사용한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-365">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Sockets.NetworkStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-366">스트림 내의 현재 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-366">Gets or sets the current position in the stream.</span></span> <span data-ttu-id="3b295-367">이 속성은 현재 지원되지 않으며 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-367">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="3b295-368">스트림 내의 현재 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-368">The current position in the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3b295-369">이 속성을 사용한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-369">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="networkStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="networkStream.Read (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3b295-370"><see cref="T:System.Byte" />에서 읽은 데이터를 저장하기 위한 메모리 내의 위치에 해당하는 <see cref="T:System.Net.Sockets.NetworkStream" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-370">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="3b295-371">데이터를 저장하기 시작하는 <paramref name="buffer" /> 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-371">The location in <paramref name="buffer" /> to begin storing the data to.</span></span></param>
        <param name="size"><span data-ttu-id="3b295-372"><see cref="T:System.Net.Sockets.NetworkStream" />에서 읽을 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-372">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="3b295-373"><see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-373">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <returns><span data-ttu-id="3b295-374"><see cref="T:System.Net.Sockets.NetworkStream" />에서 읽은 바이트 수이며 소켓이 닫힌 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-374">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />, or 0 if the socket is closed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-375">이 메서드는 데이터를 읽습니다는 `buffer` 매개 변수 및 성공적으로 읽은 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-375">This method reads data into the `buffer` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3b295-376">소켓이 닫힌 경우를 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드에서 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-376">If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0.</span></span> <span data-ttu-id="3b295-377">합니다 <xref:System.Net.Sockets.NetworkStream.Read%2A> 작업으로 지정 된 바이트 수까지 사용할 수 있는 만큼의 데이터를 읽고는 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-377">The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="3b295-378">원격 호스트 연결을 종료 하 고 사용 가능한 모든 데이터 수신 되는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드 즉시 완료 되 고 0 바이트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-378">If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-379">하는지 확인 합니다 <xref:System.Net.Sockets.NetworkStream> 를 호출 하 여 읽을 수는 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-379">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span> <span data-ttu-id="3b295-380">읽기를 시도 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 읽을 수 없는 받게 됩니다는 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-380">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-381">수신 되 면를 <xref:System.IO.IOException>를 확인 합니다 <xref:System.Exception.InnerException%2A> 속성에 의해 발생 했는지를 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-381">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3b295-382">그렇다면 사용를 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 특정 오류 코드를 참조 하는 속성을 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-382">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-383">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> 데이터를 확인 하는 경우 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-383">The following code example uses <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> to determine if data is available to be read.</span></span> <span data-ttu-id="3b295-384">읽을 데이터를 사용할 수 있는 경우는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-384">If data is available, it reads from the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-385"><paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-385">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3b295-386"><paramref name="offset" /> 매개 변수가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-386">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="3b295-387">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-387">-or-</span></span> 
<span data-ttu-id="3b295-388"><paramref name="offset" /> 매개 변수가 <paramref name="buffer" />의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-388">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="3b295-389">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-389">-or-</span></span> 
<span data-ttu-id="3b295-390"><paramref name="size" /> 매개 변수가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-390">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="3b295-391">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-391">-or-</span></span> 
<span data-ttu-id="3b295-392"><paramref name="size" /> 매개 변수가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수의 값을 뺀 값보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-392">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span>  
  
<span data-ttu-id="3b295-393">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-393">-or-</span></span> 
<span data-ttu-id="3b295-394">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-394">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-395">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-395">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3b295-396"><see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-396">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span>  
  
<span data-ttu-id="3b295-397">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-397">-or-</span></span> 
<span data-ttu-id="3b295-398">네트워크에서 읽는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-398">There is a failure reading from the network.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="3b295-399">네트워크에서 스트림 사용</span><span class="sxs-lookup"><span data-stu-id="3b295-399">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Readable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Readable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-400"><see cref="T:System.Net.Sockets.NetworkStream" />을 읽을 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-400">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</span></span></summary>
        <value><span data-ttu-id="3b295-401"><see cref="T:System.Net.Sockets.NetworkStream" />을 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-401"><see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3b295-402">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-402">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-403">파생 되어야 합니다는 <xref:System.Net.Sockets.NetworkStream> 사용 하는 클래스는 <xref:System.Net.Sockets.NetworkStream.Readable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-403">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property.</span></span> <span data-ttu-id="3b295-404">하는 경우 <xref:System.Net.Sockets.NetworkStream.Readable%2A> 됩니다 `true`를 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-404">If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="3b295-405">확인할 수도 있습니다 있는지 여부를 <xref:System.Net.Sockets.NetworkStream> 가 읽을 수 있는 공개적으로 액세스할 수 있는 검사 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-405">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span>  
  
 <span data-ttu-id="3b295-406">합니다 <xref:System.Net.Sockets.NetworkStream.Readable%2A> 속성을 설정 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-406">The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-407">다음 코드 예제에서를 `CanCommunicate` 속성 검사를 <xref:System.Net.Sockets.NetworkStream.Readable%2A> 여부를 확인 하는 속성을 <xref:System.Net.Sockets.NetworkStream> 읽을 수.</span><span class="sxs-lookup"><span data-stu-id="3b295-407">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="networkStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-408">데이터를 기다리는 중 읽기 작업이 차단되는 시간을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-408">Gets or sets the amount of time that a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="3b295-409">읽기 작업의 제한 시간(밀리초)을 지정하는 <see cref="T:System.Int32" />입니다. 이 시간이 경과하면 읽기 작업이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-409">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.</span></span> <span data-ttu-id="3b295-410">기본값인 <see cref="F:System.Threading.Timeout.Infinite" />는 읽기 작업에 제한 시간이 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-410">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-411">읽기 작업에서 throw 읽기 작업이이 속성에서 지정한 시간 내에 완료 되지 않으면는 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-411">If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-412">이 속성은 적용만 동기 읽기를 호출 하 여 수행 된 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-412">This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="3b295-413">이 속성은 호출 하 여 수행 하는 비동기 읽기 영향을 주지 않습니다는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-413">This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-414">다음 코드 예제에서는 10 시간 (밀리초)을 네트워크 스트림에 대 한 읽기 제한 시간을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-414">The following code example sets the read time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3b295-415">지정한 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-415">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="networkStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="3b295-416">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-416">This parameter is not used.</span></span></param>
        <param name="origin"><span data-ttu-id="3b295-417">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-417">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="3b295-418">스트림의 현재 위치를 주어진 값으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-418">Sets the current position of the stream to the given value.</span></span> <span data-ttu-id="3b295-419">이 메서드는 현재 지원되지 않으며 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-419">This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="3b295-420">스트림 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-420">The position in the stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3b295-421">이 속성을 사용한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-421">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="networkStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3b295-422">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-422">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="3b295-423">스트림의 길이를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-423">Sets the length of the stream.</span></span> <span data-ttu-id="3b295-424">이 메서드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-424">This method always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3b295-425">이 속성을 사용한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-425">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Socket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.NetworkStream.Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-426">내부 <see cref="T:System.Net.Sockets.Socket" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-426">Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="3b295-427">내부 네트워크 연결을 나타내는 <see cref="T:System.Net.Sockets.Socket" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-427">A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-428">파생 된 클래스 <xref:System.Net.Sockets.NetworkStream> 이 속성을 사용 하 여 기본 가져올 수 있습니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-428">Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3b295-429">기본 사용 <xref:System.Net.Sockets.Socket> 에서 반환 되는 <xref:System.Net.Sockets.NetworkStream.Socket%2A> 는 그 외에도 필요 하면 액세스 <xref:System.Net.Sockets.NetworkStream> 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-429">Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-430">이 속성은이 클래스 또는 파생된 클래스를 통해서만 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-430">This property is accessible only through this class or a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-431">다음 코드 예제에서는 기본 검색 <xref:System.Net.Sockets.Socket> 활성 연결을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-431">The following code example retrieves the underlying <xref:System.Net.Sockets.Socket> to verify an active connection.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3b295-432"><see cref="T:System.Net.Sockets.NetworkStream" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-432">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="3b295-433">`Dispose` 사용을 마치면 <xref:System.Net.Sockets.NetworkStream>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-433">Call `Dispose` when you are finished using the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-434">`Dispose` 메서드를 사용하면 <xref:System.Net.Sockets.NetworkStream>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-434">The `Dispose` method leaves the <xref:System.Net.Sockets.NetworkStream> in an unusable state.</span></span> <span data-ttu-id="3b295-435">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Net.Sockets.NetworkStream> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Net.Sockets.NetworkStream> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-435">After calling `Dispose`, you must release all references to the <xref:System.Net.Sockets.NetworkStream> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.NetworkStream> was occupying.</span></span> <span data-ttu-id="3b295-436">Dispose 메서드를 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-436">For more information about using the Dispose method, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE]
> <span data-ttu-id="3b295-437">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Net.Sockets.NetworkStream>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="3b295-437">Always call `Dispose` before you release your last reference to the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="3b295-438">가비지 수집기가 호출 될 때까지 사용 중인 리소스가 해제 되지는 고, 그렇지는 <xref:System.Net.Sockets.NetworkStream> 개체의 Finalize 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-438">Otherwise, the resources it is using are not freed until the garbage collector calls the <xref:System.Net.Sockets.NetworkStream> object's Finalize method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="networkStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="networkStream.Write (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3b295-439"><see cref="T:System.Byte" />에 쓸 데이터를 포함하는 <see cref="T:System.Net.Sockets.NetworkStream" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-439">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="3b295-440">데이터를 쓰기 시작할 <paramref name="buffer" /> 내의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-440">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="size"><span data-ttu-id="3b295-441"><see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-441">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="3b295-442"><see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-442">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-443"><xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드는 지정 된 시작 `offset` 보내고 `size` 내용의 바이트 `buffer` 네트워크에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-443">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span> <span data-ttu-id="3b295-444">합니다 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드는 바이트 수가 요청 된 전송 될 때까지 또는 차단 <xref:System.Net.Sockets.SocketException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-444">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="3b295-445">수신 되 면를 <xref:System.Net.Sockets.SocketException>를 사용 하 여는 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 속성을 참조 하 고 특정 오류 코드를 가져옵니다는 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 설명서에 대 한 자세한 설명은 오류.</span><span class="sxs-lookup"><span data-stu-id="3b295-445">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-446">하는지 확인 합니다 <xref:System.Net.Sockets.NetworkStream> 를 액세스 하 여 쓸 수는 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-446">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span> <span data-ttu-id="3b295-447">에 쓰려고 시도 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 쓸 수 없는 받게 됩니다는 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-447">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>.</span></span> <span data-ttu-id="3b295-448">수신 되 면를 <xref:System.IO.IOException>를 확인 합니다 <xref:System.Exception.InnerException%2A> 속성에 의해 발생 했는지를 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-448">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-449">다음 코드 예제에서는 확인 여부를 <xref:System.Net.Sockets.NetworkStream> 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-449">The following code example checks to see whether the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="3b295-450">인 경우 다음 <xref:System.Net.Sockets.NetworkStream.Write%2A> 작은 메시지를 작성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-450">If it is, then <xref:System.Net.Sockets.NetworkStream.Write%2A> is used to write a small message.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b295-451"><paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-451">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3b295-452"><paramref name="offset" /> 매개 변수가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-452">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="3b295-453">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-453">-or-</span></span> 
<span data-ttu-id="3b295-454"><paramref name="offset" /> 매개 변수가 <paramref name="buffer" />의 길이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-454">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="3b295-455">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-455">-or-</span></span> 
<span data-ttu-id="3b295-456"><paramref name="size" /> 매개 변수가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-456">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="3b295-457">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-457">-or-</span></span> 
<span data-ttu-id="3b295-458"><paramref name="size" /> 매개 변수가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수의 값을 뺀 값보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-458">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3b295-459">네트워크에 쓰는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-459">There was a failure while writing to the network.</span></span>  
  
<span data-ttu-id="3b295-460">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-460">-or-</span></span> 
<span data-ttu-id="3b295-461">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-461">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3b295-462"><see cref="T:System.Net.Sockets.NetworkStream" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-462">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span>  
  
<span data-ttu-id="3b295-463">또는</span><span class="sxs-lookup"><span data-stu-id="3b295-463">-or-</span></span> 
<span data-ttu-id="3b295-464">네트워크에서 읽는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-464">There was a failure reading from the network.</span></span></exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Writeable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Writeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-465"><see cref="T:System.Net.Sockets.NetworkStream" />이 쓰기 가능한지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-465">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</span></span></summary>
        <value><span data-ttu-id="3b295-466">스트림에 데이터를 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-466"><see langword="true" /> if data can be written to the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3b295-467">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-467">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-468">파생 되어야 합니다는 <xref:System.Net.Sockets.NetworkStream> 사용 하는 클래스는 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-468">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property.</span></span> <span data-ttu-id="3b295-469">하는 경우 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> 됩니다 `true`를 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-469">If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="3b295-470">확인할 수도 있습니다 있는지 여부를 <xref:System.Net.Sockets.NetworkStream> 이 공개적으로 액세스할 수를 확인 하 여 쓰기 가능한 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-470">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span>  
  
 <span data-ttu-id="3b295-471">합니다 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> 속성을 설정 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-471">The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-472">다음 코드 예제에서를 `CanCommunicate` 속성 검사를 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> 여부를 확인 하는 속성을 <xref:System.Net.Sockets.NetworkStream> 쓸 수.</span><span class="sxs-lookup"><span data-stu-id="3b295-472">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="networkStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.WriteAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="networkStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b295-473">데이터를 기다리는 중 쓰기 작업이 차단되는 시간을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-473">Gets or sets the amount of time that a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="3b295-474">쓰기 작업의 제한 시간(밀리초)을 지정하는 <see cref="T:System.Int32" />입니다. 이 시간이 경과하면 쓰기 작업이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-474">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.</span></span> <span data-ttu-id="3b295-475">기본값인 <see cref="F:System.Threading.Timeout.Infinite" />는 쓰기 작업에 제한 시간이 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-475">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b295-476">이 속성에서 지정한 시간 내에 쓰기 작업이 완료 되지 않으면, 쓰기 작업이 throw 한 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-476">If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b295-477">이 속성에는 호출 하 여 수행 되는 유일한 동기 쓰기 작업에 적용 된 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-477">This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="3b295-478">이 속성은 호출 하 여 수행 하는 비동기 쓰기 영향을 주지 않습니다는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b295-478">This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b295-479">다음 코드 예제에서는 10 시간 (밀리초)을 네트워크 스트림에 쓰기 제한 시간을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3b295-479">The following code example sets the write time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3b295-480">지정한 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="3b295-480">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>