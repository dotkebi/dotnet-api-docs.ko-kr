<Type Name="CanonicalTrackedInputFiles" FullName="Microsoft.Build.Utilities.CanonicalTrackedInputFiles">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a79b7e209745f62b17a954cf5423c2b92d1596d" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58457903" /></Metadata><TypeSignature Language="C#" Value="public class CanonicalTrackedInputFiles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CanonicalTrackedInputFiles extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.CanonicalTrackedInputFiles" />
  <TypeSignature Language="VB.NET" Value="Public Class CanonicalTrackedInputFiles" />
  <TypeSignature Language="C++ CLI" Value="public ref class CanonicalTrackedInputFiles" />
  <TypeSignature Language="F#" Value="type CanonicalTrackedInputFiles = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4637e-101">이 클래스는 정규 형식의 .read. 추적 로그</span><span class="sxs-lookup"><span data-stu-id="4637e-101">This class is the filetracking log interpreter for .read.</span></span> <span data-ttu-id="4637e-102">또는 정규 형식으로 만들기 위해 루트로 지정된(^) 추적 로그에 대한 파일 추적 로그 해석기입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-102">tracking logs in canonical form or those that have been rooted (^) to make them canonical</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4637e-103">여러 입력 소스 파일의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-103">Constructor for multiple input source files</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Utilities.CanonicalTrackedOutputFiles * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (tlogFiles, sourceFiles, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tlogFiles"><span data-ttu-id="4637e-104">해석할 .read.</span><span class="sxs-lookup"><span data-stu-id="4637e-104">The .read.</span></span> <span data-ttu-id="4637e-105">tlog 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-105">tlog files to interpret</span></span></param>
        <param name="sourceFiles"><span data-ttu-id="4637e-106">종속성을 해석할 기본 소스 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-106">The primary source files to interpret dependencies for</span></span></param>
        <param name="outputs"><span data-ttu-id="4637e-107">이 소스 집합을 컴파일하여 생성된 출력 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-107">The output files produced by compiling this set of sources</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="4637e-108">경고: 최소 재빌드 최적화를 수행하려면 100% 정확히 계산된 출력을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-108">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="4637e-109">복합 루팅 표식을 유지하려면(다대일의 경우) true이고, 복합 루팅 표식을 유지하지 않으려면(일대일 또는 일대다의 경우) false입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-109">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="4637e-110">여러 입력 소스 파일의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-110">Constructor for multiple input source files</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Utilities.CanonicalTrackedOutputFiles * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (tlogFiles, sourceFiles, excludedInputPaths, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tlogFiles"><span data-ttu-id="4637e-111">해석할 .read.</span><span class="sxs-lookup"><span data-stu-id="4637e-111">The .read.</span></span> <span data-ttu-id="4637e-112">tlog 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-112">tlog files to interpret</span></span></param>
        <param name="sourceFiles"><span data-ttu-id="4637e-113">종속성을 해석할 기본 소스 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-113">The primary source files to interpret dependencies for</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="4637e-114">최신 상태 검사 중에 무시될 파일이 포함된 경로의 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-114">The set of paths that contain files that are to be ignored during up to date check</span></span></param>
        <param name="outputs"><span data-ttu-id="4637e-115">이 소스 집합을 컴파일하여 생성된 출력 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-115">The output files produced by compiling this set of sources</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="4637e-116">경고: 최소 재빌드 최적화를 수행하려면 100% 정확히 계산된 출력을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-116">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="4637e-117">복합 루팅 표식을 유지하려면(다대일의 경우) true이고, 복합 루팅 표식을 유지하지 않으려면(일대일 또는 일대다의 경우) false입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-117">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="4637e-118">여러 입력 소스 파일의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-118">Constructor for multiple input source files</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem sourceFile, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem sourceFile, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFile As ITaskItem, excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, Microsoft::Build::Framework::ITaskItem ^ sourceFile, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITask * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Utilities.CanonicalTrackedOutputFiles * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (ownerTask, tlogFiles, sourceFile, excludedInputPaths, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFile" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask"><span data-ttu-id="4637e-119">파일 추적기를 사용 중인 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-119">The task that is using file tracker</span></span></param>
        <param name="tlogFiles"><span data-ttu-id="4637e-120">해석할 .read.</span><span class="sxs-lookup"><span data-stu-id="4637e-120">The .read.</span></span> <span data-ttu-id="4637e-121">tlog 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-121">tlog files to interpret</span></span></param>
        <param name="sourceFile"><span data-ttu-id="4637e-122">종속성을 해석할 기본 소스 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-122">The primary source file to interpret dependencies for</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="4637e-123">최신 상태 검사 중에 무시될 파일이 포함된 경로의 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-123">The set of paths that contain files that are to be ignored during up to date check</span></span></param>
        <param name="outputs"><span data-ttu-id="4637e-124">이 소스를 컴파일하여 생성된 출력 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-124">The output files produced by compiling this source</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="4637e-125">경고: 최소 재빌드 최적화를 수행하려면 100% 정확히 계산된 출력을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-125">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="4637e-126">복합 루팅 표식을 유지하려면(다대일의 경우) true이고, 복합 루팅 표식을 유지하지 않으려면(일대일 또는 일대다의 경우) false입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-126">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="4637e-127">단일 입력 소스 파일의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-127">Constructor for a single input source file</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Framework.ITaskItem[] outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Framework.ITaskItem[] outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As ITaskItem(), useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITask * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (ownerTask, tlogFiles, sourceFiles, excludedInputPaths, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask"><span data-ttu-id="4637e-128">파일 추적기를 사용 중인 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-128">The task that is using file tracker</span></span></param>
        <param name="tlogFiles"><span data-ttu-id="4637e-129">해석할 .read.</span><span class="sxs-lookup"><span data-stu-id="4637e-129">The .read.</span></span> <span data-ttu-id="4637e-130">tlog 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-130">tlog files to interpret</span></span></param>
        <param name="sourceFiles"><span data-ttu-id="4637e-131">종속성을 해석할 기본 소스 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-131">The primary source files to interpret dependencies for</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="4637e-132">최신 상태 검사 중에 무시될 파일이 포함된 경로의 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-132">The set of paths that contain files that are to be ignored during up to date check</span></span></param>
        <param name="outputs"><span data-ttu-id="4637e-133">이 소스 집합을 컴파일하여 생성된 출력 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-133">The output files produced by compiling this set of sources</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="4637e-134">경고: 최소 재빌드 최적화를 수행하려면 100% 정확히 계산된 출력을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-134">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="4637e-135">복합 루팅 표식을 유지하려면(다대일의 경우) true이고, 복합 루팅 표식을 유지하지 않으려면(일대일 또는 일대다의 경우) false입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-135">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="4637e-136">여러 입력 소스 파일의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-136">Constructor for multiple input source files</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITask * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Utilities.CanonicalTrackedOutputFiles * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (ownerTask, tlogFiles, sourceFiles, excludedInputPaths, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask"><span data-ttu-id="4637e-137">파일 추적기를 사용 중인 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-137">The task that is using file tracker</span></span></param>
        <param name="tlogFiles"><span data-ttu-id="4637e-138">해석할 .read.</span><span class="sxs-lookup"><span data-stu-id="4637e-138">The .read.</span></span> <span data-ttu-id="4637e-139">tlog 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-139">tlog files to interpret</span></span></param>
        <param name="sourceFiles"><span data-ttu-id="4637e-140">종속성을 해석할 기본 소스 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-140">The primary source files to interpret dependencies for</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="4637e-141">최신 상태 검사 중에 무시될 파일이 포함된 경로의 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-141">The set of paths that contain files that are to be ignored during up to date check</span></span></param>
        <param name="outputs"><span data-ttu-id="4637e-142">이 소스 집합을 컴파일하여 생성된 출력 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-142">The output files produced by compiling this set of sources</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="4637e-143">경고: 최소 재빌드 최적화를 수행하려면 100% 정확히 계산된 출력을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-143">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="4637e-144">복합 루팅 표식을 유지하려면(다대일의 경우) true이고, 복합 루팅 표식을 유지하지 않으려면(일대일 또는 일대다의 경우) false입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-144">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="4637e-145">여러 입력 소스 파일의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-145">Constructor for multiple input source files</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSourcesNeedingCompilation">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4637e-146">이 메서드는 입력에 대한 전체 종속성 그래프 및 출력 파일을 기반으로 컴파일해야 하는 소스를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-146">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSourcesNeedingCompilation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeSourcesNeedingCompilation () As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ComputeSourcesNeedingCompilation();" />
      <MemberSignature Language="F#" Value="member this.ComputeSourcesNeedingCompilation : unit -&gt; Microsoft.Build.Framework.ITaskItem[]" Usage="canonicalTrackedInputFiles.ComputeSourcesNeedingCompilation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4637e-147">이 메서드는 입력에 대한 전체 종속성 그래프 및 출력 파일을 기반으로 컴파일해야 하는 소스를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-147">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs.</span></span></summary>
        <returns><span data-ttu-id="4637e-148">컴파일해야 하는 파일의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-148">Array of files that need to be compiled</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeSourcesNeedingCompilation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation (bool searchForSubRootsInCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation(bool searchForSubRootsInCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeSourcesNeedingCompilation (searchForSubRootsInCompositeRootingMarkers As Boolean) As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ComputeSourcesNeedingCompilation(bool searchForSubRootsInCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="member this.ComputeSourcesNeedingCompilation : bool -&gt; Microsoft.Build.Framework.ITaskItem[]" Usage="canonicalTrackedInputFiles.ComputeSourcesNeedingCompilation searchForSubRootsInCompositeRootingMarkers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchForSubRootsInCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="searchForSubRootsInCompositeRootingMarkers"><span data-ttu-id="4637e-149">True이면 하위 루트의 복합 루팅 표식을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-149">If true, search composite rooting markers for subroots.</span></span></param>
        <summary><span data-ttu-id="4637e-150">이 메서드는 입력에 대한 전체 종속성 그래프 및 출력 파일을 기반으로 컴파일해야 하는 소스를 계산하며, 선택적으로 입력 파일이 포함된 하위 루트의 복합 루팅 표식을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-150">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs, optionally searching composite rooting markers for subroots that may contain input files.</span></span></summary>
        <returns><span data-ttu-id="4637e-151">컴파일해야 하는 파일의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-151">Array of files that need to be compiled</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyTable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.Dictionary&lt;string,string&gt;&gt; DependencyTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&gt; DependencyTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyTable As Dictionary(Of String, Dictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ DependencyTable { System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyTable : System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.Dictionary&lt;string, string&gt;&gt;" Usage="Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4637e-152">종속성 테이블을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-152">Gets the dependency table.</span></span></summary>
        <value><span data-ttu-id="4637e-153">종속성 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-153">The dependency table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileIsExcludedFromDependencyCheck">
      <MemberSignature Language="C#" Value="public bool FileIsExcludedFromDependencyCheck (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FileIsExcludedFromDependencyCheck(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileIsExcludedFromDependencyCheck (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FileIsExcludedFromDependencyCheck(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.FileIsExcludedFromDependencyCheck : string -&gt; bool" Usage="canonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="4637e-154">테스트할 파일의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-154">Full path of the file to test</span></span></param>
        <summary><span data-ttu-id="4637e-155">지정된 파일이 추적된 종속성 검사에서 제외되는지를 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-155">Tests if the specified file is excluded from tracked dependency checking.</span></span></summary>
        <returns><span data-ttu-id="4637e-156">파일이 제외되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-156"><see langword="true" /> if the file is excluded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveDependenciesFromEntryIfMissing">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4637e-157">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-157">Remove the output graph entries for the given sources and corresponding outputs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(Microsoft::Build::Framework::ITaskItem ^ source);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependenciesFromEntryIfMissing : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4637e-158">그래프에서 제거해야 하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-158">Source that should be removed from the graph</span></span></param>
        <summary><span data-ttu-id="4637e-159">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-159">Remove the output graph entries for the given sources and corresponding outputs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependenciesFromEntryIfMissing : Microsoft.Build.Framework.ITaskItem[] -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4637e-160">그래프에서 제거해야 하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-160">Sources that should be removed from the graph</span></span></param>
        <summary><span data-ttu-id="4637e-161">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-161">Remove the output graph entries for the given sources and corresponding outputs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem correspondingOutput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem source, class Microsoft.Build.Framework.ITaskItem correspondingOutput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem, correspondingOutput As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(Microsoft::Build::Framework::ITaskItem ^ source, Microsoft::Build::Framework::ITaskItem ^ correspondingOutput);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependenciesFromEntryIfMissing : Microsoft.Build.Framework.ITaskItem * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing (source, correspondingOutput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="correspondingOutput" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4637e-162">그래프에서 제거해야 하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-162">Source that should be removed from the graph</span></span></param>
        <param name="correspondingOutput"><span data-ttu-id="4637e-163">소스에 해당하는 출력입니다(같은 파일 처리에 사용됨).</span><span class="sxs-lookup"><span data-stu-id="4637e-163">Outputs that correspond ot the sources (used for same file processing)</span></span></param>
        <summary><span data-ttu-id="4637e-164">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-164">Remove the output graph entries for the given sources and corresponding outputs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem[] source, Microsoft.Build.Framework.ITaskItem[] correspondingOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem[] source, class Microsoft.Build.Framework.ITaskItem[] correspondingOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem(), correspondingOutputs As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ correspondingOutputs);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependenciesFromEntryIfMissing : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing (source, correspondingOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="correspondingOutputs" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4637e-165">그래프에서 제거해야 하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-165">Sources that should be removed from the graph</span></span></param>
        <param name="correspondingOutputs"><span data-ttu-id="4637e-166">소스에 해당하는 출력입니다(같은 파일 처리에 사용됨).</span><span class="sxs-lookup"><span data-stu-id="4637e-166">Outputs that correspond ot the sources (used for same file processing)</span></span></param>
        <summary><span data-ttu-id="4637e-167">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-167">Remove the output graph entries for the given sources and corresponding outputs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveDependencyFromEntry">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4637e-168">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-168">Remove the output graph entries for the given source and corresponding outputs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveDependencyFromEntry">
      <MemberSignature Language="C#" Value="public void RemoveDependencyFromEntry (Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem dependencyToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependencyFromEntry(class Microsoft.Build.Framework.ITaskItem source, class Microsoft.Build.Framework.ITaskItem dependencyToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependencyFromEntry (source As ITaskItem, dependencyToRemove As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependencyFromEntry(Microsoft::Build::Framework::ITaskItem ^ source, Microsoft::Build::Framework::ITaskItem ^ dependencyToRemove);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependencyFromEntry : Microsoft.Build.Framework.ITaskItem * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependencyFromEntry (source, dependencyToRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="dependencyToRemove" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4637e-169">그래프에서 제거해야 하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-169">Source that should be removed from the graph</span></span></param>
        <param name="dependencyToRemove"><span data-ttu-id="4637e-170">제거할 종속성입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-170">The dependency to remove.</span></span></param>
        <summary><span data-ttu-id="4637e-171">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-171">Remove the output graph entries for the given source and corresponding outputs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependencyFromEntry">
      <MemberSignature Language="C#" Value="public void RemoveDependencyFromEntry (Microsoft.Build.Framework.ITaskItem[] sources, Microsoft.Build.Framework.ITaskItem dependencyToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependencyFromEntry(class Microsoft.Build.Framework.ITaskItem[] sources, class Microsoft.Build.Framework.ITaskItem dependencyToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependencyFromEntry (sources As ITaskItem(), dependencyToRemove As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependencyFromEntry(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sources, Microsoft::Build::Framework::ITaskItem ^ dependencyToRemove);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependencyFromEntry : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependencyFromEntry (sources, dependencyToRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="dependencyToRemove" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="sources"><span data-ttu-id="4637e-172">그래프에서 제거해야 하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-172">Sources that should be removed from the graph</span></span></param>
        <param name="dependencyToRemove"><span data-ttu-id="4637e-173">제거할 종속성입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-173">The dependency to remove.</span></span></param>
        <summary><span data-ttu-id="4637e-174">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-174">Remove the output graph entries for the given sources and corresponding outputs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveEntriesForSource">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4637e-175">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-175">Removes the output graph entries for the given sources and corresponding outputs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveEntriesForSource">
      <MemberSignature Language="C#" Value="public void RemoveEntriesForSource (Microsoft.Build.Framework.ITaskItem source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntriesForSource(class Microsoft.Build.Framework.ITaskItem source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntriesForSource (source As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntriesForSource(Microsoft::Build::Framework::ITaskItem ^ source);" />
      <MemberSignature Language="F#" Value="member this.RemoveEntriesForSource : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveEntriesForSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4637e-176">그래프에서 제거해야 하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-176">Source that should be removed from the graph</span></span></param>
        <summary><span data-ttu-id="4637e-177">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-177">Remove the output graph entries for the given sources and corresponding outputs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntriesForSource">
      <MemberSignature Language="C#" Value="public void RemoveEntriesForSource (Microsoft.Build.Framework.ITaskItem[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntriesForSource(class Microsoft.Build.Framework.ITaskItem[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntriesForSource (source As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntriesForSource(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source);" />
      <MemberSignature Language="F#" Value="member this.RemoveEntriesForSource : Microsoft.Build.Framework.ITaskItem[] -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveEntriesForSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4637e-178">그래프에서 제거해야 하는 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-178">Sources that should be removed from the graph</span></span></param>
        <summary><span data-ttu-id="4637e-179">지정된 소스와 해당 출력의 출력 그래프 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-179">Removes the output graph entries for the given sources and corresponding outputs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntryForSourceRoot">
      <MemberSignature Language="C#" Value="public void RemoveEntryForSourceRoot (string rootingMarker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntryForSourceRoot(string rootingMarker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntryForSourceRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntryForSourceRoot (rootingMarker As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntryForSourceRoot(System::String ^ rootingMarker);" />
      <MemberSignature Language="F#" Value="member this.RemoveEntryForSourceRoot : string -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveEntryForSourceRoot rootingMarker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootingMarker" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootingMarker"><span data-ttu-id="4637e-180">제거할 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-180">The root to remove.</span></span></param>
        <summary><span data-ttu-id="4637e-181">입력 종속성 그래프에서 루팅에 해당하는 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-181">Removes the entry in the input dependency graph corresponding to a rooting.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveTlog">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4637e-182">이 메서드는 현재 출력 테이블의 tlog를 다시 씁니다. 새 항목을 추적합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-182">This method will re-write the tlogs from the current output table new entries will be tracked.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog();" />
      <MemberSignature Language="F#" Value="member this.SaveTlog : unit -&gt; unit" Usage="canonicalTrackedInputFiles.SaveTlog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4637e-183">이 메서드는 현재 출력 테이블의 tlog를 다시 씁니다. 새 항목을 추적합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-183">This method will re-write the tlogs from the current output table new entries will be tracked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog (Microsoft.Build.Utilities.DependencyFilter includeInTLog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog(class Microsoft.Build.Utilities.DependencyFilter includeInTLog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog (includeInTLog As DependencyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog(Microsoft::Build::Utilities::DependencyFilter ^ includeInTLog);" />
      <MemberSignature Language="F#" Value="member this.SaveTlog : Microsoft.Build.Utilities.DependencyFilter -&gt; unit" Usage="canonicalTrackedInputFiles.SaveTlog includeInTLog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInTLog" Type="Microsoft.Build.Utilities.DependencyFilter" />
      </Parameters>
      <Docs>
        <param name="includeInTLog"><span data-ttu-id="4637e-184">특정 파일을 압축된 tlog에 포함해야 하는지 여부를 결정하는데 사용되는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-184">Delegate used to determine whether a particular file should be included in the compacted tlog.</span></span></param>
        <summary><span data-ttu-id="4637e-185">이 메서드는 현재 종속성의 tlog를 다시 씁니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-185">This method will re-write the tlogs from the current dependency.</span></span> <span data-ttu-id="4637e-186">소스가 컴파일되면 새 항목을 추적합니다.</span><span class="sxs-lookup"><span data-stu-id="4637e-186">As the sources are compiled, new entries will be tracked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>