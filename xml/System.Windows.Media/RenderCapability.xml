<Type Name="RenderCapability" FullName="System.Windows.Media.RenderCapability">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a0528ccf44b0d5043bdfaf59abbf42eb46285a2" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57954437" /></Metadata><TypeSignature Language="C#" Value="public static class RenderCapability" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RenderCapability extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.RenderCapability" />
  <TypeSignature Language="VB.NET" Value="Public Class RenderCapability" />
  <TypeSignature Language="C++ CLI" Value="public ref class RenderCapability abstract sealed" />
  <TypeSignature Language="F#" Value="type RenderCapability = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="556e5-101">WPF 애플리케이션에서 연결된 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체의 현재 렌더링 계층을 쿼리하고 변경 알림을 등록할 수 있도록 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-101">Enables WPF applications to query for the current rendering tier for their associated <see cref="T:System.Windows.Threading.Dispatcher" /> object and to register for notification of changes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="556e5-102">렌더링 계층은 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 애플리케이션을 실행하는 장치의 그래픽 하드웨어 기능과 성능 수준을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-102">A rendering tier defines a level of graphics hardware capability and performance for a device that runs a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application.</span></span> <span data-ttu-id="556e5-103">다음은 대부분 렌더링 계층 수준에 영향을 줄 그래픽 하드웨어의 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-103">The features of the graphics hardware that most affect the rendering tier levels are the following:</span></span>  
  
-   <span data-ttu-id="556e5-104">비디오 RAM: 그래픽 하드웨어에서 비디오 메모리의 양을 그래픽을 합성 하는 데 사용할 수 있는 버퍼의 수와 크기를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-104">Video RAM: The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.</span></span>  
  
-   <span data-ttu-id="556e5-105">픽셀 셰이더: 픽셀 셰이더는 그래픽 효과를 픽셀 단위로 계산 하는 함수를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-105">Pixel Shader: A pixel shader is a graphics processing function that calculates effects on a per-pixel basis.</span></span> <span data-ttu-id="556e5-106">표시된 그래픽의 해상도에 따라 표시 프레임별로 수백만 픽셀을 처리해야 할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-106">Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.</span></span>  
  
-   <span data-ttu-id="556e5-107">꼭 짓 점 셰이더: 꼭 짓 점 셰이더는 그래픽 개체의 꼭 짓 점 데이터에서 수학 연산을 수행 하는 함수를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-107">Vertex Shader: A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.</span></span>  
  
-   <span data-ttu-id="556e5-108">여러 질감 지원: 여러 질감 지원 3D 그래픽 개체에서 혼합 작업 중 두 개 이상의 개별 질감을 적용 하는 기능을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-108">Multitexture Support: Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object.</span></span> <span data-ttu-id="556e5-109">여러 질감 지원 정도는 그래픽 하드웨어의 여러 질감 단위 수에 따라 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-109">The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.</span></span>  
  
 <span data-ttu-id="556e5-110">픽셀 셰이더, 꼭 짓 점 셰이더 및 여러 질감 기능 하는 데 특정 정의할 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 에서 다양 한 렌더링 계층을 정의 하는 데 사용 되는 버전 수준이 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-110">The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="556e5-111">에 대 한 전체 설명은 렌더링 계층을 참조 하세요 [그래픽 렌더링 계층](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-111">For a full description of the rendering tiers, see [Graphics Rendering Tiers](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.RenderOptions" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="IsPixelShaderVersionSupported">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupported (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupported(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupported (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupported(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupported : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested"><span data-ttu-id="556e5-112">픽셀 셰이더의 주 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-112">The major version of the pixel shader.</span></span></param>
        <param name="minorVersionRequested"><span data-ttu-id="556e5-113">픽셀 셰이더의 부 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-113">The minor version of the pixel shader.</span></span></param>
        <summary><span data-ttu-id="556e5-114">지정된 픽셀 셰이더 버전이 지원되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-114">Gets a value that indicates whether the specified pixel shader version is supported.</span></span></summary>
        <returns><span data-ttu-id="556e5-115">픽셀 셰이더 버전을 현재 버전의 WPF에서 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-115"><see langword="true" /> if the pixel shader version is supported by the current version of WPF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="556e5-116">합니다 <xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A> 메서드가 반환 `true` 픽셀 셰이더 버전은 WPF의 현재 버전에서 지원 되 고는 <xref:System.Windows.Media.Effects.Effect> 지정된 된 주/부 버전을 사용 하 여 GPU에서 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-116">The <xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A> method returns `true` if the pixel shader version is supported by the current version of WPF, and if an <xref:System.Windows.Media.Effects.Effect> using the specified major/minor version can run on the GPU.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsPixelShaderVersionSupportedInSoftware">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupportedInSoftware (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupportedInSoftware(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupportedInSoftware (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupportedInSoftware(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupportedInSoftware : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested"><span data-ttu-id="556e5-117">픽셀 셰이더의 주 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-117">The major version of the pixel shader.</span></span></param>
        <param name="minorVersionRequested"><span data-ttu-id="556e5-118">픽셀 셰이더의 부 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-118">The minor version of the pixel shader.</span></span></param>
        <summary><span data-ttu-id="556e5-119">지정된 픽셀 셰이더 버전을 현재 시스템의 소프트웨어에서 렌더링할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-119">Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system.</span></span></summary>
        <returns><span data-ttu-id="556e5-120">현재 시스템의 소프트웨어에서 픽셀 셰이더를 렌더링할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-120"><see langword="true" /> if the pixel shader can be rendered in software on the current system; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="556e5-121">소프트웨어 렌더링 픽셀 셰이더 2.0 에서만 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-121">Software rendering is only supported for Pixel Shader 2.0.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsShaderEffectSoftwareRenderingSupported">
      <MemberSignature Language="C#" Value="public static bool IsShaderEffectSoftwareRenderingSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsShaderEffectSoftwareRenderingSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsShaderEffectSoftwareRenderingSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShaderEffectSoftwareRenderingSupported : bool" Usage="System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("IsShaderEffectSoftwareRenderingSupported property is deprecated.  Use IsPixelShaderVersionSupportedInSoftware static method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="556e5-122">시스템이 소프트웨어에서 비트맵 효과를 렌더링할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-122">Gets a value that indicates whether the system can render bitmap effects in software.</span></span></summary>
        <value><span data-ttu-id="556e5-123">시스템이 소프트웨어에서 비트맵 효과를 렌더링할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-123"><see langword="true" /> if the system can render bitmap effects in software; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="MaxHardwareTextureSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Size MaxHardwareTextureSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Size MaxHardwareTextureSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxHardwareTextureSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Size MaxHardwareTextureSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxHardwareTextureSize : System.Windows.Size" Usage="System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="556e5-124">기본 하드웨어 장치의 비트맵 생성에 대한 최대 너비와 높이를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-124">Gets the maximum width and height for bitmap creation of the underlying hardware device.</span></span></summary>
        <value><span data-ttu-id="556e5-125">하드웨어 비트맵 생성에 대한 최대 너비와 높이를 나타내는 <see cref="T:System.Windows.Size" />입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-125">A <see cref="T:System.Windows.Size" /> that represents the maximum width and height for hardware bitmap creation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="556e5-126">장치가 여러 개 있는 경우 <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> 그중에서 최소 크기를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-126">If there are multiple devices, <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> returns the minimum size among them.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCache" />
      </Docs>
    </Member>
    <Member MemberName="MaxPixelShaderInstructionSlots">
      <MemberSignature Language="C#" Value="public static int MaxPixelShaderInstructionSlots (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxPixelShaderInstructionSlots(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxPixelShaderInstructionSlots (majorVersionRequested As Short, minorVersionRequested As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MaxPixelShaderInstructionSlots(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member MaxPixelShaderInstructionSlots : int16 * int16 -&gt; int" Usage="System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested"><span data-ttu-id="556e5-127">픽셀 셰이더의 주 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-127">The major version of the pixel shader.</span></span></param>
        <param name="minorVersionRequested"><span data-ttu-id="556e5-128">픽셀 셰이더의 부 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-128">The minor version of the pixel shader.</span></span></param>
        <summary><span data-ttu-id="556e5-129">현재 픽셀 셰이더 버전에서 지원되는 최대 명령 슬롯 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-129">Gets the maximum number of instruction slots supported by the specified pixel shader version.</span></span></summary>
        <returns><span data-ttu-id="556e5-130">픽셀 셰이더 2.0의 경우 96, 픽셀 셰이더 3.0의 경우 512 이상 또는 기타 버전 픽셀 셰이더의 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-130">96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="556e5-131">픽셀 셰이더 3.0에서 지 원하는 명령 슬롯 수가 다양 하지만, 항상 512 이상.</span><span class="sxs-lookup"><span data-stu-id="556e5-131">The number of instruction slots supported by Pixel Shader 3.0 varies, but is always 512 or greater.</span></span>  
  
 <span data-ttu-id="556e5-132">픽셀 셰이더 2.0 및 3.0만 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-132">Only Pixel Shader 2.0 and 3.0 are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="Tier">
      <MemberSignature Language="C#" Value="public static int Tier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Tier" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.Tier" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Tier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Tier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Tier : int" Usage="System.Windows.Media.RenderCapability.Tier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="556e5-133">현재 스레드에 대한 렌더링 계층을 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-133">Gets a value that indicates the rendering tier for the current thread.</span></span></summary>
        <value><span data-ttu-id="556e5-134">상위 워드가 현재 스레드의 렌더링 계층에 해당하는 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-134">An <see cref="T:System.Int32" /> value whose high-order word corresponds to the rendering tier for the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="556e5-135">.NET Framework 4부터 렌더링 계층 1은 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 이상을 지원하는 그래픽 하드웨어만 포함하도록 재정의되었습니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-135">Starting in the .NET Framework 4, rendering tier 1 has been redefined to only include graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 or greater.</span></span> <span data-ttu-id="556e5-136">[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 또는 8을 지원하는 그래픽 하드웨어는 이제 렌더링 계층 0으로 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-136">Graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 or 8 is now defined as rendering tier 0.</span></span>  
  
 <span data-ttu-id="556e5-137">반환 값에는 3 가지 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-137">The return value is one of three possible values:</span></span>  
  
|<span data-ttu-id="556e5-138">반환 값</span><span class="sxs-lookup"><span data-stu-id="556e5-138">Return value</span></span>|<span data-ttu-id="556e5-139">렌더링 계층</span><span class="sxs-lookup"><span data-stu-id="556e5-139">Rendering tier</span></span>|<span data-ttu-id="556e5-140">참고 사항</span><span class="sxs-lookup"><span data-stu-id="556e5-140">Notes</span></span>|  
|------------------|--------------------|-----------|  
|<span data-ttu-id="556e5-141">0x00000000</span><span class="sxs-lookup"><span data-stu-id="556e5-141">0x00000000</span></span>|<span data-ttu-id="556e5-142">0</span><span class="sxs-lookup"><span data-stu-id="556e5-142">0</span></span>|<span data-ttu-id="556e5-143">그래픽 하드웨어 가속이 없는 장치에서 응용 프로그램 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-143">No graphics hardware acceleration is available for the application on the device.</span></span> <span data-ttu-id="556e5-144">모든 그래픽 기능에서 소프트웨어 가속을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-144">All graphics features use software acceleration.</span></span> <span data-ttu-id="556e5-145">[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 버전 수준은 버전 9.0 미만입니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-145">The [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version level is less than version 9.0.</span></span>|  
|<span data-ttu-id="556e5-146">0x00010000</span><span class="sxs-lookup"><span data-stu-id="556e5-146">0x00010000</span></span>|<span data-ttu-id="556e5-147">1</span><span class="sxs-lookup"><span data-stu-id="556e5-147">1</span></span>|<span data-ttu-id="556e5-148">대부분의 그래픽 기능에서 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 필요한 시스템 리소스가 사용 가능 하며 소진 되지 않은 경우 하드웨어 가속을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-148">Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration if the necessary system resources are available and have not been exhausted.</span></span> <span data-ttu-id="556e5-149">이 내용은 9.0 이상의 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 버전에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-149">This corresponds to a [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.</span></span>|  
|<span data-ttu-id="556e5-150">0x00020000</span><span class="sxs-lookup"><span data-stu-id="556e5-150">0x00020000</span></span>|<span data-ttu-id="556e5-151">2</span><span class="sxs-lookup"><span data-stu-id="556e5-151">2</span></span>|<span data-ttu-id="556e5-152">대부분의 그래픽 기능에서 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 필요한 시스템 리소스를 모두 사용 하지 않은 경우 제공 된 하드웨어 가속을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-152">Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration provided the necessary system resources have not been exhausted.</span></span> <span data-ttu-id="556e5-153">이 내용은 9.0 이상의 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 버전에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-153">This corresponds to a [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.</span></span>|  
  
 <span data-ttu-id="556e5-154">다음 테이블에서는 렌더링 계층 1과 렌더링 계층 2에 대한 그래픽 하드웨어 요구 사항의 차이점을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-154">The following table shows the differences in graphics hardware requirements for rendering tier 1 and rendering tier 2:</span></span>  
  
|<span data-ttu-id="556e5-155">기능</span><span class="sxs-lookup"><span data-stu-id="556e5-155">Feature</span></span>|<span data-ttu-id="556e5-156">계층 1</span><span class="sxs-lookup"><span data-stu-id="556e5-156">Tier 1</span></span>|<span data-ttu-id="556e5-157">계층 2</span><span class="sxs-lookup"><span data-stu-id="556e5-157">Tier 2</span></span>|  
|-------------|------------|------------|  
|[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] <span data-ttu-id="556e5-158">버전</span><span class="sxs-lookup"><span data-stu-id="556e5-158">version</span></span>|<span data-ttu-id="556e5-159">9.0보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-159">Must be greater than or equal to 9.0.</span></span>|<span data-ttu-id="556e5-160">9.0보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-160">Must be greater than or equal to 9.0.</span></span>|  
|<span data-ttu-id="556e5-161">비디오 RAM</span><span class="sxs-lookup"><span data-stu-id="556e5-161">Video RAM</span></span>|<span data-ttu-id="556e5-162">60MB보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-162">Must be greater than or equal to 60MB.</span></span>|<span data-ttu-id="556e5-163">120MB보다 크거나 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-163">Must be greater than or equal to 120MB.</span></span>|  
|<span data-ttu-id="556e5-164">픽셀 셰이더</span><span class="sxs-lookup"><span data-stu-id="556e5-164">Pixel shader</span></span>|<span data-ttu-id="556e5-165">버전 수준은 2.0 이상이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-165">Version level must greater than or equal to 2.0.</span></span>|<span data-ttu-id="556e5-166">버전 수준은 2.0 이상이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-166">Version level must greater than or equal to 2.0.</span></span>|  
|<span data-ttu-id="556e5-167">꼭짓점 셰이더</span><span class="sxs-lookup"><span data-stu-id="556e5-167">Vertex shader</span></span>|<span data-ttu-id="556e5-168">요구 사항이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-168">No requirement.</span></span>|<span data-ttu-id="556e5-169">버전 수준은 2.0 이상이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-169">Version level must greater than or equal to 2.0.</span></span>|  
|<span data-ttu-id="556e5-170">여러 질감 단위</span><span class="sxs-lookup"><span data-stu-id="556e5-170">Multitexture units</span></span>|<span data-ttu-id="556e5-171">요구 사항이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-171">No requirement.</span></span>|<span data-ttu-id="556e5-172">단위 수가 4 이상이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-172">Number of units must greater than or equal to 4.</span></span>|  
  
 <span data-ttu-id="556e5-173">렌더링 계층에 대 한 정의에 대 한 자세한 내용은 참조 하세요. [그래픽 렌더링 계층](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-173">For more information on the definitions for the rendering tiers, see [Graphics Rendering Tiers](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).</span></span>  
  
 <span data-ttu-id="556e5-174">현재 스레드에 연결 되지 않은 경우 <xref:System.Windows.Threading.Dispatcher> 개체를 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-174">If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="556e5-175">다음 예에서는 현재 스레드의 렌더링 계층을 반환 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-175">The following example shows how to return the rendering tier for the current thread.</span></span>  
  
 [!code-csharp[RenderOptions#RenderCapability1](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#rendercapability1)]
 [!code-vb[RenderOptions#RenderCapability1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#rendercapability1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TierChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TierChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TierChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.RenderCapability.TierChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TierChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TierChanged;" />
      <MemberSignature Language="F#" Value="member this.TierChanged : EventHandler " Usage="member this.TierChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="556e5-176">현재 스레드의 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체에 대해 렌더링 계층이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-176">Occurs when the rendering tier has changed for the <see cref="T:System.Windows.Threading.Dispatcher" /> object of the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="556e5-177">현재 스레드에 연결 되지 않은 경우 <xref:System.Windows.Threading.Dispatcher> 개체를 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="556e5-177">If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>