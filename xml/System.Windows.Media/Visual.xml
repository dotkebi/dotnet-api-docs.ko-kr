<Type Name="Visual" FullName="System.Windows.Media.Visual">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a6667f7871b033ef5bbfd046fa70018bcd3efe6" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56382051" /></Metadata><TypeSignature Language="C#" Value="public abstract class Visual : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Visual extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Visual" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Visual&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Visual abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Visual = class&#xA;    inherit DependencyObject&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8704e-101">적중 테스트, 좌표 변환, 경계 상자 계산 등을 포함한 WPF의 렌더링 지원을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-101">Provides rendering support in WPF, which includes hit testing, coordinate transformation, and bounding box calculations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-102">합니다 <xref:System.Windows.Media.Visual> 클래스는 기본 추상화는 모든 <xref:System.Windows.FrameworkElement> 개체에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-102">The <xref:System.Windows.Media.Visual> class is the basic abstraction from which every <xref:System.Windows.FrameworkElement> object derives.</span></span> <span data-ttu-id="8704e-103">새 컨트롤을 작성 하기 위한 진입점으로도 사용 됩니다 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], 여러 가지 방법으로 간주할 수의 창 핸들 (HWND)를 동등 개체로 및를 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 애플리케이션 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-103">It also serves as the entry point for writing new controls in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], and in many ways can be thought of as an equivalent of a window handle (HWND) in the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] application model.</span></span>  
  
 <span data-ttu-id="8704e-104">합니다 <xref:System.Windows.Media.Visual> 개체는 핵심 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 개체를 렌더링 지원을 제공 하는 역할입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-104">The <xref:System.Windows.Media.Visual> object is a core [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] object, whose primary role is to provide rendering support.</span></span> <span data-ttu-id="8704e-105">와 같은 사용자 인터페이스 컨트롤 <xref:System.Windows.Controls.Button> 및 <xref:System.Windows.Controls.TextBox>에서 파생 되는 <xref:System.Windows.Media.Visual> 클래스를 사용 하 여는 <xref:System.Windows.Media.Visual> 렌더링 데이터를 유지 하는 것에 대 한 속성을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-105">User interface controls, such as <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.TextBox>, derive from the <xref:System.Windows.Media.Visual> class, and use the <xref:System.Windows.Media.Visual> defined properties for persisting their rendering data.</span></span> <span data-ttu-id="8704e-106"><xref:System.Windows.Media.Visual> 개체 다음에 대 한 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-106">The <xref:System.Windows.Media.Visual> object provides support for the following:</span></span>  
  
-   <span data-ttu-id="8704e-107">출력 표시: 시각적 개체의 serialize된 지속형 그리기 콘텐츠 렌더링</span><span class="sxs-lookup"><span data-stu-id="8704e-107">Output display: Rendering the persisted, serialized drawing content of a visual.</span></span>  
  
-   <span data-ttu-id="8704e-108">변환: 시각적 개체에 대해 변환 수행</span><span class="sxs-lookup"><span data-stu-id="8704e-108">Transformations: Performing transformations on a visual.</span></span>  
  
-   <span data-ttu-id="8704e-109">클리핑: 시각적 개체에 대해 클리핑 영역 지원 제공</span><span class="sxs-lookup"><span data-stu-id="8704e-109">Clipping: Providing clipping region support for a visual.</span></span>  
  
-   <span data-ttu-id="8704e-110">적중 테스트: 지정 된 좌표 (지점) 또는 기 하 도형이 시각적 개체의 경계 내에 포함 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-110">Hit testing: Determining whether a specified coordinate (point) or geometry is contained within the bounds of a visual.</span></span>  
  
-   <span data-ttu-id="8704e-111">경계 상자 계산: 시각적 개체의 경계 사각형 결정</span><span class="sxs-lookup"><span data-stu-id="8704e-111">Bounding box calculations: Determining the bounding rectangle of a visual.</span></span>  
  
 <span data-ttu-id="8704e-112">아키텍처 측면에서 <xref:System.Windows.Media.Visual> 개체에 다른 애플리케이션 개발 요구 사항에 대 한 지원이 포함 되어 있지 않습니다 / [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 즉시 렌더링과 같은 관련 되지 않은 기능:</span><span class="sxs-lookup"><span data-stu-id="8704e-112">Architecturally, the <xref:System.Windows.Media.Visual> object does not include support for other application development requirements / [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] features that are not immediately related to its rendering, such as the following:</span></span>  
  
-   <span data-ttu-id="8704e-113">이벤트 처리</span><span class="sxs-lookup"><span data-stu-id="8704e-113">Event handling</span></span>  
  
-   <span data-ttu-id="8704e-114">레이아웃</span><span class="sxs-lookup"><span data-stu-id="8704e-114">Layout</span></span>  
  
-   <span data-ttu-id="8704e-115">스타일</span><span class="sxs-lookup"><span data-stu-id="8704e-115">Styles</span></span>  
  
-   <span data-ttu-id="8704e-116">데이터 바인딩</span><span class="sxs-lookup"><span data-stu-id="8704e-116">Data binding</span></span>  
  
-   <span data-ttu-id="8704e-117">전역화</span><span class="sxs-lookup"><span data-stu-id="8704e-117">Globalization</span></span>  
  
 <span data-ttu-id="8704e-118"><xref:System.Windows.Media.Visual> 추가 클래스 파생 될 수 공용 추상 클래스로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-118"><xref:System.Windows.Media.Visual> is provided as a public abstract class from which further classes can be derived.</span></span> <span data-ttu-id="8704e-119">다음 그림에 정의 된 기존 시각적 개체의 계층 구조는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 아키텍처입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-119">The following illustration shows the hierarchy of the existing visual objects that are defined in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] architecture.</span></span>  
  
 <span data-ttu-id="8704e-120">![시각적 개체에서 파생 된 클래스의 다이어그램](~/add/media/visualclass01.png "시각적 개체에서 파생 된 클래스의 다이어그램")</span><span class="sxs-lookup"><span data-stu-id="8704e-120">![Diagram of classes derived from the Visual object](~/add/media/visualclass01.png "Diagram of classes derived from the Visual object")</span></span>  
<span data-ttu-id="8704e-121">시각적 개체 클래스 계층 구조</span><span class="sxs-lookup"><span data-stu-id="8704e-121">Visual class hierarchy</span></span>  
  
 <span data-ttu-id="8704e-122">보호 구성원으로 정의 된 경우에 따라 <xref:System.Windows.Media.Visual> 파생에서 유사한 이름 사용 하 여 쉽게 액세스할 수 있는 멤버로 노출 되 <xref:System.Windows.UIElement> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-122">In some cases, members that are defined as protected in <xref:System.Windows.Media.Visual> are exposed as more readily accessible members with similar names in the derived <xref:System.Windows.UIElement> class.</span></span>  
  
 <span data-ttu-id="8704e-123">자세한 내용은 [WPF 그래픽 렌더링 개요](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8704e-123">For more information, see [WPF Graphics Rendering Overview](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md).</span></span>  
  
 <span data-ttu-id="8704e-124"><xref:System.Windows.Media.Visual> 수준의 횟수에 제한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-124">A <xref:System.Windows.Media.Visual> has a limited number of levels.</span></span> <span data-ttu-id="8704e-125">.NET Framework의 이전 버전에서는이 최대 깊이 255 였습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-125">In previous versions of the .NET Framework, this maximum depth was 255.</span></span> <span data-ttu-id="8704e-126">이 한도 시각적 트리에 여러 수준이 있는 일부 레이아웃에 적합 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-126">This limit is inadequate for some layouts that have many levels in the visual tree.</span></span>  
  
 <span data-ttu-id="8704e-127">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]의 최대 깊이 <xref:System.Windows.Media.Visual> 은 시각적 트리를 더욱 심층적으로 수 있도록 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-127">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the maximum depth of a <xref:System.Windows.Media.Visual> is 2047, which enables much deeper visual trees.</span></span> <span data-ttu-id="8704e-128">대부분의 애플리케이션에서 많은 수준을 이동할 스택 공간이 않으며 결과 <xref:System.StackOverflowException> 레이아웃 중입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-128">In most applications, there is not enough stack space to traverse so many levels, and the result is a <xref:System.StackOverflowException> during layout.</span></span> <span data-ttu-id="8704e-129">기본 스택 크기에 대 한이 일반적으로 예외가 트리 깊이 약 800 중첩 190 정도에 해당 하는 경우 <xref:System.Windows.Controls.TreeViewItem> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-129">For the default stack size, this exception is usually thrown when the tree depth is approximately 800, which corresponds to about 190 nested <xref:System.Windows.Controls.TreeViewItem> objects.</span></span>  
  
 <span data-ttu-id="8704e-130">애플리케이션에서이 예외가 throw 됩니다. 자세히 시각적 트리에 있어야를 애플리케이션의 스택 크기를 늘릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-130">If this exception is thrown by your application and you need to have a deeper visual tree, you can increase the application's stack size.</span></span> <span data-ttu-id="8704e-131">컴파일 시 /STACK 옵션을 사용 하 여 또는 EDITBIN 유틸리티를 사용 하 여 스택의 크기를 늘릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-131">You can increase the size of the stack by using the /STACK option at compile time or by using the EDITBIN utility.</span></span> <span data-ttu-id="8704e-132">스택 크기를 늘리면 애플리케이션의 성능에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-132">Increasing the stack size may affect your application's performance.</span></span> <span data-ttu-id="8704e-133">자세한 내용은 [스택 할당](https://go.microsoft.com/fwlink/?LinkId=165510) 하 고 [EDITBIN 옵션](https://go.microsoft.com/fwlink/?LinkId=165511)합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-133">For more information, see [Stack Allocations](https://go.microsoft.com/fwlink/?LinkId=165510) and [EDITBIN Options](https://go.microsoft.com/fwlink/?LinkId=165511).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.VisualCollection" />
    <altmember cref="T:System.Windows.Media.VisualTreeHelper" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Visual ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Visual();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8704e-134"><see cref="T:System.Windows.Media.Visual" /> 클래스에서 파생된 개체의 기본 초기화를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-134">Provides the base initialization for objects derived from the <see cref="T:System.Windows.Media.Visual" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVisualChild">
      <MemberSignature Language="C#" Value="protected void AddVisualChild (System.Windows.Media.Visual child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddVisualChild(class System.Windows.Media.Visual child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddVisualChild (child As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddVisualChild(System::Windows::Media::Visual ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddVisualChild : System.Windows.Media.Visual -&gt; unit" Usage="visual.AddVisualChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="8704e-135">부모 시각적 개체에 추가할 자식 시각적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-135">The child visual object to add to parent visual.</span></span></param>
        <summary><span data-ttu-id="8704e-136">두 시각적 개체 사이의 부모/자식 관계를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-136">Defines the parent-child relationship between two visuals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-137"><xref:System.Windows.Media.Visual.AddVisualChild%2A> 메서드 두 시각적 개체 사이의 부모-자식 관계를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-137">The <xref:System.Windows.Media.Visual.AddVisualChild%2A> method sets up the parent-child relationship between two visual objects.</span></span> <span data-ttu-id="8704e-138">이 메서드는 시각적 자식 개체의 기본 스토리지 구현에 대한 낮은 수준 제어가 필요할 때 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-138">This method must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</span></span> <span data-ttu-id="8704e-139"><xref:System.Windows.Media.VisualCollection> 자식 개체를 저장 하는 것에 대 한 기본 구현으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-139"><xref:System.Windows.Media.VisualCollection> can be used as a default implementation for storing child objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8704e-140">다음 예제에서는 시각적 자식 개체의 사용자 지정 스토리지 요구 사항을 정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-140">The following example shows how to define custom storage requirements for a visual child.</span></span> <span data-ttu-id="8704e-141">이 예제에서는 사용 합니다 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 시각적 부모 간의 부모-자식 관계를 설정 하는 메서드 및 `child`합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-141">The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`.</span></span> <span data-ttu-id="8704e-142">올바르게 열거할 시각적 트리에 대 한 순서로 예제의 재정의 된 구현을 제공 하는 <xref:System.Windows.Media.Visual.GetVisualChild%2A> 메서드 및 <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-142">In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8704e-143"><xref:System.Windows.Media.VisualCollection>을 사용하여 시각적 개체 간의 부모-자식 관계를 만들 수는 있지만 한 자식만 부모에 연결된 경우 고유한 사용자 지정 스토리지 구현을 제공하는 것이 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-143">Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</span></span>  
  
 [!code-csharp[AddVisualChild#AddVisualChild01](~/samples/snippets/csharp/VS_Snippets_Wpf/AddVisualChild/CSharp/Window1.xaml.cs#addvisualchild01)]
 [!code-vb[AddVisualChild#AddVisualChild01](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AddVisualChild/visualbasic/window1.xaml.vb#addvisualchild01)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.VisualCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindCommonVisualAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject FindCommonVisualAncestor (System.Windows.DependencyObject otherVisual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject FindCommonVisualAncestor(class System.Windows.DependencyObject otherVisual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindCommonVisualAncestor (otherVisual As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ FindCommonVisualAncestor(System::Windows::DependencyObject ^ otherVisual);" />
      <MemberSignature Language="F#" Value="member this.FindCommonVisualAncestor : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="visual.FindCommonVisualAncestor otherVisual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherVisual" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="otherVisual"><span data-ttu-id="8704e-144"><see cref="T:System.Windows.DependencyObject" /> 형식의 시각적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-144">A visual object of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="8704e-145">두 시각적 개체의 공통 상위 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-145">Returns the common ancestor of two visual objects.</span></span></summary>
        <returns><span data-ttu-id="8704e-146">시각적 개체와 <paramref name="otherVisual" />의 공통 상위 항목(있는 경우)이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-146">The common ancestor of the visual object and <paramref name="otherVisual" /> if one exists; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-147">2D 및 3D 개체 전달할 수 있도록 일반적인 visual 상위 항목을 가질 수 있습니다는 <xref:System.Windows.Media.Media3D.Visual3D> 에 대 한 `otherVisual`합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-147">2D and 3D objects can have common visual ancestors, so it is possible to pass a <xref:System.Windows.Media.Media3D.Visual3D> for `otherVisual`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetVisualChild : int -&gt; System.Windows.Media.Visual&#xA;override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="visual.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8704e-148"><see cref="T:System.Windows.Media.VisualCollection" />에 있는 시각적 개체의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-148">The index of the visual object in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="8704e-149">부모 <see cref="T:System.Windows.Media.Visual" />에 있는 지정한 <see cref="T:System.Windows.Media.VisualCollection" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-149">Returns the specified <see cref="T:System.Windows.Media.Visual" /> in the parent <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="8704e-150"><see cref="T:System.Windows.Media.VisualCollection" />에서 지정된 <paramref name="index" /> 값에 있는 자식입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-150">The child in the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified <paramref name="index" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-151">기본적으로 <xref:System.Windows.Media.Visual> 자식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-151">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span> <span data-ttu-id="8704e-152">따라서 기본 구현에서는 항상 throw는 <xref:System.ArgumentOutOfRangeException>합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-152">Therefore, the default implementation always throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8704e-153">다음 예제에서는 재정의 된 구현을 정의 <xref:System.Windows.Media.Visual.GetVisualChild%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-153">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.GetVisualChild%2A>.</span></span>  
  
 [!code-csharp[DrawingVisualSample#102b](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#102b)]
 [!code-vb[DrawingVisualSample#102b](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#102b)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8704e-154">파생 된 클래스 <see cref="T:System.Windows.Media.Visual" /> 이 메서드를 재정의 해야 합니다 및는 <see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /> 올바르게 열거할 시각적 트리에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-154">A class that derives from <see cref="T:System.Windows.Media.Visual" /> must override this method, and also the <see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /> property, for the visual tree to be enumerated correctly.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8704e-155">점 또는 기하 도형 값이 시각적 개체의 경계 내에 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-155">Determines whether a point or geometry value is within the bounds of the visual object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="abstract member HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult&#xA;override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="visual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="8704e-156">적중 테스트를 수행할 대상 <see cref="T:System.Windows.Media.GeometryHitTestParameters" />를 지정하는 <see cref="T:System.Windows.Media.Geometry" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-156">A <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Media.Geometry" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="8704e-157">기하 도형 값이 시각적 개체의 경계 내에 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-157">Determines whether a geometry value is within the bounds of the visual object.</span></span></summary>
        <returns><span data-ttu-id="8704e-158">적중 테스트 결과를 나타내는 <see cref="T:System.Windows.Media.GeometryHitTestResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-158">A <see cref="T:System.Windows.Media.GeometryHitTestResult" /> that represents the result of the hit test.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-159">기본 시각적 개체에 대 한 지원 하 여 적중 테스트 재정의 재정의할 수 있습니다는 <xref:System.Windows.Media.Visual.HitTestCore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8704e-159">You can override default hit testing support for a visual object by overriding the <xref:System.Windows.Media.Visual.HitTestCore%2A> method.</span></span> <span data-ttu-id="8704e-160">즉, 호출 하는 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 메서드를 재정의 된 구현 <xref:System.Windows.Media.Visual.HitTestCore%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-160">This means that when you invoke the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method, your overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A> is called.</span></span> <span data-ttu-id="8704e-161">재정의 된 메서드는 좌표가 시각적 개체의 기 하 도형 밖에 있는 경우에 시각적 개체의 경계 사각형 내에 적중된 테스트를 포함 하는 경우 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-161">Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8704e-162">다음 예제에서는 <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29> 메서드를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-162">The following example shows how to override the <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29> method.</span></span> <span data-ttu-id="8704e-163">이 메서드를 재정의 하려는 이유 중 하나는 적중된 테스트 프로세스 중 추가 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-163">One reason you might want to override this method is to provide additional functionality during the hit testing process.</span></span>  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet13)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="abstract member HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult&#xA;override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="visual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="8704e-164">적중 테스트를 수행할 대상 <see cref="T:System.Windows.Media.PointHitTestParameters" />를 지정하는 <see cref="T:System.Windows.Point" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-164">A <see cref="T:System.Windows.Media.PointHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="8704e-165">점 좌표 값이 시각적 개체의 경계 내에 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-165">Determines whether a point coordinate value is within the bounds of the visual object.</span></span></summary>
        <returns><span data-ttu-id="8704e-166">적중 테스트에서 반환되는 <see cref="T:System.Windows.Media.HitTestResult" />을 나타내는 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-166">A <see cref="T:System.Windows.Media.HitTestResult" /> that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-167">기본 적중 지원 시각적 개체에서 재정의 하 여 테스트를 재정의할 수 있습니다는 <xref:System.Windows.Media.Visual.HitTestCore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8704e-167">You can override the default hit testing support on visual objects by overriding the <xref:System.Windows.Media.Visual.HitTestCore%2A> method.</span></span> <span data-ttu-id="8704e-168">즉, 호출 하는 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 메서드를 재정의 된 구현 <xref:System.Windows.Media.Visual.HitTestCore%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-168">This means that when you invoke the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method, your overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A> is called.</span></span> <span data-ttu-id="8704e-169">재정의 된 메서드는 좌표가 시각적 개체의 기 하 도형 밖에 있는 경우에 시각적 개체의 경계 사각형 내에 적중된 테스트를 포함 하는 경우 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-169">Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8704e-170">다음 예제에서는 <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29> 메서드를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-170">The following example shows how to override the <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29> method.</span></span> <span data-ttu-id="8704e-171">이 메서드를 재정의 하려는 이유 중 하나는 적중된 테스트 프로세스 중 추가 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-171">One reason you might want to override this method is to provide additional functionality during the hit testing process.</span></span>  
  
 [!code-csharp[HitTestingOverview#107](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#107)]
 [!code-vb[HitTestingOverview#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAncestorOf">
      <MemberSignature Language="C#" Value="public bool IsAncestorOf (System.Windows.DependencyObject descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAncestorOf(class System.Windows.DependencyObject descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAncestorOf (descendant As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAncestorOf(System::Windows::DependencyObject ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.IsAncestorOf : System.Windows.DependencyObject -&gt; bool" Usage="visual.IsAncestorOf descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="descendant"><span data-ttu-id="8704e-172"><see cref="T:System.Windows.DependencyObject" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-172">A value of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="8704e-173">시각적 개체가 하위 시각적 개체의 상위 항목인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-173">Determines whether the visual object is an ancestor of the descendant visual object.</span></span></summary>
        <returns><span data-ttu-id="8704e-174">시각적 개체가 <paramref name="descendant" />의 상위 항목이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-174"><see langword="true" /> if the visual object is an ancestor of <paramref name="descendant" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDescendantOf">
      <MemberSignature Language="C#" Value="public bool IsDescendantOf (System.Windows.DependencyObject ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDescendantOf(class System.Windows.DependencyObject ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDescendantOf (ancestor As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDescendantOf(System::Windows::DependencyObject ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.IsDescendantOf : System.Windows.DependencyObject -&gt; bool" Usage="visual.IsDescendantOf ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="8704e-175"><see cref="T:System.Windows.DependencyObject" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-175">A value of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="8704e-176">시각적 개체가 상위 시각적 개체의 하위 항목인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-176">Determines whether the visual object is a descendant of the ancestor visual object.</span></span></summary>
        <returns><span data-ttu-id="8704e-177">시각적 개체가 <paramref name="ancestor" />의 하위 항목이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-177"><see langword="true" /> if the visual object is a descendant of <paramref name="ancestor" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="visual.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi"><span data-ttu-id="8704e-178">이전 DPI 배율 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-178">The previous DPI scale setting.</span></span></param>
        <param name="newDpi"><span data-ttu-id="8704e-179">새 DPI 배율 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-179">The new DPI scale setting.</span></span></param>
        <summary><span data-ttu-id="8704e-180">이 뷰가 렌더링되는 DPI가 변경될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-180">Called when the DPI at which this View is rendered changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="visual.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="8704e-181">컬렉션에 추가된 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-181">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="8704e-182">컬렉션에서 제거된 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-182">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection</span></span></param>
        <summary><span data-ttu-id="8704e-183">시각적 개체의 <see cref="T:System.Windows.Media.VisualCollection" />이 수정될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-183">Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of the visual object is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="visual.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="8704e-184"><see cref="T:System.Windows.DependencyObject" /> 개체의 이전 부모를 나타내는 <see cref="T:System.Windows.Media.Visual" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-184">A value of type <see cref="T:System.Windows.DependencyObject" /> that represents the previous parent of the <see cref="T:System.Windows.Media.Visual" /> object.</span></span> <span data-ttu-id="8704e-185"><see cref="T:System.Windows.Media.Visual" /> 개체에 이전 부모가 없는 경우 매개 변수 값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-185">If the <see cref="T:System.Windows.Media.Visual" /> object did not have a previous parent, the value of the parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8704e-186">시각적 개체의 부모를 변경할 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-186">Called when the parent of the visual object is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-187">파생 된 클래스 <xref:System.Windows.Media.Visual> 이 메서드를 재정의 하도록 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-187">A class that derives from <xref:System.Windows.Media.Visual> can choose to override this method.</span></span>  
  
 <span data-ttu-id="8704e-188">이 변경 보고서는 인스턴스를 제공 하는 "VisualParentChanged" 이벤트가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-188">There is no "VisualParentChanged" event provided that reports this change to instances.</span></span> <span data-ttu-id="8704e-189">따라서 알림 시나리오를 처리 하 고 시나리오의 일부인 경우 알림의 인스턴스 버전을 제공 하려면이 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-189">Therefore, you must override this method to handle notification scenarios and provide an instance version of the notification if that is part of your scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8704e-190">다음 예제에서는 재정의 된 구현을 정의 <xref:System.Windows.Media.Visual.OnVisualParentChanged%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-190">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.OnVisualParentChanged%2A>.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet10)]
 [!code-vb[VisualSnippets#VisualSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Visual.VisualParent" />
      </Docs>
    </Member>
    <Member MemberName="PointFromScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Point PointFromScreen (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point PointFromScreen(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point PointFromScreen(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointFromScreen : System.Windows.Point -&gt; System.Windows.Point" Usage="visual.PointFromScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="8704e-191">화면 좌표에 있는 <see cref="T:System.Windows.Point" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-191">The <see cref="T:System.Windows.Point" /> value in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="8704e-192">화면 좌표에 있는 <see cref="T:System.Windows.Point" />를 <see cref="T:System.Windows.Point" />의 현재 좌표계를 나타내는 <see cref="T:System.Windows.Media.Visual" />로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-192">Converts a <see cref="T:System.Windows.Point" /> in screen coordinates into a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="8704e-193"><see cref="T:System.Windows.Point" />의 현재 좌표계를 나타내는 변환된 <see cref="T:System.Windows.Media.Visual" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-193">The converted <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-194">사용 하 여를 <xref:System.Windows.Media.Visual.PointToScreen%2A> 변환할 메서드를 <xref:System.Windows.Point> 의 현재 좌표계를 나타내는 <xref:System.Windows.Media.Visual> 에 <xref:System.Windows.Point> 화면 좌표에서.</span><span class="sxs-lookup"><span data-stu-id="8704e-194">Use the <xref:System.Windows.Media.Visual.PointToScreen%2A> method to convert a <xref:System.Windows.Point> that represents the current coordinate system of the <xref:System.Windows.Media.Visual> into a <xref:System.Windows.Point> in screen coordinates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Point PointToScreen (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point PointToScreen(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point PointToScreen(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Windows.Point -&gt; System.Windows.Point" Usage="visual.PointToScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="8704e-195"><see cref="T:System.Windows.Point" />의 현재 좌표계를 나타내는 <see cref="T:System.Windows.Media.Visual" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-195">The <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="8704e-196"><see cref="T:System.Windows.Point" />의 현재 좌표계를 나타내는 <see cref="T:System.Windows.Media.Visual" />를 화면 좌표에 있는 <see cref="T:System.Windows.Point" />로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-196">Converts a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" /> into a <see cref="T:System.Windows.Point" /> in screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="8704e-197">화면 좌표로 변환된 <see cref="T:System.Windows.Point" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-197">The converted <see cref="T:System.Windows.Point" /> value in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-198">사용 하 여는 <xref:System.Windows.Media.Visual.PointFromScreen%2A> 변환 하는 메서드를 <xref:System.Windows.Point> 화면 좌표에 있는 <xref:System.Windows.Point> 의 현재 좌표계를 나타내는 <xref:System.Windows.Media.Visual>.</span><span class="sxs-lookup"><span data-stu-id="8704e-198">Use the <xref:System.Windows.Media.Visual.PointFromScreen%2A> method to convert a <xref:System.Windows.Point> in screen coordinates into a <xref:System.Windows.Point> that represents the current coordinate system of the <xref:System.Windows.Media.Visual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveVisualChild">
      <MemberSignature Language="C#" Value="protected void RemoveVisualChild (System.Windows.Media.Visual child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveVisualChild(class System.Windows.Media.Visual child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveVisualChild (child As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveVisualChild(System::Windows::Media::Visual ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveVisualChild : System.Windows.Media.Visual -&gt; unit" Usage="visual.RemoveVisualChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="8704e-199">부모 시각적 개체에서 제거할 자식 시각적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-199">The child visual object to remove from the parent visual.</span></span></param>
        <summary><span data-ttu-id="8704e-200">두 시각적 개체 사이의 부모/자식 관계를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-200">Removes the parent-child relationship between two visuals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-201"><xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드 두 시각적 개체 사이의 부모-자식 관계를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-201">The <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> method removes the parent-child relationship between two visuals.</span></span> <span data-ttu-id="8704e-202">이 메서드는 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 메서드와 함께 시각적 자식 개체의 기본 스토리지 구현에 대한 낮은 수준 제어가 필요할 때 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-202">This method, along with the <xref:System.Windows.Media.Visual.AddVisualChild%2A> method, must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</span></span> <span data-ttu-id="8704e-203"><xref:System.Windows.Media.VisualCollection> 자식 개체를 저장 하는 것에 대 한 기본 구현으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-203"><xref:System.Windows.Media.VisualCollection> can be used as a default implementation for storing child objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8704e-204">다음 예제에서는 시각적 자식 개체의 사용자 지정 스토리지 요구 사항을 정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-204">The following example shows how to define custom storage requirements for a visual child.</span></span> <span data-ttu-id="8704e-205">이 예제에서는 사용 합니다 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 시각적 부모 간의 부모-자식 관계를 설정 하는 메서드 및 `child`합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-205">The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`.</span></span> <span data-ttu-id="8704e-206">올바르게 열거할 시각적 트리에 대 한 순서로 예제의 재정의 된 구현을 제공 하는 <xref:System.Windows.Media.Visual.GetVisualChild%2A> 메서드 및 <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-206">In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8704e-207"><xref:System.Windows.Media.VisualCollection>을 사용하여 시각적 개체 간의 부모-자식 관계를 만들 수는 있지만 한 자식만 부모에 연결된 경우 고유한 사용자 지정 스토리지 구현을 제공하는 것이 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-207">Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</span></span>  
  
 [!code-csharp[AddVisualChild#AddVisualChild01](~/samples/snippets/csharp/VS_Snippets_Wpf/AddVisualChild/CSharp/Window1.xaml.cs#addvisualchild01)]
 [!code-vb[AddVisualChild#AddVisualChild01](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AddVisualChild/visualbasic/window1.xaml.vb#addvisualchild01)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.VisualCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformToAncestor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8704e-208">좌표를 <see cref="T:System.Windows.Media.Visual" />에서 시각적 개체의 지정된 상위 항목으로 변환하는 데 사용할 수 있는 변환을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-208">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified ancestor of the visual object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor (System.Windows.Media.Media3D.Visual3D ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor(class System.Windows.Media.Media3D.Visual3D ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual3D) As GeneralTransform2DTo3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::GeneralTransform2DTo3D ^ TransformToAncestor(System::Windows::Media::Media3D::Visual3D ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Media3D.Visual3D -&gt; System.Windows.Media.Media3D.GeneralTransform2DTo3D" Usage="visual.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.GeneralTransform2DTo3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="8704e-209">좌표가 변환되는 <see cref="T:System.Windows.Media.Media3D.Visual3D" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-209">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="8704e-210">좌표를 <see cref="T:System.Windows.Media.Visual" />에서 시각적 개체의 지정된 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 상위 항목으로 변환하는 데 사용할 수 있는 변환을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-210">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</span></span></summary>
        <returns><span data-ttu-id="8704e-211">좌표를 <see cref="T:System.Windows.Media.Visual" />에서 시각적 개체의 지정된 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 상위 항목으로 변환하는 데 사용할 수 있는 변환입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-211">A transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToAncestor (System.Windows.Media.Visual ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToAncestor(class System.Windows.Media.Visual ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToAncestor(System::Windows::Media::Visual ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="8704e-212">좌표가 변환되는 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-212">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="8704e-213">좌표를 <see cref="T:System.Windows.Media.Visual" />에서 시각적 개체의 지정된 <see cref="T:System.Windows.Media.Visual" /> 상위 항목으로 변환하는 데 사용할 수 있는 변환을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-213">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Visual" /> ancestor of the visual object.</span></span></summary>
        <returns><span data-ttu-id="8704e-214"><see cref="T:System.Windows.Media.GeneralTransform" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-214">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-215">사용할 수 있습니다는 <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType> 부모를 기준으로 시각적 개체의 오프셋을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-215">Alternatively, you can use the <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType> method to retrieve the offset of a visual object relative to its parent.</span></span> <span data-ttu-id="8704e-216">오프셋된 값이 포함 되어 반환 된 <xref:System.Windows.Vector> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-216">The offset values are contained within the returned <xref:System.Windows.Vector> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet2)]
 [!code-vb[VisualSnippets#VisualSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet2)]  
  
   
  
## Examples  
 <span data-ttu-id="8704e-217">다음 태그 예제는 <xref:System.Windows.Controls.TextBlock> 안에 두 개의 중첩 된 <xref:System.Windows.Controls.StackPanel> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-217">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is nested within two <xref:System.Windows.Controls.StackPanel> objects.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window2.xaml#visualsnippet7)]  
  
 <span data-ttu-id="8704e-218">다음 코드 예제를 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Media.Visual.TransformToAncestor%2A> 의 오프셋을 검색 하는 메서드를 <xref:System.Windows.Controls.TextBlock> 포함 하는 기준으로 <xref:System.Windows.Window>입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-218">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock> relative to the containing <xref:System.Windows.Window>.</span></span> <span data-ttu-id="8704e-219">오프셋된 값이 포함 되어 반환 된 <xref:System.Windows.Media.GeneralTransform>합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-219">The offset values are contained in the returned <xref:System.Windows.Media.GeneralTransform>.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet5](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet5)]
 [!code-vb[VisualSnippets#VisualSnippet5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet5)]  
  
 <span data-ttu-id="8704e-220">오프셋을 고려 합니다 <xref:System.Windows.FrameworkElement.Margin%2A> 내의 포함 하는 모든 개체에 대 한 값 <xref:System.Windows.Window>합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-220">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects within the containing <xref:System.Windows.Window>.</span></span> <span data-ttu-id="8704e-221">이 예에서 <xref:System.Windows.Vector.X%2A> 는 28, 및 <xref:System.Windows.Vector.Y%2A> 는 28입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-221">In this case, <xref:System.Windows.Vector.X%2A> is 28, and <xref:System.Windows.Vector.Y%2A> is 28.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8704e-222"><paramref name="ancestor" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-222"><paramref name="ancestor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8704e-223"><paramref name="ancestor" />가 시각적 개체의 상위 항목인 경우</span><span class="sxs-lookup"><span data-stu-id="8704e-223"><paramref name="ancestor" /> is not an ancestor of the visual.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8704e-224">시각적 개체가 관련되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8704e-224">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToDescendant">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToDescendant (System.Windows.Media.Visual descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToDescendant(class System.Windows.Media.Visual descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToDescendant (descendant As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToDescendant(System::Windows::Media::Visual ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.TransformToDescendant : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToDescendant descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="descendant"><span data-ttu-id="8704e-225">좌표가 변환되는 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-225">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="8704e-226">좌표를 <see cref="T:System.Windows.Media.Visual" />에서 지정된 시각적 개체 하위 항목으로 변환하는 데 사용할 수 있는 변환을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-226">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object descendant.</span></span></summary>
        <returns><span data-ttu-id="8704e-227"><see cref="T:System.Windows.Media.GeneralTransform" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-227">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8704e-228">다음 태그 예제는 <xref:System.Windows.Controls.TextBlock> 에 포함 된를 <xref:System.Windows.Controls.StackPanel> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-228">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  
  
 <span data-ttu-id="8704e-229">다음 코드 예제를 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Media.Visual.TransformToDescendant%2A> 의 오프셋을 검색 하는 메서드를 <xref:System.Windows.Controls.StackPanel> 해당 자식에 상대적인 <xref:System.Windows.Controls.TextBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-229">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToDescendant%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="8704e-230">오프셋된 값이 포함 되어 반환 된 <xref:System.Windows.Media.GeneralTransform> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-230">The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet9)]
 [!code-vb[VisualSnippets#VisualSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet9)]  
  
 <span data-ttu-id="8704e-231">오프셋을 고려 합니다 <xref:System.Windows.FrameworkElement.Margin%2A> 모든 개체에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-231">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects.</span></span> <span data-ttu-id="8704e-232">이 예에서 <xref:System.Windows.Vector.X%2A> -4 이며, 및 <xref:System.Windows.Vector.Y%2A> -4 이며, 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-232">In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4.</span></span> <span data-ttu-id="8704e-233">부모 개체의 자식 개체를 기준으로 음수 오프셋 때문에 오프셋된 값은 음수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-233">The offset values are negative values because the parent object is negatively offset relative to its child object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8704e-234"><paramref name="descendant" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-234"><paramref name="descendant" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8704e-235">시각적 개체가 <paramref name="descendant" /> 시각적 개체의 상위 항목이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8704e-235">The visual is not an ancestor of the <paramref name="descendant" /> visual.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8704e-236">시각적 개체가 관련되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8704e-236">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToVisual">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.TransformToVisual : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="8704e-237">좌표가 변환되는 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-237">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="8704e-238">좌표를 <see cref="T:System.Windows.Media.Visual" />에서 지정된 시각적 개체로 변환하는 데 사용할 수 있는 변환을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-238">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object.</span></span></summary>
        <returns><span data-ttu-id="8704e-239"><see cref="T:System.Windows.Media.GeneralTransform" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-239">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-240">합니다 <xref:System.Windows.Media.Visual.TransformToAncestor%2A> 고 <xref:System.Windows.Media.Visual.TransformToDescendant%2A> 시각적 개체에 대 한 변환을 반환할 방법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-240">The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods can also be used to return a transform for a visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8704e-241">다음 태그 예제는 <xref:System.Windows.Controls.TextBlock> 에 포함 된를 <xref:System.Windows.Controls.StackPanel> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-241">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  
  
 <span data-ttu-id="8704e-242">다음 코드 예제를 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Media.Visual.TransformToVisual%2A> 의 오프셋을 검색 하는 메서드를 <xref:System.Windows.Controls.StackPanel> 해당 자식에 상대적인 <xref:System.Windows.Controls.TextBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-242">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToVisual%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="8704e-243">오프셋된 값이 포함 되어 반환 된 <xref:System.Windows.Media.GeneralTransform> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-243">The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet8](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet8)]
 [!code-vb[VisualSnippets#VisualSnippet8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet8)]  
  
 <span data-ttu-id="8704e-244">오프셋을 고려 합니다 <xref:System.Windows.FrameworkElement.Margin%2A> 모든 개체에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-244">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects.</span></span> <span data-ttu-id="8704e-245">이 예에서 <xref:System.Windows.Vector.X%2A> -4 이며, 및 <xref:System.Windows.Vector.Y%2A> -4 이며, 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-245">In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4.</span></span> <span data-ttu-id="8704e-246">부모 개체의 자식 개체를 기준으로 음수 오프셋 때문에 오프셋된 값은 음수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-246">The offset values are negative values because the parent object is negatively offset relative to its child object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8704e-247"><paramref name="visual" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-247"><paramref name="visual" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8704e-248">시각적 개체가 관련되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="8704e-248">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::BitmapEffect ^ VisualBitmapEffect {  protected public:&#xA;System::Windows::Media::Effects::BitmapEffect ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.Media.Visual.VisualBitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-249"><see cref="T:System.Windows.Media.Effects.BitmapEffect" />에 대한 <see cref="T:System.Windows.Media.Visual" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-249">Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-250">이 시각적 개체에 대한 비트맵 효과입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-250">The bitmap effect for this visual object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.UIElement.BitmapEffect" />
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::BitmapEffectInput ^ VisualBitmapEffectInput {  protected public:&#xA;System::Windows::Media::Effects::BitmapEffectInput ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.Media.Visual.VisualBitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-251"><see cref="T:System.Windows.Media.Effects.BitmapEffectInput" />에 대한 <see cref="T:System.Windows.Media.Visual" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-251">Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-252">이 시각적 개체에 대한 비트맵 효과 입력 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-252">The bitmap effect input value for this visual object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.UIElement.BitmapEffectInput" />
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapScalingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapScalingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapScalingMode As BitmapScalingMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::BitmapScalingMode VisualBitmapScalingMode {  protected public:&#xA;System::Windows::Media::BitmapScalingMode get(); protected:&#xA; void set(System::Windows::Media::BitmapScalingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapScalingMode : System.Windows.Media.BitmapScalingMode with get, set" Usage="System.Windows.Media.Visual.VisualBitmapScalingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapScalingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-253"><see cref="T:System.Windows.Media.BitmapScalingMode" />의 <see cref="T:System.Windows.Media.Visual" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-253">Gets or sets the <see cref="T:System.Windows.Media.BitmapScalingMode" /> for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-254">의 <see cref="T:System.Windows.Media.BitmapScalingMode" /> 값입니다 <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="8704e-254">The <see cref="T:System.Windows.Media.BitmapScalingMode" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualCacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode VisualCacheMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode VisualCacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualCacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualCacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::CacheMode ^ VisualCacheMode {  protected public:&#xA;System::Windows::Media::CacheMode ^ get(); protected:&#xA; void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualCacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.Media.Visual.VisualCacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-255"><see cref="T:System.Windows.Media.Visual" />의 캐시된 표현을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-255">Gets or sets a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-256"><see cref="T:System.Windows.Media.CacheMode" />의 캐시된 표현을 보유하는 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-256">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-257">설정 된 <xref:System.Windows.Media.Visual.VisualCacheMode%2A> 렌더링 시간이 많이 소요 되는 콘텐츠에 대 한 성능 향상을 위해 필요한 경우 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-257">Set the <xref:System.Windows.Media.Visual.VisualCacheMode%2A> property when you need to increase performance for content that is time-consuming to render.</span></span> <span data-ttu-id="8704e-258">자세한 내용은 <xref:System.Windows.Media.BitmapCache>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8704e-258">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.CacheMode" />
        <altmember cref="P:System.Windows.Media.ContainerVisual.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected virtual int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.Media.Visual.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-259"><see cref="T:System.Windows.Media.Visual" />의 자식 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-259">Gets the number of child elements for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-260">자식 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-260">The number of child elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-261">기본적으로 <xref:System.Windows.Media.Visual> 자식이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-261">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span> <span data-ttu-id="8704e-262">따라서 기본 구현에서는 항상 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-262">Therefore, the default implementation always returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8704e-263">다음 예제에서는 재정의 된 구현을 정의 <xref:System.Windows.Media.Visual.VisualChildrenCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-263">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.VisualChildrenCount%2A>.</span></span>  
  
 [!code-csharp[DrawingVisualSample#102a](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#102a)]
 [!code-vb[DrawingVisualSample#102a](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#102a)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8704e-264">파생 된 클래스 <see cref="T:System.Windows.Media.Visual" /> 이 속성을 재정의 해야 합니다 및는 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> 메서드를 올바르게 열거할 시각적 트리에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-264">A class that derives from <see cref="T:System.Windows.Media.Visual" /> must override this property, and also the <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> method, for the visual tree to be enumerated correctly.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="VisualClearTypeHint">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.ClearTypeHint VisualClearTypeHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.ClearTypeHint VisualClearTypeHint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualClearTypeHint" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualClearTypeHint As ClearTypeHint" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::ClearTypeHint VisualClearTypeHint { System::Windows::Media::ClearTypeHint get(); void set(System::Windows::Media::ClearTypeHint value); };" />
      <MemberSignature Language="F#" Value="member this.VisualClearTypeHint : System.Windows.Media.ClearTypeHint with get, set" Usage="System.Windows.Media.Visual.VisualClearTypeHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ClearTypeHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-265">ClearType이 <see cref="T:System.Windows.Media.ClearTypeHint" />에서 렌더링되는 방법을 결정하는 <see cref="T:System.Windows.Media.Visual" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-265">Gets or sets the <see cref="T:System.Windows.Media.ClearTypeHint" /> that determines how ClearType is rendered in the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-266"><see cref="T:System.Windows.Media.ClearTypeHint" />의 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-266">A <see cref="T:System.Windows.Media.ClearTypeHint" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualClip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry VisualClip { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry VisualClip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualClip" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualClip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Geometry ^ VisualClip {  protected public:&#xA;System::Windows::Media::Geometry ^ get(); protected:&#xA; void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualClip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.Media.Visual.VisualClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-267"><see cref="T:System.Windows.Media.Visual" />의 클립 영역을 <see cref="T:System.Windows.Media.Geometry" /> 값으로 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-267">Gets or sets the clip region of the <see cref="T:System.Windows.Media.Visual" /> as a <see cref="T:System.Windows.Media.Geometry" /> value.</span></span></summary>
        <value><span data-ttu-id="8704e-268"><see cref="T:System.Windows.Media.Geometry" /> 형식인 시각적 개체의 클립 영역 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-268">The clip region value of the visual as a <see cref="T:System.Windows.Media.Geometry" /> type.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms746710(v=vs.90)"><span data-ttu-id="8704e-269">방법: 클립 영역 만들기</span><span class="sxs-lookup"><span data-stu-id="8704e-269">How to: Create a Clip Region</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VisualEdgeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.EdgeMode VisualEdgeMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.EdgeMode VisualEdgeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualEdgeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualEdgeMode As EdgeMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::EdgeMode VisualEdgeMode {  protected public:&#xA;System::Windows::Media::EdgeMode get(); protected:&#xA; void set(System::Windows::Media::EdgeMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualEdgeMode : System.Windows.Media.EdgeMode with get, set" Usage="System.Windows.Media.Visual.VisualEdgeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.EdgeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-270"><see cref="T:System.Windows.Media.Visual" />의 가장자리 모드를 <see cref="T:System.Windows.Media.EdgeMode" /> 값으로 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-270">Gets or sets the edge mode of the <see cref="T:System.Windows.Media.Visual" /> as an <see cref="T:System.Windows.Media.EdgeMode" /> value.</span></span></summary>
        <value><span data-ttu-id="8704e-271">시각적 개체의 <see cref="T:System.Windows.Media.EdgeMode" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-271">The <see cref="T:System.Windows.Media.EdgeMode" /> value of the visual.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect VisualEffect { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect VisualEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualEffect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::Effect ^ VisualEffect {  protected public:&#xA;System::Windows::Media::Effects::Effect ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualEffect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.Media.Visual.VisualEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-272"><see cref="T:System.Windows.Media.Visual" />에 적용할 비트맵 효과를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-272">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-273">비트맵 효과를 나타내는 <see cref="T:System.Windows.Media.Effects.Effect" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-273">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="VisualOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Vector VisualOffset { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector VisualOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOffset As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Vector VisualOffset {  protected public:&#xA;System::Windows::Vector get(); protected:&#xA; void set(System::Windows::Vector value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOffset : System.Windows.Vector with get, set" Usage="System.Windows.Media.Visual.VisualOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-274">시각적 개체의 오프셋 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-274">Gets or sets the offset value of the visual object.</span></span></summary>
        <value><span data-ttu-id="8704e-275">오프셋 값을 지정하는 <see cref="T:System.Windows.Vector" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-275">A <see cref="T:System.Windows.Vector" /> that specifies the offset value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualOpacity">
      <MemberSignature Language="C#" Value="public double VisualOpacity { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VisualOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:  property double VisualOpacity {  protected public:&#xA;double get(); protected:&#xA; void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOpacity : double with get, set" Usage="System.Windows.Media.Visual.VisualOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-276"><see cref="T:System.Windows.Media.Visual" />의 불투명도를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-276">Gets or sets the opacity of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-277">시각적 개체의 불투명도 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-277">The opacity value of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-278">불투명도 값을 <xref:System.Windows.Media.Visual> 0과 1 사이의 값으로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-278">The value of the opacity of the <xref:System.Windows.Media.Visual> is expressed as a value between 0 and 1.</span></span> <span data-ttu-id="8704e-279">값이 0 값이 1 이면 요소 완전히 불투명 하는 반면 요소 완전히 투명 하 고, 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-279">A value of 0 indicates that the element is completely transparent, whereas a value of 1 indicates that the element is completely opaque.</span></span> <span data-ttu-id="8704e-280">값이 0.5 50% 불투명 하는 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-280">A value of 0.5 indicates that the element is 50 percent opaque.</span></span> <span data-ttu-id="8704e-281">0 보다 작은 값은 0으로 취급 됩니다. 1 보다 큰 값을 1로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-281">Values that are less than 0 are treated as 0; values that are greater than 1 are treated as 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualOpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush VisualOpacityMask { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush VisualOpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Brush ^ VisualOpacityMask {  protected public:&#xA;System::Windows::Media::Brush ^ get(); protected:&#xA; void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.Media.Visual.VisualOpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-282"><see cref="T:System.Windows.Media.Brush" />의 불투명 마스크를 나타내는 <see cref="T:System.Windows.Media.Visual" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-282">Gets or sets the <see cref="T:System.Windows.Media.Brush" /> value that represents the opacity mask of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-283">시각적 개체의 불투명 마스크 값을 나타내는 <see cref="T:System.Windows.Media.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-283">A <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-284">불투명 마스크를 <xref:System.Windows.Media.Brush> 이 시각적 개체의 렌더링 된 콘텐츠에 대 한 모든 알파 채널 마스킹에 적용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-284">The opacity mask is a <xref:System.Windows.Media.Brush> that is applied to any alpha-channel masking for the rendered content of this visual.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualParent">
      <MemberSignature Language="C#" Value="protected System.Windows.DependencyObject VisualParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject VisualParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualParent" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VisualParent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::DependencyObject ^ VisualParent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualParent : System.Windows.DependencyObject" Usage="System.Windows.Media.Visual.VisualParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-285">시각적 개체의 시각적 트리 부모를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-285">Gets the visual tree parent of the visual object.</span></span></summary>
        <value><span data-ttu-id="8704e-286">부모 <see cref="T:System.Windows.Media.Visual" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-286">The <see cref="T:System.Windows.Media.Visual" /> parent.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.Parent" />
        <altmember cref="T:System.Windows.Media.VisualTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="VisualScrollableAreaClip">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Windows.Rect&gt; VisualScrollableAreaClip { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Windows.Rect&gt; VisualScrollableAreaClip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualScrollableAreaClip" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualScrollableAreaClip As Nullable(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;System::Windows::Rect&gt; VisualScrollableAreaClip {  protected public:&#xA;Nullable&lt;System::Windows::Rect&gt; get(); protected:&#xA; void set(Nullable&lt;System::Windows::Rect&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.VisualScrollableAreaClip : Nullable&lt;System.Windows.Rect&gt; with get, set" Usage="System.Windows.Media.Visual.VisualScrollableAreaClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-287"><see cref="T:System.Windows.Media.Visual" />의 스크롤할 수 있는 클리핑된 영역을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-287">Gets or sets a clipped scrollable area for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-288">스크롤할 수 있는 클리핑 영역을 나타내는 <see cref="T:System.Windows.Rect" />이거나 클리핑 영역이 할당되지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-288">A <see cref="T:System.Windows.Rect" /> that represents the scrollable clipping area, or <see langword="null" /> if no clipping area is assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-289">설정 된 <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 소프트웨어에서 렌더링할 때 스크롤 속성을 가속화 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-289">Set the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property to enable accelerated scrolling when rendering in software.</span></span> <span data-ttu-id="8704e-290">원격 데스크톱을 통해 또는 가상 컴퓨터에서 실행 하는 등의 원격 렌더링 시나리오에서 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-290">This is useful in remote rendering scenarios, such as running over Remote Desktop or running in a virtual machine.</span></span> <span data-ttu-id="8704e-291">부모 요소의 자식을 스크롤할 수는이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-291">Set this property on the parent element whose children will be scrolled.</span></span> <span data-ttu-id="8704e-292">설정 된 <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 렌더링은 하드웨어 가속 속성은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-292">Setting the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property has no effect when rendering is hardware accelerated.</span></span>  
  
 <span data-ttu-id="8704e-293"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 속성을 사용 하면 특정 고급 시나리오입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-293">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property enables specific, advanced scenarios.</span></span> <span data-ttu-id="8704e-294">다음 목록은 사용 하는 경우 적용 되는 주의 <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-294">The following list shows the caveats that apply when you use the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property.</span></span>  
  
-   <span data-ttu-id="8704e-295">스크롤 영역의 배경을 불투명 이거나 아티팩트 스크롤 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-295">The background of the scrolled area must be opaque, or scrolling artifacts will occur.</span></span>  
  
-   <span data-ttu-id="8704e-296"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 속성은 WPF는 소프트웨어에서 렌더링할 때에 스크롤을 가속화 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-296">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property accelerates scrolling only when WPF is rendering in software.</span></span> <span data-ttu-id="8704e-297">예를 들어,이 경우 애플리케이션은 원격 데스크톱을 통해 실행 하거나 가상 컴퓨터에서 로컬로 실행할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-297">For example, this situation occurs when the application is running over Remote Desktop or running locally in a virtual machine.</span></span>  
  
-   <span data-ttu-id="8704e-298">하드웨어에서 렌더링 하는 경우에 스크롤 동작을 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-298">The scrolling behavior is unchanged when rendering in hardware.</span></span> <span data-ttu-id="8704e-299">스크롤 동작의 차이 방지 하려면 보관 해야 합니다 <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 하드웨어 및 소프트웨어를 모두 사용 하도록 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-299">To prevent differences in scrolling behavior, you should keep the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property enabled for both hardware and software.</span></span>  
  
-   <span data-ttu-id="8704e-300">회전 및 기울이기 변환 가속 스크롤을 비활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-300">Rotate and skew transforms disable accelerated scrolling.</span></span> <span data-ttu-id="8704e-301">Scale 변환과 스크롤된 영역 위에 가로 또는 세로 번역 제대로 작동 하 고 스크롤 가속을 해제 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-301">Scale transforms and horizontal or vertical translations above the scrolled region work correctly and do not disable scrolling acceleration.</span></span>  
  
-   <span data-ttu-id="8704e-302">하위 트리를 변경 하거나 애니메이션을 통해 다시 그리기를 스크롤할 수 있는 영역의 일부를 트리거하면 예상 대로 작동 하지만 다시 영역에 대 한 가속 스크롤의 이점을 잃게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-302">Changing the subtree or triggering parts of the scrollable area to redraw via animation behave as expected, but lose the benefit of accelerated scrolling for the redrawn area.</span></span> <span data-ttu-id="8704e-303">동일한 프레임 중 스크롤된 영역을 무효화 하는 애니메이션 스크롤 하는이 최적화의 장점을 제거 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-303">Any animation that invalidates the scrolled area during the same frame in which scrolling occurs eliminates the benefit of this optimization.</span></span>  
  
-   <span data-ttu-id="8704e-304"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 사각형 안쪽 픽셀으로 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-304">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> rectangle snaps inward to pixels.</span></span> <span data-ttu-id="8704e-305">따라서 스크롤 영역의 기본 크기는 항상 설정한 크기 보다 작거나 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-305">Therefore, the snapped size of the scrolling rectangle is always less than or equal to the size you have set.</span></span>  
  
-   <span data-ttu-id="8704e-306">오프셋을 아래로 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-306">Offsets snap downward.</span></span> <span data-ttu-id="8704e-307">이 이전의 차이 기본 오프셋을 현재 기본 오프셋은 픽셀 정수 항상 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-307">This means that the difference of the previous snapped offset and current snapped offset is always an integer number of pixels.</span></span>  
  
-   <span data-ttu-id="8704e-308">적중된 테스트는 픽셀까지 여 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-308">Hit tests can be off by up to a pixel.</span></span>  
  
-   <span data-ttu-id="8704e-309">레이아웃 반올림 켜야, 스크롤 가능한 영역 및 경계 창의 클라이언트 영역 가장자리 모눈으로 픽셀 경계를 올바르게 정렬 하는 것이 있기 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-309">Layout rounding should be turned on, because it ensures that the edges of scrollable areas and the boundary window client area are snapped to pixel boundaries, resulting in correct alignment.</span></span>  
  
-   <span data-ttu-id="8704e-310">창 겹침된 가속 스크롤이 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-310">Scrolling acceleration does not work on layered windows.</span></span> <span data-ttu-id="8704e-311">즉, windows는 AllowTransparency의 = = true window.windowstyle = = none, 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-311">This means windows in which AllowTransparency == true, window.windowstyle == none, and so on.</span></span>  
  
-   <span data-ttu-id="8704e-312">가속 스크롤 전체 창 렌더링 하는 동안 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-312">Scrolling acceleration does not occur during full-window rendering.</span></span>  
  
-   <span data-ttu-id="8704e-313">가속 스크롤 창의 두 모니터를 포괄 하는 경우 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-313">Scrolling acceleration does not work when the window straddles two monitors.</span></span>  
  
-   <span data-ttu-id="8704e-314">가속 스크롤이 있는 스크롤 요소의 부모 체인에서 중간 렌더링 대상 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-314">Scrolling acceleration does not work in the presence of intermediate render targets in the parent chain of the scrolled element.</span></span> <span data-ttu-id="8704e-315">다음 목록은 몇 가지 중간 렌더링 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-315">The following list shows some of these intermediate render targets.</span></span>  
  
    -   <span data-ttu-id="8704e-316">클립</span><span class="sxs-lookup"><span data-stu-id="8704e-316">Clips</span></span>  
  
    -   <span data-ttu-id="8704e-317">효과</span><span class="sxs-lookup"><span data-stu-id="8704e-317">Effects</span></span>  
  
    -   <span data-ttu-id="8704e-318">DrawingBrushes</span><span class="sxs-lookup"><span data-stu-id="8704e-318">DrawingBrushes</span></span>  
  
    -   <span data-ttu-id="8704e-319">VisualBrushes</span><span class="sxs-lookup"><span data-stu-id="8704e-319">VisualBrushes</span></span>  
  
    -   <span data-ttu-id="8704e-320">OpacityMasks</span><span class="sxs-lookup"><span data-stu-id="8704e-320">OpacityMasks</span></span>  
  
    -   <span data-ttu-id="8704e-321">Opacity</span><span class="sxs-lookup"><span data-stu-id="8704e-321">Opacity</span></span>  
  
-   <span data-ttu-id="8704e-322">프레임 마다 하나의 가속된 스크롤 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-322">Only one accelerated scroll can happen per frame.</span></span> <span data-ttu-id="8704e-323">여러 가속된 스크롤 영역에 있을 수 있지만 그 중 하나만 프레임 중 가속된 된 스크롤을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-323">There can be multiple accelerated scroll areas, but only one of them can perform an accelerated scroll during a frame.</span></span> <span data-ttu-id="8704e-324">어떤 영역 스크롤되는 확정적이 지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-324">Which area is scrolled is indeterminate.</span></span>  
  
-   <span data-ttu-id="8704e-325">가속 스크롤 스크롤 영역 (z 좌표) 콘텐츠의 rest를 사용 하 여 스크롤되지 않는 위에 콘텐츠를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-325">Scrolling acceleration supports content above the scrolling region (in z-order) that is not scrolled with the rest of the content.</span></span> <span data-ttu-id="8704e-326">시스템 필요한 모든 변경 영역을 계산 하 고 가속화 된 scroll을 완료 하지만 스크롤된 실수로 부분으로 이동 네트워크를 통해 몇 가지 추가 비트맵 화면에서 올바른 위치로 다시 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-326">The system calculates all necessary dirty regions and completes the accelerated scroll, but it sends several additional bitmaps over the wire to move the unintentionally scrolled portion back to its correct position on screen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTextHintingMode">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.TextHintingMode VisualTextHintingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextHintingMode VisualTextHintingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTextHintingMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualTextHintingMode As TextHintingMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::TextHintingMode VisualTextHintingMode { System::Windows::Media::TextHintingMode get(); void set(System::Windows::Media::TextHintingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTextHintingMode : System.Windows.Media.TextHintingMode with get, set" Usage="System.Windows.Media.Visual.VisualTextHintingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextHintingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-327"><see cref="T:System.Windows.Media.Visual" />의 <see cref="T:System.Windows.Media.TextHintingMode" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-327">Gets or sets the <see cref="T:System.Windows.Media.TextHintingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-328"><see cref="T:System.Windows.Media.Visual" />에 적용된 <see cref="T:System.Windows.Media.TextHintingMode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-328">The <see cref="T:System.Windows.Media.TextHintingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTextRenderingMode">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.TextRenderingMode VisualTextRenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextRenderingMode VisualTextRenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTextRenderingMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualTextRenderingMode As TextRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::TextRenderingMode VisualTextRenderingMode { System::Windows::Media::TextRenderingMode get(); void set(System::Windows::Media::TextRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTextRenderingMode : System.Windows.Media.TextRenderingMode with get, set" Usage="System.Windows.Media.Visual.VisualTextRenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-329"><see cref="T:System.Windows.Media.Visual" />의 <see cref="T:System.Windows.Media.TextRenderingMode" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-329">Gets or sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-330"><see cref="T:System.Windows.Media.Visual" />에 적용된 <see cref="T:System.Windows.Media.TextRenderingMode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-330">The <see cref="T:System.Windows.Media.TextRenderingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform VisualTransform { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform VisualTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Transform ^ VisualTransform {  protected public:&#xA;System::Windows::Media::Transform ^ get(); protected:&#xA; void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.Media.Visual.VisualTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-331"><see cref="T:System.Windows.Media.Transform" />에 대한 <see cref="T:System.Windows.Media.Visual" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-331">Gets or sets the <see cref="T:System.Windows.Media.Transform" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="8704e-332">시각적 개체의 변환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-332">The transform value of the visual.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualXSnappingGuidelines">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection VisualXSnappingGuidelines { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection VisualXSnappingGuidelines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualXSnappingGuidelines As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::DoubleCollection ^ VisualXSnappingGuidelines {  protected public:&#xA;System::Windows::Media::DoubleCollection ^ get(); protected:&#xA; void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualXSnappingGuidelines : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-333">X 좌표(세로) 안내선 컬렉션을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-333">Gets or sets the x-coordinate (vertical) guideline collection.</span></span></summary>
        <value><span data-ttu-id="8704e-334">시각적 개체의 X 좌표 안내선 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-334">The x-coordinate guideline collection of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-335">픽셀 맞추기는 개체 가장자리 디바이스 관련 픽셀에서 렌더링 되도록 내용 레이아웃을 고정 하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-335">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="8704e-336">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 그래픽 시스템에서는 해상도와 디바이스의 영향을 받지 않기 위해 디바이스 독립적 단위를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-336">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="8704e-337">각 디바이스 독립적 픽셀은 시스템의 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 설정에 맞게 자동으로 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-337">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="8704e-338">이를 통해 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 애플리케이션에서 다양한 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 설정에 적합하게 크기를 조정할 수 있으며 자동으로 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]를 인식할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-338">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="8704e-339">그러나이 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 독립성 앤티앨리어싱으로 인해 불규칙 한 가장자리 렌더링을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-339">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="8704e-340">일반적으로 흐리거나 "soft" 가장자리로 표시는 이러한 아티팩트는 가장자리의 위치가 디바이스 픽셀 사이가 아닌 디바이스 픽셀 가운데에 있을 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-340">These artifacts, commonly seen as blurry or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="8704e-341">이 문제를 해결 하기 위해 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] "맞춤선" 디바이스 픽셀 앤티 앨리어싱으로 인해 생성 된 부드러운 가장자리를 제거 하는 시각적 트리의 가장자리 개체에 대 한 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-341">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="VisualYSnappingGuidelines">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection VisualYSnappingGuidelines { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection VisualYSnappingGuidelines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualYSnappingGuidelines As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::DoubleCollection ^ VisualYSnappingGuidelines {  protected public:&#xA;System::Windows::Media::DoubleCollection ^ get(); protected:&#xA; void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualYSnappingGuidelines : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8704e-342">Y 좌표(가로) 안내선 컬렉션을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-342">Gets or sets the y-coordinate (horizontal) guideline collection.</span></span></summary>
        <value><span data-ttu-id="8704e-343">시각적 개체의 Y 좌표 안내선 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-343">The y-coordinate guideline collection of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8704e-344">픽셀 맞추기는 개체 가장자리 디바이스 관련 픽셀에서 렌더링 되도록 내용 레이아웃을 고정 하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-344">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="8704e-345">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 그래픽 시스템에서는 해상도와 디바이스의 영향을 받지 않기 위해 디바이스 독립적 단위를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-345">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="8704e-346">각 디바이스 독립적 픽셀은 시스템의 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 설정에 맞게 자동으로 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-346">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="8704e-347">이를 통해 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 애플리케이션에서 다양한 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 설정에 적합하게 크기를 조정할 수 있으며 자동으로 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]를 인식할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-347">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="8704e-348">그러나이 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 독립성 앤티앨리어싱으로 인해 불규칙 한 가장자리 렌더링을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-348">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="8704e-349">일반적으로 흐리거나 "soft" 가장자리로 표시는 이러한 아티팩트는 가장자리의 위치가 디바이스 픽셀 사이가 아닌 디바이스 픽셀 가운데에 있을 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-349">These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="8704e-350">이 문제를 해결 하기 위해 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] "맞춤선" 디바이스 픽셀 앤티 앨리어싱으로 인해 생성 된 부드러운 가장자리를 제거 하는 시각적 트리의 가장자리 개체에 대 한 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8704e-350">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
  </Members>
</Type>