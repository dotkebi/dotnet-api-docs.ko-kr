<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="828c55a26c79fe66dbecfd231ef79e2678db9276" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56778344" /></Metadata><TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c082b-101">클라이언트 애플리케이션의 구성 파일에 액세스할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-101">Provides access to configuration files for client applications.</span></span> <span data-ttu-id="c082b-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-103"><xref:System.Configuration.ConfigurationManager> 클래스를 사용 하면 액세스 컴퓨터, 애플리케이션 및 사용자 구성 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="c082b-104">이 클래스를 대체 합니다 <xref:System.Configuration.ConfigurationSettings> 클래스는 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="c082b-105">웹 애플리케이션을 <xref:System.Web.Configuration.WebConfigurationManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="c082b-106">사용 하는 <xref:System.Configuration.ConfigurationManager> 클래스를 프로젝트 참조 해야 합니다는 `System.Configuration` 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="c082b-107">기본적으로 콘솔 애플리케이션 같은 일부 프로젝트 템플릿에서 참조 하지 않습니다이 어셈블리 하므로 직접 참조 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c082b-108">이름 및 애플리케이션 구성 파일의 위치를 애플리케이션의 호스트에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="c082b-109">자세한 내용은 참조 하세요. [NIB: 응용 프로그램 구성 파일](https://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0)합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-109">For more information, see [NIB: Application Configuration Files](https://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="c082b-110">기본 제공을 사용할 수 있습니다 <xref:System.Configuration> 또는 구성 정보를 처리 하는 데에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="c082b-111">이러한 형식을 사용 하 여 구성 정보로 직접 작업할 수 있습니다 하 고 구성 파일 사용자 지정 정보를 포함 하도록 확장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="c082b-112"><xref:System.Configuration.ConfigurationManager> 클래스에 다음 작업을 수행할 수 있도록 하는 멤버를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="c082b-113">구성 파일에서 섹션을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-113">Read a section from a configuration file.</span></span> <span data-ttu-id="c082b-114">구성 정보에 액세스 하려면 호출을 <xref:System.Configuration.ConfigurationManager.GetSection%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c082b-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="c082b-115">와 같은 일부 섹션에 대 한 `appSettings` 및 `connectionStrings`를 사용 합니다 <xref:System.Configuration.ConfigurationManager.AppSettings%2A> 및 <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="c082b-116">이러한 멤버 읽기 전용 작업을 수행 및 구성의 캐시 된 단일 인스턴스를 사용 하며 다중 스레드를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="c082b-117">전체 구성 파일을 읽고 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="c082b-118">응용 프로그램 읽고 로컬 또는 원격으로 모든 수준에서 또는 다른 응용 프로그램이 나 컴퓨터 자체에 대 한 구성 설정을 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="c082b-119">제공 하는 메서드 중 하나를 사용 합니다 <xref:System.Configuration.ConfigurationManager> SampleApp.exe.config 같은 구성 파일을 여는 클래스입니다. 이러한 메서드는 반환 된 <xref:System.Configuration.Configuration> 차례로 연결 된 구성 파일을 사용 하 여 속성과 메서드를 노출 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="c082b-120">메서드 읽기 또는 쓰기 작업 및 수행 될 때마다 파일에 기록 되는 구성 데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="c082b-121">구성 작업을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-121">Support configuration tasks.</span></span> <span data-ttu-id="c082b-122">다양 한 구성 작업을 지원 하기 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="c082b-123">기존 구성 정보를 사용 하는 것 외에도 만들기 및 사용자 지정 구성 요소와 같은 기본 제공 구성 형식을 확장 하 여 작업할 수는 <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>를 <xref:System.Configuration.ConfigurationProperty>, 및 <xref:System.Configuration.ConfigurationSection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="c082b-124">기본 제공 구성 형식을 프로그래밍 방식으로 확장 하는 방법의 예제를 참조 하세요. <xref:System.Configuration.ConfigurationSection>합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="c082b-125">특성 기반 모델을 사용 하는 기본 제공 구성 형식을 확장 하는 방법의 예제를 참조 하세요. <xref:System.Configuration.ConfigurationElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-126">첫 번째 예제를 읽고 애플리케이션 설정 하 고, 새 설정을 추가 하 고, 기존 설정을 업데이트 하는 간단한 콘솔 애플리케이션을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="c082b-127">앞의 예제 프로젝트에 아래와 같이 App.config 파일을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="c082b-128">다음 예제에서는 연결 문자열을 사용 하 여 데이터베이스에서 데이터를 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="c082b-129">앞의 예제는 아래와 같이 프로젝트에 App.config를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="c082b-130"><see cref="T:System.Configuration.Configuration" /> 클래스에는 구성 파일 편집에 대 한 프로그래밍 방식으로 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span></span> <span data-ttu-id="c082b-131">제공한 오픈 메서드 중 하나를 사용 하면 <see cref="T:System.Configuration.ConfigurationManager" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span></span> <span data-ttu-id="c082b-132">이러한 메서드는 반환 된 <see cref="T:System.Configuration.Configuration" /> 에 필요한 메서드 및 기본 구성 파일을 처리 하는 속성을 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span></span> <span data-ttu-id="c082b-133">이러한 파일을 읽거나 쓰기 위해 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-133">You can access these files for reading or writing.</span></span>  
  
<span data-ttu-id="c082b-134">사용 하 여 구성 파일을 읽으려면 <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> 또는 <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> 구성 정보를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span></span> <span data-ttu-id="c082b-135">사용자 또는 프로세스를 읽는 다음 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-135">The user or process that reads must have the following permissions:</span></span> 
<span data-ttu-id="c082b-136">-현재 구성 계층 구조 수준에서 구성 파일에서 읽기 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-136">-   Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="c082b-137">-파일을 읽을 모든 부모에 대 한 권한을 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-137">-   Read permissions on all the parent configuration files.</span></span>  
  
<span data-ttu-id="c082b-138">애플리케이션에서 자체 구성에 대 한 읽기 전용 액세스에 필요한 경우 사용 하는 것이 좋습니다는 <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c082b-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span> <span data-ttu-id="c082b-139">이 메서드에 액세스할 수 있는 보다 더 나은 성능을 현재 애플리케이션에 대 한 캐시 된 구성 값에는 <see cref="T:System.Configuration.Configuration" /> 클래스.</span><span class="sxs-lookup"><span data-stu-id="c082b-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span>  
  
<span data-ttu-id="c082b-140">구성 파일에 쓰려면 중 하나를 사용 합니다 <see cref="Overload:System.Configuration.Configuration.Save" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c082b-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span> <span data-ttu-id="c082b-141">사용자 또는 프로세스를 기록한 다음 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-141">The user or process that writes must have the following permissions:</span></span> 
<span data-ttu-id="c082b-142">-구성 파일 및 디렉터리에서 현재 구성 계층 구조 수준에서 권한을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-142">-   Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="c082b-143">-모든 구성 파일에 대 한 권한을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-143">-   Read permissions on all the configuration files.</span></span></para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
    <related type="Article" href="~/docs/framework/configure-apps/index.md"><span data-ttu-id="c082b-144">구성 파일</span><span class="sxs-lookup"><span data-stu-id="c082b-144">Configuration Files</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Configuration.ConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c082b-145">현재 애플리케이션의 기본 구성에 대한 <see cref="T:System.Configuration.AppSettingsSection" /> 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-145">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="c082b-146">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> 의 내용을 포함 하는 개체는 <see cref="T:System.Configuration.AppSettingsSection" /> 현재 응용 프로그램의 기본 구성에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-146">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-147">A <xref:System.Configuration.AppSettingsSection> 개체의 구성 파일의 내용이 `appSettings` 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-147">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-148">첫 번째 예제를 읽고 애플리케이션 설정 하 고, 새 설정을 추가 하 고, 기존 설정을 업데이트 하는 간단한 콘솔 애플리케이션을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-148">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="c082b-149">앞의 예제 프로젝트에 아래와 같이 App.config 파일을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-149">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-150">애플리케이션 설정 데이터가 포함된 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체를 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-150">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span></span></exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c082b-151">현재 애플리케이션의 기본 구성에 대한 <see cref="T:System.Configuration.ConnectionStringsSection" /> 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-151">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="c082b-152">A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 의 내용을 포함 하는 개체는 <see cref="T:System.Configuration.ConnectionStringsSection" /> 현재 응용 프로그램의 기본 구성에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-152">A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-153">A <xref:System.Configuration.ConnectionStringsSection> 개체의 구성 파일의 내용이 `connectionStrings` 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-153">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-154">다음 예제에서는 연결 문자열을 사용 하 여 데이터베이스에서 데이터를 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-154">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="c082b-155">앞의 예제는 아래와 같이 프로젝트에 App.config를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-155">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-156"><see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 개체를 검색할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-156">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span></span></exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Configuration.ConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="c082b-157">구성 섹션 경로와 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-157">The configuration section path and name.</span></span> <span data-ttu-id="c082b-158">노드 이름은 슬래시(예: "system.net/mailSettings/smtp")로 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-158">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span></span></param>
        <summary><span data-ttu-id="c082b-159">현재 응용 프로그램의 기본 구성에 대한 지정된 구성 섹션을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-159">Retrieves a specified configuration section for the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="c082b-160">지정된 <see cref="T:System.Configuration.ConfigurationSection" /> 개체이거나, 섹션이 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-160">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-161">클라이언트 애플리케이션의 경우이 메서드는 애플리케이션 구성 파일, 로컬 사용자 구성 파일 및 로밍 구성 파일을 병합 하 여 가져온 구성 파일을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-161">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="c082b-162"><xref:System.Configuration.ConfigurationManager.GetSection%2A> 메서드 변경할 수 없는 런타임 구성 정보에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-162">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="c082b-163">구성을 변경 하려면 사용 된 <xref:System.Configuration.Configuration.GetSection%2A> 다음 Open 메서드 중 하나를 사용 하 여 가져와야 하는 구성 파일에서 메서드:</span><span class="sxs-lookup"><span data-stu-id="c082b-163">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-164">다음 예제에서는 <xref:System.Configuration.ConfigurationManager.GetSection%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-164">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="c082b-165">예제는 제공 된 큰 예제의 일부는 <xref:System.Configuration.ConfigurationManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-165">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-166">구성 파일을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c082b-166">A configuration file could not be loaded.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c082b-167">반환 값을 예상 되는 구성 형식으로 캐스팅 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-167">You must cast the return value to the expected configuration type.</span></span> <span data-ttu-id="c082b-168">가능한 캐스팅 예외를 방지 하려면 사용할지 조건부 캐스팅 작업을 같은 <see langword="as" /> C# 또는 Visual Basic에서 함수는 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-168">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the  function in Visual Basic.</span></span></para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c082b-169">지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration userLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel"><span data-ttu-id="c082b-170">구성을 열고 있는 <see cref="T:System.Configuration.ConfigurationUserLevel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-170">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="c082b-171">현재 응용 프로그램의 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-171">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="c082b-172"><see cref="T:System.Configuration.Configuration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-172">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-173">클라이언트 애플리케이션에는 모든 사용자, 개별 사용자에 게 적용 되는 별도 구성 및 로밍 사용자에 게 적용 되는 구성에 적용 되는 전역 구성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-173">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="c082b-174">`userLevel` (구성 파일은 애플리케이션과 동일한 디렉터리에서) 사용자 수준이 없는지 여부를 지정 하 여 열려 있는 구성 파일의 위치를 결정 하는 매개 변수 사용자별 수준이 나 (구성 파일에는 애플리케이션 설정 경로 사용자 수준에 따라 결정).</span><span class="sxs-lookup"><span data-stu-id="c082b-174">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="c082b-175">다음 중 하나를 전달 하 여 가져올 구성에 대 한 값을 지정 `userLevel`:</span><span class="sxs-lookup"><span data-stu-id="c082b-175">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="c082b-176">가져오려는 합니다 <xref:System.Configuration.Configuration> 모든 사용자에 게 적용 되는 개체 집합 `userLevel` 를 <xref:System.Configuration.ConfigurationUserLevel.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-176">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="c082b-177">로컬 가져오려는 <xref:System.Configuration.Configuration> 현재 사용자에 게 적용 되는 개체 집합 `userLevel` 에 <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-177">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="c082b-178">로밍 가져오려고 <xref:System.Configuration.Configuration> 현재 사용자에 게 적용 되는 개체를 설정할 `userLevel` 에 <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-178">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c082b-179">가져오려는 <xref:System.Configuration.Configuration> 개체는 리소스에 대 한 코드 설정을 상속 하는 모든 구성 파일에 대 한 권한이 읽기 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-179">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="c082b-180">구성 파일을 업데이트 하려면 구성 파일 및 존재 하는 디렉터리에 대 한 쓰기 권한이 또한으로 코드에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-180">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-181">다음 코드 예제에서는 <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-181">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-182">구성 파일을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c082b-182">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration exePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath"><span data-ttu-id="c082b-183">실행(exe) 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-183">The path of the executable (exe) file.</span></span></param>
        <summary><span data-ttu-id="c082b-184">지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-184">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="c082b-185"><see cref="T:System.Configuration.Configuration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-185">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-186">클라이언트 애플리케이션에는 모든 사용자, 개별 사용자에 게 적용 되는 별도 구성 및 로밍 사용자에 게 적용 되는 구성에 적용 되는 전역 구성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-186">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="c082b-187">`userLevel` 열리는 구성 파일의 위치를 결정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-187">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="c082b-188">있기 (구성 파일은 애플리케이션과 동일한 디렉터리에서) 사용자 수준이 없는지 여부를 나타냅니다 (구성 파일은 사용자 수준 유형에 따라 애플리케이션 설정 경로입니다.) 사용자별 수준이 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-188">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="c082b-189">이 메서드 오버 로드는 호출에 해당 하는 <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> 오버 로드 된 `preLoad` 매개 변수 설정 `false`.</span><span class="sxs-lookup"><span data-stu-id="c082b-189">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-190">다음 코드 예제에서는 <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-190">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-191">구성 파일을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c082b-191">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c082b-192">현재 컨퓨터의 컴퓨터 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-192">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="c082b-193"><see cref="T:System.Configuration.Configuration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-193">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-194">컴퓨터 구성 설정은 로컬 애플리케이션에 대 한 재정의 되지 않은 경우 전체 컴퓨터에 있는 모든 애플리케이션에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-194">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="c082b-195">현재 실행 중인 버전의.NET Framework의 Machine.config 파일에서 컴퓨터 구성 설정은 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-195">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="c082b-196">Machine.config 파일은 다음 하위 디렉터리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-196">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="c082b-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="c082b-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c082b-198">가져올는 <xref:System.Configuration.Configuration> 개체는 리소스에 대 한 코드 설정을 상속 하는 모든 구성 파일에 대 한 권한이 읽기 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-198">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="c082b-199">구성 파일을 업데이트 하려면 구성 파일 및 존재 하는 디렉터리에 대 한 쓰기 권한이 또한으로 코드에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-199">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="c082b-200">컴퓨터에 설치할 수 있는.NET Framework의 다른 버전에 대 한 Machine.config 파일에 액세스 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-200">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-201">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> 메서드를 구성 파일에 포함 된 모든 섹션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-201">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-202">구성 파일을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c082b-202">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c082b-203">지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-203">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="c082b-204">응용 프로그램 기본 구성 파일 대신 사용할 구성 파일을 참조하는 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-204">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="c082b-205">구성을 열고 있는 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-205">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="c082b-206">지정된 파일 매핑 및 사용자 수준을 사용하여 지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-206">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span></span></summary>
        <returns><span data-ttu-id="c082b-207">구성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-207">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-208"><xref:System.Configuration.ConfigurationUserLevel> 열리는 구성 파일의 위치를 결정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-208">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="c082b-209">파일에 없는 사용자 수준이 (구성 파일에 애플리케이션과 동일한 디렉터리)에 있는지 여부를 나타냅니다. 사용자별 수준이 나 (애플리케이션 설정 경로 기준에서 구성 파일은 `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="c082b-209">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c082b-210">가져올는 <xref:System.Configuration.Configuration> 개체는 리소스에 대 한 코드 설정을 상속 하는 모든 구성 파일에 대 한 권한이 읽기 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-210">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="c082b-211">구성 파일을 업데이트 하려면 구성 파일 및 존재 하는 디렉터리에 대 한 쓰기 권한이 또한으로 코드에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-211">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-212">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> 모든 섹션에 포함 된 구성 파일을 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-212">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-213">구성 파일을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c082b-213">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel * bool -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel, preLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preLoad" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="c082b-214">응용 프로그램 기본 구성 파일 대신 사용할 구성 파일을 참조하는 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-214">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="c082b-215">구성을 열고 있는 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-215">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <param name="preLoad"><span data-ttu-id="c082b-216">모든 섹션 그룹 및 섹션을 미리 로드하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-216"><see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c082b-217">지정된 파일 매핑, 사용자 수준 및 미리 로드 옵션을 사용하여 지정된 클라이언트 구성 파일을 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-217">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span></span></summary>
        <returns><span data-ttu-id="c082b-218">구성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-218">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-219"><xref:System.Configuration.ConfigurationUserLevel> 열려 되는 구성 파일의 위치를 결정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-219">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="c082b-220">파일에 없는 사용자 수준이 (구성 파일에 애플리케이션과 동일한 디렉터리)에 있는지 여부를 나타냅니다. 사용자별 수준이 나 (의해 결정 되는 애플리케이션 설정 경로에서 구성 파일은 `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="c082b-220">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c082b-221">가져올는 <xref:System.Configuration.Configuration> 개체는 리소스에 대 한 코드 설정을 상속 하는 모든 구성 파일에 대 한 권한이 읽기 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-221">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="c082b-222">구성 파일을 업데이트 하려면 구성 파일 및 존재 하는 디렉터리에 대 한 쓰기 권한이 또한으로 코드에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-222">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="c082b-223">코드 예제를 참조 하세요.를 <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-223">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-224">구성 파일을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c082b-224">A configuration file could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="c082b-225">응용 프로그램 기본 구성 파일 대신 사용할 구성 파일을 참조하는 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-225">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <summary><span data-ttu-id="c082b-226">컴퓨터 구성 파일을 지정된 파일 매핑을 사용하는 <see cref="T:System.Configuration.Configuration" /> 개체로 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-226">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span></span></summary>
        <returns><span data-ttu-id="c082b-227"><see cref="T:System.Configuration.Configuration" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-227">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-228">컴퓨터 구성 설정은 로컬 애플리케이션에 대 한 재정의 되지 않은 경우 전체 컴퓨터에 있는 모든 애플리케이션에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-228">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="c082b-229">현재 실행 중인 버전의.NET Framework의 Machine.config 파일에서 컴퓨터 구성 설정은 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-229">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="c082b-230">Machine.config 파일은 다음 하위 디렉터리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-230">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="c082b-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="c082b-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c082b-232">가져올는 <xref:System.Configuration.Configuration> 개체는 리소스에 대 한 코드 설정을 상속 하는 모든 구성 파일에 대 한 권한이 읽기 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-232">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="c082b-233">구성 파일을 업데이트 하려면 구성 파일 및 존재 하는 디렉터리에 대 한 쓰기 권한이 또한으로 코드에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-233">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="c082b-234">컴퓨터에 설치할 수 있는.NET Framework의 다른 버전에 대 한 Machine.config 파일에 액세스 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-234">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-235">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> 모든 섹션 구성 파일에서 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-235">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="c082b-236">구성 파일을 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c082b-236">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member RefreshSection : string -&gt; unit" Usage="System.Configuration.ConfigurationManager.RefreshSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="c082b-237">구성 섹션 이름이거나 새로 고칠 섹션의 구성 경로 및 섹션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-237">The configuration section name or the configuration path and section name of the section to refresh.</span></span></param>
        <summary><span data-ttu-id="c082b-238">명명된 섹션을 새로 고쳐서 다음에 검색할 때 디스크에서 다시 읽도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-238">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c082b-239">이 메서드는 다른 섹션에 영향을 주지 않고 지정된 된 구성 섹션에 대 한 캐시를 무효화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-239">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c082b-240">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> 애플리케이션 설정 구성 섹션을 새로 고치기 위한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c082b-240">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>