<Type Name="ConfigurationSection" FullName="System.Configuration.ConfigurationSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38475fec4a6a6e5faf83c344295a18691e48860c" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56759936" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConfigurationSection : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationSection extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationSection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationSection&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationSection abstract : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ConfigurationSection = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="71b39-101">구성 파일 내의 섹션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-101">Represents a section within a configuration file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b39-102">사용 된 <xref:System.Configuration.ConfigurationSection> 클래스 사용자 지정 섹션 유형을 구현 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-102">You use the <xref:System.Configuration.ConfigurationSection> class to implement a custom section type.</span></span> <span data-ttu-id="71b39-103">확장 된 <xref:System.Configuration.ConfigurationSection> 클래스 사용자 지정 처리 기능 및 사용자 지정 구성 섹션에 대 한 프로그래밍 방식의 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-103">Extend the <xref:System.Configuration.ConfigurationSection> class to provide custom handling and programmatic access to custom configuration sections.</span></span> <span data-ttu-id="71b39-104">사용자 지정 구성 섹션을 사용 하는 방법에 대 한 자세한 내용은 [방법: ConfigurationSection를 사용 하 여 사용자 지정 구성 섹션 만들기](https://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-104">For information about how use custom configuration sections, see [How to: Create Custom Configuration Sections Using ConfigurationSection](https://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234).</span></span>  
  
 <span data-ttu-id="71b39-105">항목에 해당 처리 유형을 등록 하는 섹션을 `configSections` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-105">A section registers its handling type with an entry in the `configSections` element.</span></span> <span data-ttu-id="71b39-106">예를 들어 예제 단원의 인용한 구성 파일을 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="71b39-106">For an example, see the configuration file excerpt shown in the Example section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71b39-107">구성 섹션 처리기 구성 설정을 변경 하려면 사용 된.NET Framework의 이전 버전에서는 프로그래밍 방식으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-107">In previous versions of the .NET Framework, configuration section handlers were used to make changes to configuration settings programmatically.</span></span> <span data-ttu-id="71b39-108">모든 기본 구성 섹션을 확장 하는 클래스로 표현 됩니다 이제는 <xref:System.Configuration.ConfigurationSection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-108">Now, all the default configuration sections are represented by classes that extend the <xref:System.Configuration.ConfigurationSection> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b39-109">다음 예제에서는 사용자 지정 섹션을 프로그래밍 방식으로 구현 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-109">The following example shows how to implement a custom section programmatically.</span></span>  
  
 <span data-ttu-id="71b39-110">구현 및 사용자 지정 특성 사용된 모델을 사용 하 여 구현 섹션을 사용 하는 방법을 보여 주는 전체 예제를 참조 하세요. <xref:System.Configuration.ConfigurationElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-110">For a complete example that shows how to implement and use a custom section implemented using the attributed model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#1)]  
  
 <span data-ttu-id="71b39-111">다음 예제에서는 구성 파일의 일부는 앞의 예제에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-111">The following example is an excerpt of the configuration file as it applies to the previous example.</span></span>  
  
 ```xml
<?xml version="1.0" encoding="utf-8"?>
  <configuration>  
    <configSections>
      <section name="CustomSection" type="Samples.AspNet. CustomSection, CustomConfigurationSection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" />
    </configSections>  

    <CustomSection fileName="default.txt" maxUsers="1000" maxIdleTime="00:15:00" /> 
 
  </configuration>
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="71b39-112">만드는 사용자 지정 구성 섹션을 프로그래밍 방식으로 또는 선언적 코딩 모델 (특성 사용된)를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-112">You can use a programmatic or a declarative (attributed) coding model to create custom configuration sections:</span></span> 
<span data-ttu-id="71b39-113">프로그래밍 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-113">-   Programmatic model.</span></span> <span data-ttu-id="71b39-114">이 모델에서는 각 섹션에서는 특성에 대 한 가져오기 또는 해당 값을 설정 하 고, 기본 내부 propertybag에 추가 속성을 만드는 <see cref="T:System.Configuration.ConfigurationElement" /> 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-114">This model requires that for each section attribute you create a property to get or set its value and add it to the internal property bag of the underlying <see cref="T:System.Configuration.ConfigurationElement" /> base class.</span></span>  
  
<span data-ttu-id="71b39-115">선언적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-115">-   Declarative model.</span></span> <span data-ttu-id="71b39-116">특성이 지정 된 모델이 라고도 하는이 간단한 모델을 사용 하면 속성을 사용 하 여 특성으로 데코레이팅 섹션 특성을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-116">This simpler model, also called the attributed model, allows you to define a section attribute by using a property and decorating it with attributes.</span></span> <span data-ttu-id="71b39-117">이러한 특성은 속성 형식과 해당 기본값에 대 한 ASP.NET 구성 시스템을 지시합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-117">These attributes instruct the ASP.NET configuration system about the property types and their default values.</span></span> <span data-ttu-id="71b39-118">리플렉션을 통해 가져온이 정보를 사용 하 여 ASP.NET 구성 시스템 섹션 속성 개체를 만들고 필요한 초기화를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-118">With this information, obtained through reflection, the ASP.NET configuration system creates the section property objects and performs the required initialization.</span></span>  
  
<span data-ttu-id="71b39-119"><see cref="T:System.Configuration.Configuration" /> 클래스는 구성 파일 편집에 대 한 프로그래밍 방식의 액세스를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-119">The <see cref="T:System.Configuration.Configuration" /> class allows programmatic access for editing configuration files.</span></span> <span data-ttu-id="71b39-120">이러한 파일을 읽기용 또는 쓰기용 다음과 같이 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-120">You can access these files for reading or writing as follows:</span></span> 
<span data-ttu-id="71b39-121">읽기입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-121">-   Reading.</span></span> <span data-ttu-id="71b39-122">사용할 <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> 또는 <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> 구성 정보를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-122">You use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span></span> <span data-ttu-id="71b39-123">Note 사용자나 읽는 프로세스는 다음 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-123">Note that the user or process that reads must have the following permissions:</span></span> 
<span data-ttu-id="71b39-124">-현재 구성 계층 구조 수준에서 구성 파일에서 읽기 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-124">-   Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="71b39-125">-파일을 읽을 모든 부모에 대 한 권한을 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-125">-   Read permissions on all the parent configuration files.</span></span>  
  
<span data-ttu-id="71b39-126">애플리케이션에서 자체 구성에 대 한 읽기 전용 액세스에 필요한 것이 좋습니다 사용 합니다 <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> 오버 로드 된 웹 애플리케이션의 경우 메서드 또는 <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> 클라이언트 애플리케이션의 경우 메서드.</span><span class="sxs-lookup"><span data-stu-id="71b39-126">If your application needs read-only access to its own configuration, it is recommended you use the <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> overloaded methods in the case of Web applications, or the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method in the case of client applications.</span></span>  
  
<span data-ttu-id="71b39-127">이러한 메서드에 액세스할 수 있는 보다 더 나은 성능을 현재 애플리케이션에 대 한 캐시 된 구성 값에는 <see cref="T:System.Configuration.Configuration" /> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-127">These methods provide access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="71b39-128">정적을 사용 하는 경우 <see langword="GetSection" /> 사용 하는 메서드를 <paramref name="path" /> 매개 변수는 <paramref name="path" /> 매개 변수는 코드가 실행 되 고이 고, 그렇지 매개 변수는 무시 하는 애플리케이션 및 현재-실행에 대 한 구성 정보를 참조 해야 합니다 애플리케이션에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-128">If you use a static <see langword="GetSection" /> method that takes a <paramref name="path" /> parameter, the <paramref name="path" /> parameter must refer to the application in which the code is running; otherwise, the parameter is ignored and configuration information for the currently-running application is returned.</span></span>  
  
</para></block>  
  
<span data-ttu-id="71b39-129">작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-129">-   Writing.</span></span> <span data-ttu-id="71b39-130">하나를 사용 하 여 <see cref="Overload:System.Configuration.Configuration.Save" /> 구성 정보를 기록 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="71b39-130">You use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods to write configuration information.</span></span> <span data-ttu-id="71b39-131">Note는 사용자 또는 기록 하는 프로세스는 다음 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-131">Note that the user or process that writes must have the following permissions:</span></span> 
<span data-ttu-id="71b39-132">-구성 파일 및 디렉터리에서 현재 구성 계층 구조 수준에서 권한을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-132">-   Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="71b39-133">-모든 구성 파일에 대 한 권한을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-133">-   Read permissions on all the configuration files.</span></span></para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.SectionInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
    <related type="Article" href="https://msdn.microsoft.com/library/5696e8b2-d489-4220-aef2-f2e0ca9099b4"><span data-ttu-id="71b39-134">ASP.NET 구성 API 개요</span><span class="sxs-lookup"><span data-stu-id="71b39-134">ASP.NET Configuration API Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationSection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71b39-135"><see cref="T:System.Configuration.ConfigurationSection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-135">Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b39-136">사용 하는 <xref:System.Configuration.ConfigurationSection.%23ctor%2A> 먼저 사용자 지정 섹션 형식을 정의 해야 하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-136">To use the <xref:System.Configuration.ConfigurationSection.%23ctor%2A> constructor, you need to define a custom section type first.</span></span> <span data-ttu-id="71b39-137">예를 <xref:System.Configuration.ConfigurationSection> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-137">For an example see the <xref:System.Configuration.ConfigurationSection> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b39-138">다음 예제에서는 <xref:System.Configuration.ConfigurationSection.%23ctor%2A> 생성자를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-138">The following example shows how to use the <xref:System.Configuration.ConfigurationSection.%23ctor%2A> constructor.</span></span> <span data-ttu-id="71b39-139">이 예에서는 라는 사용자 지정 섹션 클래스를 만들었다고 가정 `CustomSection`합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-139">This example assumes that you have created a custom section class named `CustomSection`.</span></span> <span data-ttu-id="71b39-140">이러한 클래스의 예 참조는 <xref:System.Configuration.ConfigurationSection> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-140">For an example of such a class, see the <xref:System.Configuration.ConfigurationSection> class overview.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual void DeserializeSection (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DeserializeSection(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub DeserializeSection (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DeserializeSection(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeSection : System.Xml.XmlReader -&gt; unit&#xA;override this.DeserializeSection : System.Xml.XmlReader -&gt; unit" Usage="configurationSection.DeserializeSection reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="71b39-141">구성 파일에서 읽는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-141">The <see cref="T:System.Xml.XmlReader" /> object, which reads from the configuration file.</span></span></param>
        <summary><span data-ttu-id="71b39-142">구성 파일에서 XML을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-142">Reads XML from the configuration file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b39-143">Deserialization에서 구성 파일, 실시간 데이터를 해당 변환 및 해당 스토리지 개체의 XML 데이터 읽기를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-143">Deserialization refers to the reading of XML data from a configuration file, its transformation into real-time data, and its storage in an object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="71b39-144"><paramref name="reader" />가 구성 파일에서 요소를 찾지 못한 경우</span><span class="sxs-lookup"><span data-stu-id="71b39-144"><paramref name="reader" /> found no elements in the configuration file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeObject">
      <MemberSignature Language="C#" Value="protected internal virtual object GetRuntimeObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetRuntimeObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetRuntimeObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ GetRuntimeObject();" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeObject : unit -&gt; obj&#xA;override this.GetRuntimeObject : unit -&gt; obj" Usage="configurationSection.GetRuntimeObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71b39-145">파생 클래스에서 재정의될 때 사용자 지정 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-145">Returns a custom object when overridden in a derived class.</span></span></summary>
        <returns><span data-ttu-id="71b39-146">섹션을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-146">The object representing the section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b39-147">경우는 <xref:System.Configuration.Configuration.GetSection%2A> 메서드가 런타임에 호출 되 면 구성 시스템의 적절 한 인스턴스를 먼저 만듭니다는 <xref:System.Configuration.ConfigurationSection> 클래스를 다음에서 가져온 개체를 반환 합니다 <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="71b39-147">When the <xref:System.Configuration.Configuration.GetSection%2A> method is called at run time, the configuration system first creates an appropriate instance of the <xref:System.Configuration.ConfigurationSection> class, and then returns the object it obtains from the <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> method.</span></span>  
  
 <span data-ttu-id="71b39-148">기본적으로 <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> 단순히를 나타내는 개체를 반환 합니다 <xref:System.Configuration.ConfigurationSection> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-148">By default, <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> simply returns the object that represents the <xref:System.Configuration.ConfigurationSection> from which it is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b39-149">다음 예제에서는 <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-149">The following example shows how to use the <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#4)]
 [!code-vb[System.Configuration.ConfigurationSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="71b39-150">재정의할 수 있습니다는 <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> 사용자 지정 형식을 런타임에 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-150">You can override the <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> method to return a custom type at run time.</span></span>  
  
<span data-ttu-id="71b39-151">예를 들어의 설정을 런타임 수정을 제한 하는 <see cref="T:System.Configuration.ConfigurationSection" /> 재정의할 수 있습니다 클래스 <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> 하 고 있는 경우는 설정을 수정할 수를 제한 하는 사용자 지정 형식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-151">For example, to restrict runtime modification of the settings in the <see cref="T:System.Configuration.ConfigurationSection" /> class, you can override <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> and return a custom type that enforces restrictions on which settings can be modified, if any.</span></span>  
  
<span data-ttu-id="71b39-152">이면 런타임 개체 내부만 정의 하는 어셈블리 외부에서 반환된 된 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-152">If the runtime object is internal only, the returned object cannot be used outside the assembly that defines it.</span></span> <span data-ttu-id="71b39-153">파생 되는 개체를 만드는 한 가지 방법은 <see cref="T:System.Configuration.ConfigurationSection" /> 런타임에 어셈블리에서 코드에에서만 액세스할 수 있습니다를 반환 하는 메서드가 포함 된 내부 런타임 개체를 만드는 것에 <see cref="T:System.Configuration.ConfigurationSection" /> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-153">One way to create an object that derives from <see cref="T:System.Configuration.ConfigurationSection" /> and can only be accessed by code in your assembly at run time is to create an internal runtime object that has a method that returns your <see cref="T:System.Configuration.ConfigurationSection" /> implementation.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberSignature Language="F#" Value="override this.IsModified : unit -&gt; bool" Usage="configurationSection.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71b39-154">이 구성 요소가 파생 클래스에서 구현되었을 때 마지막으로 저장되거나 로드된 이후 수정되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-154">Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.</span></span></summary>
        <returns><span data-ttu-id="71b39-155">요소가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-155"><see langword="true" /> if the element has been modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberSignature Language="F#" Value="override this.ResetModified : unit -&gt; unit" Usage="configurationSection.ResetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71b39-156">파생 클래스에서 구현되는 경우 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 메서드의 값을 <see langword="false" />로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-156">Resets the value of the <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> method to <see langword="false" /> when implemented in a derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionInformation">
      <MemberSignature Language="C#" Value="public System.Configuration.SectionInformation SectionInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SectionInformation SectionInformation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSection.SectionInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionInformation As SectionInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SectionInformation ^ SectionInformation { System::Configuration::SectionInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SectionInformation : System.Configuration.SectionInformation" Usage="System.Configuration.ConfigurationSection.SectionInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SectionInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b39-157">사용자가 지정할 수 없는 <see cref="T:System.Configuration.SectionInformation" /> 개체의 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-157">Gets a <see cref="T:System.Configuration.SectionInformation" /> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection" /> object.</span></span></summary>
        <value><span data-ttu-id="71b39-158">사용자가 지정할 수 없는 <see cref="T:System.Configuration.SectionInformation" /> 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationSection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-158">A <see cref="T:System.Configuration.SectionInformation" /> that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71b39-159">다음 예제에서는 <xref:System.Configuration.ConfigurationSection.SectionInformation%2A> 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-159">The following example shows how to use the <xref:System.Configuration.ConfigurationSection.SectionInformation%2A> property.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SectionInformation" />
      </Docs>
    </Member>
    <Member MemberName="SerializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual string SerializeSection (System.Configuration.ConfigurationElement parentElement, string name, System.Configuration.ConfigurationSaveMode saveMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string SerializeSection(class System.Configuration.ConfigurationElement parentElement, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeSection (parentElement As ConfigurationElement, name As String, saveMode As ConfigurationSaveMode) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ SerializeSection(System::Configuration::ConfigurationElement ^ parentElement, System::String ^ name, System::Configuration::ConfigurationSaveMode saveMode);" />
      <MemberSignature Language="F#" Value="abstract member SerializeSection : System.Configuration.ConfigurationElement * string * System.Configuration.ConfigurationSaveMode -&gt; string&#xA;override this.SerializeSection : System.Configuration.ConfigurationElement * string * System.Configuration.ConfigurationSaveMode -&gt; string" Usage="configurationSection.SerializeSection (parentElement, name, saveMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
      </Parameters>
      <Docs>
        <param name="parentElement"><span data-ttu-id="71b39-160">병합 취소를 수행할 때 부모로 사용할 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-160">The <see cref="T:System.Configuration.ConfigurationElement" /> instance to use as the parent when performing the un-merge.</span></span></param>
        <param name="name"><span data-ttu-id="71b39-161">만들 섹션의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-161">The name of the section to create.</span></span></param>
        <param name="saveMode"><span data-ttu-id="71b39-162">문자열에 쓸 때 사용할 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-162">The <see cref="T:System.Configuration.ConfigurationSaveMode" /> instance to use when writing to a string.</span></span></param>
        <summary><span data-ttu-id="71b39-163"><see cref="T:System.Configuration.ConfigurationSection" /> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열을 파일에 쓸 단일 섹션으로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-163">Creates an XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection" /> object as a single section to write to a file.</span></span></summary>
        <returns><span data-ttu-id="71b39-164"><see cref="T:System.Configuration.ConfigurationSection" /> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-164">An XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b39-165">Serialization은 개체에 포함된 실시간 데이터를 XML 형식으로 변환하고 해당 스토리지를 구성 파일로 변환하는 것을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-165">Serialization refers to the transformation of real-time data, contained in an object, to XML format and its storage to a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeElementInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeElementInTargetVersion (System.Configuration.ConfigurationElement element, string elementName, System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeElementInTargetVersion(class System.Configuration.ConfigurationElement element, string elementName, class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeElementInTargetVersion (element As ConfigurationElement, elementName As String, targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeElementInTargetVersion(System::Configuration::ConfigurationElement ^ element, System::String ^ elementName, System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeElementInTargetVersion : System.Configuration.ConfigurationElement * string * System.Runtime.Versioning.FrameworkName -&gt; bool&#xA;override this.ShouldSerializeElementInTargetVersion : System.Configuration.ConfigurationElement * string * System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="configurationSection.ShouldSerializeElementInTargetVersion (element, elementName, targetFramework)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="elementName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b39-166">serialization 후보인 <see cref="T:System.Configuration.ConfigurationElement" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-166">The <see cref="T:System.Configuration.ConfigurationElement" /> object that is a candidate for serialization.</span></span></param>
        <param name="elementName"><span data-ttu-id="71b39-167">XML에 표시되는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-167">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> object as it occurs in XML.</span></span></param>
        <param name="targetFramework"><span data-ttu-id="71b39-168">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 대상 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-168">The target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></param>
        <summary><span data-ttu-id="71b39-169">지정된 대상 버전의 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 요소를 serialize할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-169">Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></summary>
        <returns><span data-ttu-id="71b39-170"><paramref name="element" />를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-170"><see langword="true" /> if the <paramref name="element" /> should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b39-171">에 대해 만든 각 구성 섹션을 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 이상 버전 명시적으로이 메서드를 재정의 하며 반환 되 고 `true`, 지정된 된 요소의 지정 된 버전에 대 한 유효한 경우에는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-171">Each configuration section that is created for the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the specified element is valid for the specified version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71b39-172">이전 버전의 생성 된 기존 구성 섹션을 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 변경 될 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-172">Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] do not have to be changed.</span></span>  
  
 <span data-ttu-id="71b39-173">항상 반환 하는이 메서드의 기본 구현을 포함 하는 기본 형식을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-173">The base type contains a default implementation of this method that always returns `true`.</span></span> <span data-ttu-id="71b39-174">구성 섹션을 구현 하는 경우이 메서드를 재정의 하지 않으면 기본적으로 모든 프레임 워크 버전 구성 섹션에 포함 된 모든 구성 요소의 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-174">If you implement a configuration section and you do not override this method, by default all configuration elements that are contained in the configuration section will be serialized for all framework versions.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76"><span data-ttu-id="71b39-175">웹 프로젝트에 대한 .NET Framework 대상 지정</span><span class="sxs-lookup"><span data-stu-id="71b39-175">.NET Framework Targeting for Web Projects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePropertyInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializePropertyInTargetVersion (System.Configuration.ConfigurationProperty property, string propertyName, System.Runtime.Versioning.FrameworkName targetFramework, System.Configuration.ConfigurationElement parentConfigurationElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializePropertyInTargetVersion(class System.Configuration.ConfigurationProperty property, string propertyName, class System.Runtime.Versioning.FrameworkName targetFramework, class System.Configuration.ConfigurationElement parentConfigurationElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializePropertyInTargetVersion (property As ConfigurationProperty, propertyName As String, targetFramework As FrameworkName, parentConfigurationElement As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializePropertyInTargetVersion(System::Configuration::ConfigurationProperty ^ property, System::String ^ propertyName, System::Runtime::Versioning::FrameworkName ^ targetFramework, System::Configuration::ConfigurationElement ^ parentConfigurationElement);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializePropertyInTargetVersion : System.Configuration.ConfigurationProperty * string * System.Runtime.Versioning.FrameworkName * System.Configuration.ConfigurationElement -&gt; bool&#xA;override this.ShouldSerializePropertyInTargetVersion : System.Configuration.ConfigurationProperty * string * System.Runtime.Versioning.FrameworkName * System.Configuration.ConfigurationElement -&gt; bool" Usage="configurationSection.ShouldSerializePropertyInTargetVersion (property, propertyName, targetFramework, parentConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Configuration.ConfigurationProperty" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="propertyName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parentConfigurationElement" Type="System.Configuration.ConfigurationElement" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="71b39-176">serialization 후보인 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-176">The <see cref="T:System.Configuration.ConfigurationProperty" /> object that is a candidate for serialization.</span></span></param>
        <param name="propertyName"><span data-ttu-id="71b39-177">XML에 표시되는 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-177">The name of the <see cref="T:System.Configuration.ConfigurationProperty" /> object as it occurs in XML.</span></span></param>
        <param name="targetFramework"><span data-ttu-id="71b39-178">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 대상 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-178">The target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></param>
        <param name="parentConfigurationElement"><span data-ttu-id="71b39-179">속성의 부모 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-179">The parent element of the property.</span></span></param>
        <summary><span data-ttu-id="71b39-180">지정된 대상 버전의 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 속성을 serialize할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-180">Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></summary>
        <returns><span data-ttu-id="71b39-181"><paramref name="property" />를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-181"><see langword="true" /> if the <paramref name="property" /> should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b39-182">에 대해 만든 각 구성 섹션을 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 이상 버전 명시적으로이 메서드를 재정의 하며 반환 되 고 `true`, 지정된 된 속성의 지정된 된 버전에 대 한 유효한 경우에는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-182">Each configuration section that is created for the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the specified property is valid for the specified version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71b39-183">이전 버전의 생성 된 기존 구성 섹션을 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 변경 될 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-183">Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] do not have to be changed.</span></span>  
  
 <span data-ttu-id="71b39-184">항상 반환 하는이 메서드의 기본 구현을 포함 하는 기본 형식을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-184">The base type contains a default implementation of this method that always returns `true`.</span></span> <span data-ttu-id="71b39-185">구성 섹션을 구현 하 고 모든 프레임 워크 버전에 대 한 구성 섹션에 포함 된 모든 구성 속성을 직렬화할지 기본적으로이 메서드를 재정의 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-185">If you implement a configuration section and you do not override this method, by default all configuration properties that are contained in the configuration section will be serialized for all framework versions.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76"><span data-ttu-id="71b39-186">웹 프로젝트에 대한 .NET Framework 대상 지정</span><span class="sxs-lookup"><span data-stu-id="71b39-186">.NET Framework Targeting for Web Projects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSectionInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeSectionInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeSectionInTargetVersion(class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeSectionInTargetVersion (targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeSectionInTargetVersion(System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeSectionInTargetVersion : System.Runtime.Versioning.FrameworkName -&gt; bool&#xA;override this.ShouldSerializeSectionInTargetVersion : System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="configurationSection.ShouldSerializeSectionInTargetVersion targetFramework" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetFramework"><span data-ttu-id="71b39-187">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 대상 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-187">The target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></param>
        <summary><span data-ttu-id="71b39-188">지정된 대상 버전의 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]에 대해 구성 개체 계층 구조가 serialize된 경우 현재 <see cref="T:System.Configuration.ConfigurationSection" /> 인스턴스를 serialize할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-188">Indicates whether the current <see cref="T:System.Configuration.ConfigurationSection" /> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></summary>
        <returns><span data-ttu-id="71b39-189">현재 섹션을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-189"><see langword="true" /> if the current section should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b39-190">에 대해 만든 각 구성 섹션을 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 이상 버전 명시적으로이 메서드를 재정의 하며 반환 되 고 `true`, 구성 섹션의 지정된 된 버전에 대 한 유효한 경우에는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-190">Each configuration section that is created for the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the configuration section is valid for the specified version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71b39-191">이전 버전의 생성 된 기존 구성 섹션을 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 변경 될 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-191">Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] do not have to be changed.</span></span>  
  
 <span data-ttu-id="71b39-192">항상 반환 하는이 메서드의 기본 구현을 포함 하는 기본 형식을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-192">The base type contains a default implementation of this method that always returns `true`.</span></span> <span data-ttu-id="71b39-193">구성 섹션을 구현 하는 경우이 메서드를 재정의 하지 않으면 기본적으로 모든 프레임 워크 버전 구성 섹션 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71b39-193">If you implement a configuration section and you do not override this method, by default the configuration section will be serialized for all framework versions.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76"><span data-ttu-id="71b39-194">웹 프로젝트에 대한 .NET Framework 대상 지정</span><span class="sxs-lookup"><span data-stu-id="71b39-194">.NET Framework Targeting for Web Projects</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>