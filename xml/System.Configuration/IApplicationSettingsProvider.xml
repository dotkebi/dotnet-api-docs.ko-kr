<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5d5730d41b97a5c57f862d89c29c0934924653b" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56781178" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0a769-101">클라이언트 기반 애플리케이션 설정 공급자의 확장 기능을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-101">Defines extended capabilities for client-based application settings providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a769-102">애플리케이션 설정 아키텍처를 사용하면 <xref:System.Configuration.SettingsProvider>에서 파생된 클래스인 사용자 지정 설정 공급자를 만들어 애플리케이션 설정에 대한 사용자 지정 스토리지 메커니즘을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-102">The application settings architecture enables you to provide a custom storage mechanism for application settings by creating a custom settings provider, which is a class derived from <xref:System.Configuration.SettingsProvider>.</span></span> <span data-ttu-id="0a769-103">이러한 클래스는 기본 속성 저장 및 검색 기능을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-103">Such a class contains the basic functionality for storing and retrieving properties.</span></span> <span data-ttu-id="0a769-104">그러나 구현 하 여 표준화 된 기능을 추가할 수 있습니다는 <xref:System.Configuration.IApplicationSettingsProvider> 사용자 지정 설정 공급자의 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-104">However, you can add additional standardized functionality by implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface in the custom settings provider.</span></span> <span data-ttu-id="0a769-105">이 인터페이스는 주로 더 지능적으로 핸들 애플리케이션 버전을 변경 하는 설정 공급자를 사용 하도록 설정 하는 세 가지 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-105">This interface contains three methods that primarily enable the settings provider to more intelligently handle application version changes.</span></span> <span data-ttu-id="0a769-106">일반적으로 설정 공급자에는 다음과 같은 경우 예측을 개별적으로 애플리케이션의 서로 다른 버전에 대 한 애플리케이션 설정을 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-106">Typically, the settings provider will store application settings for different versions of an application separately to anticipate the following circumstances:</span></span>  
  
-   <span data-ttu-id="0a769-107">애플리케이션의 서로 다른 버전의 side-by-side-실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-107">Side-by-side execution of different versions of an application.</span></span>  
  
-   <span data-ttu-id="0a769-108">애플리케이션 설정을 유지 하는 애플리케이션을 업그레이드 하는 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-108">Retaining application settings when upgrading an application.</span></span>  
  
-   <span data-ttu-id="0a769-109">애플리케이션 설정을 현재 사용 되는 버전에 대 한 기본값으로 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-109">Resetting the application settings to their default values for the currently used version.</span></span>  
  
 <span data-ttu-id="0a769-110"><xref:System.Configuration.LocalFileSettingsProvider> 클래스는 <xref:System.Configuration.IApplicationSettingsProvider> 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-110">The <xref:System.Configuration.LocalFileSettingsProvider> class implements the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="0a769-111">동일한 집합에 포함 된 메서드의 <xref:System.Configuration.IApplicationSettingsProvider> 발견 되는 <xref:System.Configuration.ApplicationSettingsBase> 클래스에는 애플리케이션 설정 래퍼 및 해당 설정 공급자 간에 미리 정의 된 통신 채널을 구축을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-111">The same set of methods contained by <xref:System.Configuration.IApplicationSettingsProvider> is also found in the <xref:System.Configuration.ApplicationSettingsBase> class, enabling the establishment of a predefined communication channel between an application settings wrapper and its settings provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a769-112">이 인터페이스는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-112">This interface is optional.</span></span> <span data-ttu-id="0a769-113">공급자는이 인터페이스를 구현 하지 않으면,이 인터페이스에서 정의 된 메서드 중 하나에 액세스 하려고 하면 설정 인프라 알림 없이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-113">If a provider does not implement this interface, the settings infrastructure will fail without notification if it attempts to access any of the methods defined by this interface.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562"><span data-ttu-id="0a769-114">애플리케이션 설정 아키텍처</span><span class="sxs-lookup"><span data-stu-id="0a769-114">Application Settings Architecture</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0a769-115">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-115">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="property"><span data-ttu-id="0a769-116">값이 반환될 <see cref="T:System.Configuration.SettingsProperty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-116">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="0a769-117">이전 버전의 동일한 애플리케이션에 대한 지정된 설정 속성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-117">Returns the value of the specified settings property for the previous version of the same application.</span></span></summary>
        <returns><span data-ttu-id="0a769-118">이전 버전의 애플리케이션에서 마지막으로 설정된 지정된 속성 설정의 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValue" />이거나, 설정을 찾을 수 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-118">A <see cref="T:System.Configuration.SettingsPropertyValue" /> containing the value of the specified property setting as it was last set in the previous version of the application; or <see langword="null" /> if the setting cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a769-119">사용할 수는 <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> 메서드와 함께 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> 중 또는 애플리케이션의 새 버전을 설치한 후 애플리케이션 설정 마이그레이션 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-119">You can use the <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> method in conjunction with the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method to migrate application settings during or after the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="0a769-120">에 대 한 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="0a769-120">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11"><span data-ttu-id="0a769-121">Side-by-Side 실행</span><span class="sxs-lookup"><span data-stu-id="0a769-121">Side-by-Side Execution</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0a769-122">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-122">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <summary><span data-ttu-id="0a769-123">지정된 애플리케이션과 연결된 애플리케이션 설정을 기본값으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-123">Resets the application settings associated with the specified application to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a769-124"><xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> 메서드는 지정 된 애플리케이션 설정 그룹의 저장 된 값을 다시 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-124">The <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> method reinitializes the stored values of the specified application settings group.</span></span> <span data-ttu-id="0a769-125">반면, <xref:System.Configuration.DefaultSettingValueAttribute> 저장 된 값이 있으면 속성 초기화 하는 동안 단일 설정 속성에 대 한 기본 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-125">In contrast, <xref:System.Configuration.DefaultSettingValueAttribute> supplies a default value for a single settings property during property initialization, if it has no stored value.</span></span>  
  
 <span data-ttu-id="0a769-126">설정 공급자 애플리케이션 설정의 지정된 된 그룹에 대 한 적절 한 기본값을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-126">The settings provider determines what reasonable defaults are for the specified group of application settings.</span></span> <span data-ttu-id="0a769-127">구현 예를 들어 <xref:System.Configuration.LocalFileSettingsProvider> 사용자 범위 설정을 공유 값으로 다시 설정 합니다 `application.exe.config` 파일을 변경 하지 않고 애플리케이션 범위 설정을 그대로 반대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-127">For example, the implementation in <xref:System.Configuration.LocalFileSettingsProvider> resets user-scoped settings to their shared values in the `application.exe.config` file; in contrast, it leaves the application-scoped settings unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="0a769-128">에 대 한 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="0a769-128">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0a769-129">현재 애플리케이션의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-129">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="properties"><span data-ttu-id="0a769-130">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-130">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0a769-131">애플리케이션이 업그레이드되었음을 공급자에게 알립니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-131">Indicates to the provider that the application has been upgraded.</span></span> <span data-ttu-id="0a769-132">이를 통해 공급자는 저장된 설정을 적절하게 업그레이드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-132">This offers the provider an opportunity to upgrade its stored settings as appropriate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a769-133">.NET Framework를 통해 동일한 애플리케이션의 서로 다른 버전의 side-by-side-설치 및 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-133">The .NET Framework enables side-by-side installation and execution of different versions of the same application.</span></span> <span data-ttu-id="0a769-134">애플리케이션 설정 공급자를 개별적으로 격리 되도록 애플리케이션의 각 버전에 대 한 애플리케이션 설정을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-134">The application settings provider stores the application settings for each version of an application separately to ensure isolation.</span></span> <span data-ttu-id="0a769-135">그러나 다음 설정을 현재 애플리케이션의 이전 버전에서 마이그레이션하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-135">However, you may want to migrate settings from the previous version of an application to the current one.</span></span> <span data-ttu-id="0a769-136">이 마이그레이션 기능을 제공 하려면 사용 합니다 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> 에서 파생 된 클래스에서 구현 하는 메서드, <xref:System.Configuration.SettingsProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-136">To provide this migration functionality, use the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method, implemented in a class derived from <xref:System.Configuration.SettingsProvider>.</span></span>  
  
 <span data-ttu-id="0a769-137">사용할 수는 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> 메서드와 함께 <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> 중 또는 애플리케이션의 새 버전을 설치한 후 애플리케이션 설정 마이그레이션 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-137">You can use the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method in conjunction with the <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> method to migrate application settings during or after the installation of a new version of an application.</span></span>  
  
 <span data-ttu-id="0a769-138">설정 하는 모든 애플리케이션에 대 한이 메서드를 표시 하지 않아야 합니다 <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> 에서 파생 된 전체 설정 래퍼 클래스에 적용 되 <xref:System.Configuration.ApplicationSettingsBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="0a769-138">This method should be suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> is applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="0a769-139">에 대 한 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="0a769-139">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11"><span data-ttu-id="0a769-140">Side-by-Side 실행</span><span class="sxs-lookup"><span data-stu-id="0a769-140">Side-by-Side Execution</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>