<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="605dfe9404989d8a9bfd547982cea392d03b8eb3" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57958314" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="45cc5-101">모든 보안 토큰을 구현하는 데 사용되는 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-101">Represents a base class used to implement all security tokens.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-102">인증 자격 증명을 제공하거나 메시지를 보호하려면 보안 토큰을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-102">Use a security token to provide authentication credentials or to protect a message.</span></span>  
  
 <span data-ttu-id="45cc5-103">보안 토큰 인증 자격 증명을 암호화 키 자료를 제공 하는 데 사용 하거나 수, 보안 토큰 서비스 (STS)를 주제에 대 한 클레임의 컬렉션에서 발급 한 보안 토큰의 경우.</span><span class="sxs-lookup"><span data-stu-id="45cc5-103">A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject.</span></span> <span data-ttu-id="45cc5-104">모든 보안 토큰에서 파생 된 <xref:System.IdentityModel.Tokens.SecurityToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-104">All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class.</span></span>  
  
 <span data-ttu-id="45cc5-105">.NET 4.5 부터는 Windows Identity Foundation (WIF)는.NET Framework에 완전히 통합 되었습니다 및 WIF에 의해 노출 하는 클래스는 코드에서 보안 토큰을 처리 하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-105">Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code.</span></span> <span data-ttu-id="45cc5-106">WIF에서는 보안 토큰으로 serialize 되 고 deserialize 하 고 해당 xml에서 표현 되며 유효성 검사에서 파생 된 클래스를 사용 하 여는 <xref:System.IdentityModel.Tokens.SecurityTokenHandler> 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-106">In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class.</span></span> <span data-ttu-id="45cc5-107">뿐 아니라 토큰 올바른지를 확인 하지만 반환 수도 포함 토큰의 유효성을 검사 한 <xref:System.Security.Claims.ClaimsIdentity> 인증 및 권한 부여 결정에 사용할 수 있는 토큰의 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="45cc5-107">Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions.</span></span> <span data-ttu-id="45cc5-108"><xref:System.Security.Claims.ClaimsIdentity> 토큰 처리기의 구현에 의해 생성 되는 <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> 메서드에서 토큰에 내장 된 클레임 에서도 잘 자체를 입력 하는 토큰에 포함 된 클레임입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-108">The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handler's implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.</span></span>  
  
 <span data-ttu-id="45cc5-109">WIF는 다음과 같은 유형의 보안 토큰에 대 한 지원을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-109">WIF ships with support for the following types of security tokens:</span></span>  
  
-   <span data-ttu-id="45cc5-110"><xref:System.IdentityModel.Tokens.Saml2SecurityToken>: SAML 2.0 어셜션 기준이 되는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-110"><xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion.</span></span> <span data-ttu-id="45cc5-111">토큰 유형이이 일반적으로 Ws-trust 또는 WS-페더레이션 보안 토큰 요청 (RST)에 대 한 응답에서 보안 토큰 서비스에 의해 발급 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-111">This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).</span></span>  
  
-   <span data-ttu-id="45cc5-112"><xref:System.IdentityModel.Tokens.SamlSecurityToken>:  SAML 1.1 어설션 기준이 되는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-112"><xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion.</span></span> <span data-ttu-id="45cc5-113">토큰 유형이이 일반적으로 Ws-trust 또는 WS-페더레이션 보안 토큰 요청 (RST)에 대 한 응답에서 보안 토큰 서비스에 의해 발급 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-113">This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).</span></span>  
  
-   <span data-ttu-id="45cc5-114"><xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> 및 <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Kerberos 티켓을 수신 하거나 SOAP 메시지를 전송 하는 기준이 되는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-114"><xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message</span></span>  
  
-   <span data-ttu-id="45cc5-115"><xref:System.IdentityModel.Tokens.RsaSecurityToken>: RSA 알고리즘을 사용하여 만든 키를 기반으로 하는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-115"><xref:System.IdentityModel.Tokens.RsaSecurityToken>: Represents a security token that is based upon key that is created using the RSA algorithm.</span></span>  
  
-   <span data-ttu-id="45cc5-116"><xref:System.IdentityModel.Tokens.SessionSecurityToken>: 세션에 대 한 정보를 포함 하는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-116"><xref:System.IdentityModel.Tokens.SessionSecurityToken>: Represents a security token that contains information about a session.</span></span>  
  
-   <span data-ttu-id="45cc5-117"><xref:System.IdentityModel.Tokens.UserNameSecurityToken>: 사용자 이름 및 암호를 기반으로 하는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-117"><xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Represents a security token that is based on a username and password.</span></span>  
  
-   <span data-ttu-id="45cc5-118"><xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Windows 도메인 또는 사용자 계정의 ID를 기반으로 하는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-118"><xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Represents a security token that is based on the identity of a Windows domain or user account.</span></span>  
  
-   <span data-ttu-id="45cc5-119"><xref:System.IdentityModel.Tokens.X509SecurityToken>: X.509 인증서를 기반으로 하는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-119"><xref:System.IdentityModel.Tokens.X509SecurityToken>: Represents a security token that is based on an X.509 certificate.</span></span>  
  
-   <span data-ttu-id="45cc5-120"><xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Windows 도메인 사용자 또는 로컬 컴퓨터 사용자 계정에 매핑되는 X.509 인증서를 기반으로 하는 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-120"><xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.</span></span>  
  
 <span data-ttu-id="45cc5-121">두 개의 다른 보안 토큰 클래스 <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> 및 <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, 일반적인 경우를 처리 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-121">Two other security token classes, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> and <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, can be used to help handle general cases.</span></span>  
  
 <span data-ttu-id="45cc5-122">세 가지 주요 범주로 나뉩니다. 토큰 보안 대체로:</span><span class="sxs-lookup"><span data-stu-id="45cc5-122">Broadly speaking security tokens fall into three major categories:</span></span>  
  
-   <span data-ttu-id="45cc5-123">토큰을 수행 하거나 암호화를 참조 하는 키 자료입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-123">Tokens that carry or reference cryptographic key material.</span></span> <span data-ttu-id="45cc5-124">예를 들어 합니다 <xref:System.IdentityModel.Tokens.RsaSecurityToken> 고 <xref:System.IdentityModel.Tokens.X509SecurityToken> 형식은이 목적을 위해 종종 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-124">For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose.</span></span>  
  
-   <span data-ttu-id="45cc5-125">이미 인증 된 사용자에 대 한 자격 증명을 나타내는 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-125">Tokens that represent credentials for users that have already been authenticated.</span></span> <span data-ttu-id="45cc5-126">예를 들어 합니다 <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, 및 인증서를 사용 하 여 인증 된 사용자의 경우는 <xref:System.IdentityModel.Tokens.X509SecurityToken> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-126">For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types.</span></span>  
  
-   <span data-ttu-id="45cc5-127">Ws-trust 또는 WS-페더레이션 프로토콜 중 하나를 사용 하 여 보안 토큰 요청에 대 한 응답으로 보안 토큰 서비스 (STS)에서 발급 된 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-127">Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol.</span></span> <span data-ttu-id="45cc5-128">반환 된 일반적으로 이러한는 `wst:RequestSecurityTokenResponse` XML 조각입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-128">These are typically returned in a `wst:RequestSecurityTokenResponse` XML fragment.</span></span> <span data-ttu-id="45cc5-129">합니다 <xref:System.IdentityModel.Tokens.Saml2SecurityToken> 및 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 형식은 이러한 토큰을 나타내는 데 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-129">The <xref:System.IdentityModel.Tokens.Saml2SecurityToken> and <xref:System.IdentityModel.Tokens.SamlSecurityToken> types are most often used to represent these tokens.</span></span>  
  
 <span data-ttu-id="45cc5-130">특별 한 토큰 형식에는 <xref:System.IdentityModel.Tokens.SessionSecurityToken>, 활성 또는 수동 시나리오에서 세션을 사용 하는 경우에 보안 주체를 다시 만드는 데 필요한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-130">A special token type, the <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.</span></span>  
  
 <span data-ttu-id="45cc5-131">기존 토큰 형식에 기능을 추가 하려면 토큰에 추가 하는 새 요소를 지원 하기 위해 특정 형식 및 연결 된 토큰 처리기에서 파생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-131">To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token.</span></span> <span data-ttu-id="45cc5-132">에 새 토큰 형식에 대 한 지원을 추가 하려면에서 직접 파생 된 <xref:System.IdentityModel.Tokens.SecurityToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-132">To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class.</span></span> <span data-ttu-id="45cc5-133">토큰 처리기 클래스에서 파생 시켜 만들 또한 해야이 작업을 수행 하는 경우는 <xref:System.IdentityModel.Tokens.SecurityTokenHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-133">When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span> <span data-ttu-id="45cc5-134">어떻게 토큰을 사용 하는 것을 따라도 해야에서 파생 하 여 사용자 지정 토큰 확인자를 만들려면 합니다 <xref:System.IdentityModel.Tokens.IssuerTokenResolver> 도 하나 이상의 사용자 지정 키 식별자 절 형식에서 파생 된 클래스는 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-134">Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45cc5-135">에 사용 되는 코드 예제는 <xref:System.IdentityModel.Tokens.SecurityToken> 항목에서 수행 되는 `Custom Token` 샘플.</span><span class="sxs-lookup"><span data-stu-id="45cc5-135">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="45cc5-136">이 샘플의 간단한 웹 토큰 (SWT) 처리를 사용 하도록 설정 하는 사용자 지정 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-136">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="45cc5-137">구현을 포함 한 `SimpleWebToken` 클래스 및 `SimpleWebTokenHandler` SWT 토큰을 지 원하는 다른 클래스 뿐만 아니라 클래스.</span><span class="sxs-lookup"><span data-stu-id="45cc5-137">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="45cc5-138">이 샘플 및 사용할 수 있는 다른 샘플에 대 한 WIF에 대 한 다운로드 위치에 대 한, 참조 [WIF 코드 샘플 인덱스](~/docs/framework/security/wif-code-sample-index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-138">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="45cc5-139">다음 코드의 구현을 보여 줍니다는 `SimpleWebToken` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-139">The following code shows the implementation of the `SimpleWebToken` class.</span></span> <span data-ttu-id="45cc5-140">이 클래스 확장 <xref:System.IdentityModel.Tokens.SecurityToken>합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-140">This class extends <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="45cc5-141">재정의 해야 합니다 <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />, 및 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-141">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />, and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties.</span></span> <span data-ttu-id="45cc5-142">합니다 <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />를 <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />, 및 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 메서드는 모두 지원 형식의 키 식별자 <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-142">The <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />, and <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> methods all support key identifiers of type <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />.</span></span> <span data-ttu-id="45cc5-143">파생된 클래스에서 다른 키 식별자 형식을 지원 하기 위해 이러한 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-143">You must override these methods to support other key identifier types in your derived class.</span></span></para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45cc5-144"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-144">Called by constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="45cc5-145">만들 키 식별자를 지정하는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-145">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</span></span></typeparam>
        <summary><span data-ttu-id="45cc5-146">이 보안 토큰이 지정된 키 식별자를 만들 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-146">Gets a value that indicates whether this security token is capable of creating the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="45cc5-147"><see langword="true" />가 <paramref name="T" /> 형식이면 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-147"><see langword="true" /> when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-148">보안 토큰이 특정 키 식별자를 만들 수 있는지 확인하려면 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-148">Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier.</span></span> <span data-ttu-id="45cc5-149">키 식별자를 만들려면 <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-149">To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.</span></span>  
  
 <span data-ttu-id="45cc5-150">기본 구현은 형식의 키 식별자 절을 지원 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-150">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="45cc5-151">만들 키 식별자를 지정하는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-151">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</span></span></typeparam>
        <summary><span data-ttu-id="45cc5-152">지정된 키 식별자 절을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-152">Creates the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="45cc5-153">보안 토큰의 키 식별자 절인 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-153">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-154">보안 토큰이 특정 키 식별자를 만들 수 있는지 확인하려면 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-154">Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier.</span></span> <span data-ttu-id="45cc5-155">키 식별자를 만들려면 <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-155">To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.</span></span>  
  
 <span data-ttu-id="45cc5-156">기본 구현은 형식의 키 식별자 절을 지원 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-156">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.</span></span> <span data-ttu-id="45cc5-157">형식의 키 식별자 절을 하는 경우 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> 를 만들 수 없습니다는 <xref:System.NotSupportedException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-157">If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45cc5-158">보안 토큰의 고유 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-158">Gets a unique identifier of the security token.</span></span></summary>
        <value><span data-ttu-id="45cc5-159">보안 토큰의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-159">The unique identifier of the security token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-160">일반적으로 보안 토큰이 XML로 serialize되면 보안 토큰의 `Id` 특성이 <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> 속성의 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-160">Typically, when a security token is serialized into XML, the `Id` attribute for the security token is set to the value of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45cc5-161">에 사용 되는 코드 예제는 <xref:System.IdentityModel.Tokens.SecurityToken> 항목에서 수행 되는 `Custom Token` 샘플.</span><span class="sxs-lookup"><span data-stu-id="45cc5-161">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="45cc5-162">이 샘플의 간단한 웹 토큰 (SWT) 처리를 사용 하도록 설정 하는 사용자 지정 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-162">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="45cc5-163">구현을 포함 한 `SimpleWebToken` 클래스 및 `SimpleWebTokenHandler` SWT 토큰을 지 원하는 다른 클래스 뿐만 아니라 클래스.</span><span class="sxs-lookup"><span data-stu-id="45cc5-163">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="45cc5-164">이 샘플 및 사용할 수 있는 다른 샘플에 대 한 WIF에 대 한 다운로드 위치에 대 한, 참조 [WIF 코드 샘플 인덱스](~/docs/framework/security/wif-code-sample-index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-164">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="45cc5-165">다음 코드와의 재정의 <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-165">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="45cc5-166">재정의 해야 합니다는 <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-166">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="45cc5-167">이 인스턴스와 비교할 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-167">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</span></span></param>
        <param name="skiClause"><span data-ttu-id="45cc5-168">이 인스턴스와 비교할 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-168">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="45cc5-169">이 인스턴스의 키 식별자가 지정된 키 식별자로 확인될 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-169">Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="45cc5-170"><paramref name="keyIdentifierClause" />가 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />이고 <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> 속성과 동일한 고유 식별자를 갖고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-170"><see langword="true" /> if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> and it has the same unique identifier as the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-171">기본 구현은 형식의 키 식별자 절을 지원 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause></span><span class="sxs-lookup"><span data-stu-id="45cc5-171">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause></span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="45cc5-172">키를 가져올 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-172">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to get the key for.</span></span></param>
        <param name="skiClause"><span data-ttu-id="45cc5-173">키를 가져올 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-173">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to get the key for.</span></span></param>
        <summary><span data-ttu-id="45cc5-174">지정된 키 식별자 절의 키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-174">Gets the key for the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="45cc5-175">키를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-175">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that represents the key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-176"><xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> 메서드는 <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>를 호출하여 지정된 키 식별자 절이 이 인스턴스와 동일한지 먼저 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-176">The <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> method calls the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> to first determine whether the specified key identifier clause is the same as this instance.</span></span>  
  
 <span data-ttu-id="45cc5-177">기본 구현에서는 첫 번째 요소를 반환 합니다 <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> 컬렉션 컬렉션이 비어 있는 경우 <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> 반환 `true`이 고, 그렇지 않으면 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-177">The default implementation returns the first element of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> collection if the collection is not empty and if <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> returns `true`; otherwise, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="45cc5-178"><see cref="T:System.IdentityModel.Tokens.SecurityToken" />에서 상속하고 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 메서드를 구현하는 경우 <paramref name="keyIdentifierClause" />를 확인할 수 없으면 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-178">When you inherit from <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, and implement the <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> method and <paramref name="keyIdentifierClause" /> cannot be resolved, return <see langword="null" />.</span></span> <span data-ttu-id="45cc5-179"><see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 메서드에서 예외를 throw하면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-179">An exception should not be thrown from the <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> method.</span></span></para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45cc5-180">보안 토큰과 연결된 암호화 키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-180">Gets the cryptographic keys associated with the security token.</span></span></summary>
        <value><span data-ttu-id="45cc5-181">보안 토큰과 연결된 키의 집합을 포함하는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-181">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-182">사용 된 <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> 토큰 또는 SOAP 메시지를 보호 하기 위해이 보안 토큰에 대 한 암호화 키를 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-182">Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message.</span></span> <span data-ttu-id="45cc5-183">키 수, 무엇 보다도 디지털 서명 또는 토큰 또는 SOAP 메시지를 암호화 합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-183">The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45cc5-184">에 사용 되는 코드 예제는 <xref:System.IdentityModel.Tokens.SecurityToken> 항목에서 수행 되는 `Custom Token` 샘플.</span><span class="sxs-lookup"><span data-stu-id="45cc5-184">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="45cc5-185">이 샘플의 간단한 웹 토큰 (SWT) 처리를 사용 하도록 설정 하는 사용자 지정 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-185">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="45cc5-186">구현을 포함 한 `SimpleWebToken` 클래스 및 `SimpleWebTokenHandler` SWT 토큰을 지 원하는 다른 클래스 뿐만 아니라 클래스.</span><span class="sxs-lookup"><span data-stu-id="45cc5-186">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="45cc5-187">이 샘플 및 사용할 수 있는 다른 샘플에 대 한 WIF에 대 한 다운로드 위치에 대 한, 참조 [WIF 코드 샘플 인덱스](~/docs/framework/security/wif-code-sample-index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-187">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="45cc5-188">다음 코드와의 재정의 <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-188">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="45cc5-189">재정의 해야 합니다는 <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-189">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45cc5-190">이 보안 토큰이 유효한 기간의 시작 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-190">Gets the first instant in time at which this security token is valid.</span></span></summary>
        <value><span data-ttu-id="45cc5-191">이 보안 토큰이 유효한 기간의 시작 시간을 나타내는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-191">A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-192"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 토큰이 유효한 기간을 확인하려면 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 및 <xref:System.IdentityModel.Tokens.SecurityToken> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-192">Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid.</span></span> <span data-ttu-id="45cc5-193"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 및 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 속성은 각각 보안 토큰이 유효한 기간의 시작 시간과 종료 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-193">The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45cc5-194">에 사용 되는 코드 예제는 <xref:System.IdentityModel.Tokens.SecurityToken> 항목에서 수행 되는 `Custom Token` 샘플.</span><span class="sxs-lookup"><span data-stu-id="45cc5-194">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="45cc5-195">이 샘플의 간단한 웹 토큰 (SWT) 처리를 사용 하도록 설정 하는 사용자 지정 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-195">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="45cc5-196">구현을 포함 한 `SimpleWebToken` 클래스 및 `SimpleWebTokenHandler` SWT 토큰을 지 원하는 다른 클래스 뿐만 아니라 클래스.</span><span class="sxs-lookup"><span data-stu-id="45cc5-196">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="45cc5-197">이 샘플 및 사용할 수 있는 다른 샘플에 대 한 WIF에 대 한 다운로드 위치에 대 한, 참조 [WIF 코드 샘플 인덱스](~/docs/framework/security/wif-code-sample-index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-197">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="45cc5-198">다음 코드와의 재정의 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-198">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="45cc5-199">재정의 해야 합니다는 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-199">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45cc5-200">이 보안 토큰이 유효한 기간의 종료 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-200">Gets the last instant in time at which this security token is valid.</span></span></summary>
        <value><span data-ttu-id="45cc5-201">이 보안 토큰이 유효한 기간의 종료 시간을 나타내는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-201">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45cc5-202"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 토큰이 유효한 기간을 확인하려면 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 및 <xref:System.IdentityModel.Tokens.SecurityToken> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-202">Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid.</span></span> <span data-ttu-id="45cc5-203"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 및 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 속성은 각각 보안 토큰이 유효한 기간의 시작 시간과 종료 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-203">The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45cc5-204">에 사용 되는 코드 예제는 <xref:System.IdentityModel.Tokens.SecurityToken> 항목에서 수행 되는 `Custom Token` 샘플.</span><span class="sxs-lookup"><span data-stu-id="45cc5-204">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="45cc5-205">이 샘플의 간단한 웹 토큰 (SWT) 처리를 사용 하도록 설정 하는 사용자 지정 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-205">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="45cc5-206">구현을 포함 한 `SimpleWebToken` 클래스 및 `SimpleWebTokenHandler` SWT 토큰을 지 원하는 다른 클래스 뿐만 아니라 클래스.</span><span class="sxs-lookup"><span data-stu-id="45cc5-206">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="45cc5-207">이 샘플 및 사용할 수 있는 다른 샘플에 대 한 WIF에 대 한 다운로드 위치에 대 한, 참조 [WIF 코드 샘플 인덱스](~/docs/framework/security/wif-code-sample-index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-207">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="45cc5-208">다음 코드와의 재정의 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-208">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="45cc5-209">재정의 해야 합니다는 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="45cc5-209">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>