<Type Name="SecurityKeyIdentifierClause" FullName="System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2eaf2bfb9e97a39f16286176d78b31dd3e4d8e68" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58458916" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityKeyIdentifierClause extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityKeyIdentifierClause abstract" />
  <TypeSignature Language="F#" Value="type SecurityKeyIdentifierClause = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f7c58-101">키 식별자 절에 대한 추상 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-101">Represents an abstract base class for a key identifier clause.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c58-102">일반적으로 사용자 지정 보안 토큰 서비스를 만드는 경우를 제외하면 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>를 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-102">Typically, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="f7c58-103">보안 토큰 서비스에서 보안 토큰을 반환할 때 발급된 보안 토큰에는 연결된 보안 토큰과 연결되지 않은 보안 토큰에 대한 참조가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="f7c58-104">연결된 참조는 SOAP 메시지의 보안 헤더에 포함된 보안 토큰을 나타내며 연결되지 않은 참조는 SOAP 메시지의 보안 헤더에 포함되지 않은 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="f7c58-105">일반적으로 이러한 참조는 발급된 보안 토큰의 신뢰성을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-105">These references typically affirm the authenticity of the issued security token.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7c58-106"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause : string -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause clauseType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clauseType"><span data-ttu-id="f7c58-107">키 식별자 절 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-107">The key identifier clause type.</span></span> <span data-ttu-id="f7c58-108"><see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-108">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span></span></param>
        <summary><span data-ttu-id="f7c58-109">지정된 키 식별자 절 형식을 사용하여 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c58-110">이 보안 키 식별자가 XML로 serialize되면 `clauseType` 매개 변수가 `ValueType` 요소의 `<SecurityTokenReference>` 특성으로 serialize됩니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-110">When this security key identifier is serialized into XML, the `clauseType` parameter is serialized as the `ValueType` attribute of the `<SecurityTokenReference>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType, byte[] nonce, int length);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] nonce, int32 length) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, nonce As Byte(), length As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ nonce, int length);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause : string * byte[] * int -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause (clauseType, derivationNonce, derivationLength)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause : string * byte[] * int -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.SecurityKeyIdentifierClause (clauseType, derivationNonce, derivationLength)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" Index="0" />
        <Parameter Name="nonce" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="derivationLength" Type="System.Int32" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="clauseType"><span data-ttu-id="f7c58-111">키 식별자 절 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-111">The key identifier clause type.</span></span> <span data-ttu-id="f7c58-112"><see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-112">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span></span></param>
        <param name="nonce"><span data-ttu-id="f7c58-113">파생 키를 만드는 데 사용된 nonce를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-113">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span></span> <span data-ttu-id="f7c58-114"><see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> 메서드에서 반환되는 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-114">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span></span></param>
        <param name="derivationNonce"><span data-ttu-id="f7c58-115">파생 키를 만드는 데 사용된 nonce를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-115">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span></span> <span data-ttu-id="f7c58-116"><see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> 메서드에서 반환되는 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-116">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span></span></param>
        <param name="length"><span data-ttu-id="f7c58-117">파생 키의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-117">The size of the derived key.</span></span> <span data-ttu-id="f7c58-118"><see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-118">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span></span></param>
        <param name="derivationLength"><span data-ttu-id="f7c58-119">파생 키의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-119">The size of the derived key.</span></span> <span data-ttu-id="f7c58-120"><see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-120">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span></span></param>
        <summary><span data-ttu-id="f7c58-121">지정된 키 식별자 절 형식, nonce 및 파생 키 길이를 사용하여 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-121">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type, nonce, and the derived key length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c58-122">Windows Communication Foundation (WCF)에서 유추 된 파생된 키 식별자 생성을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-122">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="f7c58-123">그러나 WCF는 유추 된 키 식별자를 포함 하는 들어오는 SOAP 메시지를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-123">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKey">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCreateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCreateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCreateKey : bool" Usage="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7c58-124">키를 만들 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-124">Gets a value that indicates whether a key can be created.</span></span></summary>
        <value><span data-ttu-id="f7c58-125">키를 만들 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-125"><see langword="true" /> if a key can be created; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f7c58-126">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c58-127">생성자에 전달된 매개 변수를 사용하여 키를 만들 수 있으면 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A>를 반환하도록 `true` 메서드를 재정의하고 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-127">When a key can be created using the parameters passed into a constructor, override the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> method to return `true` and implement the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClauseType">
      <MemberSignature Language="C#" Value="public string ClauseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClauseType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClauseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClauseType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClauseType : string" Usage="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7c58-128">키 식별자 절 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-128">Gets the key identifier clause type.</span></span></summary>
        <value><span data-ttu-id="f7c58-129">키 식별자 절 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-129">The key identifier clause type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKey">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey CreateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey CreateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKey () As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ CreateKey();" />
      <MemberSignature Language="F#" Value="abstract member CreateKey : unit -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.CreateKey : unit -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityKeyIdentifierClause.CreateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7c58-130">생성자에 전달된 매개 변수를 기반으로 키를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-130">Creates a key based on the parameters passed into the constructor.</span></span></summary>
        <returns><span data-ttu-id="f7c58-131">만든 키를 포함하는 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-131">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the created key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c58-132">생성자에 전달된 매개 변수를 사용하여 키를 만들 수 있으면 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A>를 반환하도록 `true` 메서드를 재정의하고 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-132">When a key can be created using the parameters passed into a constructor, override the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> method to return `true` and implement the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivationLength">
      <MemberSignature Language="C#" Value="public int DerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DerivationLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DerivationLength : int" Usage="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7c58-133">파생 키의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-133">Gets the size of the derived key.</span></span></summary>
        <value><span data-ttu-id="f7c58-134">파생 키의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-134">The size of the derived key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c58-135">Windows Communication Foundation (WCF)에서 유추 된 파생된 키 식별자 생성을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-135">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="f7c58-136">그러나 WCF는 유추 된 키 식별자를 포함 하는 들어오는 SOAP 메시지를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-136">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDerivationNonce">
      <MemberSignature Language="C#" Value="public byte[] GetDerivationNonce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetDerivationNonce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDerivationNonce () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetDerivationNonce();" />
      <MemberSignature Language="F#" Value="member this.GetDerivationNonce : unit -&gt; byte[]" Usage="securityKeyIdentifierClause.GetDerivationNonce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7c58-137">파생 키를 생성하는 데 사용된 nonce를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-137">Gets the nonce that was used to generate the derived key.</span></span></summary>
        <returns><span data-ttu-id="f7c58-138">파생 키를 생성하는 데 사용된 nonce를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-138">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to generate the derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c58-139">Windows Communication Foundation (WCF)에서 유추 된 파생된 키 식별자 생성을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-139">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="f7c58-140">그러나 WCF는 유추 된 키 식별자를 포함 하는 들어오는 SOAP 메시지를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-140">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7c58-141">키 식별자 절 ID를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-141">Gets or sets the key identifier clause ID.</span></span></summary>
        <value><span data-ttu-id="f7c58-142">키 식별자 절 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-142">The key identifier clause ID.</span></span> <span data-ttu-id="f7c58-143">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-143">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c58-144">이 보안 키 식별자를 XML로 serialize 될 때를 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A> 속성으로 serialize 되는 `Id` 특성을 `<SecurityTokenReference>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-144">When this security key identifier is serialized into XML, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A> property is serialized as the `Id` attribute of the `<SecurityTokenReference>` element.</span></span> <span data-ttu-id="f7c58-145">속성이 `null`, `Id` 특성에 포함 되지 않습니다는 `<SecurityTokenReference>` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-145">If the property is `null`, an `Id` attribute is not included in the `<SecurityTokenReference>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityKeyIdentifierClause.Matches clause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityKeyIdentifierClause.Matches clause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="f7c58-146">비교할 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-146">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</span></span></param>
        <param name="clause"><span data-ttu-id="f7c58-147">비교할 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-147">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</span></span></param>
        <summary><span data-ttu-id="f7c58-148">이 인스턴스의 키 식별자가 지정된 키 식별자 절과 동일한지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-148">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="f7c58-149"><paramref name="keyIdentifierClause" />가 현재 인스턴스와 같은 인스턴스이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-149"><see langword="true" /> if <paramref name="keyIdentifierClause" /> is the same instance as the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f7c58-150"><paramref name="keyIdentifierClause" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f7c58-150"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>