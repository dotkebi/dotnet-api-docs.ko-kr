<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48c20add28584c8e5d37f867a88a02cba28814ce" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717187" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="75c7f-101">개체의 구조가 같은지 비교할 수 있는 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-101">Defines methods to support the comparison of objects for structural equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c7f-102">구조적 같음 값이 같으면 있기 때문에 두 개체가 같은지를 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-102">Structural equality means that two objects are equal because they have equal values.</span></span> <span data-ttu-id="75c7f-103">동일한 실제 개체를 참조 하기 때문에 두 개체 참조가 같은지를 나타내는 참조 같음에서 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-103">It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</span></span> <span data-ttu-id="75c7f-104"><xref:System.Collections.IStructuralEquatable> 인터페이스를 사용 하면 컬렉션 개체의 구조적으로 같은지 확인 하려면 사용자 지정 된 비교를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-104">The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</span></span> <span data-ttu-id="75c7f-105">구조적 같음의 고유한 정의 만들고이 정의 허용 하는 컬렉션 형식을 사용할 수를 지정 하는,는 <xref:System.Collections.IStructuralEquatable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-105">That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="75c7f-106">인터페이스 멤버가 두 개: <xref:System.Collections.IStructuralEquatable.Equals%2A>, 지정 된 사용 하 여 같은지 여부를 테스트 하는 <xref:System.Collections.IEqualityComparer> 구현 및 <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, 같은 개체에 대해 동일한 해시 코드를 반환 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-106">The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75c7f-107"><xref:System.Collections.IStructuralEquatable> 인터페이스 구조적 같음에 대 한 사용자 지정 비교만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-107">The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality.</span></span> <span data-ttu-id="75c7f-108"><xref:System.Collections.IStructuralComparable> 인터페이스에서 정렬 및 순서에 대 한 사용자 지정 구조적 비교를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-108">The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.</span></span>  
  
 <span data-ttu-id="75c7f-109">.NET Framework도 기본 제공 하 여 반환 되는 같음 비교자를 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> 고 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-109">The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="75c7f-110">자세한 내용은 예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="75c7f-110">For more information, see the example.</span></span>  
  
 <span data-ttu-id="75c7f-111">제네릭 tuple 클래스 (<xref:System.Tuple%601>, <xref:System.Tuple%602>를 <xref:System.Tuple%603>등) 및 <xref:System.Array> 클래스의 명시적 구현을 제공 합니다 <xref:System.Collections.IStructuralEquatable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="75c7f-112">캐스팅 (C#) 또는 변환 (Visual Basic)의 배열 또는 튜플의 현재 인스턴스에 의해를 <xref:System.Collections.IStructuralEquatable> 인터페이스 값 제공 하 고 프로그램 <xref:System.Collections.IEqualityComparer> 구현에 대 한 인수로 <xref:System.Collections.IStructuralEquatable.Equals%2A> 메서드를 사용자 지정 비교를 정의할 수 있습니다 배열 또는 컬렉션에 대 한 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c7f-113">기본 같음 비교자 `EqualityComparer<Object>.Default.Equals`, 두 고려 `NaN` 값과 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-113">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="75c7f-114">그러나 일부 경우에 확인할 수 있습니다의 비교 `NaN` 반환 하려면 같음에 대 한 값 `false`를 나타내는 값을 비교할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-114">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="75c7f-115">다음 예제에서는 `NanComparer` 인터페이스를 구현하는 <xref:System.Collections.IStructuralEquatable> 클래스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-115">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="75c7f-116">두 비교 <xref:System.Double> 이상의 <xref:System.Single> 같음 연산자를 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-116">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="75c7f-117">기본 같음 비교자를 다른 형식의 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-117">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="75c7f-118">다음 예제에서는 세 개의 구성 요소가 구성 하는 두 개의 동일한 3 개 튜플 개체 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-118">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="75c7f-119">두 번째 요소의 값은 <xref:System.Double.NaN?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-119">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75c7f-120">호출 예제는 <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> 메서드를 호출 합니다 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 메서드를 세 번입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-120">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="75c7f-121">처음에 의해 반환 되는 기본 같음 비교자를 전달 합니다 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-121">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="75c7f-122">두 번째 경우에서 반환 되는 기본 같음 비교자를 전달 합니다 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-122">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="75c7f-123">세 번째로, 사용자 지정 전달 `NanComparer` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-123">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="75c7f-124">처음 세 개의 메서드 호출 반환 예제의 출력에서 볼 수 있듯이 `true`네 번째 호출이 반환 하는 반면, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-124">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="75c7f-125">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-125">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="75c7f-126">현재 인스턴스와 <paramref name="other" />가 같은지 여부를 확인하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-126">An object that determines whether the current instance and <paramref name="other" /> are equal.</span></span></param>
        <summary><span data-ttu-id="75c7f-127">개체가 현재 인스턴스와 구조적으로 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-127">Determines whether an object is structurally equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="75c7f-128">두 개체가 같으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-128"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c7f-129"><xref:System.Collections.IStructuralEquatable.Equals%2A> 메서드 배열과 튜플 개체의 사용자 지정 구조적 비교를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-129">The <xref:System.Collections.IStructuralEquatable.Equals%2A> method supports custom structural comparison of array and tuple objects.</span></span> <span data-ttu-id="75c7f-130">이 메서드를 호출 합니다 `comparer` 개체의 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 개별 배열 요소 또는 구성 요소를 첫 번째 요소부터 튜플 구성 요소를 비교 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-130">This method in turn calls the `comparer` object's <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="75c7f-131">호출 하는 개별 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 끝 및 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 메서드가 값을 반환 하거나 메서드 호출이 반환 될 때 `false` 모든 배열 요소 또는 튜플 구성 요소가 비교 된 후 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-131">The individual calls to <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method returns a value either when a method call returns `false` or after all array elements or tuple components have been compared.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75c7f-132">기본 같음 비교자 `EqualityComparer<Object>.Default.Equals`, 두 고려 `NaN` 값과 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-132">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="75c7f-133">그러나 일부 경우에 확인할 수 있습니다의 비교 `NaN` 반환 하려면 같음에 대 한 값 `false`를 나타내는 값을 비교할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-133">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="75c7f-134">다음 예제에서는 `NanComparer` 인터페이스를 구현하는 <xref:System.Collections.IStructuralEquatable> 클래스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-134">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="75c7f-135">두 비교 <xref:System.Double> 이상의 <xref:System.Single> 같음 연산자를 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-135">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="75c7f-136">기본 같음 비교자를 다른 형식의 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-136">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="75c7f-137">다음 예제에서는 세 개의 구성 요소가 구성 하는 두 개의 동일한 3 개 튜플 개체 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-137">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="75c7f-138">두 번째 요소의 값은 <xref:System.Double.NaN?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-138">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75c7f-139">호출 예제는 <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> 메서드를 호출 합니다 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 메서드를 세 번입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-139">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="75c7f-140">처음에 의해 반환 되는 기본 같음 비교자를 전달 합니다 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-140">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="75c7f-141">두 번째 경우에서 반환 되는 기본 같음 비교자를 전달 합니다 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-141">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="75c7f-142">세 번째로, 사용자 지정 전달 `NanComparer` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-142">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="75c7f-143">처음 세 개의 메서드 호출 반환 예제의 출력에서 볼 수 있듯이 `true`네 번째 호출이 반환 하는 반면, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-143">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="75c7f-144">현재 개체의 해시 코드를 계산하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-144">An object that computes the hash code of the current object.</span></span></param>
        <summary><span data-ttu-id="75c7f-145">현재 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-145">Returns a hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="75c7f-146">현재 인스턴스에 대한 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-146">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75c7f-147">제공 하는 구조적 같음에 대 한 사용자 지정된 비교에 해당 하는 컬렉션 개체에 대 한 사용자 지정 된 해시 코드를 반환 하려면이 메서드를 구현 합니다 <xref:System.Collections.IStructuralEquatable.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="75c7f-147">Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <xref:System.Collections.IStructuralEquatable.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="75c7f-148">경우는 <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> 메서드가 반환 <see langword="true" /> 두 개체에 대 한 값으로 반환 합니다 <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> 메서드 두 개체도 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75c7f-148">If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>