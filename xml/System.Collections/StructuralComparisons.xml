<Type Name="StructuralComparisons" FullName="System.Collections.StructuralComparisons">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7e9c26a5090a71bd5f8f81ac1f23b22ddd36c2b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58700627" /></Metadata><TypeSignature Language="C#" Value="public static class StructuralComparisons" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StructuralComparisons extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.StructuralComparisons" />
  <TypeSignature Language="VB.NET" Value="Public Class StructuralComparisons" />
  <TypeSignature Language="C++ CLI" Value="public ref class StructuralComparisons abstract sealed" />
  <TypeSignature Language="F#" Value="type StructuralComparisons = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="51d0b-101">두 컬렉션 개체의 구조를 비교하기 위한 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-101">Provides objects for performing a structural comparison of two collection objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d0b-102"><xref:System.Collections.StructuralComparisons> 클래스에 다음 두 개의 미리 정의 된 비교 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-102">The <xref:System.Collections.StructuralComparisons> class returns the following two predefined comparison objects:</span></span>  
  
-   <span data-ttu-id="51d0b-103"><xref:System.Collections.IComparer> 과 같은 메서드에 전달할 수 있는 구현 <xref:System.Array.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 또는 <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 두 개체의 구조적 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-103">An <xref:System.Collections.IComparer> implementation that can be passed to a method such as <xref:System.Array.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> or <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> to perform a structural comparison of two objects.</span></span> <span data-ttu-id="51d0b-104">표시 여부를 첫 번째 개체 앞, 뒤 인지 또는 정렬 순서에서 두 번째 개체와 동일한 위치에서 발생 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-104">It is designed to indicate whether the first object precedes, follows, or occurs in the same position as the second object in the sort order.</span></span>  
  
-   <span data-ttu-id="51d0b-105"><xref:System.Collections.IEqualityComparer> 과 같은 메서드에 전달할 수 있는 구현 <xref:System.Array.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 또는 <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 구조적 같음에 대 한 비교를 수행 하려면.</span><span class="sxs-lookup"><span data-stu-id="51d0b-105">An <xref:System.Collections.IEqualityComparer> implementation that can be passed to a method such as <xref:System.Array.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> or <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> to perform a comparison for structural equality.</span></span>  
  
 <span data-ttu-id="51d0b-106">개체 구조 비교 또는 배열 또는 튜플 개체와 같은 두 컬렉션 개체의 구조가 같은지 비교 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-106">The objects can be used to perform a structural comparison or a structural equality comparison of two collection objects, such as array or tuple objects.</span></span> <span data-ttu-id="51d0b-107">구조적 비교에서 두 개체는 값을 기준으로 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-107">In structural comparison, two objects are compared based on their values.</span></span> <span data-ttu-id="51d0b-108">일부 조건에 따라 개체를 정렬할 수 있습니다 하 고 두 개체가 동일한 지 같은 값을 가지는 경우 동일한 실제 개체를 참조 하기 때문이 아니라</span><span class="sxs-lookup"><span data-stu-id="51d0b-108">Objects can be ordered based on some criteria, and two objects are considered equal when they have equal values, not because they reference the same physical object</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StructuralComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IComparer StructuralComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IComparer StructuralComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.StructuralComparisons.StructuralComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StructuralComparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IComparer ^ StructuralComparer { System::Collections::IComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StructuralComparer : System.Collections.IComparer" Usage="System.Collections.StructuralComparisons.StructuralComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d0b-109">두 개체의 구조를 비교하는 미리 정의된 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-109">Gets a predefined object that performs a structural comparison of two objects.</span></span></summary>
        <value><span data-ttu-id="51d0b-110">두 컬렉션 개체의 구조를 비교하는 데 사용되는 미리 정의된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-110">A predefined object that is used to perform a structural comparison of two collection objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d0b-111">경우는 <xref:System.Collections.IComparer> 이 속성에서 반환 된 개체와 같이 컬렉션 개체의 비교 메서드에 전달 되 <xref:System.Array.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 또는 <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>, 해당 <xref:System.Collections.IComparer.Compare%2A> 튜플의 각 구성 요소 또는 배열의 각 멤버에 대해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-111">When the <xref:System.Collections.IComparer> object returned by this property is passed to the comparison method of a collection object, such as <xref:System.Array.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> or <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>, its <xref:System.Collections.IComparer.Compare%2A> method is called for each member of an array or for each component of a tuple.</span></span> <span data-ttu-id="51d0b-112">이 구현의 <xref:System.Collections.IComparer.Compare%2A> 다른 컬렉션 개체의 해당 항목을 사용 하 여 컬렉션 개체의 각 항목을 비교 하는 경우 메서드는 다음과 같이 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-112">This implementation of the <xref:System.Collections.IComparer.Compare%2A> method behaves as follows when it compares each item of a collection object with the corresponding item of another collection object:</span></span>  
  
-   <span data-ttu-id="51d0b-113">두 개의 항목으로 간주 `null` 를 같은 문자로 null 항목은 null이 아닌 항목 보다 작을 것으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-113">It considers two items that are `null` to be equal, and considers a null item to be less than an item that is not null.</span></span>  
  
-   <span data-ttu-id="51d0b-114">비교에 첫 번째 항목으로 캐스팅할 수 있는 경우는 <xref:System.Collections.IStructuralComparable> 개체 (컬렉션 개체를 구현 하는 경우 즉,는 <xref:System.Collections.IStructuralComparable> 인터페이스)를 호출 합니다 <xref:System.Collections.IStructuralComparable.CompareTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="51d0b-114">If the first item in the comparison can be cast to an <xref:System.Collections.IStructuralComparable> object (in other words, if it is a collection object that implements the <xref:System.Collections.IStructuralComparable> interface), it calls the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="51d0b-115">비교에서 첫 번째 항목으로 캐스팅할 수 없는 경우는 <xref:System.Collections.IStructuralComparable> 개체 (즉, 없으면 구현 하는 컬렉션 개체를 <xref:System.Collections.IStructuralComparable> 인터페이스)를 호출를 `Comparer.Default.Compare` 메서드.</span><span class="sxs-lookup"><span data-stu-id="51d0b-115">If the first item in the comparison cannot be cast to an <xref:System.Collections.IStructuralComparable> object (in other words, if it is not a collection object that implements the <xref:System.Collections.IStructuralComparable> interface), it calls the `Comparer.Default.Compare` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Comparer" />
      </Docs>
    </Member>
    <Member MemberName="StructuralEqualityComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IEqualityComparer StructuralEqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEqualityComparer StructuralEqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StructuralEqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEqualityComparer ^ StructuralEqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StructuralEqualityComparer : System.Collections.IEqualityComparer" Usage="System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d0b-116">두 개체의 구조가 같은지 비교하는 미리 정의된 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-116">Gets a predefined object that compares two objects for structural equality.</span></span></summary>
        <value><span data-ttu-id="51d0b-117">두 컬렉션 개체의 구조가 같은지 비교하는 데 사용되는 미리 정의된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-117">A predefined object that is used to compare two collection objects for structural equality.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d0b-118">경우는 <xref:System.Collections.IComparer> 이 속성에서 반환 된 개체와 같은 컬렉션 개체의 같음 비교 메서드에 전달 됩니다 <xref:System.Array.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 또는 <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType>, 해당 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 튜플의 각 구성 요소 또는 배열의 각 멤버에 대해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-118">When the <xref:System.Collections.IComparer> object returned by this property is passed to the equality comparison method of a collection object, such as <xref:System.Array.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> or <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType>, its <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method is called for each member of an array or for each component of a tuple.</span></span> <span data-ttu-id="51d0b-119">이 구현의 <xref:System.Collections.IEqualityComparer.Equals%2A> 다른 컬렉션 개체의 해당 항목을 사용 하 여 컬렉션 개체의 각 항목을 비교 하는 경우 메서드는 다음과 같이 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-119">This implementation of the <xref:System.Collections.IEqualityComparer.Equals%2A> method behaves as follows when it compares each item of a collection object with the corresponding item of another collection object:</span></span>  
  
-   <span data-ttu-id="51d0b-120">두 항목이 `null`, 두 항목을 같은 것으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-120">If both items are `null`, it considers the two items to be equal.</span></span>  
  
-   <span data-ttu-id="51d0b-121">하나의 항목은 null 아닌 다른 항목, 두 항목 동일 하지 않은 것으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="51d0b-121">If one item is null but the other item is not, it considers the two items to be unequal.</span></span>  
  
-   <span data-ttu-id="51d0b-122">비교에 첫 번째 항목으로 캐스팅할 수 있는 경우는 <xref:System.Collections.IStructuralEquatable> 개체 (컬렉션 개체를 구현 하는 경우 즉,는 <xref:System.Collections.IStructuralEquatable> 인터페이스)를 호출 합니다 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="51d0b-122">If the first item in the comparison can be cast to an <xref:System.Collections.IStructuralEquatable> object (in other words, if it is a collection object that implements the <xref:System.Collections.IStructuralEquatable> interface), it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="51d0b-123">비교할에서 첫 번째 항목으로 캐스팅할 수 없는 경우는 <xref:System.Collections.IStructuralEquatable> 개체 (즉, 없으면 구현 하는 컬렉션 개체를 <xref:System.Collections.IStructuralEquatable> 인터페이스), 항목의 호출 `Equals` 메서드.</span><span class="sxs-lookup"><span data-stu-id="51d0b-123">If the first item in the comparison cannot be cast to an <xref:System.Collections.IStructuralEquatable> object (in other words, if it is not a collection object that implements the <xref:System.Collections.IStructuralEquatable> interface), it calls the item's `Equals` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Comparer" />
      </Docs>
    </Member>
  </Members>
</Type>