<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="465db885a33f9ef597bef0f29434260c08c2172a" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59353839" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1364b-101">웹 파트 연결에서 소비자 컨트롤과 공급자 컨트롤이 데이터를 공유할 수 있도록 하는 연결 지점 개체를 정의하는 기본 클래스로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-101">Serves as the base class for defining connection point objects that enable the consumer control and the provider control in a Web Parts connection to share data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1364b-102">데이터를 공유 하는 두 서버 컨트롤의 모든 웹 파트 연결 구성: 하나의 컨트롤은 소비자, 다른 하나는 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-102">Every Web Parts connection consists of two server controls sharing data: one control is the consumer, the other is the provider.</span></span> <span data-ttu-id="1364b-103">웹 파트 연결 및 연결 개체 자체의 필수 구성 요소에 참조를 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-103">For a discussion of the essential components of a Web Parts connection, and the connection object itself, see the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview.</span></span> <span data-ttu-id="1364b-104">모든 웹 파트 연결에는 연결 지점이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-104">Every Web Parts connection requires connection points.</span></span> <span data-ttu-id="1364b-105">공급자 및 소비자 컨트롤 각각 이어야 하나 이상의 정의 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 컨트롤을 연결 하려면 어떻게 해야 다른 제어 및 데이터의 형식을 해당 하는 것에 대 한 세부 정보를 포함 하는 개체 (각각의 필요에 따라 있습니다 여러 연결 지점)를 공유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-105">The provider and the consumer control must each have at least one defined <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object (each of them can optionally have multiple connection points) that contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="1364b-106">실제 연결의 경우 공급자에 연결 지점 개체의 고유한 형식 (기본에서 파생 된 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스), <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 인스턴스 및 소비자에 고유한 개체를 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="1364b-106">In an actual connection, the provider has its own type of connection point object (derived from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class), a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> instance, and the consumer has its own object, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> instance.</span></span>  
  
 <span data-ttu-id="1364b-107">공급자 연결 지점을 만들려면 개발자는 소비자에 게 구현 된 인터페이스 인스턴스를 반환 하는 공급자에 콜백 메서드를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-107">To create a provider connection point, developers must add a callback method to the provider that will return an implemented interface instance to a consumer.</span></span> <span data-ttu-id="1364b-108">사용 하 여 소스 코드의 콜백 메서드를 표시 해야 합니다는 `ConnectionProvider` 코드 특성 (참조는 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 클래스).</span><span class="sxs-lookup"><span data-stu-id="1364b-108">They must mark the callback method in the source code with a `ConnectionProvider` code attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class).</span></span> <span data-ttu-id="1364b-109">마찬가지로, 소비자 연결 지점을 만들려면 개발자 해야 추가 메서드는 인터페이스 인스턴스를 수신 하는 소비자에 게 및 메서드 앞에 표시 해야 합니다는 `ConnectionConsumer` 특성 (참조는 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 클래스).</span><span class="sxs-lookup"><span data-stu-id="1364b-109">Similarly, to create a consumer connection point, developers must add a method to the consumer that receives an interface instance, and they must mark that method with a `ConnectionConsumer` attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class).</span></span>  
  
 <span data-ttu-id="1364b-110">웹 페이지에서 연결을 만드는 개발자를 정적 또는 동적 연결으로 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-110">When developers create connections on a Web page, they can be created as static or dynamic connections.</span></span> <span data-ttu-id="1364b-111">정적 연결 웹 페이지의 태그에 선언 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-111">Static connections are declared in the markup of a Web page.</span></span> <span data-ttu-id="1364b-112">정적 연결을 선언한 경우 개발자는 연결 지점에서 사용 하는 소비자와 공급자에 대 한 값을 할당 지정할 수는 `ProviderConnectionPointID` 및 `ConsumerConnectionPointID` 내에서 특성을 `<asp:webpartconnection>` 요소 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-112">When a static connection is declared, developers can designate which connection points are used for both the consumer and provider by assigning values to the `ProviderConnectionPointID` and `ConsumerConnectionPointID` attributes within the `<asp:webpartconnection>` element tag.</span></span> <span data-ttu-id="1364b-113">이 방법은 연결에 사용 하는 연결 지점을 확인 하려면 정적 연결 수 있기 때문에 소비자 및 공급자 컨트롤 내에 정의 된 연결 지점이 여러 개 있는 경우 특히 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-113">This approach is especially useful if there are multiple connection points defined within the consumer and provider controls, because it enables the static connection to identify which connection points to use for the connection.</span></span>  
  
 <span data-ttu-id="1364b-114">개발자의 코드 또는 사용자가 제공한 사용자 인터페이스 (UI)를 통해 동적 연결을 프로그래밍 방식으로 만드는 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-114">Dynamic connections are created programmatically, either by a developer's code or by users through the user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="1364b-115">코드에서 연결을 만들려는 개발자의 인스턴스를 가져올 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 호출 하 여 개체를 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 메서드를는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-115">To create a connection in code, developers must get an instance of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="1364b-116">이 메서드를 호출 하려면 먼저 개발자가 해당 연결 지점 개체 소비자 및 공급자 서버 컨트롤에 대 한 참조가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-116">Before they can call this method, developers must have references to the consumer and provider server controls and their respective connection point objects.</span></span> <span data-ttu-id="1364b-117">공급자 및 소비자 컨트롤에 대 한 연결점에 대 한 참조를 가져오려면 개발자가 먼저 호출 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> 메서드를 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-117">To get references to the connection points for a provider and a consumer control, developers first call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> methods on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="1364b-118">이러한 메서드는 적절 한 연결 다시 연결을 만들기 위한 메서드에 전달 될 수 있는 point 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-118">These methods return the appropriate connection point objects, which in turn can be passed to the method for creating a connection.</span></span>  
  
 <span data-ttu-id="1364b-119">때 공급자 및 소비자 연결 지점 개체 두 방법 모두 동일한 유형의 인터페이스를 사용 하 여 결과 호환 되며 데이터를 공유에 직접 연결을 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-119">When the provider's and the consumer's connection point objects both work with the same type of interface, they are compatible and can form a direct connection to share data.</span></span> <span data-ttu-id="1364b-120">동일한 인터페이스 형식과 작동 하지 않는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 공급자 로부터 인터페이스 인스턴스는 소비자가 사용할 수 있는 형식으로 변환할 개체를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-120">If they do not work with the same interface type, a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to translate the interface instance from the provider into a type that the consumer can work with.</span></span>  
  
 <span data-ttu-id="1364b-121">추상 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스 소비자 및 공급자 컨트롤에서 공유 되는 연결 지점의 기본 세부 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-121">The abstract <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class provides the base details of connection points that are shared by both consumer and provider controls.</span></span> <span data-ttu-id="1364b-122">이러한 세부 정보를 포함 하는 몇 가지 속성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-122">Several properties contain these details.</span></span> <span data-ttu-id="1364b-123"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> 속성 연결점을 한 번에 둘 이상의 연결에 참여할 수 있는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-123">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property indicates whether a connection point can participate in more than one connection at a time.</span></span> <span data-ttu-id="1364b-124">기본적으로 공급자 연결 지점의 여러 연결에 참여할 수 있습니다 하 고 소비자 연결 지점의 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-124">By default, provider connection points can participate in multiple connections, and consumer connection points cannot.</span></span> <span data-ttu-id="1364b-125"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 속성 연결 지점과 연결 된 서버 컨트롤의 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-125">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property indicates the type of the server control associated with a connection point.</span></span> <span data-ttu-id="1364b-126">것은 아닙니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 서버 컨트롤을 ASP.NET 컨트롤, 사용자 지정 컨트롤 또는 사용자 정의 컨트롤을 사용할 수 있는 경우 연결에 참여 하도록; 컨트롤 연결을 설정할 수는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-126">Note that not only <xref:System.Web.UI.WebControls.WebParts.WebPart> controls can form connections; any server control, whether an ASP.NET control, a custom control, or a user control, can be enabled to participate in connections if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone.</span></span> <span data-ttu-id="1364b-127"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> 속성은 연결을 만드는 사용자를 지원 하기 위해 UI에 표시 될 수 있는 연결점에 대 한 친숙 한 이름을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-127">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property provides a friendly name for the connection point that can be displayed in the UI to assist users who are creating connections.</span></span> <span data-ttu-id="1364b-128"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> 속성이 연결 지점 개체 자체에 대 한 문자열 식별자로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-128">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property serves as a string identifier for the connection point object itself.</span></span> <span data-ttu-id="1364b-129"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> 속성은 어떤 유형의 인터페이스 인스턴스 연결 지점에 대 한 이해를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-129">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface instance the connection point understands.</span></span> <span data-ttu-id="1364b-130">지정된 된 연결점을 제공 하거나 해당 인터페이스의 인스턴스를 소비 여부 인지에 의해 결정 됩니다는 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 또는 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-130">Whether a given connection point provides or consumes an instance of that interface is determined by whether it is a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> or a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span>  
  
 <span data-ttu-id="1364b-131"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스에 메서드 하나가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-131">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class has one method.</span></span> <span data-ttu-id="1364b-132"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 메서드 연결점을 현재 연결에 참여할 수 있는지 여부를 나타내는 부울 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-132">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method returns a Boolean value indicating whether a connection point is currently able to participate in connections.</span></span>  
  
 <span data-ttu-id="1364b-133">합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스에는 역시 단일 공용 필드를 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-133">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class also has one public field, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>.</span></span> <span data-ttu-id="1364b-134">이 필드는 연결에서 기본 연결 지점을 식별 하는 데 사용 하는 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-134">This field contains a value used to identify the default connection point in a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1364b-135">연결 지점 메서드 하나의 필수 매개 변수를 지정 하기 위한 특성 `displayName`ID를 지정 하지 않고 기본 연결 지점 특성을 만들 수 있으므로</span><span class="sxs-lookup"><span data-stu-id="1364b-135">The attributes for specifying connection point methods have only one required parameter, `displayName`, so it is possible to create the default connection point attribute without specifying an ID.</span></span> <span data-ttu-id="1364b-136">이러한 경우에는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 필드를 사용 하 여 기본 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-136">In such cases, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field supplies a base value to use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1364b-137">다음 코드 예제에서는 필요한를 포함 하는 웹 파트 연결을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-137">The following code example demonstrates the creation of a Web Parts connection that includes the required <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects.</span></span> <span data-ttu-id="1364b-138">때문에 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스는 추상 기본 클래스 인스턴스의 자식 클래스인<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 및 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>-실제 개체는 연결을 형성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-138">Because the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class is an abstract base class, instances of its child classes--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--are the actual objects used to form a connection.</span></span>  
  
 <span data-ttu-id="1364b-139">예제에는 네 가지 부분이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-139">The example has four parts:</span></span>  
  
-   <span data-ttu-id="1364b-140">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-140">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="1364b-141">소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-141">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="1364b-142">모든 컨트롤을 호스트 하 여 코드 예제를 실행 하는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-142">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="1364b-143">예제 페이지를 실행 하는 방법 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-143">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="1364b-144">이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-144">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="1364b-145">에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 웹 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-145">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="1364b-146">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 [연습: 페이지 파트는 웹에서 디스플레이 모드 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-146">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="1364b-147">코드 예제의 두 번째 부분은 인터페이스 및 컨트롤에 대 한 소스 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-147">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="1364b-148">이라는 간단한 인터페이스를 포함 하는 소스 파일 `IZipCode`합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-148">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="1364b-149">이기도 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 클래스 `ZipCodeWebPart` 인터페이스를 구현 하 고 공급자 컨트롤의 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-149">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="1364b-150">해당 `ProvideIZipCode` 메서드는 인터페이스의 전용 멤버를 구현 하는 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-150">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="1364b-151">메서드는 단순히 인터페이스의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-151">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="1364b-152">메서드를 사용 하 여 표시 된 참고는 `ConnectionProvider` 해당 메타 데이터의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-152">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="1364b-153">공급자의 연결점에 대 한 콜백 메서드로 메서드를 식별 하기 위한 메커니즘입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-153">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="1364b-154">다른 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 이름은 `WeatherWebPart`, 연결에 대 한 소비자 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-154">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="1364b-155">이 클래스에 메서드가 `GetZipCode` 의 인스턴스를 가져오는 `IZipCode` 공급자 컨트롤에서 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-155">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="1364b-156">이 메서드는 사용 하는 소비자 연결 지점 메서드로 표시는 `ConnectionConsumer` 해당 메타 데이터의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-156">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="1364b-157">소비자 컨트롤의 연결 지점 메서드를 식별 하기 위한 메커니즘입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-157">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="1364b-158">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-158">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="1364b-159">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-159">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="1364b-160">또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-160">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="1364b-161">이 코드 예제에서는 동적 컴파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-161">This code example uses dynamic compilation.</span></span> <span data-ttu-id="1364b-162">컴파일하는 방법을 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-162">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="1364b-163">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-163">The third part of the code example is the Web page.</span></span> <span data-ttu-id="1364b-164">위쪽은 `Register` 페이지의 디스플레이 모드 연결을 구성 하는 사용자 지정 컨트롤 및 사용자가 변경할 수 있는 사용자 정의 컨트롤을 등록 하는 지시문입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-164">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="1364b-165">연결 자체 내에서 선언적으로 만들어집니다는 `<staticconnections>` 페이지의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-165">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="1364b-166">연결을 프로그래밍 방식으로 실현할 수 있습니다. 에 포함 된 작업을 수행 하는 코드는 `Button1_Click` 메서드.</span><span class="sxs-lookup"><span data-stu-id="1364b-166">You can also create the connection programmatically; the code for doing that is contained in the `Button1_Click` method.</span></span> <span data-ttu-id="1364b-167">연결이 선언적으로 또는 프로그래밍 방식으로 생성 하는지 여부를 연결점 공급자와 소비자 모두에 대해 항상 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-167">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="1364b-168">합니다 `Button2_Click` 메서드 액세스를 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 공급자와 소비자 모두에 대 한 개체 및 레이블을 페이지에서 해당 속성 값의 일부를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-168">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="1364b-169">브라우저에서 페이지를 로드 한 후 클릭 합니다 **연결 지점 정보** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-169">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="1364b-170">선언적 연결에 설정 된 공급자 및 소비자 연결 지점에 대 한 정보가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-170">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="1364b-171">다음을 사용 하 여 합니다 **디스플레이 모드** 드롭다운 컨트롤을 페이지에 연결 전환 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-171">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="1364b-172">중의 동사 메뉴의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 (제목 표시줄의 아래쪽 화살표로 표시 됨), 연결 동사를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-172">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="1364b-173">UI가 나타나고 연결이 자동으로 생성 된 `<asp:connectionszone>` 컨트롤이 페이지에 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-173">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="1364b-174">클릭 합니다 **연결 끊기** 단추 기존 연결을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-174">Click the **Disconnect** button to terminate the existing connection.</span></span> <span data-ttu-id="1364b-175">사용 합니다 **디스플레이 모드** 찾아보기 모드로 페이지를 반환 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-175">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="1364b-176">를 클릭 합니다 **동적 연결** 프로그래밍 방식으로 연결을 설정 하는 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-176">Next, click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="1364b-177">클릭 합니다 **연결 지점 세부 정보** 단추를 다시 두 개의 연결 지점 개체에 대 한 세부 정보를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-177">Click the **Connection Point Details** button again, to indicate details about the two connection point objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="1364b-178">웹 파트 연결 개요</span><span class="sxs-lookup"><span data-stu-id="1364b-178">Web Parts Connections Overview</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="1364b-179">ASP.NET 웹 파트 컨트롤</span><span class="sxs-lookup"><span data-stu-id="1364b-179">ASP.NET Web Parts Controls</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1364b-180">연결 지점에서 여러 개의 동시 연결을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-180">Gets a value that indicates whether a connection point supports multiple simultaneous connections.</span></span></summary>
        <value><span data-ttu-id="1364b-181">연결 지점에서 여러 연결을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-181"><see langword="true" /> if the connection point supports multiple connections; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1364b-182"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 개체에는 해당 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> 속성 값으로 설정 `true` (여는 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 클래스) 이므로 기본적으로 설정 하는 웹 파트 컨트롤 공급자 연결 지점의 여러 소비자에 게 연결을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-182"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `true` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class), because the Web Parts control set by default enables provider connection points to form connections to multiple consumers.</span></span>  
  
 <span data-ttu-id="1364b-183">반면 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체에 해당 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> 속성 값으로 설정 `false` (여는 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 클래스) 기본적으로 설정 하는 웹 파트 컨트롤 소비자 연결을 허용 하기 때문에 하나의 공급자에 대 한 연결을 설정 하는 작업을 가리킵니다를 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-183">In contrast, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `false` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class) because the Web Parts control set by default allows consumer connection points to establish a connection to only one provider at a time.</span></span>  
  
 <span data-ttu-id="1364b-184">다른 값을 할당 하 여 여러 연결과 관련 된 기본 동작을 변경할 수는 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> 속성 (공급자) 또는 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> 속성 (소비자) 두 가지 <xref:System.Attribute> 연결 특성에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-184">You can change the default behavior concerning multiple connections by assigning different values to the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for providers) or the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for consumers) on the two <xref:System.Attribute> classes used for connection attributes.</span></span> <span data-ttu-id="1364b-185">동시에 여러 공급자에 연결할 소비자 연결 지점을 사용 하면, 코드 결과 동기화 문제가 처리 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-185">If you enable consumer connection points to connect to multiple providers at the same time, your code must deal with any resulting synchronization issues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1364b-186">다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> 속성을 둘 다 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 및 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체.</span><span class="sxs-lookup"><span data-stu-id="1364b-186">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="1364b-187">이 코드 예제에서는 속성에 액세스 하는 코드를 포함 하는 웹 페이지를 보여 줍니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-187">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="1364b-188">코드를 `Button2_Click` 웹 페이지 액세스의 메서드는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> 연결점의 각 개체 속성과 레이블로 각 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-188">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="1364b-189">클릭 하 여 코드를 실행 합니다 **연결 지점 정보** 브라우저 페이지 로드 한 다음 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-189">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="1364b-190">ASP.NET 웹 파트 컨트롤</span><span class="sxs-lookup"><span data-stu-id="1364b-190">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1364b-191">연결 지점이 연결된 서버 컨트롤의 <see cref="T:System.Type" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-191">Gets the <see cref="T:System.Type" /> of the server control with which a connection point is associated.</span></span></summary>
        <value><span data-ttu-id="1364b-192">컨트롤 형식을 나타내는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-192">A <see cref="T:System.Type" /> representing the control type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1364b-193">값을 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 속성을는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-193">The value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property is often the <xref:System.Web.UI.WebControls.WebParts.WebPart> type.</span></span> <span data-ttu-id="1364b-194">그러나 제대로 사용 하도록 설정 되어 있는 모든 종류의 사용자 정의 컨트롤 또는 서버 컨트롤 연결에 참여할 수 있으므로 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역에는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 속성 이러한 다른 서버 컨트롤 형식 중 하나를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-194">However, because any type of user control or server control can participate in connections if it is properly enabled and placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property can return one of these other server control types as well.</span></span>  
  
 <span data-ttu-id="1364b-195">때 서버 제어 되지 않는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 배치 됩니다를 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 사용 하 여 래핑되고 영역에는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 역할을 할 수 있도록 런타임에 개체 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 연결에 참여.</span><span class="sxs-lookup"><span data-stu-id="1364b-195">When server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time so they can function as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and participate in connections.</span></span> <span data-ttu-id="1364b-196">하지만 이러한 컨트롤은 연결에 관련 된 경우는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 속성 값을 반환 하지 않습니다는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 형식의 형식을 반환 합니다 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 서버 또는 사용자 정의 컨트롤의 형식인 개체의 자식 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="1364b-196">But when such controls are involved in connections, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property value does not return the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> type; it returns the type of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object's child control, which is the type of the server or user control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1364b-197">다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 속성을 둘 다 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 및 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체.</span><span class="sxs-lookup"><span data-stu-id="1364b-197">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="1364b-198">이 코드 예제에서는 속성에 액세스 하는 코드를 포함 하는 웹 페이지를 보여 줍니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-198">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="1364b-199">코드를 `Button2_Click` 웹 페이지 액세스의 메서드는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 연결점의 각 개체 속성과 레이블로 각 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-199">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="1364b-200">클릭 하 여 코드를 실행 합니다 **연결 지점 정보** 브라우저 페이지 로드 한 다음 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-200">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="1364b-201">ASP.NET 웹 파트 컨트롤</span><span class="sxs-lookup"><span data-stu-id="1364b-201">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1364b-202">서버 컨트롤과 연결된 연결 지점 컬렉션 내의 기본 연결 지점을 식별하는 데 사용되는 문자열을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-202">Represents a string used to identify the default connection point within a collection of connection points associated with a server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1364b-203">소비자 또는 공급자의 소스 코드에서 연결 지점에 대 한 ID를 지정할 수 있기 연결점 만들어지면 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 사용 하는 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 또는 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-203">When a connection point is created, it is possible to specify an ID for the connection point in the source code of a consumer or provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, using a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span> <span data-ttu-id="1364b-204">그러나 경우 특성은 추가 소스 코드의 연결 지점으로는 `ID` 매개 변수는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-204">However, when an attribute is added to a connection point in the source code, the `ID` parameter is optional.</span></span> <span data-ttu-id="1364b-205">ID 특성에 지정 하지 않으면는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 필드는 기본 연결 지점을 식별 하는 데 사용 되는 문자열을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-205">If the ID is not specified in the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field provides a string that is used to identify the default connection point.</span></span>  
  
 <span data-ttu-id="1364b-206">소비자 또는 공급자 컨트롤의 연결 지점이 여러 개 정의 된 경우 각 연결 지점에 대해 ID를 지정 하는 데 필요한 연결을 만들 때 연결 지점을 구별할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-206">If multiple connection points are defined in a consumer or provider control, it is necessary to specify an ID for each connection point, so that the connection points can be distinguished when creating connections.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1364b-207">UI(사용자 인터페이스)에 있는 연결 지점을 나타내는 표시 이름으로 사용되는 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-207">Gets a string that serves as a friendly display name to represent a connection point in the user interface (UI).</span></span></summary>
        <value><span data-ttu-id="1364b-208"><see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> 개체의 표시 이름이 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-208">A string that contains a friendly display name for a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1364b-209">웹 파트 연결을 만들려면 연결에 대 한 공급자 컨트롤과 소비자 컨트롤 지정 해야 합니다 각각 하나 이상의 연결점을 통신 하 고 데이터를 공유할 수 있도록 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="1364b-209">To create a Web Parts connection, the provider and consumer controls for the connection must each specify at least one connection point, a method that enables them to communicate and share data.</span></span> <span data-ttu-id="1364b-210">이러한 연결 지점 메서드를 식별 하려면 개발자는 선택한 메서드에 특성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-210">To identify these connection point methods, a developer specifies an attribute on the selected methods.</span></span> <span data-ttu-id="1364b-211">공급자에서는 `ConnectionProvider` 선택한 콜백 메서드 및 소비자의 특성이 설정 되어를 `ConnectionConsumer` 공급자에서에서 데이터를 포함 하는 인터페이스의 인스턴스를 수신 하는 메서드에 특성이 설정 되어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-211">In the provider, a `ConnectionProvider` attribute is set on the selected callback method, and in the consumer, a `ConnectionConsumer` attribute is set on the method that receives an instance of an interface that contains data from the provider.</span></span> <span data-ttu-id="1364b-212">필수 특성을 만드는 선언 하는 오버 로드에 관계 없이 항상는 하나의 매개 변수는 두이 특성 모두의 `displayName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-212">For both of these attributes, the one parameter that is always required, regardless of which overload is declared to create the attribute, is the `displayName` parameter.</span></span> <span data-ttu-id="1364b-213">개발자는 연결 지점에 대 한 표시 이름으로 사용할 문자열을 할당 해야 하며 해당 문자열의 값이 됩니다는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-213">The developer must assign a string to be used as a friendly display name for the connection point, and that string becomes the value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span>  
  
 <span data-ttu-id="1364b-214"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> 사용자 연결을 만들 때 속성 값이 웹 페이지의 UI에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-214">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property value is displayed in the UI of a Web page when users create connections.</span></span> <span data-ttu-id="1364b-215">예를 들어 경우는 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 컨트롤 간의 연결을 만드는 사용자에 대 한 UI를 만들면 컨트롤이 페이지에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-215">For example, when the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is added to the page, it creates a UI for users to create connections between controls.</span></span> <span data-ttu-id="1364b-216">사용자 페이지 연결 디스플레이 모드를 전환 하 고 connect 동사를 클릭 한 후을 <xref:System.Web.UI.WebControls.WebParts.WebPart> UI가 표시 되는 연결을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-216">After a user switches a page into connect display mode and clicks a connect verb on a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the connection UI appears.</span></span> <span data-ttu-id="1364b-217">연결에 참여할 수 있는 각 컨트롤 UI에 나열 되 고 각 컨트롤 옆에 있는 사용 가능한 연결 지점의 이름을 표시 하는 드롭다운 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-217">Each control that can participate in a connection is listed in the UI, and next to each control is a drop-down list control that displays the friendly names of its available connection points.</span></span> <span data-ttu-id="1364b-218">사용자에 연결할 하나 이상의 연결점을 선택 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-218">Users must select at least one connection point to establish a connection.</span></span> <span data-ttu-id="1364b-219">연결 지점 목록에 표시 되는 값에서 가져온는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-219">The values that appear in the list of connection points are obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span> <span data-ttu-id="1364b-220">연결을 만들기 위한 사용자 지정 UI를 작성 하는 개발자, 하는 경우 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> 연결점을 나타내는 친숙 한 이름을 제공 하기 위해 비슷한 방식으로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-220">If developers build a custom UI for creating connections, they can use the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property in a similar way to provide a friendly name that represents a connection point.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="1364b-221">ASP.NET 웹 파트 컨트롤</span><span class="sxs-lookup"><span data-stu-id="1364b-221">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="1364b-222">연결 지점과 연결된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 또는 다른 서버 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-222">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that is associated with a connection point.</span></span></param>
        <summary><span data-ttu-id="1364b-223">연결 지점이 연결에 참여할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-223">Returns a value that indicates whether a connection point can participate in connections.</span></span></summary>
        <returns><span data-ttu-id="1364b-224">컨트롤이 연결 지점을 만들어서 연결에 참여할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-224"><see langword="true" /> if the control can create a connection point to participate in a connection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1364b-225">합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 자료의 메서드 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스는 항상 반환 `true`, 파생된 클래스에서 반환할 메서드를 재정의할 수 있지만 `true` 또는 `false` 의 상태에 따라 서로 다른 시간이 `control`합니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-225">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method in the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class always returns `true`, but derived classes can override the method to return `true` or `false` at different times, based on the state of `control`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1364b-226">다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 메서드를 둘 다 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 및 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-226">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="1364b-227">이 코드 예제에서는 속성에 액세스 하는 코드를 포함 하는 웹 페이지를 보여 줍니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-227">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="1364b-228">코드를 `Button2_Click` 웹 페이지 액세스의 메서드는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 연결점의 각 개체 메서드와 레이블로 각 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-228">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="1364b-229">클릭 하 여 코드를 실행 합니다 **연결 지점 정보** 브라우저 페이지 로드 한 다음 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-229">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="1364b-230">ASP.NET 웹 파트 컨트롤</span><span class="sxs-lookup"><span data-stu-id="1364b-230">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1364b-231">연결 지점에 대한 식별자가 포함된 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-231">Gets a string that contains the identifier for a connection point.</span></span></summary>
        <value><span data-ttu-id="1364b-232">연결 지점에 대한 식별자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-232">A string that contains the identifier for a connection point.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1364b-233">개발자는 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 또는 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 특성에서 컨트롤의 소스 코드에서 메서드를 메서드는 연결 지점으로 사용할 수 있도록 필요가 선언 하는 `ID` 연결 지점 특성에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-233">When a developer declares a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute on a method in the source code of a control, so that the method can be used as a connection point, it is not required to declare the `ID` parameter for the connection point attribute.</span></span> <span data-ttu-id="1364b-234">유일한 필수 특성은는 `displayName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-234">The only required attribute is the `displayName` parameter.</span></span> <span data-ttu-id="1364b-235">연결 지점에에서 값을 사용 하는 기본 ID가 할당 된 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-235">A default ID is assigned to the connection point, using the value from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="1364b-236">연결 지점으로 사용 되는 컨트롤에 메서드가 하나만 있으면 연결점에 대 한 ID를 지정 하는 데 필요한 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-236">If there is only one method in a control being used as a connection point, it is unnecessary to specify an ID for the connection point.</span></span> <span data-ttu-id="1364b-237">연결 지점으로 지정 하는 방법은 여러 가지를 각각;에 대 한 ID를 지정 해야 합니다. 그렇지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-237">If there are multiple methods specified as connection points, you must specify an ID for each one; otherwise, an exception will be thrown.</span></span> <span data-ttu-id="1364b-238">ID를 각 연결 지점에 할당 하면 해도 웹 페이지에서 연결을 선언 하거나 코드에서 만들 때 사용할 연결 지점을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-238">By assigning an ID to each connection point, you also make it possible to specify which connection point to use when you declare connections in Web pages or create them in code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1364b-239">다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> 속성을 둘 다 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 및 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체.</span><span class="sxs-lookup"><span data-stu-id="1364b-239">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="1364b-240">이 코드 예제에서는 속성에 액세스 하는 코드를 포함 하는 웹 페이지를 보여 줍니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-240">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="1364b-241">코드를 `Button2_Click` 웹 페이지 액세스의 메서드는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> 연결점의 각 개체 속성과 레이블로 각 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-241">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="1364b-242">클릭 하 여 코드를 실행 합니다 **연결 지점 정보** 브라우저 페이지 로드 한 다음 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-242">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="1364b-243">ASP.NET 웹 파트 컨트롤</span><span class="sxs-lookup"><span data-stu-id="1364b-243">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1364b-244">연결 지점에서 사용하는 인터페이스의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-244">Gets the type of the interface used by a connection point.</span></span></summary>
        <value><span data-ttu-id="1364b-245">컨트롤에서 제공하거나 소비되는 인터페이스 형식에 해당하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-245">A <see cref="T:System.Type" /> that corresponds to the interface type provided or consumed by a control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1364b-246"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> 속성 연결점을 사용 하 여 어떤 유형의 인터페이스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-246">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface a connection point uses.</span></span> <span data-ttu-id="1364b-247">이 두 컨트롤은 호환 되 고 연결을 설정할 수 있는지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-247">This can help to determine whether two controls are compatible and able to form a connection.</span></span> <span data-ttu-id="1364b-248">경우 공급자 연결 지점 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> 소비자 연결 지점에서 다른 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, 두 개의 호환 되지 않습니다 (따라서는 연결할 수 없습니다 직접 변환기 없이) 및 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 반드시 개체 연결에 대해 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-248">If the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> is different from the consumer connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, then the two controls are incompatible (meaning that they cannot be directly connected without a transformer), and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1364b-249">다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> 속성을 둘 다 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 및 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 개체.</span><span class="sxs-lookup"><span data-stu-id="1364b-249">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="1364b-250">이 코드 예제에서는 속성에 액세스 하는 코드를 포함 하는 웹 페이지를 보여 줍니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-250">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="1364b-251">코드를 `Button2_Click` 웹 페이지 액세스의 메서드는 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> 연결점의 각 개체 속성과 레이블로 각 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-251">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="1364b-252">클릭 하 여 코드를 실행 합니다 **연결 지점 정보** 브라우저 페이지 로드 한 다음 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="1364b-252">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="1364b-253">ASP.NET 웹 파트 컨트롤</span><span class="sxs-lookup"><span data-stu-id="1364b-253">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>