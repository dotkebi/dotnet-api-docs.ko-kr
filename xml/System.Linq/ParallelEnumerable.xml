<Type Name="ParallelEnumerable" FullName="System.Linq.ParallelEnumerable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fda3f0e601e70078fb78b2584af289dbc4c59044" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58700946" /></Metadata><TypeSignature Language="C#" Value="public static class ParallelEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ParallelEnumerable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelEnumerable" />
  <TypeSignature Language="VB.NET" Value="Public Module ParallelEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelEnumerable abstract sealed" />
  <TypeSignature Language="F#" Value="type ParallelEnumerable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8c65f-101">ParallelQuery{TSource}를 구현하는 개체를 쿼리하기 위한 메서드 집합을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-101">Provides a set of methods for querying objects that implement ParallelQuery{TSource}.</span></span> <span data-ttu-id="8c65f-102"><see cref="T:System.Linq.Enumerable" />과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-102">This is the parallel equivalent of <see cref="T:System.Linq.Enumerable" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-103">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-103">Parallel LINQ (PLINQ)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Aggregate&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-104">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-104">Applies in parallel an accumulator function over a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Aggregate&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Aggregate&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TSource,TSource&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Aggregate&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, !!TSource, !!TSource&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource) (source As ParallelQuery(Of TSource), func As Func(Of TSource, TSource, TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TSource, TSource&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Source, 'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Aggregate (source, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;TSource,TSource,TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-105"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-105">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-106">집계할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-106">A sequence to aggregate over.</span></span></param>
        <param name="func"><span data-ttu-id="8c65f-107">각 요소에 대해 호출할 누적기 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-107">An accumulator function to be invoked on each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-108">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-108">Applies in parallel an accumulator function over a sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-109">최종 누적기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-109">The final accumulator value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-110"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-110">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-111"><paramref name="source" /> 또는 <paramref name="func" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-111"><paramref name="source" /> or <paramref name="func" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-112">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-112">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-113"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-113"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-114">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-114">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TSource,TAccumulate&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TSource, TAccumulate&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate) (source As ParallelQuery(Of TSource), seed As TAccumulate, func As Func(Of TAccumulate, TSource, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; -&gt; 'Accumulate" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-115"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-115">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="8c65f-116">누적기 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-116">The type of the accumulator value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-117">집계할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-117">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="8c65f-118">초기 누적기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-118">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="8c65f-119">각 요소에 대해 호출할 누적기 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-119">An accumulator function to be invoked on each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-120">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-120">Applies in parallel an accumulator function over a sequence.</span></span> <span data-ttu-id="8c65f-121">지정된 시드 값은 초기 누적기 값으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-121">The specified seed value is used as the initial accumulator value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-122">최종 누적기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-122">The final accumulator value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-123"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-123">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-124"><paramref name="source" /> 또는 <paramref name="func" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-124"><paramref name="source" /> or <paramref name="func" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-125">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-125">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-126"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-126"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-127">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-127">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seed As TAccumulate, func As Func(Of TAccumulate, TSource, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, func, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-128"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-128">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="8c65f-129">누적기 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-129">The type of the accumulator value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-130">결과 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-130">The type of the resulting value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-131">집계할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-131">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="8c65f-132">초기 누적기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-132">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="8c65f-133">각 요소에 대해 호출할 누적기 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-133">An accumulator function to be invoked on each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-134">최종 누적기 값을 결과 값으로 변환하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-134">A function to transform the final accumulator value into the result value.</span></span></param>
        <summary><span data-ttu-id="8c65f-135">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-135">Applies in parallel an accumulator function over a sequence.</span></span> <span data-ttu-id="8c65f-136">지정된 시드 값은 초기 누적기 값으로 사용되고 지정된 함수는 결과 값을 선택하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-136">The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-137">변환된 최종 누적기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-137">The transformed final accumulator value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-138"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-138">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-139"><paramref name="source" /> 또는 <paramref name="func" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-139"><paramref name="source" /> or <paramref name="func" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-140">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-140">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-141"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-141"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-142">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-142">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TAccumulate&gt; seedFactory, Func&lt;TAccumulate,TSource,TAccumulate&gt; updateAccumulatorFunc, Func&lt;TAccumulate,TAccumulate,TAccumulate&gt; combineAccumulatorsFunc, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TAccumulate&gt; seedFactory, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; updateAccumulatorFunc, class System.Func`3&lt;!!TAccumulate, !!TAccumulate, !!TAccumulate&gt; combineAccumulatorsFunc, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seedFactory As Func(Of TAccumulate), updateAccumulatorFunc As Func(Of TAccumulate, TSource, TAccumulate), combineAccumulatorsFunc As Func(Of TAccumulate, TAccumulate, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TAccumulate&gt; ^ seedFactory, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ updateAccumulatorFunc, Func&lt;TAccumulate, TAccumulate, TAccumulate&gt; ^ combineAccumulatorsFunc, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Accumulate&gt; * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Accumulate, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seedFactory, updateAccumulatorFunc, combineAccumulatorsFunc, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seedFactory" Type="System.Func&lt;TAccumulate&gt;" />
        <Parameter Name="updateAccumulatorFunc" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="combineAccumulatorsFunc" Type="System.Func&lt;TAccumulate,TAccumulate,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-143"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-143">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="8c65f-144">누적기 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-144">The type of the accumulator value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-145">결과 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-145">The type of the resulting value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-146">집계할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-146">A sequence to aggregate over.</span></span></param>
        <param name="seedFactory"><span data-ttu-id="8c65f-147">초기 누적기 값을 반환하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-147">A function that returns the initial accumulator value.</span></span></param>
        <param name="updateAccumulatorFunc"><span data-ttu-id="8c65f-148">파티션의 각 요소에 대해 호출할 누적기 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-148">An accumulator function to be invoked on each element in a partition.</span></span></param>
        <param name="combineAccumulatorsFunc"><span data-ttu-id="8c65f-149">각 파티션의 생성된 누적기 결과에 대해 호출할 누적기 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-149">An accumulator function to be invoked on the yielded accumulator result from each partition.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-150">최종 누적기 값을 결과 값으로 변환하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-150">A function to transform the final accumulator value into the result value.</span></span></param>
        <summary><span data-ttu-id="8c65f-151">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-151">Applies in parallel an accumulator function over a sequence.</span></span> <span data-ttu-id="8c65f-152">이 오버로드는 순차적 구현에서는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-152">This overload is not available in the sequential implementation.</span></span></summary>
        <returns><span data-ttu-id="8c65f-153">변환된 최종 누적기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-153">The transformed final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-154">이 오버 로드는 병렬된 쿼리와 관련이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-154">This overload is specific to parallelized queries.</span></span> <span data-ttu-id="8c65f-155">병렬된 쿼리를 여러 하위 시퀀스 (파티션)에 데이터 소스 시퀀스를 분할할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-155">A parallelized query may partition the data source sequence into several sub-sequences (partitions).</span></span> <span data-ttu-id="8c65f-156">`updateAccumulatorFunc` 파티션 내의 각 요소에 대해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-156">The `updateAccumulatorFunc` is invoked on each element within partitions.</span></span> <span data-ttu-id="8c65f-157">다음 각 파티션에 하나의 누적 된 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-157">Each partition then yields a single accumulated result.</span></span> <span data-ttu-id="8c65f-158">`combineAccumulatorsFunc` 단일 요소를 생성 하기 위해 각 파티션 결과의 다음 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-158">The `combineAccumulatorsFunc` is then invoked on the results of each partition to yield a single element.</span></span> <span data-ttu-id="8c65f-159">이 요소에서 다음 변형 되는 `resultSelector` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-159">This element is then transformed by the `resultSelector` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-160"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-160">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-161"><paramref name="source" /> 또는 <paramref name="seedFactory" /> 또는 <paramref name="updateAccumulatorFunc" /> 또는 <paramref name="combineAccumulatorsFunc" /> 또는 <paramref name="resultSelector" />가 null 참조인 경우(Visual Basic에서는 Nothing).</span><span class="sxs-lookup"><span data-stu-id="8c65f-161"><paramref name="source" /> or <paramref name="seedFactory" /> or <paramref name="updateAccumulatorFunc" /> or <paramref name="combineAccumulatorsFunc" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-162">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-162">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-163"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-163"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-164">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-164">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; updateAccumulatorFunc, Func&lt;TAccumulate,TAccumulate,TAccumulate&gt; combineAccumulatorsFunc, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; updateAccumulatorFunc, class System.Func`3&lt;!!TAccumulate, !!TAccumulate, !!TAccumulate&gt; combineAccumulatorsFunc, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seed As TAccumulate, updateAccumulatorFunc As Func(Of TAccumulate, TSource, TAccumulate), combineAccumulatorsFunc As Func(Of TAccumulate, TAccumulate, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ updateAccumulatorFunc, Func&lt;TAccumulate, TAccumulate, TAccumulate&gt; ^ combineAccumulatorsFunc, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Accumulate, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, updateAccumulatorFunc, combineAccumulatorsFunc, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="updateAccumulatorFunc" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="combineAccumulatorsFunc" Type="System.Func&lt;TAccumulate,TAccumulate,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-165"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-165">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="8c65f-166">누적기 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-166">The type of the accumulator value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-167">결과 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-167">The type of the resulting value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-168">집계할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-168">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="8c65f-169">초기 누적기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-169">The initial accumulator value.</span></span></param>
        <param name="updateAccumulatorFunc"><span data-ttu-id="8c65f-170">파티션의 각 요소에 대해 호출할 누적기 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-170">An accumulator function to be invoked on each element in a partition.</span></span></param>
        <param name="combineAccumulatorsFunc"><span data-ttu-id="8c65f-171">각 파티션의 생성된 누적기 결과에 대해 호출할 누적기 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-171">An accumulator function to be invoked on the yielded accumulator result from each partition.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-172">최종 누적기 값을 결과 값으로 변환하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-172">A function to transform the final accumulator value into the result value.</span></span></param>
        <summary><span data-ttu-id="8c65f-173">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-173">Applies in parallel an accumulator function over a sequence.</span></span> <span data-ttu-id="8c65f-174">이 오버로드는 순차적 구현에서는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-174">This overload is not available in the sequential implementation.</span></span></summary>
        <returns><span data-ttu-id="8c65f-175">변환된 최종 누적기 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-175">The transformed final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-176">이 오버 로드는 병렬된 쿼리 처리에 특정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-176">This overload is specific to processing a parallelized query.</span></span> <span data-ttu-id="8c65f-177">병렬된 쿼리를 여러 하위 시퀀스 (파티션)에 데이터 소스 시퀀스를 분할할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-177">A parallelized query may partition the data source sequence into several sub-sequences (partitions).</span></span> <span data-ttu-id="8c65f-178">`updateAccumulatorFunc` 파티션 내의 각 요소에 대해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-178">The `updateAccumulatorFunc` is invoked on each element within partitions.</span></span> <span data-ttu-id="8c65f-179">다음 각 파티션에 하나의 누적 된 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-179">Each partition then yields a single accumulated result.</span></span> <span data-ttu-id="8c65f-180">`combineAccumulatorsFunc` 단일 요소를 생성 하기 위해 각 파티션 결과의 다음 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-180">The `combineAccumulatorsFunc` is then invoked on the results of each partition to yield a single element.</span></span> <span data-ttu-id="8c65f-181">이 요소에서 다음 변형 되는 `resultSelector` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-181">This element is then transformed by the `resultSelector` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-182"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-182">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-183"><paramref name="source" /> 또는 <paramref name="updateAccumulatorFunc" /> 또는 <paramref name="combineAccumulatorsFunc" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-183"><paramref name="source" /> or <paramref name="updateAccumulatorFunc" /> or <paramref name="combineAccumulatorsFunc" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-184">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-184">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-185"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-185"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-186">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-186">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="All&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-187"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-187">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-188">요소에 조건자를 적용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-188">A sequence whose elements to apply the predicate to.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-189">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-189">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-190">시퀀스의 모든 요소가 특정 조건에 맞는지 병렬로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-190">Determines in parallel whether all elements of a sequence satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="8c65f-191">원본 시퀀스의 모든 요소가 지정된 조건자의 테스트를 통과하거나 시퀀스가 비어 있으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-191">true if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-192"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-192">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-193"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-193"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-194">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-194">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-195">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-195">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-196">병렬 시퀀스에 요소가 하나라도 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-196">Determines whether a parallel sequence contains any elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As ParallelQuery(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-197"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-197">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-198">비어 있는지 확인할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-198">The sequence to check for emptiness.</span></span></param>
        <summary><span data-ttu-id="8c65f-199">병렬 시퀀스에 요소가 하나라도 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-199">Determines whether a parallel sequence contains any elements.</span></span></summary>
        <returns><span data-ttu-id="8c65f-200">소스 시퀀스에 요소가 하나라도 있으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-200">true if the source sequence contains any elements; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-201">모든 메서드의이 오버 로드 하면 완전히 버퍼링 병합 결과 반환 되기 전에 수행 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-201">This overload of the Any method causes a fully-buffered merge to be performed before the result is returned.</span></span> <span data-ttu-id="8c65f-202">병합 동작 성능에 영향을 줄 수도 있고, 대규모 열거 가능 형식에는 메모리 부족 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-202">The merge behavior can impact performance or cause an out of memory exception in large enumerables.</span></span> <span data-ttu-id="8c65f-203">병합 동작을 방지 하려면 Func 매개 변수를 사용 하는 오버 로드를 사용 합니다. 그러지 않으면 FirstOrDefault와 같은 대체 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-203">To avoid the merge behavior, use the overload of Any that takes a Func parameter, or else use an alternative method such as FirstOrDefault.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-204"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-204">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-205"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-205"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-206">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-206">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-207">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-207">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-208"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-208">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-209">해당 요소에 조건자를 적용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-209">A sequence to whose elements the predicate will be applied.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-210">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-210">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-211">시퀀스의 요소가 특정 조건에 맞는지 병렬로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-211">Determines in parallel whether any element of a sequence satisfies a condition.</span></span></summary>
        <returns><span data-ttu-id="8c65f-212">소스 시퀀스의 요소가 하나라도 지정된 조건자의 테스트를 통과하면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-212">true if any elements in the source sequence pass the test in the specified predicate; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-213"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-213">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-214"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-214"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-215">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-215">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-216">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-216">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TSource&gt; AsEnumerable&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; AsEnumerable&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable(Of TSource) (source As ParallelQuery(Of TSource)) As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ AsEnumerable(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsEnumerable : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; seq&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsEnumerable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-217"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-217">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-218"><see cref="T:System.Collections.Generic.IEnumerable`1" />로 캐스팅할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-218">The sequence to cast as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></param>
        <summary><span data-ttu-id="8c65f-219"><see cref="T:System.Linq.ParallelQuery`1" />를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환하여 쿼리에 대한 순차적 확인을 강제합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-219">Converts a <see cref="T:System.Linq.ParallelQuery`1" /> into an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to force sequential evaluation of the query.</span></span></summary>
        <returns><span data-ttu-id="8c65f-220"><see cref="T:System.Collections.Generic.IEnumerable`1" />로 형식화된 입력 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-220">The input sequence typed as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-221"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-221"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-222">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-222">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsOrdered">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery AsOrdered (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery AsOrdered(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOrdered (source As ParallelQuery) As ParallelQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery ^ AsOrdered(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member AsOrdered : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery" Usage="System.Linq.ParallelEnumerable.AsOrdered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-223">입력 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-223">The input sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-224">순서가 없는 기본값을 무시하고 순서가 지정된 것처럼 데이터 소스를 취급하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-224">Enables treatment of a data source as if it were ordered, overriding the default of unordered.</span></span> <span data-ttu-id="8c65f-225">AsOrdered는 AsParallel, ParallelEnumerable.Range 및 ParallelEnumerable.Repeat에 의해 반환된 제네릭이 아닌 시퀀스에 대해서만 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-225">AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</span></span></summary>
        <returns><span data-ttu-id="8c65f-226">후속 쿼리 연산자에서 원래 순서를 유지하는 소스 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-226">The source sequence which will maintain the original ordering in the subsequent query operators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-227">자연 스러운 장력을 병렬 처리 순서를 유지 하 고 성능 간에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-227">A natural tension exists between performance and preserving order in parallel processing.</span></span> <span data-ttu-id="8c65f-228">기본적으로 병렬된 쿼리 결과의 순서는 AsOrdered 적용 되는 쿼리에서 명시적 OrderBy 연산자가 경우가 아니면 임의의 처럼 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-228">By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query.</span></span> <span data-ttu-id="8c65f-229">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-229">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-230"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-230"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-231"><paramref name="source" />에 요소가 없는 경우 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-231">thrown if <paramref name="source" /> contains no elements</span></span> 
<span data-ttu-id="8c65f-232">또는</span><span class="sxs-lookup"><span data-stu-id="8c65f-232">-or-</span></span> 
<span data-ttu-id="8c65f-233">쿼리하는 동안 AsOrdered가 호출될 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-233">if AsOrdered is called midway through a query.</span></span> <span data-ttu-id="8c65f-234"><see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> 또는 <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> 직후 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-234">It is allowed to be called immediately after <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> or <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-235">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-235">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsOrdered&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsOrdered&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsOrdered&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOrdered(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsOrdered(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsOrdered : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsOrdered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-236"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-236">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-237">입력 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-237">The input sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-238">순서가 없는 기본값을 무시하고 순서가 지정된 것처럼 데이터 소스를 취급하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-238">Enables treatment of a data source as if it were ordered, overriding the default of unordered.</span></span> <span data-ttu-id="8c65f-239">AsOrdered는 AsParallel, ParallelEnumerable.Range 및 ParallelEnumerable.Repeat에 의해 반환된 제네릭 시퀀스에 대해서만 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-239">AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</span></span></summary>
        <returns><span data-ttu-id="8c65f-240">후속 쿼리 연산자에서 원래 순서를 유지하는 소스 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-240">The source sequence which will maintain the original ordering in the subsequent query operators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-241">자연 스러운 장력을 병렬 처리 순서를 유지 하 고 성능 간에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-241">A natural tension exists between performance and preserving order in parallel processing.</span></span> <span data-ttu-id="8c65f-242">기본적으로 병렬된 쿼리 결과의 순서는 AsOrdered 적용 되는 쿼리에서 명시적 OrderBy 연산자가 경우가 아니면 임의의 처럼 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-242">By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query.</span></span> <span data-ttu-id="8c65f-243">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-243">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-244"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-244"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-245"><paramref name="source" />에 요소가 없는 경우 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-245">Thrown if <paramref name="source" /> contains no elements</span></span> 
<span data-ttu-id="8c65f-246">또는</span><span class="sxs-lookup"><span data-stu-id="8c65f-246">-or-</span></span> 
<span data-ttu-id="8c65f-247"><paramref name="source" />가 AsParallel, ParallelEnumerable.Range 또는 ParallelEnumerable.Repeat 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-247">if <paramref name="source" /> is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-248">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-248">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AsParallel">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-249">쿼리를 병렬화할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-249">Enables parallelization of a query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-250">이 메서드는 PLINQ에 쿼리가 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-250">This method binds the query to PLINQ.</span></span> <span data-ttu-id="8c65f-251">자세한 내용은 [PLINQ(병렬 LINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-251">For more information, see [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AsParallel">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery AsParallel (this System.Collections.IEnumerable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery AsParallel(class System.Collections.IEnumerable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel (source As IEnumerable) As ParallelQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery ^ AsParallel(System::Collections::IEnumerable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : System.Collections.IEnumerable -&gt; System.Linq.ParallelQuery" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.IEnumerable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-252"><see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환할 <see cref="T:System.Linq.ParallelQuery" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-252">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert to a <see cref="T:System.Linq.ParallelQuery" />.</span></span></param>
        <summary><span data-ttu-id="8c65f-253">쿼리를 병렬화할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-253">Enables parallelization of a query.</span></span></summary>
        <returns><span data-ttu-id="8c65f-254">ParallelEnumerable 확장명 메서드에 바인딩할 소스 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-254">The source as a ParallelQuery to bind to ParallelEnumerable extension methods.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-255"><xref:System.Linq.ParallelEnumerable.Cast%2A> ParallelQuery를 ParallelQuery(T) 변환할 연산자를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-255">The <xref:System.Linq.ParallelEnumerable.Cast%2A> operator can be used to convert a ParallelQuery to a ParallelQuery(T).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-256"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-256"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-257">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-257">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsParallel&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsParallel&lt;TSource&gt; (this System.Collections.Concurrent.Partitioner&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsParallel&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel(Of TSource) (source As Partitioner(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsParallel(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : System.Collections.Concurrent.Partitioner&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-258"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-258">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-259">입력 시퀀스에 대한 파티셔너입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-259">A partitioner over the input sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-260">입력 시퀀스를 파티션으로 분할해야 하는 사용자 지정 파티셔너에 의해 발생한 쿼리를 병렬화할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-260">Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.</span></span></summary>
        <returns><span data-ttu-id="8c65f-261">ParallelEnumerable 확장 메서드에 바인딩할 <paramref name="source" /> ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-261">The <paramref name="source" /> as a ParallelQuery to bind to ParallelEnumerable extension methods.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-262">정렬할 때 메서드를 사용 하는 원본 파티 셔 너의 GetOrderedPartitions을 사용 하면 파티 셔 너의 GetPartitions 순서 없는 경우에 사용 되는 반면 (기본값)을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-262">The source partitioner's GetOrderedPartitions method is used when ordering is enabled, whereas the partitioner's GetPartitions is used if ordering is not enabled (the default).</span></span> <span data-ttu-id="8c65f-263">원본 파티 셔 너의 GetDynamicPartitions 및 GetDynamicOrderedPartitions 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-263">The source partitioner's GetDynamicPartitions and GetDynamicOrderedPartitions are not used.</span></span> <span data-ttu-id="8c65f-264">자세한 내용 및 예제를 참조 하세요 [PLINQ 및 TPL에 대 한 사용자 지정 파티 셔 너](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-264">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-265"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-265"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-266">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-266">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsParallel&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsParallel&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsParallel&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel(Of TSource) (source As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsParallel(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-267"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-267">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-268"><see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환할 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-268">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert to a <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></param>
        <summary><span data-ttu-id="8c65f-269">쿼리를 병렬화할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-269">Enables parallelization of a query.</span></span></summary>
        <returns><span data-ttu-id="8c65f-270">ParallelEnumerable 확장 메서드에 바인딩할 소스 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-270">The source as a <see cref="T:System.Linq.ParallelQuery`1" /> to bind to ParallelEnumerable extension methods.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-271"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-271"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-272">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-272">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsSequential&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TSource&gt; AsSequential&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; AsSequential&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSequential(Of TSource) (source As ParallelQuery(Of TSource)) As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ AsSequential(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsSequential : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; seq&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsSequential source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-273"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-273">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-274"><see cref="T:System.Linq.ParallelQuery`1" />로 변환할 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-274">A <see cref="T:System.Linq.ParallelQuery`1" /> to convert to an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></param>
        <summary><span data-ttu-id="8c65f-275"><see cref="T:System.Linq.ParallelQuery`1" />를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환하여 쿼리에 대한 순차적 확인을 강제합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-275">Converts a <see cref="T:System.Linq.ParallelQuery`1" /> into an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to force sequential evaluation of the query.</span></span></summary>
        <returns><span data-ttu-id="8c65f-276">순차적 확장 메서드에 바인딩할 소스 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-276">The source as an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to bind to sequential extension methods.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-277">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md) 고 [방법: PLINQ 쿼리의 순서 제어](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-277">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md) and [How to: Control Ordering in a PLINQ Query](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-278"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-278"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-279">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-279">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsUnordered&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsUnordered&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsUnordered&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUnordered(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsUnordered(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsUnordered : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsUnordered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-280"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-280">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-281">입력 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-281">The input sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-282">요소 사이에 순서가 암시되지 않은 것처럼 중간 쿼리를 취급하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-282">Allows an intermediate query to be treated as if no ordering is implied among the elements.</span></span></summary>
        <returns><span data-ttu-id="8c65f-283">임의의 순서가 있는 소스 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-283">The source sequence with arbitrary order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-284">AsUnordered 순서는 쿼리의 부분에서 필요 하지 않은 경우 성능상의 이점을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-284">AsUnordered may provide performance benefits when ordering is not required in a portion of a query.</span></span> <span data-ttu-id="8c65f-285">기본적으로 PLINQ OrderBy 또는 AsOrdered가 지정 되지 않으면를 순서가 지정 되지 않은 입력된 시퀀스를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-285">By default, PLINQ treats an input sequence as unordered unless OrderBy or AsOrdered is specified.</span></span> <span data-ttu-id="8c65f-286">그러나 순서를 켠를 더 이상 필요 없는 경우 AsUnordered에 중간 쿼리를 사용 하지 않으려면 다음 사용할 수 있으며이 성능이 향상 될 수 없습니다. 자체 AsUnordered 연산자는 소스 시퀀스; 셔플 하지 단순히 후속 연산자에 대 한 순서 요구 사항을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-286">However, if ordering was turned on and is no longer needed, then AsUnordered can be used to turn it off in mid-query, and this may result in performance benefits.The AsUnordered operator itself does not shuffle the source sequence; it simply removes the ordering requirement for subsequent operators.</span></span> <span data-ttu-id="8c65f-287">소스 정렬 되는 경우 후속 연산자 것이 효율적으로 작업을 수행 하는 경우 해당 순서 유지 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-287">If the source is ordered, subsequent operators might keep that ordering if it is more efficient to do so.</span></span> <span data-ttu-id="8c65f-288">쿼리 AsUnordered 어디서 나 호출할 수 있습니다. AsParallel 후 즉시 호출 되는 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-288">AsUnordered can be called anywhere in the query; it does not need to be called immediately after AsParallel.</span></span> <span data-ttu-id="8c65f-289">자세한 내용은 [PLINQ의 속도 향상 이해](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md) 하 고 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-289">For more information, see [Understanding Speedup in PLINQ](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md) and [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-290"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-290"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-291">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-291">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Average">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-292">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-292">Computes in parallel the average of a sequence of values.</span></span></summary>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-293">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-293">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static decimal Average (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-294">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-294">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-295">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-295">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-296">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-296">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-297"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-297">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-298"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-298"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-299">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-299">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-300"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-300"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-301">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-301">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-302">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-302">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-303">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-303">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-304">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-304">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-305"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-305">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-306"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-306"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-307">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-307">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-308"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-308"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-309">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-309">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;int&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-310">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-310">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-311">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-311">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-312">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-312">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-313"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-313">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-314"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-314"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-315">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-315">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-316">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-316">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-317"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-317"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-318">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-318">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;int64&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-319">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-319">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-320">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-320">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-321">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-321">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-322"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-322">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-323"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-323"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-324">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-324">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-325">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-325">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-326"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-326"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-327">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-327">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-328">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-328">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-329">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-329">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-330">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-330">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-331"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-331">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-332"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-332"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-333">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-333">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-334"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-334"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-335">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-335">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-336">소스 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-336">The source sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-337">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-337">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-338">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-338">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-339"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-339">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-340">평균을 계산하는 데 사용되는 값의 시퀀스입니다. 값 시퀀스의 평균입니다. <paramref name="source" /></span><span class="sxs-lookup"><span data-stu-id="8c65f-340">A sequence of values that are used to calculate an average.The average of the sequence of values.<paramref name="source" /></span></span> <span data-ttu-id="8c65f-341">는 null 참조(Visual Basic의 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-341">is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-342">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-342">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-343"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-343"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-344">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-344">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-345">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-345">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-346">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-346">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-347">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-347">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-348"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-348">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-349"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-349"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-350">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-350">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-351">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-351">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-352"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-352"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-353">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-353">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-354">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-354">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-355">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-355">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-356">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-356">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-357"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-357">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-358"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-358"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-359">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-359">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-360">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-360">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-361"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-361"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-362">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-362">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-363">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-363">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-364">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-364">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-365">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-365">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-366"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-366">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-367"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-367"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-368">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-368">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-369"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-369"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-370">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-370">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static float Average (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-371">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-371">A sequence of values that are used to calculate an average.</span></span></param>
        <summary><span data-ttu-id="8c65f-372">값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-372">Computes in parallel the average of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-373">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-373">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-374"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-374">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-375"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-375"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-376">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-376">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-377"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-377"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-378">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-378">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-379"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-379">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-380">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-380">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-381">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-381">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-382">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-382">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-383">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-383">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-384"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-384">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-385"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-385"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-386">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-386">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-387"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-387"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-388">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-388">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-389"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-389">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-390">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-390">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-391"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-391">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-392">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-392">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-393">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-393">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-394">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-394">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-395">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-395">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-396"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-396">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-397"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-397"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-398">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-398">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-399"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-399"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-400">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-400">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-401"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-401">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-402">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-402">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-403"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-403">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-404">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-404">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-405">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-405">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-406">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-406">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-407">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-407">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-408"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-408">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-409"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-409"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-410">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-410">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-411">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-411">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-412"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-412"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-413">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-413">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-414"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-414">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-415">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-415">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-416"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-416">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-417">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-417">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-418">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-418">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-419">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-419">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-420">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-420">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-421"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-421">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-422"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-422"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-423">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-423">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-424">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-424">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-425"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-425"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-426">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-426">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-427"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-427">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-428">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-428">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-429"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-429">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-430">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-430">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-431">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-431">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-432">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-432">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-433">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-433">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-434"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-434">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-435"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-435"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-436">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-436">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-437"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-437"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-438">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-438">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-439"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-439">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-440">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-440">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-441"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-441">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-442">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-442">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-443">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-443">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-444">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-444">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-445">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-445">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-446"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-446">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-447"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-447"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-448">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-448">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-449"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-449"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-450">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-450">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-451"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-451">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-452">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-452">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-453"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-453">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-454">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-454">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-455">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-455">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-456">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-456">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-457">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-457">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-458"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-458">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-459"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-459"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-460">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-460">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-461">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-461">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-462"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-462"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-463">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-463">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-464"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-464">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-465">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-465">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-466"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-466">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-467">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-467">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-468">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-468">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-469">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-469">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-470">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-470">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-471"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-471">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-472"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-472"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-473">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-473">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="8c65f-474">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-474">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-475"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-475"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-476">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-476">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-477"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-477">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-478">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-478">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-479"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-479">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-480">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-480">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-481">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-481">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-482">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-482">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-483">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-483">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-484"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-484">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-485"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-485"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-486">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-486">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-487"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-487"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-488">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-488">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-489"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-489">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-490">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-490">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-491"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-491">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-492">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-492">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-493">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-493">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-494">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-494">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-495">값 시퀀스의 평균입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-495">The average of the sequence of values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-496"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-496">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-497"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-497"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-498">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-498">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-499"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-499"><paramref name="source" /> contains no elements.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-500">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨).</span><span class="sxs-lookup"><span data-stu-id="8c65f-500">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span></span> <span data-ttu-id="8c65f-501"><paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-501">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-502">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-502">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As ParallelQuery) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Cast(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="8c65f-503"><paramref name="source" />의 요소를 변환할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-503">The type to convert the elements of <paramref name="source" /> to.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-504">변환될 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-504">The sequence that contains the elements to be converted.</span></span></param>
        <summary><span data-ttu-id="8c65f-505">ParallelQuery의 요소를 지정된 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-505">Converts the elements of a ParallelQuery to the specified type.</span></span></summary>
        <returns><span data-ttu-id="8c65f-506">지정된 형식으로 변환되는 소스 시퀀스의 각 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-506">A sequence that contains each element of the source sequence converted to the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-507"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-507"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8c65f-508">소스 시퀀스의 형식은 <paramref name="TResult" />로 변환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-508">The type of the source sequence could not be converted to <paramref name="TResult" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-509">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-509">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Concat&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-510">두 병렬 시퀀스를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-510">Concatenates two parallel sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Concat(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Concat (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-511">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-511">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-512">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-512">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-513">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-513">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-514">이 Concat 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-514">This Concat overload should never be called.</span></span> <span data-ttu-id="8c65f-515">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-515">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-516">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-516">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-517">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 Concat의 사용을 허용 하지 않도록 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-517">This overload exists to disallow usage of Concat with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-518">이 고, 그렇지는 Concat 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-518">Otherwise, the Concat operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-519">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-519">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-520">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-520">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Concat(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Concat (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-521">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-521">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-522">연결할 첫 번째 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-522">The first sequence to concatenate.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-523">첫 번째 시퀀스에 연결할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-523">The sequence to concatenate to the first sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-524">두 병렬 시퀀스를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-524">Concatenates two parallel sequences.</span></span></summary>
        <returns><span data-ttu-id="8c65f-525">두 입력 시퀀스의 연결된 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-525">A sequence that contains the concatenated elements of the two input sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-526"><paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-526"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-527">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-527">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-528">시퀀스에 지정된 요소가 들어 있는지 병렬로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-528">Determines in parallel whether a sequence contains a specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As ParallelQuery(Of TSource), value As TSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource value);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source -&gt; bool" Usage="System.Linq.ParallelEnumerable.Contains (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="value" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-529"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-529">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-530">값을 찾을 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-530">A sequence in which to locate a value.</span></span></param>
        <param name="value"><span data-ttu-id="8c65f-531">시퀀스에서 찾을 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-531">The value to locate in the sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-532">기본 같음 비교자를 사용하여 시퀀스에 지정된 요소가 들어 있는지 병렬로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-532">Determines in parallel whether a sequence contains a specified element by using the default equality comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-533">소스 시퀀스에 지정된 값을 갖는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-533">true if the source sequence contains an element that has the specified value; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-534"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-534">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-535"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-535"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-536">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-536">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-537">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-537">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource value, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource value, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As ParallelQuery(Of TSource), value As TSource, comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource value, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Contains (source, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="value" Type="TSource" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-538"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-538">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-539">값을 찾을 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-539">A sequence in which to locate a value.</span></span></param>
        <param name="value"><span data-ttu-id="8c65f-540">시퀀스에서 찾을 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-540">The value to locate in the sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-541">값을 비교할 같음 비교자입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-541">An equality comparer to compare values.</span></span></param>
        <summary><span data-ttu-id="8c65f-542">지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 시퀀스에 지정된 요소가 들어 있는지 여부를 병렬로 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-542">Determines in parallel whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <returns><span data-ttu-id="8c65f-543">소스 시퀀스에 지정된 값을 갖는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-543">true if the source sequence contains an element that has the specified value; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-544"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-544">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-545"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-545"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-546">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-546">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-547">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-547">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Count&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-548">병렬 시퀀스의 요소 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-548">Returns the number of elements in a parallel sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As ParallelQuery(Of TSource)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Count source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-549"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-549">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-550">개수를 셀 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-550">A sequence that contains elements to be counted.</span></span></param>
        <summary><span data-ttu-id="8c65f-551">병렬 시퀀스의 요소 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-551">Returns the number of elements in a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-552">입력 시퀀스의 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-552">The number of elements in the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-553"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-553">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-554"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-554"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-555">소스의 요소 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="8c65f-555">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-556">(이 경우 InnerException은 <see cref="T:System.OverflowException" />입니다) - 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-556">(In this case the InnerException is <see cref="T:System.OverflowException" />) -or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-557">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-557">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Count (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-558"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-558">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-559">개수를 셀 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-559">A sequence that contains elements to be counted.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-560">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-560">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-561">지정된 병렬 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 숫자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-561">Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="8c65f-562">시퀀스에서 조건자 함수의 조건에 맞는 요소 수를 나타내는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-562">A number that represents how many elements in the sequence satisfy the condition in the predicate function.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-563"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-563">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-564"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-564"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-565">소스의 요소 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="8c65f-565">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-566">(이 경우 InnerException은 <see cref="T:System.OverflowException" />입니다) - 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-566">(In this case the InnerException is <see cref="T:System.OverflowException" />) -or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-567">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-567">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-568">지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 지정된 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-568">Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.DefaultIfEmpty source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-569"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-569">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-570">비어 있는 경우 기본값을 반환할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-570">The sequence to return a default value for if it is empty.</span></span></param>
        <summary><span data-ttu-id="8c65f-571">지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 형식 매개 변수 기본값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-571">Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.</span></span></summary>
        <returns><span data-ttu-id="8c65f-572"><paramref name="source" />가 비어 있으면 default(TSource)가 들어 있는 시퀀스이고, 그렇지 않으면 <paramref name="source" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-572">A sequence that contains default(TSource) if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-573"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-573"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-574"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-574">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-575">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-575">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-576">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-576">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As ParallelQuery(Of TSource), defaultValue As TSource) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource defaultValue);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.DefaultIfEmpty (source, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="defaultValue" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-577"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-577">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-578">비어 있는 경우 지정된 값을 반환할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-578">The sequence to return the specified value for if it is empty.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="8c65f-579">시퀀스가 비어 있는 경우에 반환할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-579">The value to return if the sequence is empty.</span></span></param>
        <summary><span data-ttu-id="8c65f-580">지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 지정된 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-580">Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</span></span></summary>
        <returns><span data-ttu-id="8c65f-581"><paramref name="source" />가 비어 있으면 defaultValue가 들어 있는 시퀀스이고, 그렇지 않으면 <paramref name="source" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-581">A sequence that contains defaultValue if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-582"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-582"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-583"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-583">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-584">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-584">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-585">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-585">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Distinct&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-586">기본 같음 비교자로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-586">Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Distinct(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Distinct source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-587"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-587">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-588">중복 요소를 제거할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-588">The sequence to remove duplicate elements from.</span></span></param>
        <summary><span data-ttu-id="8c65f-589">기본 같음 비교자로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-589">Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-590">소스 시퀀스의 고유 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-590">A sequence that contains distinct elements from the source sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-591"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-591"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-592"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-592">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-593">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-593">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-594">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-594">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Distinct(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Distinct (source, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-595"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-595">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-596">중복 요소를 제거할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-596">The sequence to remove duplicate elements from.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-597">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-597">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="8c65f-598">지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-598">Returns distinct elements from a parallel sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-599">소스 시퀀스의 고유 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-599">A sequence that contains distinct elements from the source sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-600"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-600"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-601">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-601">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-602">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-602">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAt&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAt&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of TSource) (source As ParallelQuery(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAt(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.ElementAt (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-603"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-603">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-604">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-604">A sequence to return an element from.</span></span></param>
        <param name="index"><span data-ttu-id="8c65f-605">검색할 요소의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-605">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="8c65f-606">병렬 시퀀스에서 지정된 인덱스의 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-606">Returns the element at a specified index in a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-607">소스 시퀀스에서 지정된 위치의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-607">The element at the specified position in the source sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-608"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-608">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-609"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-609"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8c65f-610"><paramref name="index" />가 0보다 작거나 <paramref name="source" />의 요소 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-610"><paramref name="index" /> is less than 0 or greater than or equal to the number of elements in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-611">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-611">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-612">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-612">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAtOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAtOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of TSource) (source As ParallelQuery(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAtOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.ElementAtOrDefault (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-613"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-613">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-614">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-614">A sequence to return an element from.</span></span></param>
        <param name="index"><span data-ttu-id="8c65f-615">검색할 요소의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-615">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="8c65f-616">병렬 시퀀스에서 지정된 인덱스의 요소를 반환하거나, 인덱스가 범위를 벗어나면 기본값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-616">Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.</span></span></summary>
        <returns><span data-ttu-id="8c65f-617">인덱스가 소스 시퀀스의 범위를 벗어나면 default(TSource)이고, 그렇지 않으면 소스 시퀀스에서 지정된 위치에 있는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-617">default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-618"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-618">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-619"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-619"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-620">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-620">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-621">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-621">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Empty&lt;TResult&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Empty&lt;TResult&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Empty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Empty(Of TResult) () As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Empty();" />
      <MemberSignature Language="F#" Value="static member Empty : unit -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="8c65f-622">반환되는 제네릭 시퀀스의 형식 매개 변수에 할당할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-622">The type to assign to the type parameter of the returned generic sequence.</span></span></typeparam>
        <summary><span data-ttu-id="8c65f-623">지정된 형식 인수를 갖는 빈 ParallelQuery{TResult}를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-623">Returns an empty ParallelQuery{TResult} that has the specified type argument.</span></span></summary>
        <returns><span data-ttu-id="8c65f-624">해당 형식 인수가 <paramref name="TResult" />인 빈 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-624">An empty sequence whose type argument is <paramref name="TResult" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-625">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-625">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Except&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-626">두 병렬 시퀀스의 차집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-626">Produces the set difference of two parallel sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-627">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-627">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-628">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-628">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-629">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-629">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-630">이 Except 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-630">This Except overload should never be called.</span></span> <span data-ttu-id="8c65f-631">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-631">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-632">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-632">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-633">이 오버 로드의 사용을 허용 하지 않도록 하기 위해 존재 유형의 왼쪽된 데이터 원본을 제외 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-633">This overload exists to disallow usage of Except with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-634">이 고, 그렇지는 Except 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-634">Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-635">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-635">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-636">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-636">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-637">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-637">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-638"><paramref name="second" />에 없는 요소를 반환할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-638">A sequence whose elements that are not also in <paramref name="second" /> will be returned.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-639">첫 번째 시퀀스에 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-639">A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-640">기본 같음 비교자로 값을 비교하여 두 병렬 시퀀스의 차집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-640">Produces the set difference of two parallel sequences by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-641">두 시퀀스 요소의 차집합이 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-641">A sequence that contains the set difference of the elements of two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-642"><paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-642"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-643"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-643">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-644">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-644">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-645">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-645">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-646">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-646">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-647">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-647">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-648">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-648">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-649">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-649">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-650">이 Except 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-650">This Except overload should never be called.</span></span> <span data-ttu-id="8c65f-651">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-651">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-652">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-652">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-653">이 오버 로드의 사용을 허용 하지 않도록 하기 위해 존재 유형의 왼쪽된 데이터 원본을 제외 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-653">This overload exists to disallow usage of Except with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-654">이 고, 그렇지는 Except 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-654">Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-655">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-655">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-656">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-656">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-657">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-657">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-658"><paramref name="second" />에 없는 요소를 반환할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-658">A sequence whose elements that are not also in <paramref name="second" /> will be returned.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-659">첫 번째 시퀀스에 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-659">A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-660">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-660"><see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="8c65f-661">지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />로 값을 비교하여 두 병렬 시퀀스의 차집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-661">Produces the set difference of two parallel sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-662">두 시퀀스 요소의 차집합이 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-662">A sequence that contains the set difference of the elements of two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-663"><paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-663"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-664"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-664">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-665">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-665">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-666">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-666">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="First&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-667">병렬 시퀀스의 첫 번째 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-667">Returns the first element of a parallel sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.First source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-668"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-668">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-669">첫 번째 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-669">The sequence to return the first element of.</span></span></param>
        <summary><span data-ttu-id="8c65f-670">병렬 시퀀스의 첫 번째 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-670">Returns the first element of a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-671">지정된 시퀀스의 첫 번째 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-671">The first element in the specified sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-672">쿼리가 정렬 되지 않은 경우 첫 번째 요소 명확 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-672">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="8c65f-673">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-673">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-674"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-674">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-675"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-675"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-676">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-676">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-677"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-677"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-678">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-678">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.First (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-679"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-679">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-680">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-680">The sequence to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-681">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-681">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-682">병렬 시퀀스에서 지정된 조건에 맞는 첫 번째 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-682">Returns the first element in a parallel sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="8c65f-683">시퀀스에서 지정된 조건자 함수의 테스트를 통과하는 첫 번째 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-683">The first element in the sequence that passes the test in the specified predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-684">쿼리가 정렬 되지 않은 경우 첫 번째 요소 명확 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-684">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="8c65f-685">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-685">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-686"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-686">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-687"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-687"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-688">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-688">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-689"><paramref name="source" />의 조건에 맞는 <paramref name="predicate" /> 요소가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="8c65f-689">No element in <paramref name="source" /> satisfies the condition in <paramref name="predicate" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-690">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-690">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FirstOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-691">병렬 시퀀스의 첫 번째 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-691">Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.FirstOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-692"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-692">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-693">첫 번째 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-693">The sequence to return the first element of.</span></span></param>
        <summary><span data-ttu-id="8c65f-694">병렬 시퀀스의 첫 번째 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-694">Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="8c65f-695"><paramref name="source" />가 비어 있으면 default(TSource)이고, 그렇지 않으면 <paramref name="source" />의 첫 번째 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-695">default(TSource) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-696">쿼리가 정렬 되지 않은 경우 첫 번째 요소 명확 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-696">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="8c65f-697">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-697">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-698"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-698">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-699"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-699"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-700">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-700">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-701">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-701">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.FirstOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-702"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-702">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-703">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-703">The sequence to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-704">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-704">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-705">병렬 시퀀스에서 특정 조건에 맞는 첫 번째 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-705">Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="8c65f-706"><paramref name="source" />가 비어 있거나 조건자에 지정된 테스트를 통과하는 요소가 없으면 default(TSource)이고, 그렇지 않으면 <paramref name="source" />에서 조건자에 지정된 테스트를 통과하는 첫 번째 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-706">default(TSource) if <paramref name="source" /> is empty or if no element passes the test specified by predicate; otherwise, the first element in <paramref name="source" /> that passes the test specified by predicate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-707">쿼리가 정렬 되지 않은 경우 첫 번째 요소 명확 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-707">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="8c65f-708">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-708">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-709"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-709">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-710"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-710"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-711">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-711">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-712">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-712">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForAll&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static void ForAll&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Action&lt;TSource&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForAll&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForAll(Of TSource) (source As ParallelQuery(Of TSource), action As Action(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ForAll(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ action);" />
      <MemberSignature Language="F#" Value="static member ForAll : System.Linq.ParallelQuery&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; unit" Usage="System.Linq.ParallelEnumerable.ForAll (source, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="action" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-713"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-713">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-714">요소가 <paramref name="action" />에서 처리될 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-714">The <see cref="T:System.Linq.ParallelQuery`1" /> whose elements will be processed by <paramref name="action" />.</span></span></param>
        <param name="action"><span data-ttu-id="8c65f-715">각 요소에 대해 호출할 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-715">An Action to invoke on each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-716"><paramref name="source" />의 각 요소에 대해 지정된 동작을 병렬로 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-716">Invokes in parallel the specified action for each element in the <paramref name="source" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-717">이것이 끝 병합 단계는 필요 하지 않으므로 병렬화 된 쿼리의 출력을 처리 하는 효율적인 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-717">This is an efficient way to process the output from a parallelized query because it does not require a merge step at the end.</span></span> <span data-ttu-id="8c65f-718">자세한 내용은 [PLINQ의 병합 옵션](~/docs/standard/parallel-programming/merge-options-in-plinq.md) 하거나 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-718">For more information, see [Merge Options in PLINQ](~/docs/standard/parallel-programming/merge-options-in-plinq.md) or [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span> <span data-ttu-id="8c65f-719">이 메서드는 부작용을 생성, 때문에 병렬 쿼리에서 실행의 실제 순서를 관찰 하려면 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-719">Because this method produces a side-effect, it can be used to observe the actual order of execution in a parallel query.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-720"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-720">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-721"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-721"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-722">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-722">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-723">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-723">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-724">키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-724">Groups in parallel the elements of a sequence according to a key selector function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As ParallelQuery(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-725"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-725">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-726"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-726">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-727">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-727">An OrderedParallelQuery{TSource}that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-728">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-728">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="8c65f-729">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-729">Groups in parallel the elements of a sequence according to a specified key selector function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-730"><paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-730">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-731"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-731">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-732"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-732"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-733">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-733">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-734">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-734">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-735"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-735">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-736">가 반환한 키의 형식을 <paramref name="keySelector" /> &gt;합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-736">The type of the key returned by <paramref name="keySelector" />&gt;.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-737">정렬할 요소가 들어 있는 <see cref="T:System.Linq.OrderedParallelQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-737">An <see cref="T:System.Linq.OrderedParallelQuery`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-738">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-738">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-739">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-739">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-740">지정된 키 선택기 함수에 따라 지정된 <see cref="T:System.Collections.Generic.IComparer`1" />로 키를 비교하여 시퀀스의 요소를 병렬로 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-740">Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span></span></summary>
        <returns><span data-ttu-id="8c65f-741"><paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-741">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-742"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-742">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-743"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-743"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-744">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-744">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-745">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-745">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As ParallelQuery(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-746"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-746">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-747"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-747">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="8c65f-748"><see cref="T:System.Linq.IGrouping`2" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-748">The type of the elements in the <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-749">정렬할 요소가 들어 있는 <see cref="T:System.Linq.OrderedParallelQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-749">An <see cref="T:System.Linq.OrderedParallelQuery`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-750">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-750">A function to extract a key from an element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="8c65f-751">각 소스 요소를 <see cref="T:System.Linq.IGrouping`2" />의 요소에 매핑하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-751">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <summary><span data-ttu-id="8c65f-752">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 지정된 함수를 사용하여 각 그룹의 요소를 프로젝션합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-752">Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-753"><paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-753">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-754"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-754">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-755"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-755"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-756">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-756">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-757">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-757">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-758"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-758">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-759"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-759">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="8c65f-760">IGrouping에 있는 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-760">The type of the elements in the IGrouping</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-761">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-761">An OrderedParallelQuery{TSource}that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-762">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-762">A function to extract a key from an element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="8c65f-763">각 소스 요소를 IGrouping의 요소에 매핑하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-763">A function to map each source element to an element in an IGrouping.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-764">키를 비교할 IComparer{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-764">An IComparer{TSource} to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-765">키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-765">Groups in parallel the elements of a sequence according to a key selector function.</span></span> <span data-ttu-id="8c65f-766">키는 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-766">The keys are compared by using a comparer and each group's elements are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-767"><paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-767">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-768"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-768">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-769"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-769"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-770">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-770">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-771">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-771">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), resultSelector As Func(Of TKey, IEnumerable(Of TSource), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-772"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-772">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-773"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-773">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-774"><paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-774">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-775">요소를 그룹화할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-775">A sequence whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-776">각 요소에 대해 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-776">A function to extract the key for each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-777">각 그룹의 결과 값을 만드는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-777">A function to create a result value from each group.</span></span></param>
        <summary><span data-ttu-id="8c65f-778">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-778">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span></summary>
        <returns><span data-ttu-id="8c65f-779">각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-779">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-780"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-780">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-781"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-781"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-782">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-782">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-783">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-783">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), resultSelector As Func(Of TKey, IEnumerable(Of TSource), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-784"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-784">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-785"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-785">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-786"><paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-786">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-787">요소를 그룹화할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-787">A sequence whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-788">각 요소에 대해 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-788">A function to extract the key for each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-789">각 그룹의 결과 값을 만드는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-789">A function to create a result value from each group.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-790">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-790">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-791">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-791">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="8c65f-792">키는 지정된 비교자를 통해 비교됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-792">The keys are compared by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-793">그룹 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-793">A sequence of groups.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-794"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-794">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-795"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-795"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-796">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-796">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-797">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-797">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), resultSelector As Func(Of TKey, IEnumerable(Of TElement), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-798"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-798">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-799"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-799">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="8c65f-800">각 IGrouping{TKey, TElement}에 있는 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-800">The type of the elements in each IGrouping{TKey, TElement}.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-801"><paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-801">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-802">요소를 그룹화할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-802">A sequence whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-803">각 요소에 대해 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-803">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="8c65f-804">각 소스 요소를 IGrouping&lt;TKey, TElement&gt;의 요소에 매핑하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-804">A function to map each source element to an element in an IGrouping&lt;TKey, TElement&gt;.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-805">각 그룹의 결과 값을 만드는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-805">A function to create a result value from each group.</span></span></param>
        <summary><span data-ttu-id="8c65f-806">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-806">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="8c65f-807">각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-807">The elements of each group are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-808">각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-808">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-809"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-809">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-810"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-810"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-811">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-811">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-812">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-812">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), resultSelector As Func(Of TKey, IEnumerable(Of TElement), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-813"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-813">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-814"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-814">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="8c65f-815">각 IGrouping{TKey, TElement}에 있는 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-815">The type of the elements in each IGrouping{TKey, TElement}.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-816"><paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-816">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-817">요소를 그룹화할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-817">A sequence whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-818">각 요소에 대해 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-818">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="8c65f-819">각 소스 요소를 IGrouping{Key, TElement}의 요소에 매핑하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-819">A function to map each source element to an element in an IGrouping{Key, TElement}.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-820">각 그룹의 결과 값을 만드는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-820">A function to create a result value from each group.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-821">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-821">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-822">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-822">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="8c65f-823">키 값은 지정된 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-823">Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-824">각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-824">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-825"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-825">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-826"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-826"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-827">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-827">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-828">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-828">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-829">키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-829">Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="8c65f-830">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-830">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="8c65f-831">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-831">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-832">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-832">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-833">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-833">This type parameter is not used.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8c65f-834">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-834">This parameter is not used.</span></span></param>
        <param name="inner"><span data-ttu-id="8c65f-835">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-835">This parameter is not used.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="8c65f-836">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-836">This parameter is not used.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="8c65f-837">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-837">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-838">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-838">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-839">이 GroupJoin 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-839">This GroupJoin overload should never be called.</span></span> <span data-ttu-id="8c65f-840">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-840">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-841">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-841">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-842">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 GroupJoin의 사용을 허용 하지 않도록 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-842">This overload exists to disallow usage of GroupJoin with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-843">이 고, 그렇지는 GroupJoin 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-843">Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-844"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-844">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-845"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-845"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-846">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-846">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-847">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-847">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="8c65f-848">첫 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-848">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="8c65f-849">두 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-849">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-850">키 선택기 함수에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-850">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-851">결과 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-851">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8c65f-852">조인할 첫 번째 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-852">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="8c65f-853">첫 번째 시퀀스에 조인할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-853">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="8c65f-854">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-854">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="8c65f-855">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-855">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-856">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-856">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-857">키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-857">Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</span></span> <span data-ttu-id="8c65f-858">기본 같음 비교자를 사용하여 키를 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-858">The default equality comparer is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="8c65f-859">두 시퀀스에 대해 그룹화 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-859">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing a grouped join on two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-860"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-860">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-861"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-861"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-862">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-862">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-863">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-863">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="8c65f-864">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-864">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="8c65f-865">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-865">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-866">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-866">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-867">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-867">This type parameter is not used.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8c65f-868">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-868">This parameter is not used.</span></span></param>
        <param name="inner"><span data-ttu-id="8c65f-869">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-869">This parameter is not used.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="8c65f-870">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-870">This parameter is not used.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="8c65f-871">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-871">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-872">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-872">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-873">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-873">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-874">이 GroupJoin 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-874">This GroupJoin overload should never be called.</span></span> <span data-ttu-id="8c65f-875">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-875">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-876">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-876">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-877">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 GroupJoin의 사용을 허용 하지 않도록 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-877">This overload exists to disallow usage of GroupJoin with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-878">이 고, 그렇지는 GroupJoin 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-878">Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-879">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-879">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-880">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-880">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="8c65f-881">첫 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-881">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="8c65f-882">두 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-882">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-883">키 선택기 함수에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-883">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-884">결과 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-884">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8c65f-885">조인할 첫 번째 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-885">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="8c65f-886">첫 번째 시퀀스에 조인할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-886">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="8c65f-887">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-887">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="8c65f-888">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-888">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-889">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-889">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-890">키를 해시하여 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-890">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-891">키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-891">Correlates in parallel the elements of two sequences based on key equality and groups the results.</span></span> <span data-ttu-id="8c65f-892">지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 키를 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-892">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="8c65f-893">두 시퀀스에 대해 그룹화 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-893">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing a grouped join on two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-894"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-894">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-895"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-895"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-896">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-896">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-897">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-897">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-898">두 병렬 시퀀스의 교집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-898">Produces the set intersection of two parallel sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-899">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-899">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-900">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-900">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-901">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-901">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-902">이 Intersect 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-902">This Intersect overload should never be called.</span></span> <span data-ttu-id="8c65f-903">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-903">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-904">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-904">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-905">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 교차의 사용을 허용 하지 않도록 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-905">This overload exists to disallow usage of Intersect with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-906">이 고, 그렇지는 Intersect 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-906">Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-907">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-907">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-908">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-908">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-909">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-909">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-910"><paramref name="second" />에도 있는 고유 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-910">A sequence whose distinct elements that also appear in <paramref name="second" /> will be returned.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-911">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-911">A sequence whose distinct elements that also appear in the first sequence will be returned.</span></span></param>
        <summary><span data-ttu-id="8c65f-912">기본 같음 비교자로 값을 비교하여 두 병렬 시퀀스의 교집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-912">Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-913">두 시퀀스의 교집합을 이루는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-913">A sequence that contains the elements that form the set intersection of two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-914"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-914">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-915"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-915"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-916">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-916">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-917">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-917">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-918">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-918">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-919">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-919">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-920">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-920">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-921">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-921">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-922">이 Intersect 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-922">This Intersect overload should never be called.</span></span> <span data-ttu-id="8c65f-923">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-923">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-924">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-924">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-925">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 교차의 사용을 허용 하지 않도록 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-925">This overload exists to disallow usage of Intersect with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-926">이 고, 그렇지는 Intersect 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-926">Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-927">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-927">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-928">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-928">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-929">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-929">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-930"><paramref name="second" />에도 있는 고유 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-930">A sequence whose distinct elements that also appear in <paramref name="second" /> will be returned.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-931">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-931">A sequence whose distinct elements that also appear in the first sequence will be returned.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-932">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-932">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="8c65f-933">지정된 IEqualityComparer{T}로 값을 비교하여 두 병렬 시퀀스의 교집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-933">Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-934">두 시퀀스의 교집합을 이루는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-934">A sequence that contains the elements that form the set intersection of two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-935"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-935">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-936"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-936"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-937">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-937">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-938">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-938">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-939">일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-939">Correlates in parallel the elements of two sequences based on matching keys.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="8c65f-940">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-940">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="8c65f-941">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-941">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-942">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-942">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-943">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-943">This type parameter is not used.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8c65f-944">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-944">This parameter is not used.</span></span></param>
        <param name="inner"><span data-ttu-id="8c65f-945">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-945">This parameter is not used.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="8c65f-946">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-946">This parameter is not used.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="8c65f-947">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-947">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-948">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-948">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-949">이 Join 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-949">This Join overload should never be called.</span></span> <span data-ttu-id="8c65f-950">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-950">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span></span></summary>
        <returns><span data-ttu-id="8c65f-951">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-951">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-952">형식의 왼쪽된 데이터 소스를 사용 하 여 Join의 사용을 허용 하지 않으려면이 오버 로드가 존재 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-952">This overload exists to disallow usage Join with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-953">이 고, 그렇지는 조인 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-953">Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-954"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-954">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-955"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-955"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-956">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-956">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-957">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-957">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="8c65f-958">첫 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-958">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="8c65f-959">두 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-959">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-960">키 선택기 함수에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-960">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-961">결과 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-961">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8c65f-962">조인할 첫 번째 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-962">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="8c65f-963">첫 번째 시퀀스에 조인할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-963">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="8c65f-964">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-964">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="8c65f-965">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-965">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-966">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-966">A function to create a result element from two matching elements.</span></span></param>
        <summary><span data-ttu-id="8c65f-967">일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-967">Correlates in parallel the elements of two sequences based on matching keys.</span></span> <span data-ttu-id="8c65f-968">기본 같음 비교자를 사용하여 키를 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-968">The default equality comparer is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="8c65f-969">두 시퀀스에 대해 내부 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-969">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing an inner join on two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-970"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-970">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-971"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-971"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-972">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-972">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-973">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-973">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="8c65f-974">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-974">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="8c65f-975">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-975">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-976">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-976">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-977">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-977">This type parameter is not used.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8c65f-978">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-978">This parameter is not used.</span></span></param>
        <param name="inner"><span data-ttu-id="8c65f-979">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-979">This parameter is not used.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="8c65f-980">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-980">This parameter is not used.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="8c65f-981">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-981">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-982">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-982">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-983">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-983">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-984">이 Join 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-984">This Join overload should never be called.</span></span> <span data-ttu-id="8c65f-985">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-985">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span></span></summary>
        <returns><span data-ttu-id="8c65f-986">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-986">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-987">형식의 왼쪽된 데이터 소스를 사용 하 여 Join의 사용을 허용 하지 않으려면이 오버 로드가 존재 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-987">This overload exists to disallow usage of Join with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-988">이 고, 그렇지는 조인 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-988">Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-989">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-989">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-990">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-990">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="8c65f-991">첫 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-991">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="8c65f-992">두 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-992">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-993">키 선택기 함수에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-993">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-994">결과 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-994">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="8c65f-995">조인할 첫 번째 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-995">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="8c65f-996">첫 번째 시퀀스에 조인할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-996">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="8c65f-997">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-997">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="8c65f-998">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-998">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-999">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-999">A function to create a result element from two matching elements.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-1000">키를 해시하여 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1000">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-1001">일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1001">Correlates in parallel the elements of two sequences based on matching keys.</span></span> <span data-ttu-id="8c65f-1002">지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 키를 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1002">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1003">두 시퀀스에 대해 내부 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1003">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing an inner join on two sequences.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1004"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1004">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1005"><paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1005"><paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1006">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1006">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1007">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1007">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Last&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1008">병렬 시퀀스의 마지막 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1008">Returns the last element of a parallel sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Last source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1009"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1009">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1010">마지막 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1010">The sequence to return the last element from.</span></span></param>
        <summary><span data-ttu-id="8c65f-1011">병렬 시퀀스의 마지막 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1011">Returns the last element of a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1012">소스 시퀀스에서 마지막 위치에 있는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1012">The value at the last position in the source sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1013">쿼리가 정렬 되지 않은 경우 마지막 요소 명확 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1013">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="8c65f-1014">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1014">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1015"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1015">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1016"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1016"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1017">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1017">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1018"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1018"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1019">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1019">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Last (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1020"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1020">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1021">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1021">The sequence to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1022">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1022">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-1023">병렬 시퀀스에서 지정된 조건에 맞는 마지막 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1023">Returns the last element of a parallel sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1024">시퀀스에서 지정된 조건자 함수의 테스트를 통과하는 마지막 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1024">The last element in the sequence that passes the test in the specified predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1025">쿼리가 정렬 되지 않은 경우 마지막 요소 명확 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1025">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="8c65f-1026">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1026">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1027"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1027">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1028"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1028"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1029">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1029">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1030"><paramref name="source" />의 조건에 맞는 <paramref name="predicate" /> 요소가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1030">No element in <paramref name="source" /> satisfies the condition in <paramref name="predicate" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1031">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1031">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1032">병렬 시퀀스의 마지막 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1032">Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.LastOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1033"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1033">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1034">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1034">The sequence to return an element from.</span></span></param>
        <summary><span data-ttu-id="8c65f-1035">병렬 시퀀스의 마지막 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1035">Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1036">소스 시퀀스가 비어 있으면 default()이고, 그렇지 않으면 시퀀스의 마지막 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1036">default() if the source sequence is empty; otherwise, the last element in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1037">쿼리가 정렬 되지 않은 경우 마지막 요소 명확 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1037">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="8c65f-1038">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1038">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1039"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1039">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1040"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1040"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1041">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1041">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1042">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1042">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.LastOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1043"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1043">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1044">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1044">The sequence to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1045">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1045">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-1046">병렬 시퀀스에서 특정 조건에 맞는 마지막 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1046">Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1047">시퀀스가 비어 있거나 조건자 함수의 테스트를 통과하는 요소가 없으면 default()이고, 그렇지 않으면 조건자 함수의 테스트를 통과하는 마지막 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1047">default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1048">쿼리가 정렬 되지 않은 경우 마지막 요소 명확 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1048">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="8c65f-1049">자세한 내용은 [PLINQ에서 순서 유지](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1049">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1050"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1050">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1051"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1051"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1052">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1052">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1053">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1053">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LongCount&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1054">병렬 시퀀스의 총 요소 수를 나타내는 Int64를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1054">Returns an Int64 that represents the total number of elements in a parallel sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As ParallelQuery(Of TSource)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.LongCount source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1055"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1055">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1056">개수를 셀 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1056">A sequence that contains elements to be counted.</span></span></param>
        <summary><span data-ttu-id="8c65f-1057">병렬 시퀀스의 총 요소 수를 나타내는 Int64를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1057">Returns an Int64 that represents the total number of elements in a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1058">입력 시퀀스의 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1058">The number of elements in the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1059"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1059">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1060"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1060"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1061">소스의 요소 수가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1061">The number of elements in source is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1062">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1062">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1063">계산된 결과가 <see cref="F:System.Int64.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1063">The computed result is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1064">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1064">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.LongCount (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1065"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1065">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1066">개수를 셀 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1066">A sequence that contains elements to be counted.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1067">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1067">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-1068">병렬 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 Int64를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1068">Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1069">시퀀스에서 조건자 함수의 조건에 맞는 요소 수를 나타내는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1069">A number that represents how many elements in the sequence satisfy the condition in the predicate function.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1070"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1070">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1071"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1071"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1072">소스의 요소 수가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1072">The number of elements in source is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1073">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1073">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1074">계산된 결과가 <see cref="F:System.Int64.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1074">The computed result is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1075">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1075">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1076">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1076">Returns the maximum value in a parallel sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Max(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1077">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1077">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1078">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1078">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1079">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1079">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1080"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1080">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1081"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1081"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1082">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1082">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1083"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1083"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1084">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1084">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Max(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1085">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1085">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1086">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1086">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1087">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1087">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1088"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1088">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1089"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1089"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1090">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1090">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1091"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1091"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1092">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1092">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Max(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1093">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1093">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1094">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1094">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1095">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1095">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1096"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1096">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1097"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1097"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1098">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1098">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1099"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1099"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1100">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1100">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Max(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1101">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1101">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1102">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1102">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1103">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1103">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1104"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1104">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1105"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1105"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1106">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1106">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1107"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1107"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1108">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1108">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1109">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1109">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1110">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1110">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1111">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1111">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1112"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1112">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1113"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1113"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1114">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1114">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1115"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1115"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1116">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1116">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1117">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1117">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1118">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1118">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1119">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1119">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1120"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1120">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1121"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1121"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1122">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1122">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1123"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1123"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1124">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1124">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1125">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1125">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1126">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1126">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1127">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1127">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1128"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1128">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1129"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1129"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1130">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1130">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1131"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1131"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1132">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1132">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1133">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1133">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1134">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1134">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1135">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1135">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1136"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1136">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1137"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1137"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1138">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1138">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1139"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1139"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1140">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1140">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1141">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1141">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1142">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1142">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1143">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1143">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1144"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1144">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1145"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1145"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1146">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1146">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1147"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1147"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1148">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1148">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Max(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1149">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1149">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1150">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1150">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1151">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1151">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1152"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1152">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1153"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1153"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1154">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1154">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1155"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1155"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1156">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1156">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1157">소스 시퀀스의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1157">The type of elements in the source sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1158">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1158">A sequence of values to determine the maximum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1159">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1159">Returns the maximum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1160">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1160">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1161"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1161">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1162"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1162"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1163">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1163">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1164"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1164"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1165">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1165">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1166"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1166">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1167">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1167">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1168">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1168">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1169">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1169">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1170">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1170">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1171"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1171">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1172"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1172"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1173">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1173">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1174"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1174"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1175">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1175">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1176"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1176">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1177">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1177">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1178">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1178">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1179">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1179">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1180">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1180">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1181"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1181">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1182"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1182"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1183">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1183">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1184"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1184"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1185">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1185">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1186"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1186">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1187">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1187">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1188">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1188">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1189">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1189">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1190">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1190">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1191"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1191">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1192"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1192"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1193">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1193">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1194"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1194"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1195">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1195">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1196"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1196">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1197">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1197">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1198">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1198">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1199">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1199">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1200">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1200">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1201"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1201">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1202"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1202"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1203">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1203">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1204"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1204"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1205">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1205">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1206"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1206">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1207">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1207">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1208">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1208">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1209">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1209">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1210">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1210">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1211"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1211">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1212"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1212"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1213">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1213">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1214"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1214"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1215">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1215">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1216"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1216">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1217">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1217">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1218">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1218">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1219">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1219">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1220">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1220">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1221"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1221">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1222"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1222"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1223">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1223">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1224"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1224"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1225">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1225">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1226"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1226">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1227">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1227">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1228">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1228">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1229">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1229">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1230">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1230">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1231"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1231">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1232"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1232"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1233">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1233">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1234"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1234"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1235">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1235">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1236"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1236">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1237">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1237">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1238">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1238">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1239">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1239">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1240">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1240">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1241"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1241">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1242"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1242"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1243">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1243">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1244"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1244"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1245">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1245">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1246"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1246">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1247">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1247">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1248">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1248">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1249">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1249">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1250">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1250">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1251"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1251">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1252"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1252"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1253">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1253">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1254"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1254"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1255">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1255">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1256"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1256">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1257">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1257">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1258">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1258">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1259">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1259">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1260">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1260">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1261"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1261">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1262"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1262"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1263">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1263">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1264"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1264"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1265">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1265">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Max&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Max&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1266"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1266">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1267"><paramref name="selector" />에서 반환하는 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1267">The type of the value returned by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1268">최대값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1268">A sequence of values to determine the maximum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1269">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1269">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1270">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1270">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1271">시퀀스의 최대값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1271">The maximum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1272"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1272">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1273"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1273"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1274">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1274">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1275"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1275"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1276">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1276">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1277">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1277">Returns the minimum value in a parallel sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Min(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1278">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1278">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1279">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1279">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1280">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1280">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1281"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1281">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1282"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1282"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1283">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1283">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1284"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1284"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1285">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1285">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Min(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1286">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1286">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1287">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1287">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1288">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1288">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1289"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1289">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1290"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1290"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1291">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1291">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1292"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1292"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1293">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1293">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Min(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1294">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1294">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1295">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1295">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1296">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1296">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1297"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1297">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1298"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1298"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1299">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1299">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1300"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1300"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1301">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1301">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Min(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1302">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1302">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1303">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1303">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1304">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1304">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1305"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1305">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1306"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1306"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1307">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1307">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1308"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1308"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1309">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1309">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1310">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1310">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1311">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1311">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1312">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1312">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1313"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1313">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1314"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1314"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1315">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1315">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1316"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1316"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1317">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1317">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1318">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1318">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1319">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1319">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1320">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1320">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1321"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1321">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1322"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1322"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1323">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1323">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1324"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1324"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1325">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1325">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1326">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1326">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1327">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1327">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1328">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1328">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1329"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1329">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1330"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1330"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1331">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1331">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1332"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1332"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1333">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1333">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1334">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1334">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1335">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1335">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1336">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1336">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1337"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1337">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1338"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1338"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1339">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1339">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1340"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1340"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1341">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1341">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1342">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1342">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1343">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1343">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1344">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1344">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1345"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1345">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1346"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1346"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1347">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1347">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1348"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1348"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1349">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1349">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Min(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1350">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1350">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1351">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1351">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1352">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1352">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1353"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1353">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1354"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1354"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1355">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1355">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1356"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1356"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1357">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1357">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1358"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1358">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1359">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1359">A sequence of values to determine the minimum value of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1360">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1360">Returns the minimum value in a parallel sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1361">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1361">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1362"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1362">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1363"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1363"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1364">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1364">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1365"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1365"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1366">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1366">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1367"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1367">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1368">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1368">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1369">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1369">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1370">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1370">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1371">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1371">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1372"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1372">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1373"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1373"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1374">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1374">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1375"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1375"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1376">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1376">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1377"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1377">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1378">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1378">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1379">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1379">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1380">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1380">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1381">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1381">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1382"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1382">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1383"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1383"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1384">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1384">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1385"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1385"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1386">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1386">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1387"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1387">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1388">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1388">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1389">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1389">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1390">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1390">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1391">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1391">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1392"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1392">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1393"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1393"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1394">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1394">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1395"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1395"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1396">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1396">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1397"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1397">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1398">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1398">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1399">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1399">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1400">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1400">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1401">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1401">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1402"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1402">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1403"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1403"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1404">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1404">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1405"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1405"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1406">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1406">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1407"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1407">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1408">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1408">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1409">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1409">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1410">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1410">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1411">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1411">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1412"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1412">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1413"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1413"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1414">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1414">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1415"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1415"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1416">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1416">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1417"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1417">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1418">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1418">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1419">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1419">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1420">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1420">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1421">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1421">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1422"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1422">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1423"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1423"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1424">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1424">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1425"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1425"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1426">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1426">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1427"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1427">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1428">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1428">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1429">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1429">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1430">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1430">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1431">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1431">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1432"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1432">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1433"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1433"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1434">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1434">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1435"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1435"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1436">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1436">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1437"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1437">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1438">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1438">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1439">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1439">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1440">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1440">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1441">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1441">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1442"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1442">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1443"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1443"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1444">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1444">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1445"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1445"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1446">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1446">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1447"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1447">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1448">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1448">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1449">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1449">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1450">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1450">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1451">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1451">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1452"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1452">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1453"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1453"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1454">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1454">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1455"><paramref name="source" />에 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1455"><paramref name="source" /> contains no elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1456">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1456">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1457"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1457">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1458">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1458">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1459">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1459">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1460">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1460">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1461">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1461">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1462"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1462">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1463"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1463"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1464">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1464">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1465"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1465"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1466">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1466">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Min&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Min&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1467"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1467">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1468"><paramref name="selector" />에서 반환하는 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1468">The type of the value returned by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1469">최소값을 확인할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1469">A sequence of values to determine the minimum value of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1470">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1470">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1471">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1471">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1472">시퀀스의 최소값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1472">The minimum value in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1473"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1473">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1474"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1474"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1475">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1475">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1476"><paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1476"><paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1477">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1477">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; OfType&lt;TResult&gt; (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; OfType&lt;TResult&gt;(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType(Of TResult) (source As ParallelQuery) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ OfType(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.OfType source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1478">시퀀스의 요소를 필터링할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1478">The type to filter the elements of the sequence on.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1479">요소를 필터링할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1479">The sequence with elements to filter.</span></span></param>
        <summary><span data-ttu-id="8c65f-1480">지정된 형식에 따라 ParallelQuery의 요소를 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1480">Filters the elements of a ParallelQuery based on a specified type.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1481">형식별로 필터링된 입력 시퀀스에서 가져온 요소가 포함된 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1481">A sequence that contains elements from the input sequence filtered by type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1482"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1482"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1483"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1483">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1484">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1484">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1485">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1485">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1486">시퀀스의 요소를 병렬로 오름차순으로 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1486">Sorts in parallel the elements of a sequence in ascending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1487"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1487">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-1488"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1488">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1489">정렬할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1489">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-1490">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1490">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1491">시퀀스의 요소를 키에 따라 오름차순으로 병렬 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1491">Sorts in parallel the elements of a sequence in ascending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1492">키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1492">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1493">순차적 구현과 달리 이것이 안정 된 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1493">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="8c65f-1494">안정 된 정렬을 위해 폼의 쿼리를 변경 합니다: 정렬 var = 원본입니다. Select((e,i) = > 새 {E = e, I = i}). OrderBy((v) = > v.e). ThenBy (v = > v.i). Select((v) = > v.e);</span><span class="sxs-lookup"><span data-stu-id="8c65f-1494">To achieve a stable sort, change a query of the form: var ordered = source.Select((e,i) => new { E=e, I=i }).OrderBy((v) => v.e).ThenBy(v => v.i).Select((v) => v.e);</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1495"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1495"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1496"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1496">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1497">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1497">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1498">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1498">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1499"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1499">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-1500"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1500">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1501">정렬할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1501">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-1502">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1502">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-1503">키를 비교할 IComparer{TKey}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1503">An IComparer{TKey} to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-1504">지정된 비교자를 사용하여 시퀀스의 요소를 오름차순으로 병렬 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1504">Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1505">키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1505">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1506">순차적 구현과 달리 이것이 안정 된 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1506">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="8c65f-1507">에 대 한 설명을 참조 <xref:System.Linq.ParallelEnumerable.OrderBy%2A> 안정 된 정렬을 구현 하는 방법에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1507">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1508"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1508"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1509"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1509">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1510">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1510">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1511">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1511">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1512">시퀀스의 요소를 내림차순으로 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1512">Sorts the elements of a sequence in descending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderByDescending(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1513"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1513">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-1514"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1514">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1515">정렬할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1515">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-1516">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1516">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1517">시퀀스의 요소를 키에 따라 내림차순으로 병렬 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1517">Sorts in parallel the elements of a sequence in descending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1518">키에 따라 내림차순으로 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1518">An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1519">순차적 구현과 달리 이것이 안정 된 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1519">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="8c65f-1520">에 대 한 설명을 참조 <xref:System.Linq.ParallelEnumerable.OrderBy%2A> 안정 된 정렬을 구현 하는 방법에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1520">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1521"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1521"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1522"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1522">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1523">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1523">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1524">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1524">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderByDescending(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1525"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1525">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-1526"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1526">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1527">정렬할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1527">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-1528">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1528">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-1529">키를 비교할 IComparer{TKey}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1529">An IComparer{TKey} to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-1530">지정된 비교자를 사용하여 시퀀스의 요소를 내림차순으로 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1530">Sorts the elements of a sequence in descending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1531">키에 따라 내림차순으로 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1531">An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1532">순차적 구현과 달리 이것이 안정 된 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1532">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="8c65f-1533">에 대 한 설명을 참조 <xref:System.Linq.ParallelEnumerable.OrderBy%2A> 안정 된 정렬을 구현 하는 방법에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1533">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1534"><paramref name="source" /> 또는 <paramref name="KeySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1534"><paramref name="source" /> or <paramref name="KeySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1535"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1535">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1536">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1536">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1537">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1537">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;int&gt; Range (int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;int32&gt; Range(int32 start, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Range (start As Integer, count As Integer) As ParallelQuery(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::ParallelQuery&lt;int&gt; ^ Range(int start, int count);" />
      <MemberSignature Language="F#" Value="static member Range : int * int -&gt; System.Linq.ParallelQuery&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Range (start, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="8c65f-1538">시퀀스의 첫 번째 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1538">The value of the first integer in the sequence.</span></span></param>
        <param name="count"><span data-ttu-id="8c65f-1539">생성할 순차적 정수의 개수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1539">The number of sequential integers to generate.</span></span></param>
        <summary><span data-ttu-id="8c65f-1540">지정된 범위 내의 정수 병렬 시퀀스를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1540">Generates a parallel sequence of integral numbers within a specified range.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1541">순차적 정수 범위가 들어 있는 IEnumerable&lt;Int32&gt;(C#의 경우) 또는 IEnumerable(Of Int32)(Visual Basic의 경우)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1541">An IEnumerable&lt;Int32&gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8c65f-1542"><paramref name="count" />가 0보다 작거나 <paramref name="start" /> + <paramref name="count" /> - 1이 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1542"><paramref name="count" /> is less than 0 -or- <paramref name="start" /> + <paramref name="count" /> - 1 is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1543">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1543">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Repeat&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Repeat&lt;TResult&gt; (TResult element, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Repeat&lt;TResult&gt;(!!TResult element, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Repeat(Of TResult) (element As TResult, count As Integer) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Repeat(TResult element, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : 'Result * int -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Repeat (element, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="TResult" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1544">결과 시퀀스에서 반복할 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1544">The type of the value to be repeated in the result sequence.</span></span></typeparam>
        <param name="element"><span data-ttu-id="8c65f-1545">반복할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1545">The value to be repeated.</span></span></param>
        <param name="count"><span data-ttu-id="8c65f-1546">생성된 시퀀스에서 값을 반복할 횟수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1546">The number of times to repeat the value in the generated sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-1547">반복되는 단일 값이 들어 있는 병렬 시퀀스를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1547">Generates a parallel sequence that contains one repeated value.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1548">반복되는 단일 값이 들어 있는 시퀀스를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1548">A sequence that contains a repeated value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8c65f-1549"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1549"><paramref name="count" /> is less than 0.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1550">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1550">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Reverse&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Reverse&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Reverse(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Reverse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1551"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1551">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1552">반전할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1552">A sequence of values to reverse.</span></span></param>
        <summary><span data-ttu-id="8c65f-1553">병렬 시퀀스의 요소 순서를 반전합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1553">Inverts the order of the elements in a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1554">입력 시퀀스의 요소 순서를 뒤집은 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1554">A sequence whose elements correspond to those of the input sequence in reverse order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1555"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1555"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1556"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1556">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1557">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1557">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1558">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1558">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1559">시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1559">Projects in parallel each element of a sequence into a new form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Select(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1560"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1560">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1561">선택 기가 반환 하는 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1561">The type of elements returned by selector.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1562">변형 함수를 호출할 값 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1562">A sequence of values to invoke a transform function on.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1563">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1563">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1564">요소의 인덱스를 통합하여 시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1564">Projects in parallel each element of a sequence into a new form by incorporating the element's index.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1565"><paramref name="selector" />에 공급된 인덱스에 기초하여 <paramref name="source" />의 각 요소에 대해 변환 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1565">A sequence whose elements are the result of invoking the transform function on each element of <paramref name="source" />, based on the index supplied to <paramref name="selector" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1566"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1566"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1567"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1567">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1568">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1568">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1569"><see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1569">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span> <span data-ttu-id="8c65f-1570">이 조건은 스트리밍 시나리오에서 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1570">This condition might occur in streaming scenarios.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1571">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1571">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Select(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1572"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1572">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1573">선택 기가 반환 하는 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1573">The type of elements returned by selector.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1574">변형 함수를 호출할 값 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1574">A sequence of values to invoke a transform function on.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1575">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1575">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1576">시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1576">Projects in parallel each element of a sequence into a new form.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1577"><paramref name="source" />의 각 요소에 대해 변환 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1577">A sequence whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1578"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1578"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1579"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1579">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1580">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1580">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1581">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1581">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectMany&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1582">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1582">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and flattens the resulting sequences into one sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, IEnumerable(Of TResult))) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Result&gt;&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1583"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1583">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1584">선택기가 반환하는 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1584">The type of the elements of the sequence returned by selector.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1585">계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1585">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1586">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1586">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1587">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1587">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and flattens the resulting sequences into one sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1588">입력 시퀀스의 각 요소에 대해 일대다 변형 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1588">A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1589"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1589"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1590"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1590">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1591">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1591">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1592">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1592">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer, IEnumerable(Of TResult))) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, seq&lt;'Result&gt;&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1593"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1593">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1594">선택기가 반환하는 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1594">The type of the elements of the sequence returned by selector.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1595">계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1595">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1596">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1596">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1597">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1597">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, and flattens the resulting sequences into one sequence.</span></span> <span data-ttu-id="8c65f-1598">각 소스 요소의 인덱스는 해당 요소의 투영된 폼에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1598">The index of each source element is used in the projected form of that element.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1599">입력 시퀀스의 각 요소에 대해 일대다 변형 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1599">A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1600"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1600"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1601"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1601">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1602"><see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1602">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1603">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1603">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1604">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1604">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As ParallelQuery(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1605"><paramref name="collectionSelector" />에서 수집하는 중간 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1605">The type of the intermediate elements collected by <paramref name="collectionSelector" />.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="8c65f-1606"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1606">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1607">결과 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1607">The type of elements in the result sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1608">계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1608">A sequence of values to project.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="8c65f-1609">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1609">A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-1610">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1610">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-1611">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1611">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1612"><paramref name="collectionSelector" />에 제공된 인덱스를 기준으로 <paramref name="source" />의 각 요소에 대해 일대다 변환 함수 <paramref name="collectionSelector" />를 호출한 다음 이러한 시퀀스 요소와 해당 소스 요소를 각각 결과 요소에 매핑한 결과로 얻어지는 요소가 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1612">A sequence whose elements are the result of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> based on the index supplied to <paramref name="collectionSelector" />, and then mapping each of those sequence elements and their corresponding source element to a result element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1613"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1613"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1614"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1614">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1615"><see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1615">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1616">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1616">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1617">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1617">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As ParallelQuery(Of TSource), collectionSelector As Func(Of TSource, Integer, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1618"><paramref name="collectionSelector" />에서 수집하는 중간 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1618">The type of the intermediate elements collected by <paramref name="collectionSelector" />.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="8c65f-1619"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1619">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-1620">반환할 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1620">The type of elements to return.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1621">계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1621">A sequence of values to project.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="8c65f-1622">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1622">A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-1623">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1623">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-1624">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1624">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</span></span> <span data-ttu-id="8c65f-1625">각 소스 요소의 인덱스는 해당 요소의 투영된 중간 폼에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1625">The index of each source element is used in the intermediate projected form of that element.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1626"><paramref name="collectionSelector" />에 제공된 인덱스를 기준으로 <paramref name="source" />의 각 요소에 대해 일대다 변환 함수 <paramref name="collectionSelector" />를 호출한 다음 이러한 시퀀스 요소와 해당 소스 요소를 각각 결과 요소에 매핑한 결과로 얻어지는 요소가 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1626">A sequence whose elements are the result of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> based on the index supplied to <paramref name="collectionSelector" />, and then mapping each of those sequence elements and their corresponding source element to a result element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1627"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1627"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1628"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1628">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1629"><see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1629">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1630">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1630">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1631">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1631">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SequenceEqual&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1632">해당 형식에 대한 같음 비교자를 통해 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1632">Determines whether two parallel sequences are equal by comparing the elements by using an equality comparer for their type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1633">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1633">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-1634">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1634">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-1635">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1635">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-1636">이 SequenceEqual 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1636">This SequenceEqual overload should never be called.</span></span> <span data-ttu-id="8c65f-1637">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1637">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1638">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1638">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1639">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 SequenceEqual의 사용을 허용 하지 않도록 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1639">This overload exists to disallow usage of SequenceEqual with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-1640">이 고, 그렇지는 SequenceEqual 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1640">Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-1641">이 메서드를 호출할 때마다 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1641">Thrown every time this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1642">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1642">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1643">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1643">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-1644">두 번째와 비교할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1644">A sequence to compare to second.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-1645">첫 번째 입력 시퀀스와 비교할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1645">A sequence to compare to the first input sequence.</span></span></param>
        <summary><span data-ttu-id="8c65f-1646">해당 형식에 대한 기본 같음 비교자를 통해 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1646">Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1647">두 소스 시퀀스의 길이가 같고 해당 형식의 기본 같음 비교자에 따라 상응하는 요소가 서로 같으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1647">true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1648"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1648">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1649"><paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1649"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1650">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1650">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1651">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1651">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1652">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1652">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-1653">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1653">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-1654">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1654">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-1655">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1655">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-1656">이 SequenceEqual 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1656">This SequenceEqual overload should never be called.</span></span> <span data-ttu-id="8c65f-1657">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1657">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1658">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1658">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1659">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 SequenceEqual의 사용을 허용 하지 않도록 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1659">This overload exists to disallow usage of SequenceEqual with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-1660">그렇지 않으면, SequenceEqual 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1660">Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-1661">이 메서드를 호출할 때마다 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1661">Thrown every time this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1662">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1662">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1663">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1663">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-1664"><paramref name="second" />와 비교할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1664">A sequence to compare to <paramref name="second" />.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-1665">첫 번째 입력 시퀀스와 비교할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1665">A sequence to compare to the first input sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-1666">요소를 비교하는 데 사용할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1666">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use to compare elements.</span></span></param>
        <summary><span data-ttu-id="8c65f-1667">지정된 IEqualityComparer{T}를 통해 해당 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1667">Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1668">두 소스 시퀀스의 길이가 같고 해당 형식의 기본 같음 비교자에 따라 상응하는 요소가 서로 같으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1668">true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1669"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1669">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1670"><paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1670"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1671">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1671">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1672">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1672">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Single&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1673">병렬 시퀀스의 유일한 요소를 반환하고, 시퀀스의 요소가 정확히 하나가 아니면 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1673">Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Single source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1674"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1674">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1675">단일 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1675">The sequence to return the single element of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1676">병렬 시퀀스의 유일한 요소를 반환하고, 시퀀스의 요소가 정확히 하나가 아니면 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1676">Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1677">입력 시퀀스의 단일 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1677">The single element of the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1678"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1678">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1679"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1679"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1680">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1680">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1681">입력 시퀀스에 요소가 두 개 이상 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1681">The input sequence contains more than one element.</span></span> <span data-ttu-id="8c65f-1682">-또는- 입력 시퀀스가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1682">-or- The input sequence is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1683">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1683">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Single (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1684"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1684">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1685">단일 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1685">The sequence to return the single element of.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1686">요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1686">A function to test an element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-1687">병렬 시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하고, 이러한 요소가 둘 이상 있으면 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1687">Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1688">입력 시퀀스에서 특정 조건에 맞는 단일 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1688">The single element of the input sequence that satisfies a condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1689"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1689">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1690"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1690"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1691">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1691">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1692"><paramref name="predicate" />의 조건을 충족하는 요소가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1692">No element satisfies the condition in <paramref name="predicate" />.</span></span> <span data-ttu-id="8c65f-1693">또는 <paramref name="predicate" />의 조건을 충족하는 요소가 둘 이상인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1693">-or- More than one element satisfies the condition in <paramref name="predicate" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1694">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1694">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SingleOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1695">병렬 시퀀스의 유일한 요소를 반환하거나 시퀀스가 비어 있으면 기본값을 반환합니다. 시퀀스에 요소가 둘 이상 있으면 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1695">Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.SingleOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1696"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1696">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1697">단일 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1697">The sequence to return the single element of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1698">병렬 시퀀스의 유일한 요소를 반환하거나 시퀀스가 비어 있으면 기본값을 반환합니다. 시퀀스에 요소가 둘 이상 있으면 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1698">Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1699">입력 시퀀스의 단일 요소이거나, 시퀀스에 요소가 없으면 default()입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1699">The single element of the input sequence, or default() if the sequence contains no elements.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1700"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1700">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1701"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1701"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1702"><paramref name="source" />에 둘 이상의 요소가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1702"><paramref name="source" /> has more than one element.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1703">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1703">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1704">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1704">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.SingleOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1705"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1705">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1706">단일 요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1706">The sequence to return the single element of.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1707">요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1707">A function to test an element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-1708">병렬 시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하거나 이러한 요소가 없으면 기본값을 반환합니다. 조건에 맞는 요소가 둘 이상 있으면 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1708">Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1709">입력 시퀀스에서 조건에 맞는 단일 요소이거나, 이러한 요소가 없으면 default()입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1709">The single element of the input sequence that satisfies the condition, or default() if no such element is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1710"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1710">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1711"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1711"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1712">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1712">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-1713"><paramref name="source" />가 비어 있거나 여러 요소가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1713"><paramref name="source" /> is empty or multiple elements are returned.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1714">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1714">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Skip&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Skip&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Skip&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip(Of TSource) (source As ParallelQuery(Of TSource), count As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Skip(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Skip (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1715"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1715">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1716">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1716">The sequence to return elements from.</span></span></param>
        <param name="count"><span data-ttu-id="8c65f-1717">나머지 요소를 반환하기 전에 건너뛸 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1717">The number of elements to skip before returning the remaining elements.</span></span></param>
        <summary><span data-ttu-id="8c65f-1718">병렬 시퀀스에서 지정된 수의 요소를 건너뛴 다음 나머지 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1718">Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1719">입력 시퀀스에서 지정된 인덱스 뒤에 나오는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1719">A sequence that contains the elements that occur after the specified index in the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1720">경우 수 > 소스입니다. Count (), 요소가 없으면 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1720">If count > source.Count(), no elements are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1721"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1721"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1722"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1722">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1723">개수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1723">Count is greater than <see cref="F:System.Int32.MaxValue" /></span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1724">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1724">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1725">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1725">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1726">지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1726">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ SkipWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1727"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1727">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1728">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1728">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1729">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1729">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-1730">지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1730">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1731">입력 시퀀스에서 조건자에 지정된 테스트를 통과하지 않는 급수의 첫 요소부터 시작되는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1731">A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1732"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1732"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1733"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1733">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1734">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1734">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1735">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1735">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ SkipWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1736"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1736">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1737">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1737">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1738">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1738">A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1739">지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1739">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span></span> <span data-ttu-id="8c65f-1740">조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1740">The element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1741">입력 시퀀스에서 조건자에 지정된 테스트를 통과하지 않는 급수의 첫 요소부터 시작되는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1741">A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1742"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1742"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1743"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1743">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1744"><see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1744">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1745">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1745">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1746">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1746">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sum">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1747">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1747">Computes in parallel the sum of a sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static decimal Sum (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1748">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1748">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1749">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1749">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1750">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1750">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1751"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1751">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1752"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1752"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1753">합계가 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1753">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1754">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1754">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1755">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1755">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static double Sum (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1756">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1756">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1757">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1757">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1758">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1758">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1759"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1759">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1760"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1760"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1761">합계가 <see cref="F:System.Double.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1761">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1762">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1762">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1763">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1763">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static int Sum (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1764">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1764">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1765">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1765">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1766">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1766">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1767"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1767">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1768"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1768"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1769">합계가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1769">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1770">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1770">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1771">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1771">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static long Sum (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1772">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1772">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1773">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1773">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1774">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1774">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1775"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1775">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1776"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1776"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1777">합계가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1777">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1778">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1778">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1779">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1779">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1780">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1780">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1781">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1781">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1782">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1782">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1783"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1783">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1784"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1784"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1785">합계가 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1785">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1786">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1786">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1787">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1787">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1788">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1788">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1789">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1789">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1790">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1790">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1791"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1791">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1792"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1792"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1793">합계가 <see cref="F:System.Double.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1793">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1794">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1794">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1795">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1795">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1796">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1796">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1797">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1797">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1798">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1798">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1799"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1799">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1800"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1800"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1801">합계가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1801">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1802">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1802">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1803">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1803">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1804">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1804">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1805">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1805">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1806">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1806">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1807"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1807">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1808"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1808"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1809">합계가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1809">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1810">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1810">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1811">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1811">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1812">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1812">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1813">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1813">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1814">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1814">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1815"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1815">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1816"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1816"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1817">합계가 <see cref="F:System.Single.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1817">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1818">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1818">-or-  One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1819">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1819">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float Sum (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c65f-1820">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1820">A sequence of values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="8c65f-1821">값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1821">Computes in parallel the sum of a sequence of values.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1822">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1822">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1823"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1823">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1824"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1824"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1825">합계가 <see cref="F:System.Single.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1825">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1826">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1826">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1827">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1827">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1828"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1828">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1829">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1829">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1830">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1830">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1831">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1831">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1832">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1832">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1833"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1833">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1834"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1834"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1835">합계가 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1835">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1836">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1836">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1837">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1837">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1838"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1838">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1839">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1839">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1840">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1840">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1841">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1841">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1842">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1842">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1843"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1843">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1844"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1844"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1845">합계가 <see cref="F:System.Double.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1845">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1846">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1846">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1847">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1847">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1848">소스 시퀀스의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1848">The type of elements in the source sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1849">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1849">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1850">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1850">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1851">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1851">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1852">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1852">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1853"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1853">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1854"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1854"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1855">합계가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1855">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1856">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1856">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1857">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1857">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1858"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1858">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1859">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1859">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1860">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1860">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1861">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1861">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1862">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1862">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1863"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1863">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1864"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1864"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1865">합계가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1865">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1866">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1866">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1867">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1867">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1868"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1868">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1869">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1869">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1870">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1870">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1871">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1871">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1872">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1872">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1873"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1873">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1874"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1874"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1875">합계가 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1875">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1876">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1876">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1877">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1877">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1878"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1878">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1879">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1879">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1880">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1880">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1881">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1881">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1882">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1882">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1883"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1883">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1884"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1884"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1885">합계가 <see cref="F:System.Double.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1885">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1886">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1886">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1887">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1887">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1888"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1888">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1889">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1889">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1890">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1890">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1891">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1891">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1892">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1892">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1893"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1893">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1894"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1894"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1895">합계가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1895">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1896">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1896">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1897">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1897">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1898"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1898">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1899">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1899">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1900">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1900">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1901">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1901">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1902">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1902">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1903"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1903">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1904"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1904"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1905">합계가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1905">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1906">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1906">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1907">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1907">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1908"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1908">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1909">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1909">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1910">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1910">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1911">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1911">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1912">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1912">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1913"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1913">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1914"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1914"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1915">합계가 <see cref="F:System.Single.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1915">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1916">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1916">-or-  One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1917">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1917">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1918"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1918">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1919">합을 계산할 값의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1919">A sequence of values to calculate the sum of.</span></span></param>
        <param name="selector"><span data-ttu-id="8c65f-1920">각 요소에 적용할 변환 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1920">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1921">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1921">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1922">시퀀스에 있는 프로젝션된 값의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1922">The sum of the projected values in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1923"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1923">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1924"><paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1924"><paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1925">합계가 <see cref="F:System.Single.MaxValue" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1925">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="8c65f-1926">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1926">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1927">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1927">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Take&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Take&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Take&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take(Of TSource) (source As ParallelQuery(Of TSource), count As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Take(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Take (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1928"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1928">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1929">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1929">The sequence to return elements from.</span></span></param>
        <param name="count"><span data-ttu-id="8c65f-1930">반환할 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1930">The number of elements to return.</span></span></param>
        <summary><span data-ttu-id="8c65f-1931">병렬 시퀀스 시작 위치에서 지정된 수의 연속 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1931">Returns a specified number of contiguous elements from the start of a parallel sequence.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1932">입력 시퀀스의 시작 위치부터 지정된 수의 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1932">A sequence that contains the specified number of elements from the start of the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1933"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1933"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1934"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1934">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1935">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1935">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1936">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1936">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1937">지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1937">Returns elements from a parallel sequence as long as a specified condition is true.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ TakeWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1938"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1938">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1939">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1939">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1940">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1940">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-1941">지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1941">Returns elements from a parallel sequence as long as a specified condition is true.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1942">입력 시퀀스에서 요소가 테스트를 더 이상 통과하지 않는 위치보다 앞에 나오는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1942">A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1943"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1943"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1944"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1944">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1945">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1945">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1946">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1946">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ TakeWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1947"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1947">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1948">요소가 반환되는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1948">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-1949">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1949">A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1950">지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1950">Returns elements from a parallel sequence as long as a specified condition is true.</span></span> <span data-ttu-id="8c65f-1951">조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1951">The element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1952">입력 시퀀스에서 요소가 테스트를 더 이상 통과하지 않는 위치보다 앞에 나오는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1952">A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1953"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1953"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1954"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1954">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-1955">이 쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1955">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by this query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1956">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1956">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1957">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1957">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1958">시퀀스의 요소를 오름차순으로 다시 병렬로 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1958">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenBy(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1959"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1959">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-1960"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1960">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1961">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1961">An OrderedParallelQuery{TSource} that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-1962">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1962">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1963">시퀀스의 요소를 키에 따라 오름차순으로 다시 병렬 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1963">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1964">키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1964">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1965">순차적 구현과 달리 이것이 안정 된 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1965">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="8c65f-1966">에 대 한 설명을 참조 <xref:System.Linq.ParallelEnumerable.OrderBy%2A> 안정 된 정렬을 구현 하는 방법에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1966">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1967"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1967"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1968"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1968">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1969">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1969">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1970">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1970">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenBy(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1971"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1971">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-1972"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1972">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1973">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1973">An OrderedParallelQuery{TSource} that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-1974">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1974">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-1975">키를 비교할 IComparer{TKey}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1975">An IComparer{TKey} to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-1976">시퀀스의 요소를 지정된 비교자를 사용하여 오름차순으로 다시 병렬 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1976">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1977">키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1977">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1978">순차적 구현과 달리 이것이 안정 된 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1978">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="8c65f-1979">에 대 한 설명을 참조 <xref:System.Linq.ParallelEnumerable.OrderBy%2A> 안정 된 정렬을 구현 하는 방법에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1979">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1980"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1980"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1981"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1981">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1982">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1982">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1983">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1983">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-1984">시퀀스의 요소를 내림차순으로 다시 병렬로 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1984">Performs in parallel a subsequent ordering of the elements in a sequence in descending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenByDescending(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1985"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1985">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-1986"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1986">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1987">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1987">An OrderedParallelQuery{TSource} that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-1988">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1988">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="8c65f-1989">시퀀스의 요소를 키에 따라 내림차순으로 다시 병렬 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1989">Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.</span></span></summary>
        <returns><span data-ttu-id="8c65f-1990">요소가 키에 따라 내림차순으로 정렬된 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1990">A sequence whose elements are sorted descending according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-1991">순차적 구현과 달리 이것이 안정 된 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1991">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="8c65f-1992">에 대 한 설명을 참조 <xref:System.Linq.ParallelEnumerable.OrderBy%2A> 안정 된 정렬을 구현 하는 방법에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1992">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-1993"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-1993"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-1994"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1994">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-1995">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1995">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-1996">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-1996">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenByDescending(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-1997"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1997">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-1998"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1998">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-1999">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-1999">An OrderedParallelQuery{TSource} that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2000">요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2000">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-2001">키를 비교할 IComparer{TKey}입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2001">An IComparer{TKey} to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-2002">시퀀스의 요소를 지정된 비교자를 사용하여 내림차순으로 다시 병렬 정렬합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2002">Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2003">요소가 키에 따라 내림차순으로 정렬된 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2003">A sequence whose elements are sorted descending according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-2004">순차적 구현과 달리 이것이 안정 된 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2004">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="8c65f-2005">에 대 한 설명을 참조 <xref:System.Linq.ParallelEnumerable.OrderBy%2A> 안정 된 정렬을 구현 하는 방법에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2005">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2006"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2006"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2007"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2007">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2008">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2008">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2009">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2009">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource[] ToArray&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource[] ToArray&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of TSource) (source As ParallelQuery(Of TSource)) As TSource()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;TSource&gt; ^ ToArray(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToArray : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source[]" Usage="System.Linq.ParallelEnumerable.ToArray source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2010"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2010">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2011">배열을 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2011">A sequence to create an array from.</span></span></param>
        <summary><span data-ttu-id="8c65f-2012"><see cref="T:System.Linq.ParallelQuery`1" />을 사용하여 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2012">Creates an array from a <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2013">입력 시퀀스의 요소가 들어 있는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2013">An array that contains the elements from the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2014"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2014">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2015"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2015"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2016">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2016">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2017">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2017">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-2018"><see cref="T:System.Collections.Generic.Dictionary`2" />을 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2018">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TSource&gt; ToDictionary&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TSource&gt; ToDictionary&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As Dictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TSource&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2019"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2019">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-2020"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2020">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2021"><see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2021">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2022">각 요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2022">A function to extract a key from each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-2023">지정된 키 선택기 함수에 따라 <see cref="T:System.Collections.Generic.Dictionary`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2023">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2024">키와 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2024">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains keys and values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2025"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2025">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2026"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2026"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2027"><paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2027"><paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span></span> <span data-ttu-id="8c65f-2028">-또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2028">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span></span> <span data-ttu-id="8c65f-2029">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2029">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2030">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2030">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TSource&gt; ToDictionary&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TSource&gt; ToDictionary&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TSource&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2031"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2031">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-2032"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2032">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2033"><see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2033">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2034">각 요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2034">A function to extract a key from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-2035">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2035">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-2036">지정된 키 선택기 함수와 키 비교자에 따라 <see cref="T:System.Linq.ParallelQuery`1" />에서 <see cref="T:System.Collections.Generic.Dictionary`2" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2036">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function and key comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2037">키와 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2037">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains keys and values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2038"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2038">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2039"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2039"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2040"><paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2040"><paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span></span> <span data-ttu-id="8c65f-2041">-또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2041">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span></span> <span data-ttu-id="8c65f-2042">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2042">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2043">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2043">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2044"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2044">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-2045"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2045">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="8c65f-2046"><paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2046">The type of the value returned by <paramref name="elementSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2047"><see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2047">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2048">각 요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2048">A function to extract a key from each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="8c65f-2049">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2049">A transform function to produce a result element value from each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-2050">지정된 키 선택기와 요소 선택기 함수에 따라 <see cref="T:System.Collections.Generic.Dictionary`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2050">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to specified key selector and element selector functions.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2051">입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2051">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2052"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2052">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2053"><paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2053"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2054"><paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2054"><paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span></span> <span data-ttu-id="8c65f-2055">-또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2055">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span></span> <span data-ttu-id="8c65f-2056">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2056">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2057">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2057">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2058"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2058">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-2059"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2059">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="8c65f-2060"><paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2060">The type of the value returned by <paramref name="elementSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2061"><see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2061">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2062">각 요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2062">A function to extract a key from each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="8c65f-2063">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2063">A transform function to produce a result element value from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-2064">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2064">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-2065">지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <see cref="T:System.Collections.Generic.Dictionary`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2065">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function, a comparer, and an element selector function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2066">입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2066">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2067"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2067">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2068"><paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2068"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2069"><paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2069"><paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span></span> <span data-ttu-id="8c65f-2070">-또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2070">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span></span> <span data-ttu-id="8c65f-2071">또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2071">-or- One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2072">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2072">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;TSource&gt; ToList&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;!!TSource&gt; ToList&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToList(Of TSource) (source As ParallelQuery(Of TSource)) As List(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::List&lt;TSource&gt; ^ ToList(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToList : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Collections.Generic.List&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2073"><paramref name="source" /> 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2073">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2074"><see cref="T:System.Collections.Generic.List`1" />를 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2074">A sequence to create a <see cref="T:System.Collections.Generic.List`1" /> from.</span></span></param>
        <summary><span data-ttu-id="8c65f-2075"><see cref="T:System.Linq.ParallelQuery`1" />에서 <see cref="T:System.Collections.Generic.List`1" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2075">Creates a <see cref="T:System.Collections.Generic.List`1" /> from an <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2076">입력 시퀀스의 요소가 들어 있는 <see cref="T:System.Collections.Generic.List`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2076">A <see cref="T:System.Collections.Generic.List`1" /> that contains elements from the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2077"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2077">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2078"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2078"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2079">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2079">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2080">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2080">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLookup&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-2081"><see cref="T:System.Linq.ILookup`2" />을 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2081">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLookup&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TSource&gt; ToLookup&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TSource&gt; ToLookup&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As ILookup(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TSource&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2082"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2082">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-2083"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2083">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2084"><see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2084">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2085">각 요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2085">A function to extract a key from each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-2086">지정된 키 선택기 함수에 따라 <see cref="T:System.Linq.ILookup`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2086">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2087">키와 값이 들어 있는 <see cref="T:System.Linq.ILookup`2" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2087">A <see cref="T:System.Linq.ILookup`2" /> that contains keys and values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2088"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2088">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2089"><paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2089"><paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2090">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2090">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2091">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2091">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TSource&gt; ToLookup&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TSource&gt; ToLookup&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As ILookup(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TSource&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2092"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2092">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-2093"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2093">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2094"><see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2094">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2095">각 요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2095">A function to extract a key from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-2096">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2096">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-2097">지정된 키 선택기 함수와 키 비교자에 따라 <see cref="T:System.Linq.ILookup`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2097">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function and key comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2098">키와 값이 들어 있는 <see cref="T:System.Linq.ILookup`2" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2098">A <see cref="T:System.Linq.ILookup`2" /> that contains keys and values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2099"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2099">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2100"><paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 null 참조(Visual Basic에서는 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2100"><paramref name="source" /> or <paramref name="keySelector" /> or is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2101">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2101">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2102">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2102">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TElement&gt; ToLookup&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TElement&gt; ToLookup&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As ILookup(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TElement&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2103"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2103">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-2104"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2104">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="8c65f-2105"><paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2105">The type of the value returned by <paramref name="elementSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2106"><see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2106">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2107">각 요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2107">A function to extract a key from each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="8c65f-2108">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2108">A transform function to produce a result element value from each element.</span></span></param>
        <summary><span data-ttu-id="8c65f-2109">지정된 키 선택기와 요소 선택기 함수에 따라 <see cref="T:System.Linq.ILookup`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2109">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to specified key selector and element selector functions.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2110">입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 포함된 <see cref="T:System.Linq.ILookup`2" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2110">A <see cref="T:System.Linq.ILookup`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2111"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2111">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2112"><paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2112"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2113">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2113">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2114">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2114">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TElement&gt; ToLookup&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TElement&gt; ToLookup&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As ILookup(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TElement&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2115"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2115">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="8c65f-2116"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2116">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="8c65f-2117"><paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2117">The type of the value returned by <paramref name="elementSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2118"><see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2118">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="8c65f-2119">각 요소에서 키를 추출하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2119">A function to extract a key from each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="8c65f-2120">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2120">A transform function to produce a result element value from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-2121">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2121">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="8c65f-2122">지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <see cref="T:System.Linq.ILookup`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2122">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function, a comparer and an element selector function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2123">입력 시퀀스에서 선택한 TElement 형식의 값이 들어 있는 Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2123">A Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;) that contains values of type TElement selected from the input sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2124"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2124">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2125"><paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2125"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2126">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2126">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2127">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2127">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-2128">두 병렬 시퀀스의 합집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2128">Produces the set union of two parallel sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2129">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2129">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-2130">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2130">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-2131">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2131">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-2132">이 Union 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2132">This Union overload should never be called.</span></span> <span data-ttu-id="8c65f-2133">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2133">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2134">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2134">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-2135">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 공용 구조체의 사용을 허용 하지 않으려면 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2135">This overload exists to disallow usage of Union with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-2136">그렇지 않으면, Union 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2136">Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-2137">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2137">The exception that occurs when this method is called.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2138"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2138">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2139">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2139">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2140">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2140">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2141">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2141">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-2142">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2142">A sequence whose distinct elements form the first set for the union.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-2143">해당 고유 요소가 합집합의 두 번째 집합을 이루는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2143">A sequence whose distinct elements form the second set for the union.</span></span></param>
        <summary><span data-ttu-id="8c65f-2144">기본 같음 비교자를 사용하여 두 병렬 시퀀스의 합집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2144">Produces the set union of two parallel sequences by using the default equality comparer.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2145">두 입력 시퀀스의 모든 요소가 들어 있는 시퀀스이며, 중복 요소는 제외됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2145">A sequence that contains the elements from both input sequences, excluding duplicates.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2146"><paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2146"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2147"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2147">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2148">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2148">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2149">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2149">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2150">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2150">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-2151">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2151">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-2152">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2152">This parameter is not used.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-2153">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2153">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-2154">이 Union 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2154">This Union overload should never be called.</span></span> <span data-ttu-id="8c65f-2155">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2155">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2156">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2156">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-2157">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 공용 구조체의 사용을 허용 하지 않으려면 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2157">This overload exists to disallow usage of Union with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-2158">그렇지 않으면, Union 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2158">Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-2159">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2159">The exception that occurs when this method is called.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2160"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2160">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2161">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2161">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2162">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2162">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2163">입력 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2163">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-2164">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2164">A sequence whose distinct elements form the first set for the union.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-2165">해당 고유 요소가 합집합의 두 번째 집합을 이루는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2165">A sequence whose distinct elements form the second set for the union.</span></span></param>
        <param name="comparer"><span data-ttu-id="8c65f-2166">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2166">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="8c65f-2167">지정된 IEqualityComparer{T}를 사용하여 두 병렬 시퀀스의 합집합을 구합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2167">Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2168">두 입력 시퀀스의 모든 요소가 들어 있는 시퀀스이며, 중복 요소는 제외됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2168">A sequence that contains the elements from both input sequences, excluding duplicates.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2169"><paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2169"><paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2170"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2170">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2171">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2171">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2172">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2172">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Where&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-2173">조건자에 따라 값의 시퀀스를 병렬로 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2173">Filters in parallel a sequence of values based on a predicate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Where(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2174">소스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2174">The type of the elements of source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2175">필터링할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2175">A sequence to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-2176">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2176">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-2177">조건자에 따라 값의 시퀀스를 병렬로 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2177">Filters in parallel a sequence of values based on a predicate.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2178">입력 시퀀스에서 조건에 맞는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2178">A sequence that contains elements from the input sequence that satisfy the condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2179"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2179"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2180"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2180">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2181">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2181">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2182">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2182">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Where(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2183">소스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2183">The type of the elements of source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2184">필터링할 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2184">A sequence to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="8c65f-2185">각 요소를 조건에 대해 테스트하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2185">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="8c65f-2186">조건자에 따라 값의 시퀀스를 병렬로 필터링합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2186">Filters in parallel a sequence of values based on a predicate.</span></span> <span data-ttu-id="8c65f-2187">조건자 함수의 논리에 각 요소의 인덱스가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2187">Each element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2188">입력 시퀀스에서 조건에 맞는 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2188">A sequence that contains elements from the input sequence that satisfy the condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2189"><paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2189"><paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2190"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2190">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8c65f-2191"><see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거된 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2191">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2192">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2192">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2193">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2193">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WithCancellation&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithCancellation&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithCancellation&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithCancellation(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member WithCancellation : System.Linq.ParallelQuery&lt;'Source&gt; * System.Threading.CancellationToken -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithCancellation (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2194"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2194">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2195">옵션을 설정할 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2195">A ParallelQuery on which to set the option.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="8c65f-2196">취소 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2196">A cancellation token.</span></span></param>
        <summary><span data-ttu-id="8c65f-2197">쿼리와 연결할 <see cref="T:System.Threading.CancellationToken" />을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2197">Sets the <see cref="T:System.Threading.CancellationToken" /> to associate with the query.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2198">소스와 같은 쿼리를 나타내고 등록된 취소 토큰을 포함하는 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2198">ParallelQuery representing the same query as source, but with the registered cancellation token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8c65f-2199"><paramref name="cancellationToken" />과 연결된 <see cref="T:System.Threading.CancellationTokenSource" />는 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2199">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2200"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2200"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-2201"><paramref name="WithCancellation" />은 쿼리에서 여러 번 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2201"><paramref name="WithCancellation" /> is used multiple times in the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2202">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2202">Parallel LINQ (PLINQ)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/80b14640-edfa-4153-be1b-3e003d3e9c1a"><span data-ttu-id="8c65f-2203">방법: PLINQ 쿼리 취소</span><span class="sxs-lookup"><span data-stu-id="8c65f-2203">How to: Cancel a PLINQ Query</span></span></related>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="8c65f-2204">취소</span><span class="sxs-lookup"><span data-stu-id="8c65f-2204">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WithDegreeOfParallelism&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithDegreeOfParallelism&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int degreeOfParallelism);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithDegreeOfParallelism&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 degreeOfParallelism) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithDegreeOfParallelism(Of TSource) (source As ParallelQuery(Of TSource), degreeOfParallelism As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithDegreeOfParallelism(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int degreeOfParallelism);" />
      <MemberSignature Language="F#" Value="static member WithDegreeOfParallelism : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithDegreeOfParallelism (source, degreeOfParallelism)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="degreeOfParallelism" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2205"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2205">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2206">병렬 처리 수준에 대한 제한을 설정할 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2206">A ParallelQuery on which to set the limit on the degrees of parallelism.</span></span></param>
        <param name="degreeOfParallelism"><span data-ttu-id="8c65f-2207">쿼리에 사용할 병렬 처리 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2207">The degree of parallelism for the query.</span></span> <span data-ttu-id="8c65f-2208">기본값은 Math.Min(<see cref="P:System.Environment.ProcessorCount" />, <see langword="MAX_SUPPORTED_DOP" />)입니다. 여기서 <see langword="MAX_SUPPORTED_DOP" />는 512입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2208">The default value is Math.Min(<see cref="P:System.Environment.ProcessorCount" />, <see langword="MAX_SUPPORTED_DOP" />) where <see langword="MAX_SUPPORTED_DOP" /> is 512.</span></span></param>
        <summary><span data-ttu-id="8c65f-2209">쿼리에서 사용할 병렬 처리 수준을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2209">Sets the degree of parallelism to use in a query.</span></span> <span data-ttu-id="8c65f-2210">병렬 처리 수준은 쿼리를 처리하기 위해 동시에 실행되는 작업의 최대 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2210">Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2211">소스와 같은 쿼리를 나타내고 병렬 처리 수준 제한이 설정된 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2211">ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2212"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2212"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8c65f-2213"><paramref name="degreeOfParallelism" />이 1보다 작거나 511보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2213"><paramref name="degreeOfParallelism" /> is less than 1 or greater than 511.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-2214">WithDegreeOfParallelism은 쿼리에서 여러 번 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2214">WithDegreeOfParallelism is used multiple times in the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2215">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2215">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WithExecutionMode&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithExecutionMode&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Linq.ParallelExecutionMode executionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithExecutionMode&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Linq.ParallelExecutionMode executionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithExecutionMode(Of TSource) (source As ParallelQuery(Of TSource), executionMode As ParallelExecutionMode) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithExecutionMode(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Linq::ParallelExecutionMode executionMode);" />
      <MemberSignature Language="F#" Value="static member WithExecutionMode : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelExecutionMode -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithExecutionMode (source, executionMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="executionMode" Type="System.Linq.ParallelExecutionMode" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2216"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2216">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2217">옵션을 설정할 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2217">A ParallelQuery on which to set the option.</span></span></param>
        <param name="executionMode"><span data-ttu-id="8c65f-2218">쿼리를 실행할 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2218">The mode in which to execute the query.</span></span></param>
        <summary><span data-ttu-id="8c65f-2219">쿼리의 실행 모드를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2219">Sets the execution mode of the query.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2220">소스와 같은 쿼리를 나타내고 등록된 실행 모드를 포함하는 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2220">ParallelQuery representing the same query as source, but with the registered execution mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-2221">실행 모드 PLINQ는 특정 쿼리 형태를 감지한 경우 순차적 실행을 대체 하려고 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2221">The execution mode specifies whether PLINQ will attempt to fall back to sequential execution if it detects certain query shapes.</span></span> <span data-ttu-id="8c65f-2222">자세한 내용과 예제는 [방법: PLINQ에 실행 모드 지정](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2222">For more information and examples, see [How to: Specify the Execution Mode in PLINQ](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2223"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2223"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c65f-2224"><paramref name="executionMode" />는 유효한 <see cref="T:System.Linq.ParallelExecutionMode" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2224"><paramref name="executionMode" /> is not a valid <see cref="T:System.Linq.ParallelExecutionMode" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-2225">WithExecutionMode는 쿼리에서 여러 번 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2225">WithExecutionMode is used multiple times in the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2226">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2226">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WithMergeOptions&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithMergeOptions&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Linq.ParallelMergeOptions mergeOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithMergeOptions&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Linq.ParallelMergeOptions mergeOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithMergeOptions(Of TSource) (source As ParallelQuery(Of TSource), mergeOptions As ParallelMergeOptions) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithMergeOptions(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Linq::ParallelMergeOptions mergeOptions);" />
      <MemberSignature Language="F#" Value="static member WithMergeOptions : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelMergeOptions -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithMergeOptions (source, mergeOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="mergeOptions" Type="System.Linq.ParallelMergeOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="8c65f-2227"><paramref name="source" />의 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2227">The type of elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="8c65f-2228">옵션을 설정할 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2228">A ParallelQuery on which to set the option.</span></span></param>
        <param name="mergeOptions"><span data-ttu-id="8c65f-2229">이 쿼리에 대해 설정할 병합 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2229">The merge options to set for this query.</span></span></param>
        <summary><span data-ttu-id="8c65f-2230">쿼리가 출력을 버퍼링하는 방식을 지정하는 병합 옵션을 이 쿼리에 대해 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2230">Sets the merge options for this query, which specify how the query will buffer output.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2231">소스와 같은 쿼리를 나타내고 등록된 병합 옵션을 포함하는 ParallelQuery입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2231">ParallelQuery representing the same query as source, but with the registered merge options.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2232"><paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="8c65f-2232"><paramref name="source" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c65f-2233"><paramref name="mergeOptions" />는 유효한 <see cref="T:System.Linq.ParallelMergeOptions" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2233"><paramref name="mergeOptions" /> is not a valid <see cref="T:System.Linq.ParallelMergeOptions" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c65f-2234"><paramref name="WithMergeOptions" />은 쿼리에서 여러 번 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2234"><paramref name="WithMergeOptions" /> is used multiple times in the query.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2235">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2235">Parallel LINQ (PLINQ)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e8f7be3b-88de-4f33-ab14-dc008e76c1ba"><span data-ttu-id="8c65f-2236">PLINQ의 병합 옵션</span><span class="sxs-lookup"><span data-stu-id="8c65f-2236">Merge Options in PLINQ</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0f33b527-e91a-4550-a39a-e63e396fd831"><span data-ttu-id="8c65f-2237">방법: PLINQ에서 병합 옵션 지정</span><span class="sxs-lookup"><span data-stu-id="8c65f-2237">How to: Specify Merge Options in PLINQ</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c65f-2238">지정된 조건자 함수를 사용하여 두 시퀀스를 병렬로 병합합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2238">Merges in parallel two sequences by using the specified predicate function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.ParallelQuery&lt;TFirst&gt; first, System.Collections.Generic.IEnumerable&lt;TSecond&gt; second, Func&lt;TFirst,TSecond,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TFirst&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSecond&gt; second, class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (first As ParallelQuery(Of TFirst), second As IEnumerable(Of TSecond), resultSelector As Func(Of TFirst, TSecond, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Zip(System::Linq::ParallelQuery&lt;TFirst&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSecond&gt; ^ second, Func&lt;TFirst, TSecond, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.ParallelQuery&lt;'First&gt; * seq&lt;'Second&gt; * Func&lt;'First, 'Second, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Zip (first, second, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TFirst,TSecond,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst"><span data-ttu-id="8c65f-2239">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2239">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TSecond"><span data-ttu-id="8c65f-2240">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2240">This type parameter is not used.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-2241">이 형식 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2241">This type parameter is not used.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-2242">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2242">This parameter is not used.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-2243">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2243">This parameter is not used.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-2244">이 매개 변수는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2244">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="8c65f-2245">이 Zip 오버로드는 호출되면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2245">This Zip overload should never be called.</span></span> <span data-ttu-id="8c65f-2246">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2246">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2247">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2247">This overload always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c65f-2248">이 오버 로드가 있으면 왼쪽된 데이터 원본 형식에 있는 Zip의 사용을 허용 하지 않으려면 <xref:System.Linq.ParallelQuery%601> 및 적절 한 데이터 원본 유형의 <xref:System.Collections.Generic.IEnumerable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2248">This overload exists to disallow usage of Zip with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="8c65f-2249">이 고, 그렇지는 Zip 연산자는 병렬 구현에 바인딩할 수 있지만 실제로 순차 구현에 바인딩하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2249">Otherwise, the Zip operator would appear to be bind to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c65f-2250">이 메서드가 호출될 때 발생하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2250">The exception that occurs when this method is called.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="8c65f-2251">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="8c65f-2251">Parallel LINQ (PLINQ)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.ParallelQuery&lt;TFirst&gt; first, System.Linq.ParallelQuery&lt;TSecond&gt; second, Func&lt;TFirst,TSecond,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TFirst&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSecond&gt; second, class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (first As ParallelQuery(Of TFirst), second As ParallelQuery(Of TSecond), resultSelector As Func(Of TFirst, TSecond, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Zip(System::Linq::ParallelQuery&lt;TFirst&gt; ^ first, System::Linq::ParallelQuery&lt;TSecond&gt; ^ second, Func&lt;TFirst, TSecond, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.ParallelQuery&lt;'First&gt; * System.Linq.ParallelQuery&lt;'Second&gt; * Func&lt;'First, 'Second, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Zip (first, second, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TFirst,TSecond,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst"><span data-ttu-id="8c65f-2252">첫 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2252">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TSecond"><span data-ttu-id="8c65f-2253">두 번째 시퀀스 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2253">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="8c65f-2254">반환 요소의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2254">The type of the return elements.</span></span></typeparam>
        <param name="first"><span data-ttu-id="8c65f-2255">zip을 수행할 첫 번째 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2255">The first sequence to zip.</span></span></param>
        <param name="second"><span data-ttu-id="8c65f-2256">zip을 수행할 두 번째 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2256">The second sequence to zip.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="8c65f-2257">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2257">A function to create a result element from two matching elements.</span></span></param>
        <summary><span data-ttu-id="8c65f-2258">지정된 조건자 함수를 사용하여 두 시퀀스를 병렬로 병합합니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2258">Merges in parallel two sequences by using the specified predicate function.</span></span></summary>
        <returns><span data-ttu-id="8c65f-2259">두 시퀀스에 대해 <paramref name="TResult" /> pairwise를 수행하여 가져온 <paramref name="resultSelector" /> 형식 요소가 들어 있는 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2259">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing <paramref name="resultSelector" /> pairwise on two sequences.</span></span> <span data-ttu-id="8c65f-2260">시퀀스 길이가 같지 않으면 짧은 시퀀스 길이에 맞춰 긴 시퀀스를 자릅니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2260">If the sequence lengths are unequal, this truncates to the length of the shorter sequence.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c65f-2261"><paramref name="first" /> 또는 <paramref name="second" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2261"><paramref name="first" /> or <paramref name="second" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="8c65f-2262"><paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2262">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="8c65f-2263">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c65f-2263">One or more exceptions occurred during the evaluation of the query.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>