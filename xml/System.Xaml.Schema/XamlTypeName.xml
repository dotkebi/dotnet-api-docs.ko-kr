<Type Name="XamlTypeName" FullName="System.Xaml.Schema.XamlTypeName">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c641214dcbb6fad5d3670b64d6522978e953b963" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56388018" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeName" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeName extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeName" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeName" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeName" />
  <TypeSignature Language="F#" Value="type XamlTypeName = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{{{Namespace}}}{Name}{TypeArgStringForDebugger}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7dd3e-101">이름 및 네임스페이스로 XAML 형식을 지정하기 위한 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-101">Provides a means to specify a XAML type in terms of name and namespace.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dd3e-102"><xref:System.Xaml.XamlType> XAML 형식 시스템에서 유형 정보 클래스는 반면 <xref:System.Xaml.Schema.XamlTypeName> 형식임을 지정 하는 여러 가지를 제공 하는 데이터 구조에 가깝습니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-102"><xref:System.Xaml.XamlType> is the type information class in the XAML type system, whereas <xref:System.Xaml.Schema.XamlTypeName> is more of a data structure that provides different ways of specifying that type.</span></span> <span data-ttu-id="7dd3e-103"><xref:System.Xaml.Schema.XamlTypeName> 또한 생성에 대 한 정적 도우미 메서드를 제공 된 <xref:System.Xaml.Schema.XamlTypeName> XAML 네임 스페이스에서 기존 형식 식별자를 확인 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-103"><xref:System.Xaml.Schema.XamlTypeName> also provides static helper methods for generating a <xref:System.Xaml.Schema.XamlTypeName> by resolving an existing type identifier in a XAML namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7dd3e-104"><see cref="T:System.Xaml.Schema.XamlTypeName" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-104">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7dd3e-105"><see cref="T:System.Xaml.Schema.XamlTypeName" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-105">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName xamlType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="7dd3e-106">기존 <see cref="T:System.Xaml.XamlType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-106">An existing <see cref="T:System.Xaml.XamlType" />.</span></span></param>
        <summary><span data-ttu-id="7dd3e-107">기존 <see cref="T:System.Xaml.Schema.XamlTypeName" />을 기반으로 <see cref="T:System.Xaml.XamlType" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-107">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on an existing <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7dd3e-108"><paramref name="xamlType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7dd3e-108"><paramref name="xamlType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : string * string -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="7dd3e-109">name이 들어 있는 XAML 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-109">The XAML namespace that contains name.</span></span></param>
        <param name="name"><span data-ttu-id="7dd3e-110"><see cref="T:System.Xaml.Schema.XamlTypeName" />을 만들 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-110">The name of the type to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> for.</span></span></param>
        <summary><span data-ttu-id="7dd3e-111">이름과 네임스페이스 문자열을 기반으로 <see cref="T:System.Xaml.Schema.XamlTypeName" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on name and namespace strings.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (string xamlNamespace, string name, System.Collections.Generic.IEnumerable&lt;System.Xaml.Schema.XamlTypeName&gt; typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Schema.XamlTypeName&gt; typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String, typeArguments As IEnumerable(Of XamlTypeName))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::String ^ xamlNamespace, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : string * string * seq&lt;System.Xaml.Schema.XamlTypeName&gt; -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName (xamlNamespace, name, typeArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Schema.XamlTypeName&gt;" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="7dd3e-112"><paramref name="name" />이 들어 있는 XAML 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-112">The XAML namespace that contains <paramref name="name" />.</span></span></param>
        <param name="name"><span data-ttu-id="7dd3e-113"><see cref="T:System.Xaml.Schema.XamlTypeName" />을 만들 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-113">The name of the type to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> for.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="7dd3e-114">각각 <see cref="T:System.Xaml.Schema.XamlTypeName" />을 나타내는 형식 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-114">An array of type arguments, each of which must be a <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span></span></param>
        <summary><span data-ttu-id="7dd3e-115">이름과 네임스페이스 문자열 및 형식 인수 배열을 기반으로 <see cref="T:System.Xaml.Schema.XamlTypeName" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-115">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on name and namespace strings as well as an array of type arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dd3e-116">이 제네릭 형식 및 해당 형식에 대 한 형식 인수를 지정 하는 경우 사용할 서명입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-116">This is the signature to use if you are specifying a generic type and type arguments for that type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xaml.Schema.XamlTypeName.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dd3e-117">이 <see cref="T:System.Xaml.Schema.XamlTypeName" />을 생성하는 데 사용된 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-117">Gets the name used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span></span></summary>
        <value><span data-ttu-id="7dd3e-118">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-118">The name of the type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dd3e-119">경우는 <xref:System.Xaml.XamlType> 이 생성 하는 데 사용 된 <xref:System.Xaml.Schema.XamlTypeName>을 값 <xref:System.Xaml.Schema.XamlTypeName.Name%2A> 는 <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-119">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.Name%2A> is <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xaml.Schema.XamlTypeName.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dd3e-120">이 <see cref="T:System.Xaml.Schema.XamlTypeName" />을 생성하는 데 사용된 XAML 네임스페이스 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-120">Gets the XAML namespace identifier used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span></span></summary>
        <value><span data-ttu-id="7dd3e-121">XAML 네임스페이스 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-121">The XAML namespace identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dd3e-122">경우는 <xref:System.Xaml.XamlType> 이 생성 하는 데 사용 된 <xref:System.Xaml.Schema.XamlTypeName>을 값 <xref:System.Xaml.Schema.XamlTypeName.Namespace%2A> 는 `xamlType.GetXamlNamespaces()[0]`합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-122">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.Namespace%2A> is `xamlType.GetXamlNamespaces()[0]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeName Parse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Schema.XamlTypeName Parse(string typeName, class System.Xaml.IXamlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (typeName As String, namespaceResolver As IXamlNamespaceResolver) As XamlTypeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::Schema::XamlTypeName ^ Parse(System::String ^ typeName, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Xaml.IXamlNamespaceResolver -&gt; System.Xaml.Schema.XamlTypeName" Usage="System.Xaml.Schema.XamlTypeName.Parse (typeName, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="7dd3e-123"><see cref="T:System.Xaml.Schema.XamlTypeName" /> 값을 만들 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-123">The type name to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value for.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="7dd3e-124"><see cref="T:System.Xaml.IXamlNamespaceResolver" />를 구현하는 개체 또는 서비스 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-124">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span></span></param>
        <summary><span data-ttu-id="7dd3e-125">태그 접두사를 네임스페이스로 확인할 수 있는 형식 이름 및 개체를 기반으로 <see cref="T:System.Xaml.Schema.XamlTypeName" /> 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-125">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a type name and an object that can resolve a markup prefix into a namespace.</span></span></summary>
        <returns><span data-ttu-id="7dd3e-126">만든 <see cref="T:System.Xaml.Schema.XamlTypeName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-126">The created <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7dd3e-127"><paramref name="typeName" /> 또는 <paramref name="namespaceResolver" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7dd3e-127"><paramref name="typeName" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7dd3e-128">문자열을 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-128">String cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseList">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; ParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; ParseList(string typeNameList, class System.Xaml.IXamlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseList (typeNameList As String, namespaceResolver As IXamlNamespaceResolver) As IList(Of XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ ParseList(System::String ^ typeNameList, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="static member ParseList : string * System.Xaml.IXamlNamespaceResolver -&gt; System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" Usage="System.Xaml.Schema.XamlTypeName.ParseList (typeNameList, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="typeNameList"><span data-ttu-id="7dd3e-129">여러 형식이 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-129">A string that contains multiple types.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="7dd3e-130"><see cref="T:System.Xaml.IXamlNamespaceResolver" />를 구현하는 개체 또는 서비스 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-130">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span></span></param>
        <summary><span data-ttu-id="7dd3e-131">태그 접두사를 네임스페이스로 확인할 수 있는 개체 및 여러 형식 이름을 지정할 수 있는 문자열을 기반으로 <see cref="T:System.Xaml.Schema.XamlTypeName" /> 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-131">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</span></span></summary>
        <returns><span data-ttu-id="7dd3e-132">만든 <see cref="T:System.Xaml.Schema.XamlTypeName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-132">The created <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dd3e-133">다음은 중첩된 된 형식 이름 또는 여러 형식 이름을 구문 분석 메서드에서이 사용 하도록 설정 하는 의사 BNF입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-133">The following is quasi-BNF for the nested type name or multiple type name parsing enabled by this method:</span></span>  
  
```  
NestedTypeName = Name | Name '+' NestedTypeName  
TypeName = NestedTypeName | NestedTypeName ‘[]’  
XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs  
TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’  
XamlTypeNameList = XamlTypeName XamlTypeNameList1  
XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7dd3e-134"><paramref name="typeNameList" /> 또는 <paramref name="namespaceResolver" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7dd3e-134"><paramref name="typeNameList" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7dd3e-135">문자열을 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-135">String cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7dd3e-136">이 <see cref="T:System.Xaml.Schema.XamlTypeName" />의 값을 해당하는 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-136">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlTypeName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7dd3e-137">이 <see cref="T:System.Xaml.Schema.XamlTypeName" />의 값을 해당하는 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-137">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="7dd3e-138">이 <see cref="T:System.Xaml.Schema.XamlTypeName" />의 해당하는 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-138">The equivalent string representation of this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dd3e-139">이 시그니처를 호출할 때와 동일한 <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>전달 `null` 에 대 한 `prefixLookup`합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-139">This signature is equivalent to calling <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, passing `null` for `prefixLookup`.</span></span> <span data-ttu-id="7dd3e-140">s</span><span class="sxs-lookup"><span data-stu-id="7dd3e-140">s</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (System.Xaml.INamespacePrefixLookup prefixLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.Xaml.INamespacePrefixLookup prefixLookup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (prefixLookup As INamespacePrefixLookup) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::Xaml::INamespacePrefixLookup ^ prefixLookup);" />
      <MemberSignature Language="F#" Value="override this.ToString : System.Xaml.INamespacePrefixLookup -&gt; string" Usage="xamlTypeName.ToString prefixLookup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefixLookup" Type="System.Xaml.INamespacePrefixLookup" />
      </Parameters>
      <Docs>
        <param name="prefixLookup"><span data-ttu-id="7dd3e-141">접두사 조회를 위한 서비스 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-141">A service reference for prefix lookup.</span></span></param>
        <summary><span data-ttu-id="7dd3e-142">이 <see cref="T:System.Xaml.Schema.XamlTypeName" />의 값을 해당하는 문자열 표현으로 변환합니다. 이 문자열 표현은 형식의 개체 요소 사용을 위한 태그 구문에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-142">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.</span></span></summary>
        <returns><span data-ttu-id="7dd3e-143">접두사가 있는 사용 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-143">A prefixed usage string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7dd3e-144">이 <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />에 대한 <see cref="T:System.Xaml.Schema.XamlTypeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7dd3e-144"><see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> for this <see cref="T:System.Xaml.Schema.XamlTypeName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7dd3e-145">또는</span><span class="sxs-lookup"><span data-stu-id="7dd3e-145">-or-</span></span> 
 <span data-ttu-id="7dd3e-146"><see cref="P:System.Xaml.Schema.XamlTypeName.Name" />가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="7dd3e-146"><see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> is not valid.</span></span>  
  
<span data-ttu-id="7dd3e-147">또는</span><span class="sxs-lookup"><span data-stu-id="7dd3e-147">-or-</span></span> 
<span data-ttu-id="7dd3e-148">접두사를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-148">Could not look up the prefix.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; typeNameList, System.Xaml.INamespacePrefixLookup prefixLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; typeNameList, class System.Xaml.INamespacePrefixLookup prefixLookup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (typeNameList As IList(Of XamlTypeName), prefixLookup As INamespacePrefixLookup) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ typeNameList, System::Xaml::INamespacePrefixLookup ^ prefixLookup);" />
      <MemberSignature Language="F#" Value="static member ToString : System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; * System.Xaml.INamespacePrefixLookup -&gt; string" Usage="System.Xaml.Schema.XamlTypeName.ToString (typeNameList, prefixLookup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" />
        <Parameter Name="prefixLookup" Type="System.Xaml.INamespacePrefixLookup" />
      </Parameters>
      <Docs>
        <param name="typeNameList"><span data-ttu-id="7dd3e-149">형식 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-149">A list of types.</span></span></param>
        <param name="prefixLookup"><span data-ttu-id="7dd3e-150">접두사 조회를 위한 서비스 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-150">A service reference for prefix lookup.</span></span></param>
        <summary><span data-ttu-id="7dd3e-151">이 <see cref="T:System.Xaml.Schema.XamlTypeName" />의 값을 해당하는 문자열 표현으로 변환합니다. 이 문자열 표현은 여러 형식의 개체 요소 사용을 위한 태그 구문에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-151">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.</span></span></summary>
        <returns><span data-ttu-id="7dd3e-152">모든 형식 결과의 연결된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-152">A concatenated string of all type results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7dd3e-153"><paramref name="prefixLookup" /> 또는 <paramref name="typeNameList" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7dd3e-153"><paramref name="prefixLookup" /> or <paramref name="typeNameList" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Xaml.Schema.XamlTypeName result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string typeName, class System.Xaml.IXamlNamespaceResolver namespaceResolver, [out] class System.Xaml.Schema.XamlTypeName&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (typeName As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As XamlTypeName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ typeName, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver, [Runtime::InteropServices::Out] System::Xaml::Schema::XamlTypeName ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Xaml.IXamlNamespaceResolver *  -&gt; bool" Usage="System.Xaml.Schema.XamlTypeName.TryParse (typeName, namespaceResolver, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
        <Parameter Name="result" Type="System.Xaml.Schema.XamlTypeName" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="7dd3e-154"><see cref="T:System.Xaml.Schema.XamlTypeName" /> 값을 만들 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-154">The type name to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value for.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="7dd3e-155"><see cref="T:System.Xaml.IXamlNamespaceResolver" />를 구현하는 개체 또는 서비스 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-155">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span></span></param>
        <param name="result"><span data-ttu-id="7dd3e-156">반환 값이 <see langword="true" />이면 만든 <see cref="T:System.Xaml.Schema.XamlTypeName" />을 포함하는 out 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-156">Out parameter that contains the created <see cref="T:System.Xaml.Schema.XamlTypeName" /> if the return value is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="7dd3e-157">태그 접두사를 네임스페이스로 확인할 수 있는 형식 이름 및 개체를 기반으로 <see cref="T:System.Xaml.Schema.XamlTypeName" /> 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-157">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a type name and an object that can resolve a markup prefix into a namespace.</span></span></summary>
        <returns><span data-ttu-id="7dd3e-158">구문 분석 작업에 성공하고 <paramref name="result" />에 유용한 값이 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-158"><see langword="true" /> if the parse was successful and <paramref name="result" /> contains a useful value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7dd3e-159"><paramref name="typeName" /> 또는 <paramref name="namespaceResolver" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7dd3e-159"><paramref name="typeName" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseList">
      <MemberSignature Language="C#" Value="public static bool TryParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseList(string typeNameList, class System.Xaml.IXamlNamespaceResolver namespaceResolver, [out] class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt;&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseList (typeNameList As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As IList(Of XamlTypeName)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseList(System::String ^ typeNameList, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParseList : string * System.Xaml.IXamlNamespaceResolver *  -&gt; bool" Usage="System.Xaml.Schema.XamlTypeName.TryParseList (typeNameList, namespaceResolver, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
        <Parameter Name="result" Type="System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeNameList"><span data-ttu-id="7dd3e-160">여러 형식이 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-160">A string that contains multiple types.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="7dd3e-161"><see cref="T:System.Xaml.IXamlNamespaceResolver" />를 구현하는 개체 또는 서비스 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-161">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span></span></param>
        <param name="result"><span data-ttu-id="7dd3e-162">반환 값이 <see langword="true" />이면 만든 <see cref="T:System.Xaml.Schema.XamlTypeName" />을 포함하는 out 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-162">Out parameter that contains the created <see cref="T:System.Xaml.Schema.XamlTypeName" /> if the return value is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="7dd3e-163">태그 접두사를 네임스페이스로 확인할 수 있는 개체 및 여러 형식 이름을 지정할 수 있는 문자열을 기반으로 <see cref="T:System.Xaml.Schema.XamlTypeName" /> 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-163">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</span></span></summary>
        <returns><span data-ttu-id="7dd3e-164">구문 분석 작업에 성공하고 <paramref name="result" />에 유용한 값이 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-164"><see langword="true" /> if the parse was successful and <paramref name="result" /> contains a useful value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7dd3e-165"><paramref name="typeNameList" /> 또는 <paramref name="namespaceResolver" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7dd3e-165"><paramref name="typeNameList" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" Usage="System.Xaml.Schema.XamlTypeName.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7dd3e-166">이 <see cref="T:System.Xaml.Schema.XamlTypeName" />을 생성하는 데 사용되는 형식 인수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-166">Gets the type arguments used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span></span></summary>
        <value><span data-ttu-id="7dd3e-167">형식 인수입니다(있을 경우).</span><span class="sxs-lookup"><span data-stu-id="7dd3e-167">The type arguments, if any.</span></span> <span data-ttu-id="7dd3e-168">null일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-168">May be null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7dd3e-169">경우는 <xref:System.Xaml.XamlType> 이 생성 하는 데 사용 된 <xref:System.Xaml.Schema.XamlTypeName>을 값 <xref:System.Xaml.Schema.XamlTypeName.TypeArguments%2A> 에서 형성 됩니다 <xref:System.Xaml.XamlType.TypeArguments%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="7dd3e-169">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.TypeArguments%2A> is formed from <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>