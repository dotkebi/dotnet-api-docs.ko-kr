<Type Name="SqlMethodAttribute" FullName="Microsoft.SqlServer.Server.SqlMethodAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f69ab7af01f1cc532c91cbda120a63b8b35196d" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56767008" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlMethodAttribute extends Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlMethodAttribute&#xA;Inherits SqlFunctionAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMethodAttribute sealed : Microsoft::SqlServer::Server::SqlFunctionAttribute" />
  <TypeSignature Language="F#" Value="type SqlMethodAttribute = class&#xA;    inherit SqlFunctionAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Server.SqlFunctionAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-2.2;netcore-3.0;dotnet-plat-ext-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="009fc-101">UDT(사용자 정의 형식)에 대한 메서드나 속성의 명확성과 데이터 액세스 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-101">Indicates the determinism and data access properties of a method or property on a user-defined type (UDT).</span></span> <span data-ttu-id="009fc-102">특성의 속성은 SQL Server에 형식을 등록할 때 사용되는 실제 특성을 반영합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-102">The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009fc-103">속성의 경우는 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> setter 또는 getter에서 직접 사용할 수는 있습니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-103">For a property, the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> should be used on the setter or the getter directly.</span></span>  
  
 <span data-ttu-id="009fc-104"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 상속 되는 <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>이므로 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 상속 합니다 `FillRowMethodName` 및 `TableDefinition` 필드에서 <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-104"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits from a <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, so <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits the `FillRowMethodName` and `TableDefinition` fields from <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>.</span></span> <span data-ttu-id="009fc-105">수 없는 테이블 반환 메서드를 작성 하려면 이러한 필드의 이름이 될 수 있다는 하도록 제안할 수 있지만 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-105">Note that it is not possible to write a table-valued method, although the names of these fields might suggest that it is possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="009fc-106">다음 예제는 메서드가 호출 되지 것입니다 형식의 null 인스턴스에서 메서드 형식의 상태를 변경 되지 것입니다 하 고는 메서드가 호출 되지 것입니다 때를 나타내는 특성을 사용 하는 UDT 메서드를 보여 줍니다. `null` 매개 변수는 메서드 호출에 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-106">The following example shows a UDT method that is attributed to indicate that the method will not be invoked on null instances of the type, that the method will not change the state of the type, and that the method will not be called when `null` parameters are supplied to the method invocation.</span></span>  
  
 [!code-csharp[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="009fc-107">UDT(사용자 정의 형식)의 특성으로, UDT에 대한 메서드나 속성의 명확성과 데이터 액세스 속성을 나타내는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-107">An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIfReceiverIsNull">
      <MemberSignature Language="C#" Value="public bool InvokeIfReceiverIsNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeIfReceiverIsNull" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberSignature Language="VB.NET" Value="Public Property InvokeIfReceiverIsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeIfReceiverIsNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InvokeIfReceiverIsNull : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009fc-108">SQL Server가 null 인스턴스에서 이 메서드를 호출해야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-108">Indicates whether SQL Server should invoke the method on null instances.</span></span></summary>
        <value><span data-ttu-id="009fc-109">SQL Server가 null 인스턴스에서 이 메서드를 호출해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-109"><see langword="true" /> if SQL Server should invoke the method on null instances; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="009fc-110">메서드 수 없는 경우 SQL Server (때문에 대 한 특성 메서드), 호출 <see langword="DbNull" /> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-110">If the method cannot be invoked (because of an attribute on the method), the SQL Server <see langword="DbNull" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009fc-111">기본값은 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-111">The default value for the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="009fc-112">즉, 메서드는 null 인스턴스에서 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-112">That is, the method is not invoked on a null instance.</span></span> <span data-ttu-id="009fc-113">경우 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> 가 true 이면 메서드의 반환 값은 해당 형식에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-113">If <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> is true, the return value of the method depends upon its type.</span></span> <span data-ttu-id="009fc-114">메서드의 반환 형식이 nullable 인 경우 형식에 대 한 고유 null 값이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-114">If the return type of the method is nullable, the distinguished null value for the type is returned.</span></span> <span data-ttu-id="009fc-115">반환 형식이 nullable이 아닌 경우에 기본 CLR 값 형식에 대해 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-115">If the return type is non-nullable, the default CLR value for the type is returned.</span></span> <span data-ttu-id="009fc-116">참조 형식에 대 한 기본값은 null입니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-116">The default value for reference types is null.</span></span> <span data-ttu-id="009fc-117">값 형식에 대 한 기본값은 형식에 대 한 기본 생성자를 호출할 때 반환 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-117">The default value for a value type is the value that is  returned when you call the default constructor for the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutator">
      <MemberSignature Language="C#" Value="public bool IsMutator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMutator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMutator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMutator : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009fc-118">UDT(사용자 정의 형식)에 대한 메서드가 변경자(mutator)인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-118">Indicates whether a method on a user-defined type (UDT) is a mutator.</span></span></summary>
        <value><span data-ttu-id="009fc-119">메서드가 변경자(mutator)이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-119"><see langword="true" /> if the method is a mutator; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009fc-120">경우는 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> 속성이 `true` 메서드의 반환 형식은 및 `void`, SQL Server 메서드를 변경자 (mutator)로 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-120">If the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is set to `true` and the return type of the method is `void`, SQL Server marks the method as a mutator.</span></span> <span data-ttu-id="009fc-121">변경자 (mutator) 메서드는 UDT 인스턴스의 상태 변경을 유발 하는.</span><span class="sxs-lookup"><span data-stu-id="009fc-121">A mutator method is one that causes a state change in the UDT instance.</span></span> <span data-ttu-id="009fc-122">변경자 (mutator) 메서드는 대입문 이나 데이터 수정 문에서 호출할 수 있지만 쿼리에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-122">Mutator methods can be called in assignment statements or data modification statements, but cannot be used in queries.</span></span> <span data-ttu-id="009fc-123">메서드를 변경자 (mutator)로 표시 되어 있지만 void를 반환 하지 않습니다, 경우 CREATE TYPE 오류로 실패 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-123">If a method is marked as a mutator but does not return void, then CREATE TYPE does not fail with an error.</span></span> <span data-ttu-id="009fc-124">반환 된 값 이외의 경우에 `void` 않습니다 오류가 반환 되는 값을 생성 하지에 액세스할 수 없고 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-124">Even though a returned value other than `void` does not raise an error, the returned value is not accessible and cannot be used.</span></span>  
  
 <span data-ttu-id="009fc-125">기본값은 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-125">The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="009fc-126">속성 경우는 변경자 (mutator) 될 수 있습니다 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> setter에 사용 되 고 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> 로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-126">A property can be a mutator if <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> is used on the setter and <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> is set to `true`.</span></span> <span data-ttu-id="009fc-127">그러나 속성 setter 암시적으로 처리 됩니다는 변경자 (mutator)로 설정 하는 데 필요한 이므로 합니다 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> 의 속성을 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 에 `true`.</span><span class="sxs-lookup"><span data-stu-id="009fc-127">However, a property setter is implicitly treated as a mutator, so it is not necessary to set the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNullCall">
      <MemberSignature Language="C#" Value="public bool OnNullCall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OnNullCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberSignature Language="VB.NET" Value="Public Property OnNullCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OnNullCall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OnNullCall : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009fc-128">메서드 호출에 <see langword="null" /> 입력 인수가 지정될 때 UDT(사용자 정의 형식)의 메서드가 호출되는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-128">Indicates whether the method on a user-defined type (UDT) is called when <see langword="null" /> input arguments are specified in the method invocation.</span></span></summary>
        <value><span data-ttu-id="009fc-129">메서드 호출에 <see langword="null" /> 입력 인수가 지정될 때 메서드가 호출되면 <see langword="true" />이고, 입력 매개 변수 중 하나라도 <see langword="null" />일 때 메서드가 <see langword="null" />을 반환하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-129"><see langword="true" /> if the method is called when <see langword="null" /> input arguments are specified in the method invocation; <see langword="false" /> if the method returns a <see langword="null" /> value when any of its input parameters are <see langword="null" />.</span></span> <span data-ttu-id="009fc-130">메서드 수 없는 경우 SQL Server (때문에 대 한 특성 메서드), 호출 <see langword="DbNull" /> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-130">If the method cannot be invoked (because of an attribute on the method), the SQL Server <see langword="DbNull" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009fc-131">기본값은 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="009fc-131">The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>