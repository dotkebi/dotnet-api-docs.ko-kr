<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="640131de75757fd636d6da66aca208fa22acbbc2" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56384547" /></Metadata><TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <TypeSignature Language="F#" Value="type PropertyValueUIItemInvokeHandler = delegate of ITypeDescriptorContext * PropertyDescriptor * PropertyValueUIItem -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context"><span data-ttu-id="4d7ab-101">두 번 클릭한 아이콘과 연결된 속성의 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-101">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the property associated with the icon that was double-clicked.</span></span></param>
    <param name="descriptor"><span data-ttu-id="4d7ab-102">두 번 클릭한 아이콘과 연결된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-102">The property associated with the icon that was double-clicked.</span></span></param>
    <param name="invokedItem"><span data-ttu-id="4d7ab-103">두 번 클릭한 아이콘과 연결된 <see cref="T:System.Drawing.Design.PropertyValueUIItem" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-103">The <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associated with the icon that was double-clicked.</span></span></param>
    <summary><span data-ttu-id="4d7ab-104"><see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" />의 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 이벤트를 처리할 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-104">Represents the method that will handle the <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> event of a <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d7ab-105">속성 창에서 아이콘을 두 번 클릭 하면 발생 합니다는 <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> 이벤트를는 <xref:System.Drawing.Design.PropertyValueUIItem> 아이콘을 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-105">Double-clicking an icon in the Properties window will raise the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event of the <xref:System.Drawing.Design.PropertyValueUIItem> that the icon is associated with.</span></span> <span data-ttu-id="4d7ab-106"><xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> 이벤트는 일반적으로 사용자 인터페이스 (UI) 속성의 값을 편집을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-106">The <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event typically launches a user interface (UI) to edit the property's value.</span></span> <span data-ttu-id="4d7ab-107">추가 <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> 에 <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> 의 속성을 <xref:System.Drawing.Design.PropertyValueUIItem> 속성 이름 옆에 표시 되는 아이콘을 두 번 클릭할 때 적절 한 동작을 수행 하는 이벤트 처리기를 할당 하려면.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-107">Add a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> to the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> property of a <xref:System.Drawing.Design.PropertyValueUIItem> to assign an event handler to perform the appropriate behavior when the icon displayed next to the property name is double-clicked.</span></span>  
  
 <span data-ttu-id="4d7ab-108"><xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-108">When you create a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="4d7ab-109">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-109">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="4d7ab-110">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-110">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="4d7ab-111">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-111">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d7ab-112">다음 코드 예제를 제공 된 <xref:System.Drawing.Design.PropertyValueUIItem> 라는 구성 요소의 속성에 대 한 개체 `HorizontalMargin` 또는 `VerticalMargin`합니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-112">The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="4d7ab-113"><xref:System.Drawing.Design.PropertyValueUIItem> 이러한 속성은 이미지, 도구 설명 및 속성에 대 한 이미지를 클릭 하면 메시지 상자를 표시 하는 이벤트 처리기를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-113">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="4d7ab-114">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Drawing.Design.IPropertyValueUIService> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4d7ab-114">This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>