<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a45240552209dee7f7b450f27f7e0df2f32fb29" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58460502" /></Metadata><TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="3b26c-101">리소스 풀에 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-101">The type of the objects that are in the resource pool.</span></span></typeparam>
    <summary><span data-ttu-id="3b26c-102"><see cref="T:T[]" /> 형식의 인스턴스를 재사용할 수 있는 리소스 풀을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-102">Provides a resource pool that enables reusing instances of type <see cref="T:T[]" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="3b26c-103">사용 하 여는 <xref:System.Buffers.ArrayPool%601> 대여할 버퍼를 반환 하는 클래스 (사용 하 여 합니다 <xref:System.Buffers.ArrayPool%601.Rent%2A> 및 <xref:System.Buffers.ArrayPool%601.Return%2A> 메서드) 배열 생성 되 고 자주 제거 상황에서 성능을 향상 시킬 수 있습니다, 가비지에 중요 한 메모리 압력의 결과 수집기입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-103">Using the <xref:System.Buffers.ArrayPool%601> class to rent and return buffers (using the <xref:System.Buffers.ArrayPool%601.Rent%2A> and <xref:System.Buffers.ArrayPool%601.Return%2A> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</span></span>
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="3b26c-104">이 클래스는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-104">This class is thread-safe.</span></span> <span data-ttu-id="3b26c-105">모든 멤버가 여러 스레드에서 동시에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-105">All members may be used by multiple threads concurrently.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3b26c-106"><see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-106">Initializes a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="3b26c-107">이 생성자를 하 게 보호; 참고 파생 된 클래스 에서만 호출할 수는 <xref:System.Buffers.ArrayPool%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-107">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Buffers.ArrayPool%601> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3b26c-108"><see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-108">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <returns><span data-ttu-id="3b26c-109"><see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-109">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength"><span data-ttu-id="3b26c-110">풀에 저장될 수 있는 배열 인스턴스의 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-110">The maximum length of an array instance that may be stored in the pool.</span></span></param>
        <param name="maxArraysPerBucket"><span data-ttu-id="3b26c-111">풀에 있는 각 버킷에 저장될 수 있는 배열 인스턴스의 최대수입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-111">The maximum number of array instances that may be stored in each bucket in the pool.</span></span> <span data-ttu-id="3b26c-112">풀은 빠른 액세스를 위해 비슷한 길이의 배열을 버킷에 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-112">The pool groups arrays of similar lengths into buckets for faster access.</span></span></param>
        <summary><span data-ttu-id="3b26c-113">지정된 구성을 사용하여 <see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-113">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class using the specified configuration.</span></span></summary>
        <returns><span data-ttu-id="3b26c-114">지정된 구성을 사용하여 <see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-114">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class with the specified configuration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="3b26c-115">인스턴스의 합니다 <xref:System.Buffers.ArrayPool%601> 이 메서드에 의해 생성 된 클래스를 사용 하 여 버킷으로 배열을 그룹화 하는 둘 `maxArraysPerBucket` 초과 하지 않는 해당 배열 및 각 버킷에 `maxArrayLength` 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-115">The instance of the <xref:System.Buffers.ArrayPool%601> class created by this method will group arrays into buckets, with no more than `maxArraysPerBucket` in each bucket, and with those arrays not exceeding `maxArrayLength` in length.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="minimumLength"><span data-ttu-id="3b26c-116">배열의 최소 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-116">The minimum length of the array.</span></span></param>
        <summary><span data-ttu-id="3b26c-117">요청된 길이 이상의 버퍼를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-117">Retrieves a buffer that is at least the requested length.</span></span></summary>
        <returns><span data-ttu-id="3b26c-118">길이가 <paramref name="minimumLength" /> 이상인 <see cref="T:T[]" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-118">An array of type <see cref="T:T[]" /> that is at least <paramref name="minimumLength" /> in length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3b26c-119">이 버퍼는 호출자에 게 대 여 및 사용 하 여 동일한 풀에 반환 되어야 하는 <xref:System.Buffers.ArrayPool%601.Return%2A> 메서드를 해당 it에 대 한 후속 호출에서 다시 사용할 수 있도록는 <xref:System.Buffers.ArrayPool%601.Rent%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b26c-119">This buffer is loaned to the caller and should be returned to the same pool using the <xref:System.Buffers.ArrayPool%601.Return%2A> method, so that it can be reused in subsequent calls to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method.</span></span> <span data-ttu-id="3b26c-120">임대 버퍼를 반환 하지 않으면 오류가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-120">Failure to return a rented buffer is not a fatal error.</span></span> <span data-ttu-id="3b26c-121">그러나 풀 수 손실 대체 하기 위해 새 버퍼를 만들 필요가 감소 응용 프로그램 성능에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-121">However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="clearArray" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="3b26c-122"><see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 메서드를 사용하여 이전에 가져온 풀에 반환할 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-122">A buffer to return to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method.</span></span></param>
        <param name="clearArray"><span data-ttu-id="3b26c-123">버퍼의 내용을 다시 사용하기 전에 지워야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-123">Indicates whether the contents of the buffer should be cleared before reuse.</span></span> <span data-ttu-id="3b26c-124"><paramref name="clearArray" />가 <see langword="true" />로 설정된 경우 및 풀이 이후 다시 사용할 수 있도록 버퍼를 저장하는 경우 <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> 메서드는 해당 콘텐츠의 <paramref name="array" />를 지웁니다. <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 메서드를 사용하는 후속 호출자는 이전 호출자의 콘텐츠를 표시하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-124">If <paramref name="clearArray" /> is set to <see langword="true" />, and if the pool will store the buffer to enable subsequent reuse, the <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> method will clear the <paramref name="array" /> of its contents so that a subsequent caller using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method will not see the content of the previous caller.</span></span> <span data-ttu-id="3b26c-125"><paramref name="clearArray" />가 <see langword="false" />로 설정되는 경우 또는 풀이 버퍼를 해제하는 경우 배열의 내용은 변경되지 않고 남겨집니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-125">If <paramref name="clearArray" /> is set to <see langword="false" /> or if the pool will release the buffer, the array's contents are left unchanged.</span></span></param>
        <summary><span data-ttu-id="3b26c-126">동일한 <see cref="T:System.Buffers.ArrayPool`1" /> 인스턴스에서 <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 메서드를 사용하여 이전에 가져온 풀에 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-126">Returns an array to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method on the same <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3b26c-127">버퍼 풀에 반환 되 면 호출자에 게 버퍼의 모든 소유권을 포기 하 고 사용 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-127">Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</span></span> <span data-ttu-id="3b26c-128">지정 된 호출에서 반환 된 참조를 <xref:System.Buffers.ArrayPool%601.Rent%2A> 사용 하 여 메서드 반환만 해야 합니다는 <xref:System.Buffers.ArrayPool%601.Return%2A> 메서드를 한 번.</span><span class="sxs-lookup"><span data-stu-id="3b26c-128">The reference returned from a given call to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method must only be returned using the <xref:System.Buffers.ArrayPool%601.Return%2A> method once.</span></span> <span data-ttu-id="3b26c-129">기본 <xref:System.Buffers.ArrayPool%601> 하거나 다시 풀에 이미 저장 된 버퍼 있다고 판단 되 면 반환 된 버퍼를 해제할 수 있습니다 임대 하기 위해 반환 된 버퍼를 보유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-129">The default <xref:System.Buffers.ArrayPool%601> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b26c-130">공유 <see cref="T:System.Buffers.ArrayPool`1" /> 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-130">Gets a shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <value><span data-ttu-id="3b26c-131">공유 <see cref="T:System.Buffers.ArrayPool`1" /> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="3b26c-131">A shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3b26c-132">공유 풀의 기본 구현을 제공 합니다 <xref:System.Buffers.ArrayPool%601> 클래스 일반 적용 가능성을 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-132">The shared pool provides a default implementation of the <xref:System.Buffers.ArrayPool%601> class that's intended for general applicability.</span></span> <span data-ttu-id="3b26c-133">공유 클래스 배열을 다양 한 크기를 유지 관리 하 고 실제로 요청 된 것 보다 더 큰 배열을 제공할 수 있습니다 하지만 해당 되지 전달 다시 요청 된 것 보다 더 작은 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-133">A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</span></span> <span data-ttu-id="3b26c-134">사용 하 여 공유 클래스에서 버퍼를 임대 합니다 <xref:System.Buffers.ArrayPool%601.Rent%2A> 메서드 적절 한 버퍼를 사용할 수 없거나 새 버퍼의 경우 할당 되 고 사용할 수 없는 경우 풀에서 제거 되 고 기존 버퍼를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b26c-134">Renting a buffer from a shared class using the <xref:System.Buffers.ArrayPool%601.Rent%2A> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>