<Type Name="IBufferWriter&lt;T&gt;" FullName="System.Buffers.IBufferWriter&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="252b1dee3638a541d810d3dd33e85217543072a1" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58460537" /></Metadata><TypeSignature Language="C#" Value="public interface IBufferWriter&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBufferWriter`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.IBufferWriter`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBufferWriter(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IBufferWriter" />
  <TypeSignature Language="F#" Value="type IBufferWriter&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="62e5c-101">에 있는 항목의 종류는 <see cref="T:System.Buffers.IBufferWriter`1" />합니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-101">The type of the items in the <see cref="T:System.Buffers.IBufferWriter`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="62e5c-102"><typeparamref name="T" /> 데이터를 쓸 수 있는 출력 싱크를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-102">Represents an output sink into which <typeparamref name="T" /> data can be written.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public void Advance (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advance(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.Advance(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advance (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Advance(int count);" />
      <MemberSignature Language="F#" Value="abstract member Advance : int -&gt; unit" Usage="iBufferWriter.Advance count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="62e5c-103"><see cref="T:System.Span`1" /> 또는 <see cref="T:System.Memory`1" />에 작성된 데이터 항목의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-103">The number of data items written to the <see cref="T:System.Span`1" /> or <see cref="T:System.Memory`1" />.</span></span></param>
        <summary><span data-ttu-id="62e5c-104"><paramref name="count" /> 데이터 항목이 <see cref="T:System.Span`1" /> 또는 <see cref="T:System.Memory`1" /> 출력에 작성되었음을 <see cref="T:System.Buffers.IBufferWriter`1" />에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-104">Notifies the <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> data items were written to the output <see cref="T:System.Span`1" /> or <see cref="T:System.Memory`1" />.</span></span></summary>
        <remarks><span data-ttu-id="62e5c-105">자세한 데이터를 작성 하려면 고급을 호출한 후 새 버퍼를 요청 해야 합니다. 이전에 가져온된 버퍼에 쓸 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-105">You must request a new buffer after calling Advance to continue writing more data; you cannot write to a previously acquired buffer.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemory">
      <MemberSignature Language="C#" Value="public Memory&lt;T&gt; GetMemory (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Memory`1&lt;!T&gt; GetMemory(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.GetMemory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemory (Optional sizeHint As Integer = 0) As Memory(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetMemory : int -&gt; Memory&lt;'T&gt;" Usage="iBufferWriter.GetMemory sizeHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="sizeHint"><span data-ttu-id="62e5c-106">반환되는 <see cref="T:System.Memory`1" />의 최소 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-106">The minimum length of the returned <see cref="T:System.Memory`1" />.</span></span> <span data-ttu-id="62e5c-107">0인 경우 비어 있지 않은 버퍼가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-107">If 0, a non-empty buffer is returned.</span></span></param>
        <summary><span data-ttu-id="62e5c-108">요청된 크기(<paramref name="sizeHint" />로 지정됨) 이상인 작성할 <see cref="T:System.Memory`1" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-108">Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested size (specified by <paramref name="sizeHint" />).</span></span></summary>
        <returns><span data-ttu-id="62e5c-109">크기가 <paramref name="sizeHint" /> 이상인 <see cref="T:System.Memory`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-109">A <see cref="T:System.Memory`1" /> of at least the size <paramref name="sizeHint" />.</span></span> <span data-ttu-id="62e5c-110"><paramref name="sizeHint" />가 0인 경우 비어 있지 않은 버퍼를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-110">If <paramref name="sizeHint" /> is 0, returns a non-empty buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="62e5c-111">연속 호출이 동일한 버퍼 또는 동일한 크기의 버퍼를 반환 하는 보장이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-111">There is no guarantee that successive calls will return the same buffer or the same-sized buffer.</span></span>

<span data-ttu-id="62e5c-112">이 반환 되지 해야 <xref:System.Span%601.Empty?displayProperty=nameWithType>, 요청된 된 버퍼 크기를 사용할 수 없는 경우 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-112">This must never return <xref:System.Span%601.Empty?displayProperty=nameWithType>, but it can throw if the requested buffer size is not available.</span></span>

<span data-ttu-id="62e5c-113">호출한 후 새 버퍼를 요청 해야 `Advance` 자세한 데이터를 작성 합니다. 계속 하려면 이전에 가져온된 버퍼에 쓸 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-113">You must request a new buffer after calling `Advance` to continue writing more data; you cannot write to a previously acquired buffer.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="62e5c-114">요청된 버퍼 크기를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-114">The requested buffer size is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpan">
      <MemberSignature Language="C#" Value="public Span&lt;T&gt; GetSpan (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Span`1&lt;!T&gt; GetSpan(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.GetSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpan (Optional sizeHint As Integer = 0) As Span(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetSpan : int -&gt; Span&lt;'T&gt;" Usage="iBufferWriter.GetSpan sizeHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="sizeHint"><span data-ttu-id="62e5c-115">반환되는 <see cref="T:System.Span`1" />의 최소 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-115">The minimum length of the returned <see cref="T:System.Span`1" />.</span></span> <span data-ttu-id="62e5c-116">0인 경우 비어 있지 않은 버퍼가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-116">If 0, a non-empty buffer is returned.</span></span></param>
        <summary><span data-ttu-id="62e5c-117">요청된 크기(<paramref name="sizeHint" />로 지정됨) 이상인 작성할 <see cref="T:System.Span`1" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-117">Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested size (specified by <paramref name="sizeHint" />).</span></span></summary>
        <returns><span data-ttu-id="62e5c-118">크기가 <paramref name="sizeHint" /> 이상인 <see cref="T:System.Span`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-118">A <see cref="T:System.Span`1" /> of at least the size <paramref name="sizeHint" />.</span></span> <span data-ttu-id="62e5c-119"><paramref name="sizeHint" />가 0인 경우 비어 있지 않은 버퍼를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-119">If <paramref name="sizeHint" /> is 0, returns a non-empty buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
<span data-ttu-id="62e5c-120">연속 호출이 동일한 버퍼 또는 동일한 크기의 버퍼를 반환 하는 보장이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-120">There is no guarantee that successive calls will return the same buffer or the same-sized buffer.</span></span>

<span data-ttu-id="62e5c-121">이 메서드에서 반환 해야 <xref:System.Span%601.Empty?displayProperty=nameWithType>, 요청된 된 버퍼 크기를 사용할 수 없는 경우 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-121">This method must never return <xref:System.Span%601.Empty?displayProperty=nameWithType>, but it can throw if the requested buffer size is not available.</span></span>

<span data-ttu-id="62e5c-122">호출한 후 새 버퍼를 요청 해야 `Advance` 자세한 데이터를 작성 합니다. 계속 하려면 이전에 가져온된 버퍼에 쓸 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="62e5c-122">You must request a new buffer after calling `Advance` to continue writing more data; you cannot write to a previously acquired buffer.</span></span>
         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>