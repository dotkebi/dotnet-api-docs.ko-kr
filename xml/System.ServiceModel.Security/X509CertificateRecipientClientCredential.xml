<Type Name="X509CertificateRecipientClientCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49b87713a8afc5f0cd3c6aeed8b4127cc303d5dc" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58560459" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateRecipientClientCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateRecipientClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="11166-101">SSL 인증을 사용하여 서비스에서 표시한 인증서의 유효성을 검사하기 위해 클라이언트에서 사용되는 설정을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="11166-101">Represents the settings used by the client to validate the certificate presented by the service using SSL authentication.</span></span> <span data-ttu-id="11166-102">여기에는 메시지 보안을 사용하여 서비스에 보내는 메시지를 암호화하는 데 사용하기 위해 클라이언트에서 명시적으로 구성되는 서비스에 대한 인증서도 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="11166-102">It also contains any certificate for the service that is explicitly configured on the client to use for encrypting messages to the service using message security.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-103">이 클래스는 <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> 클래스의 <xref:System.ServiceModel.Description.ClientCredentials> 속성에 의해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="11166-103">This class is used by the <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> property in the <xref:System.ServiceModel.Description.ClientCredentials> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11166-104">이 코드에서는 이 클래스의 인스턴스를 만드는 한 가지 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="11166-104">This code shows one way to create an instance of this class.</span></span>  
  
 [!code-csharp[c_CreateSTS#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]
 [!code-vb[c_CreateSTS#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11166-105">SSL 인증을 사용하여 가져온 서비스 인증서의 유효성을 검사하는 데 사용되는 설정을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="11166-105">Gets the settings used to validate the service certificate obtained using SSL authentication.</span></span></summary>
        <value><span data-ttu-id="11166-106">SSL 인증을 사용하여 가져온 서비스 인증서의 유효성을 검사하는 데 사용되는 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-106">The settings used to validate the service certificate obtained using SSL authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-107"><xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> 클래스는 SSL/TLS 협상을 사용하여 가져온 서비스 인증서를 인증하기 위해 클라이언트 프록시에서 사용되는 설정을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="11166-107">The <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> class represents the settings used by the client proxy to authenticate service certificates that are obtained using SSL/TLS negotiation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11166-108">이 코드에서는 이 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="11166-108">This code shows how to access this property.</span></span>  
  
 [!code-csharp[c_CreateSTS#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCertificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ DefaultCertificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11166-109">서비스에 대해 사용할 기본 인증서를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-109">Gets or sets the default certificate to use for the service.</span></span></summary>
        <value><span data-ttu-id="11166-110">서비스에 대해 사용할 기본 인증서입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-110">The default certificate to use for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-111">인증서 기반 메시지 보안을 사용하는 바인딩의 경우 서비스에 보내는 메시지를 암호화하는 데 이 인증서를 사용하며, 서비스에서는 클라이언트로 보내는 회신에 서명하는 데 이 인증서를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-111">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11166-112">이 코드에서는 이 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="11166-112">This code shows how to access this property.</span></span>  
  
 [!code-csharp[c_CreateSTS#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11166-113">읽기 전용인 자격 증명을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="11166-113">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScopedCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopedCertificates As Dictionary(Of Uri, X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ ScopedCertificates { System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopedCertificates : System.Collections.Generic.Dictionary&lt;Uri, System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11166-114">클라이언트가 통신 중인 서비스를 나타내기 위해 사용할 범위 설정 인증서를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="11166-114">Gets a scoped certificate to use to represent the service that the client is communicating with.</span></span></summary>
        <value><span data-ttu-id="11166-115">클라이언트가 통신 중인 서비스를 나타내기 위해 사용할 범위 설정 인증서입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-115">A scoped certificate to use to represent the service that the client is communicating with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-116">이 속성을 사용하면 클라이언트가 통신할 서비스의 URL을 기반으로 사용할 서비스 인증서를 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-116">This property enables the client to configure the service certificate to use based on the URL of the service it communicates with.</span></span> <span data-ttu-id="11166-117">이는 클라이언트가 중간 보안 토큰 서비스뿐 아니라 끝 서비스 등의 여러 서비스와 통신할 수 있는 발급된 토큰 시나리오에서 특히 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-117">This is especially useful in issued token scenarios where a client can be communicating to multiple services (the end service as well as intermediary security token services).</span></span> <span data-ttu-id="11166-118">인증서 기반 메시지 보안을 사용하는 바인딩의 경우 서비스에 보내는 메시지를 암호화하는 데 이 인증서를 사용하며, 서비스에서는 클라이언트로 보내는 회신에 서명하는 데 이 인증서를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-118">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service, and is expected to be used by the service for signing replies to the client.</span></span>  
  
 <span data-ttu-id="11166-119">바인딩을 수행할 때 서비스용 인증서가 필요하고 서비스 URL에 대한 특정 인증서를 `ScopedCertificates`에서 찾을 수 없는 경우, 기본 인증서가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="11166-119">If a binding requires a certificate for the service and no specific certificate for the service URL is found in the `ScopedCertificates`, the default certificate is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11166-120">이 코드에서는 이 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="11166-120">This code shows how to set this property.</span></span>  
  
 [!code-csharp[c_CreateSTS#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11166-121">읽기 전용인 자격 증명을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="11166-121">Attempted to set when the credential is read-only.</span></span></exception>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDefaultCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="11166-122">서비스에 대해 사용할 기본 인증서를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-122">Specifies the default certificate to use for the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-123">이러한 메서드는 지정된 매개 변수와 일치하는 지정된 위치의 저장소로부터 인증서를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="11166-123">These methods get a certificate from the store in the specified location that matches specified parameters.</span></span>  
  
 <span data-ttu-id="11166-124">인증서 기반 메시지 보안을 사용하는 바인딩의 경우 서비스에 보내는 메시지를 암호화하는 데 이 인증서를 사용하며, 서비스에서는 클라이언트로 보내는 회신에 서명하는 데 이 인증서를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-124">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName"><span data-ttu-id="11166-125">제목의 고유 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-125">The subject distinguished name.</span></span></param>
        <param name="storeLocation"><span data-ttu-id="11166-126">서비스 인증서를 가져오기 위해 서비스에서 사용하는 인증서 저장소의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-126">The location of the certificate store that the service uses to obtain the service certificate.</span></span></param>
        <param name="storeName"><span data-ttu-id="11166-127">열려는 X.509 인증서 저장소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-127">The name of the X.509 certificate store to open.</span></span></param>
        <summary><span data-ttu-id="11166-128">서비스에 대해 사용할 기본 인증서를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-128">Specifies the default certificate to use for the service.</span></span> <span data-ttu-id="11166-129">인증서 기반 메시지 보안을 사용하는 바인딩의 경우 서비스에 보내는 메시지를 암호화하는 데 이 인증서를 사용하며, 서비스에서는 클라이언트로 보내는 회신에 서명하는 데 이 인증서를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-129">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-130">이 메서드는 `subjectName` 매개 변수와 일치하는 지정된 위치의 저장소로부터 인증서를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="11166-130">This method gets a certificate from the store in the specified location that matches the `subjectName` parameter.</span></span>  
  
 <span data-ttu-id="11166-131">`storeLocation` 값은 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-131">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="11166-132"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: 로컬 컴퓨터에 할당된 인증서 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-132"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.</span></span>  
  
-   <span data-ttu-id="11166-133"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: 현재 사용자가 사용하는 인증서 저장소입니다(기본값).</span><span class="sxs-lookup"><span data-stu-id="11166-133"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).</span></span>  
  
 <span data-ttu-id="11166-134">시스템 계정으로 응용 프로그램을 실행하는 경우 인증서는 대개 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-134">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="11166-135">사용자 계정으로 응용 프로그램을 실행하는 경우 인증서는 대개 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-135">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="11166-136">`storeName` 값은 <xref:System.Security.Cryptography.X509Certificates.StoreName> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-136">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11166-137">다음 코드에서는 사용할 X.509 인증서를 지정하기 위해 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-137">The following code uses this method to specify an X.509 certificate to use.</span></span>  
  
 [!code-csharp[c_CreateSTS#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="11166-138"><paramref name="subjectName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-138"><paramref name="subjectName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11166-139">읽기 전용인 자격 증명을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="11166-139">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation"><span data-ttu-id="11166-140">서비스 인증서를 가져오기 위해 서비스에서 사용하는 인증서 저장소의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-140">The location of the certificate store the service uses to obtain the service certificate.</span></span></param>
        <param name="storeName"><span data-ttu-id="11166-141">열려는 X.509 인증서 저장소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-141">The name of the X.509 certificate store to open.</span></span></param>
        <param name="findType"><span data-ttu-id="11166-142">실행할 X.509 검색의 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-142">The type of X.509 search to be executed.</span></span></param>
        <param name="findValue"><span data-ttu-id="11166-143">X.509 인증서 저장소에서 검색할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-143">The value to search for in the X.509 certificate store.</span></span></param>
        <summary><span data-ttu-id="11166-144">서비스에 대해 사용할 기본 인증서를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-144">Specifies the default certificate to use for the service.</span></span> <span data-ttu-id="11166-145">인증서 기반 메시지 보안을 사용하는 바인딩의 경우 서비스에 보내는 메시지를 암호화하는 데 이 인증서를 사용하며, 서비스에서는 클라이언트로 보내는 회신에 서명하는 데 이 인증서를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-145">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-146">이 메서드는 `findType` 및 `findValue` 매개 변수와 일치하는 지정된 위치의 저장소로부터 인증서를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="11166-146">This method gets a certificate from the store in the specified location that matches the `findType` and `findValue` parameters.</span></span>  
  
 <span data-ttu-id="11166-147">`storeLocation` 값은 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-147">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="11166-148"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: 로컬 컴퓨터에 할당된 인증서 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-148"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.</span></span>  
  
-   <span data-ttu-id="11166-149"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: 현재 사용자가 사용하는 인증서 저장소입니다(기본값).</span><span class="sxs-lookup"><span data-stu-id="11166-149"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).</span></span>  
  
 <span data-ttu-id="11166-150">시스템 계정으로 응용 프로그램을 실행하는 경우 인증서는 대개 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-150">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="11166-151">사용자 계정으로 응용 프로그램을 실행하는 경우 인증서는 대개 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-151">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="11166-152">`storeName` 값은 <xref:System.Security.Cryptography.X509Certificates.StoreName> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-152">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
 <span data-ttu-id="11166-153">`findType` 값은 <xref:System.Security.Cryptography.X509Certificates.X509FindType> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-153">Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.</span></span>  
  
 <span data-ttu-id="11166-154">가장 일반적으로 사용되는 열거형은 지정된 저장소에서 인증서 주체 이름에 대해 대/소문자를 구분하지 않는 검색을 수행하는 <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-154">The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store.</span></span> <span data-ttu-id="11166-155">검색이 정확하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-155">This can be an imprecise search.</span></span> <span data-ttu-id="11166-156">조건과 일치하는 인증서가 없거나 여러 개인 경우 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="11166-156">If no certificates or multiple certificates that match the criteria are found, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11166-157">다음 코드에서는 사용할 X.509 인증서를 지정하기 위해 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-157">The following code uses this method to specify an X.509 certificate to use.</span></span>  
  
 [!code-csharp[c_CreateSTS#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="11166-158"><paramref name="findValue" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-158"><paramref name="findValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11166-159">읽기 전용인 자격 증명을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="11166-159">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetScopedCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="11166-160">저장소로부터 인증서를 설정하고, 범위를 설정하는 URL에 의해 인덱싱된 컬렉션에 이를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-160">Sets a certificate from a store and stores it in a collection indexed by the URL that sets the scope.</span></span></summary>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (subjectName, storeLocation, storeName, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="subjectName"><span data-ttu-id="11166-161">정규화된 주체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-161">The fully qualified subject name.</span></span></param>
        <param name="storeLocation"><span data-ttu-id="11166-162">서비스 인증서를 가져오기 위해 서비스에서 사용하는 인증서 저장소의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-162">The location of the certificate store that the service uses to obtain the service certificate.</span></span></param>
        <param name="storeName"><span data-ttu-id="11166-163">열려는 X.509 인증서 저장소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-163">The name of the X.509 certificate store to open.</span></span></param>
        <param name="targetService"><span data-ttu-id="11166-164">범위를 설정하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-164">The URL that sets the scope.</span></span></param>
        <summary><span data-ttu-id="11166-165">주체 이름, 인증서 저장소 위치 및 인증서 저장소 이름별로 인증서를 설정하고, 범위를 설정하는 URL에 사용할 컬렉션에 이를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-165">Sets a certificate by subject name, certificate store location, and certificate store name, and stores it in a collection to be used for the URL that sets the scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-166">`storeLocation` 값은 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-166">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="11166-167"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: 로컬 컴퓨터에 할당된 인증서 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-167"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.</span></span>  
  
-   <span data-ttu-id="11166-168"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: 현재 사용자가 사용하는 인증서 저장소입니다(기본값).</span><span class="sxs-lookup"><span data-stu-id="11166-168"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).</span></span>  
  
 <span data-ttu-id="11166-169">시스템 계정으로 응용 프로그램을 실행하는 경우 인증서는 대개 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-169">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="11166-170">사용자 계정으로 응용 프로그램을 실행하는 경우 인증서는 대개 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-170">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="11166-171">`storeName` 값은 <xref:System.Security.Cryptography.X509Certificates.StoreName> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-171">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11166-172">이 코드에서는 이 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="11166-172">This code shows how to call this method.</span></span>  
  
 [!code-csharp[c_CreateSTS#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="11166-173"><paramref name="subjectName" /> 또는 <paramref name="targetService" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="11166-173"><paramref name="subjectName" /> or <paramref name="targetService" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11166-174">읽기 전용인 자격 증명을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="11166-174">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (storeLocation, storeName, findType, findValue, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="storeLocation"><span data-ttu-id="11166-175">서비스 인증서를 가져오기 위해 서비스에서 사용하는 인증서 저장소의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-175">The location of the certificate store that the service uses to obtain the service certificate.</span></span></param>
        <param name="storeName"><span data-ttu-id="11166-176">열려는 X.509 인증서 저장소 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-176">The name of the X.509 certificate store to open.</span></span></param>
        <param name="findType"><span data-ttu-id="11166-177">실행할 X.509 검색의 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-177">The type of X.509 search to be executed.</span></span></param>
        <param name="findValue"><span data-ttu-id="11166-178">X.509 인증서 저장소에서 검색할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-178">The value to search for in the X.509 certificate store.</span></span></param>
        <param name="targetService"><span data-ttu-id="11166-179">범위를 설정하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-179">The URL that sets the scope.</span></span></param>
        <summary><span data-ttu-id="11166-180">인증서 저장소 위치, 인증서 저장소 이름, X.509 검색 형식 및 검색할 값별로 인증서를 설정하고, 범위를 설정하는 URL에 사용할 컬렉션에 이를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-180">Sets a certificate by certificate store location, certificate store name, type of X.509 search, and value to search for, and stores it in a collection to be used for the URL that sets the scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-181">`storeLocation` 값은 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-181">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="11166-182"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: 로컬 컴퓨터에 할당된 인증서 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-182"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.</span></span>  
  
-   <span data-ttu-id="11166-183"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: 현재 사용자가 사용하는 인증서 저장소입니다(기본값).</span><span class="sxs-lookup"><span data-stu-id="11166-183"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).</span></span>  
  
 <span data-ttu-id="11166-184">시스템 계정으로 응용 프로그램을 실행하는 경우 인증서는 대개 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-184">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="11166-185">사용자 계정으로 응용 프로그램을 실행하는 경우 인증서는 대개 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-185">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="11166-186">`storeName` 값은 <xref:System.Security.Cryptography.X509Certificates.StoreName> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-186">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
 <span data-ttu-id="11166-187">`findType` 값은 <xref:System.Security.Cryptography.X509Certificates.X509FindType> 열거형에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-187">Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.</span></span>  
  
 <span data-ttu-id="11166-188">가장 일반적으로 사용되는 열거형은 지정된 저장소에서 인증서 주체 이름에 대해 대/소문자를 구분하지 않는 검색을 수행하는 <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-188">The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store.</span></span> <span data-ttu-id="11166-189">검색이 정확하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-189">This can be an imprecise search.</span></span> <span data-ttu-id="11166-190">조건과 일치하는 인증서가 없거나 여러 개인 경우 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="11166-190">If no certificates or multiple certificates that match the criteria are found, an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11166-191">이 코드에서는 이 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="11166-191">This code shows how to call this method.</span></span>  
  
 [!code-csharp[c_CreateSTS#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]
 [!code-vb[c_CreateSTS#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="11166-192"><paramref name="findValue" /> 또는 <paramref name="targetService" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="11166-192"><paramref name="findValue" /> or <paramref name="targetService" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11166-193">읽기 전용인 자격 증명을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="11166-193">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SslCertificateAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property SslCertificateAuthentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ SslCertificateAuthentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); void set(System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SslCertificateAuthentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11166-194">SSL 인증서 유효성 검사기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="11166-194">Gets or sets the SSL certificate validator to use.</span></span></summary>
        <value><span data-ttu-id="11166-195"><see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="11166-195">A <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11166-196">이 속성을 사용 하면 WCF X509CertificateValidator WCF 클라이언트에서 서버 인증서의 유효성을 검사 하는 데 있습니다.</span><span class="sxs-lookup"><span data-stu-id="11166-196">This property allows you to use WCF X509CertificateValidator to validate a server certificate on a WCF client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>