<Type Name="ModelEditingScope" FullName="System.Activities.Presentation.Model.ModelEditingScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85efa58fef92f6c6b54f2af4d50f8c7baee85025" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58548044" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelEditingScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelEditingScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelEditingScope" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelEditingScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelEditingScope abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type ModelEditingScope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a1716-101">편집 저장소에 대한 변경 그룹을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-101">Represents a group of changes to the editing store.</span></span> <span data-ttu-id="a1716-102">변경 그룹은 트랜잭션입니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-102">Change groups are transactional.</span></span> <span data-ttu-id="a1716-103">편집 범위에서 변경된 내용은 하나의 단위로 커밋하거나 중단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-103">The changes made under an editing scope can be committed or aborted as a unit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1716-104">편집 범위가 커밋되면 편집 저장소는 해당 편집 범위에서 발생한 모든 변경 내용을 사용하고 모델에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-104">When an editing scope is committed, the editing store takes all changes that occurred within it and applies them to the model.</span></span> <span data-ttu-id="a1716-105">경우 편집 범위의 <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> 메서드를 호출 하기 전에 편집 범위가 삭제 되 또는 <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> 편집 이라는 범위 편집 저장소에서 상태를 다시 적용 된 기본 개체에 대 한 변경 내용이 되돌릴 대신 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-105">If the editing scope's <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> method is called, or the editing scope is disposed of before <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> is called, the editing scope will instead reverse the changes made to the underlying objects, reapplying state from the editing store.</span></span> <span data-ttu-id="a1716-106">이는 실행 취소 메커니즘의 기반이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-106">This provides a solid basis for an undo mechanism.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelEditingScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelEditingScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1716-107">새 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-107">Creates a new <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanComplete">
      <MemberSignature Language="C#" Value="protected abstract bool CanComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.CanComplete" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanComplete () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanComplete();" />
      <MemberSignature Language="F#" Value="abstract member CanComplete : unit -&gt; bool" Usage="modelEditingScope.CanComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1716-108"><see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" />를 호출해야 하는지 변경 내용을 되돌려야 하는지를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-108">Determines whether <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> should be called, or whether the change should instead be reverted.</span></span> <span data-ttu-id="a1716-109">파일을 수정하기 위해 소스 제어 시스템에서 체크 아웃할 수 없는 경우 등이 되돌려야 하는 경우에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-109">Reasons for reverting might include a file cannot be checked out of a source control system for modification.</span></span></summary>
        <returns><span data-ttu-id="a1716-110">완료할 수 있으면 <see langword="true" />이고 변경 내용을 되돌려야 하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-110"><see langword="true" /> if completion can occur; <see langword="false" /> if the change should instead revert.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="member this.Complete : unit -&gt; unit" Usage="modelEditingScope.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1716-111"><see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> 메서드를 호출하여 편집 범위를 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-111">Completes the editing scope by calling the <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1716-112">편집 범위를 이미 되돌렸거나 완료한 경우</span><span class="sxs-lookup"><span data-stu-id="a1716-112">The editing scope has already been reverted or completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelEditingScope.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Activities.Presentation.Model.ModelEditingScope.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1716-113">변경 그룹에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-113">Describes the group of changes.</span></span> <span data-ttu-id="a1716-114">변경 내용이 커밋되기 전에 언제든지 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-114">It can be changed anytime before the changes are committed.</span></span></summary>
        <value><span data-ttu-id="a1716-115">반환 된 <see cref="T:System.String" /> 변경 내용을 설명 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-115">Returns a <see cref="T:System.String" /> that describes the changes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1716-116">변경을 중단하여 이 개체를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-116">Disposes of this object by aborting changes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="modelEditingScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1716-117">편집 범위를 이미 완료했거나 되돌리지 않은 경우 변경을 중단하여 이 개체를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-117">Disposes of this object by aborting changes unless the editing scope has already been completed or reverted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1716-118">편집 범위를 완료했거나 이전에 되돌린 경우 이 메서드를 호출해도 아무 작업도 수행되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-118">If either the editing scope has completed or it has been reverted previously, then calling this method does nothing.</span></span> <span data-ttu-id="a1716-119">이 메서드를 호출 <xref:System.Activities.Presentation.Model.ModelEditingScope.Dispose%2A> 로 입력된 매개 변수를 사용 하 여 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-119">This method calls <xref:System.Activities.Presentation.Model.ModelEditingScope.Dispose%2A> with the input parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="modelEditingScope.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a1716-120">실행 취소 작업의 일부로 또는 개체가 종료되고 있으므로 변경 내용을 되돌려야 하는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-120">Determines whether the changes should be reverted as part of an undo operation or because the object is being finalized.</span></span></param>
        <summary><span data-ttu-id="a1716-121">변경을 중단하여 이 개체를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-121">Disposes of this object by aborting changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1716-122">호출 <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> 하는 경우 `disposing` 로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-122">Calls <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> if `disposing` is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComplete">
      <MemberSignature Language="C#" Value="protected abstract void OnComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnComplete();" />
      <MemberSignature Language="F#" Value="abstract member OnComplete : unit -&gt; unit" Usage="modelEditingScope.OnComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1716-123">편집 범위를 실제로 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-123">Performs the actual complete of the editing scope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="protected abstract bool OnException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="abstract member OnException : Exception -&gt; bool" Usage="modelEditingScope.OnException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="a1716-124">처리할 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-124">The exception to handle.</span></span></param>
        <summary><span data-ttu-id="a1716-125">예외를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-125">Handles an exception.</span></span></summary>
        <returns><span data-ttu-id="a1716-126">예외가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-126"><see langword="true" /> if the exception is handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1716-127"><xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> 및 <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> 메서드는 이 메서드를 호출하여 예외를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-127">The <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> and <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> methods call this method to handle exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRevert">
      <MemberSignature Language="C#" Value="protected abstract void OnRevert (bool finalizing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRevert(bool finalizing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnRevert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRevert (finalizing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRevert(bool finalizing);" />
      <MemberSignature Language="F#" Value="abstract member OnRevert : bool -&gt; unit" Usage="modelEditingScope.OnRevert finalizing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalizing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalizing"><span data-ttu-id="a1716-128">개체가 종료되고 있으므로 중단이 발생하는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-128">Determines whether the abort is occurring because the object is being finalized.</span></span> <span data-ttu-id="a1716-129">이 경우 일부 실행 취소 시스템은 중단을 시도하지만 다른 시스템은 변경 내용을 취소하고 사후 실행 취소 작업으로 기록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-129">Some undo systems might attempt to abort in this case, while others might abandon the change and record it as a reactive undo operation.</span></span></param>
        <summary><span data-ttu-id="a1716-130">편집 범위를 실제로 되돌립니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-130">Performs the actual revert of the editing scope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public void Revert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Revert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Revert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revert();" />
      <MemberSignature Language="F#" Value="member this.Revert : unit -&gt; unit" Usage="modelEditingScope.Revert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1716-131">편집 범위 중에 변경된 내용을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-131">Abandons the changes made during the editing scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1716-132">이 메서드를 호출 <xref:System.Activities.Presentation.Model.ModelEditingScope.OnRevert%2A> 로 입력된 매개 변수를 사용 하 여 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="a1716-132">This method calls <xref:System.Activities.Presentation.Model.ModelEditingScope.OnRevert%2A> with the input parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1716-133">변경 그룹이 이미 커밋된 경우</span><span class="sxs-lookup"><span data-stu-id="a1716-133">The group of changes has already been committed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>