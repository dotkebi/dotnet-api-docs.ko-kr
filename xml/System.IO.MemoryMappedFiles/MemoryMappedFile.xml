<Type Name="MemoryMappedFile" FullName="System.IO.MemoryMappedFiles.MemoryMappedFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="443cc691ad8b1f823a11c81a804d413190455aee" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58742764" /></Metadata><TypeSignature Language="C#" Value="public class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryMappedFile extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMappedFile&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryMappedFile = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c0a90-101">메모리 매핑된 파일을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-101">Represents a memory-mapped file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-102">메모리 매핑된 파일을 응용 프로그램의 논리 주소 공간에 파일의 콘텐츠를 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-102">A memory-mapped file maps the contents of a file to an application's logical address space.</span></span> <span data-ttu-id="c0a90-103">메모리 매핑된 파일을 프로그래머가 메모리 동시에 관리할 수 있고 검색할 필요 없이 파일에 대 한 완전 한 임의 액세스를 허용 하기 때문에 매우 큰 파일을 사용 하 여 작업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-103">Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</span></span> <span data-ttu-id="c0a90-104">또한 여러 프로세스에서 메모리 매핑된 파일을 공유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-104">Memory-mapped files can also be shared across multiple processes.</span></span>  
  
 <span data-ttu-id="c0a90-105">합니다 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 메서드는 지정된 된 경로에서 메모리 매핑된 파일을 만듭니다 또는 <xref:System.IO.FileStream> 디스크에 기존 파일의 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-105">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk.</span></span> <span data-ttu-id="c0a90-106">경우 디스크에 변경 내용을 자동으로 전파 됩니다 파일이 매핑된 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-106">Changes are automatically propagated to disk when the file is unmapped.</span></span>  
  
 <span data-ttu-id="c0a90-107"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 메서드 디스크에 있는 기존 파일에 매핑되지 않은 메모리 매핑된 파일을 만들고 프로세스 간 통신 (IPC)에 대 한 공유 메모리를 만들기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-107">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</span></span>  
  
 <span data-ttu-id="c0a90-108">메모리 매핑된 파일을 메모리 매핑된 파일을 다른 프로세스와 공유할 수 있도록 선택적 이름으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-108">A memory-mapped file can be associated with an optional name that allows the memory-mapped file to be shared with other processes.</span></span> 
  
 <span data-ttu-id="c0a90-109">파일의 부분 뷰를 포함 하는 메모리 매핑된 파일의 여러 뷰를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-109">You can create multiple views of the memory-mapped file, including views of parts of the file.</span></span> <span data-ttu-id="c0a90-110">둘 이상의 주소 동시 메모리를 만들 파일의 한 부분을 매핑할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-110">You can map the same part of a file to more than one address to create concurrent memory.</span></span> <span data-ttu-id="c0a90-111">두 보기를 동시에 유지하려면 동일한 메모리 매핑된 파일에서 보기를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-111">For two views to remain concurrent, they have to be created from the same memory-mapped file.</span></span> <span data-ttu-id="c0a90-112">두 가지 보기를 사용 하 여 동일한 파일의 두 파일 매핑 만들기 동시성을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-112">Creating two file mappings of the same file with two views does not provide concurrency.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a90-113">다음 예제에서는 매우 큰 파일의 일부에 대한 메모리 매핑된 보기를 만들고 보기의 일부를 조작합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-113">The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-114">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-114">Memory-Mapped Files</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a90-115">기존 파일에서 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-115">Creates a memory-mapped file from an existing file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c0a90-116">매핑할 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-116">The path to file to map.</span></span></param>
        <summary><span data-ttu-id="c0a90-117">디스크의 파일에서 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-117">Creates a memory-mapped file from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="c0a90-118">메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-118">A memory-mapped file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0a90-119">다음 예제에서는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 메모리 매핑된 파일을 만드는 메서드를 매우 큰 파일의 일부분에 메모리 매핑된 보기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-119">The following example uses the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-120"><paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-120"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="c0a90-121">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-121">-or-</span></span> 
 <span data-ttu-id="c0a90-122"><paramref name="path" />는 잘못된 장치로 간주합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-122"><paramref name="path" /> refers to an invalid device.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-123"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-123"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-124">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-124">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c0a90-125"><paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c0a90-125"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a90-126">호출자에게 파일에 필요한 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-126">The caller does not have the required permissions for the file.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-127">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-127">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c0a90-128">매핑할 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-128">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="c0a90-129">액세스 모드는 <see cref="F:System.IO.FileMode.Open" />이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-129">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-130">디스크의 파일에서 지정된 액세스 모드를 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-130">Creates a memory-mapped file that has the specified access mode from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="c0a90-131">지정된 액세스 모드를 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-131">A memory-mapped file that has the specified access mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-132">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-132">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="c0a90-133">만 사용할 수는 <xref:System.IO.FileMode.Open> 디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만드는 데 사용할 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-133">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-134"><paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-134"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="c0a90-135">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-135">-or-</span></span> 
 <span data-ttu-id="c0a90-136"><paramref name="path" />는 잘못된 장치로 간주합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-136"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="c0a90-137">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-137">-or-</span></span> 
 <span data-ttu-id="c0a90-138"><paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-138"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-139"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-139"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-140"><paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> 또는 <see cref="F:System.IO.FileMode.Truncate" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-140"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span></span>  
  
<span data-ttu-id="c0a90-141">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-141">-or-</span></span> 
 <span data-ttu-id="c0a90-142"><paramref name="mode" />가 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 디스크에 파일이 존재하지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="c0a90-142"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span></span>  
  
<span data-ttu-id="c0a90-143">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-143">-or-</span></span> 
<span data-ttu-id="c0a90-144">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-144">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c0a90-145"><paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c0a90-145"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a90-146">호출자에게 파일에 필요한 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-146">The caller does not have the required permissions for the file.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-147">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-147">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c0a90-148">매핑할 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-148">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="c0a90-149">액세스 모드는 <see cref="F:System.IO.FileMode.Open" />이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-149">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="c0a90-150">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-150">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <summary><span data-ttu-id="c0a90-151">디스크의 파일에서 지정된 액세스 모드와 이름을 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-151">Creates a memory-mapped file that has the specified access mode and name from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="c0a90-152">지정된 이름과 액세스 모드를 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-152">A memory-mapped file that has the specified name and access mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-153">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-153">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="c0a90-154">만 사용할 수는 <xref:System.IO.FileMode.Open> 디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만드는 데 사용할 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-154">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-155"><paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-155"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="c0a90-156">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-156">-or-</span></span> 
 <span data-ttu-id="c0a90-157"><paramref name="path" />는 잘못된 장치로 간주합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-157"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="c0a90-158">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-158">-or-</span></span> 
 <span data-ttu-id="c0a90-159"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-159"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-160">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-160">-or-</span></span> 
 <span data-ttu-id="c0a90-161"><paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-161"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-162"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-163"><paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> 또는 <see cref="F:System.IO.FileMode.Truncate" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-163"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span></span>  
  
<span data-ttu-id="c0a90-164">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-164">-or-</span></span> 
 <span data-ttu-id="c0a90-165"><paramref name="mode" />가 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 디스크에 파일이 존재하지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="c0a90-165"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span></span>  
  
<span data-ttu-id="c0a90-166">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-166">-or-</span></span> 
<span data-ttu-id="c0a90-167">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-167">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c0a90-168"><paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c0a90-168"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a90-169">호출자에게 파일에 필요한 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-169">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c0a90-170">매핑할 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-170">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="c0a90-171">액세스 모드는 <see cref="T:System.IO.FileMode" />를 제외하고는 <see cref="F:System.IO.FileMode.Append" /> 열거형이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-171">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="c0a90-172">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-172">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-173">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-173">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-174">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-174">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <summary><span data-ttu-id="c0a90-175">디스크의 파일에서 지정된 액세스 모드, 이름 및 용량을 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-175">Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="c0a90-176">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-176">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-177">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-177">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="c0a90-178">경우 `capacity` 메모리 매핑된 파일에 없는 데이터를 작성 한 경우에 지정된 된 용량에 맞게 디스크, 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-178">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-179">이 방지 하기 발생 0 (영)는 내부적으로 설정 하는 기본 용량의 경우 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-179">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-180"><paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-180"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="c0a90-181">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-181">-or-</span></span> 
 <span data-ttu-id="c0a90-182"><paramref name="path" />는 잘못된 장치로 간주합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-182"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="c0a90-183">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-183">-or-</span></span> 
 <span data-ttu-id="c0a90-184"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-184"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-185">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-185">-or-</span></span> 
 <span data-ttu-id="c0a90-186"><paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-186"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-187"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-187"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-188"><paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-188"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="c0a90-189">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-189">-or-</span></span> 
 <span data-ttu-id="c0a90-190"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-190"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="c0a90-191">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-191">-or-</span></span> 
 <span data-ttu-id="c0a90-192"><paramref name="capacity" />가 파일 크기보다 작습니다(0은 아님).</span><span class="sxs-lookup"><span data-stu-id="c0a90-192"><paramref name="capacity" /> is less than the file size (but not zero).</span></span>  
  
<span data-ttu-id="c0a90-193">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-193">-or-</span></span> 
 <span data-ttu-id="c0a90-194"><paramref name="capacity" />가 0 이고 디스크의 파일 크기도 0 입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-194"><paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-195">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-195">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c0a90-196"><paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c0a90-196"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a90-197">호출자에게 파일에 필요한 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-197">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c0a90-198">매핑할 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-198">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="c0a90-199">액세스 모드는 <see cref="T:System.IO.FileMode" />를 제외하고는 <see cref="F:System.IO.FileMode.Append" /> 열거형이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-199">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="c0a90-200">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-200">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-201">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-201">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-202">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-202">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-203">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-203">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="c0a90-204">디스크의 파일에서 지정된 액세스 모드, 이름, 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-204">Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="c0a90-205">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-205">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-206">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-206">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="c0a90-207">경우 `capacity` 메모리 매핑된 파일에 없는 데이터를 작성 한 경우에 지정된 된 용량에 맞게 디스크, 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-207">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-208">이 방지 하기 발생 0 (영)는 내부적으로 설정 하는 기본 용량의 경우 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-208">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-209"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-209"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-210">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-210">-or-</span></span> 
 <span data-ttu-id="c0a90-211"><paramref name="access" />이 허용되는 값이 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="c0a90-211"><paramref name="access" /> is not an allowed value.</span></span>  
  
<span data-ttu-id="c0a90-212">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-212">-or-</span></span> 
 <span data-ttu-id="c0a90-213"><paramref name="path" />는 빈 파일을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-213"><paramref name="path" /> specifies an empty file.</span></span>  
  
<span data-ttu-id="c0a90-214">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-214">-or-</span></span> 
 <span data-ttu-id="c0a90-215"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />로 지정되고 용량이 <paramref name="path" />에 지정된 파일 크기보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-215"><paramref name="access" /> is specified as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and capacity is greater than the size of the file indicated by <paramref name="path" />.</span></span>  
  
<span data-ttu-id="c0a90-216">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-216">-or-</span></span> 
 <span data-ttu-id="c0a90-217"><paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-217"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-218"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-218"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-219"><paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-219"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="c0a90-220">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-220">-or-</span></span> 
 <span data-ttu-id="c0a90-221"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-221"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="c0a90-222">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-222">-or-</span></span> 
 <span data-ttu-id="c0a90-223"><paramref name="capacity" />가 파일 크기보다 작습니다(0은 아님).</span><span class="sxs-lookup"><span data-stu-id="c0a90-223"><paramref name="capacity" /> is less than the file size (but not zero).</span></span>  
  
<span data-ttu-id="c0a90-224">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-224">-or-</span></span> 
 <span data-ttu-id="c0a90-225"><paramref name="capacity" />가 0 이고 디스크의 파일 크기도 0 입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-225"><paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span></span>  
  
<span data-ttu-id="c0a90-226">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-226">-or-</span></span> 
 <span data-ttu-id="c0a90-227"><paramref name="access" />는 정의된 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-227"><paramref name="access" /> is not a defined <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> value.</span></span>  
  
<span data-ttu-id="c0a90-228">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-228">-or-</span></span> 
<span data-ttu-id="c0a90-229"><paramref name="path" />에 나타난 파일 크기가 <paramref name="capacity" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-229">The size of the file indicated by <paramref name="path" /> is greater than <paramref name="capacity" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-230">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-230">-or-</span></span> 
<span data-ttu-id="c0a90-231">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-231">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c0a90-232"><paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c0a90-232"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a90-233">호출자에게 파일에 필요한 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-233">The caller does not have the required permissions for the file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c0a90-234">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-234">for access to unmanaged code.</span></span> <span data-ttu-id="c0a90-235">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c0a90-235">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-236">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-236">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : System.IO.FileStream * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.HandleInheritability * bool -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (fileStream, mapName, capacity, access, inheritability, leaveOpen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mapName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream"><span data-ttu-id="c0a90-237">기존 파일의 파일 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-237">The file stream of the existing file.</span></span></param>
        <param name="mapName"><span data-ttu-id="c0a90-238">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-238">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-239">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-239">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-240">용량을 <c>파일 스트림</c>의 크기로 설정하려면 0을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-240">Specify 0 to set the capacity to the size of <c>filestream</c>.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-241">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-241">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span>  
  
<span data-ttu-id="c0a90-242">이 매개 변수는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-242">This parameter can't be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="c0a90-243">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-243">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="c0a90-244">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-244">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="c0a90-245"><see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />이 삭제되면 소스 파일 스트림을 닫을지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-245">A value that indicates whether to close the source file stream when the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is disposed.</span></span></param>
        <summary><span data-ttu-id="c0a90-246">지정된 액세스 모드, 이름, 상속 및 용량을 사용하여 기존 파일에서 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-246">Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</span></span></summary>
        <returns><span data-ttu-id="c0a90-247">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-247">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-248"><paramref name="mapName" />이 <see langword="null" /> 또는 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-248"><paramref name="mapName" /> is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="c0a90-249">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-249">-or-</span></span> 
 <span data-ttu-id="c0a90-250"><paramref name="capacity" /> 및 파일 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-250"><paramref name="capacity" /> and the length of the file are zero.</span></span>  
  
<span data-ttu-id="c0a90-251">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-251">-or-</span></span> 
 <span data-ttu-id="c0a90-252"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값으로 설정되며, 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-252"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span></span>  
  
<span data-ttu-id="c0a90-253">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-253">-or-</span></span> 
 <span data-ttu-id="c0a90-254"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />로 설정되고 <paramref name="capacity" />는 <see langword="filestream" />의 길이 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-254"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and <paramref name="capacity" /> is larger than the length of <see langword="filestream" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-255"><paramref name="fileStream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-255"><paramref name="fileStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-256"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-256"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="c0a90-257">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-257">-or-</span></span> 
 <span data-ttu-id="c0a90-258"><paramref name="capacity" />가 파일 크기보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-258"><paramref name="capacity" /> is less than the file size.</span></span>  
  
<span data-ttu-id="c0a90-259">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-259">-or-</span></span> 
 <span data-ttu-id="c0a90-260"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-260"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="c0a90-261">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-261">-or-</span></span> 
 <span data-ttu-id="c0a90-262"><paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-262"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : System.IO.FileStream * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability * bool -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (fileStream, mapName, capacity, access, memoryMappedFileSecurity, inheritability, leaveOpen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mapName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream"><span data-ttu-id="c0a90-263">매핑할 파일에 대한 <paramref name="fileStream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-263">The <paramref name="fileStream" /> to the file to map.</span></span></param>
        <param name="mapName"><span data-ttu-id="c0a90-264">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-264">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-265">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-265">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-266">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-266">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-267">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-267">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span>  
  
<span data-ttu-id="c0a90-268">이 매개 변수는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-268">This parameter can't be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="c0a90-269">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-269">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="c0a90-270">이 매개 변수는 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-270">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="c0a90-271">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-271">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="c0a90-272">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-272">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="c0a90-273"><see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />이 닫힌 후 <paramref name="fileStream" />을 삭제하지 않으려면 <see langword="true" />이고 <paramref name="fileStream" />을 삭제하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-273"><see langword="true" /> to not dispose <paramref name="fileStream" /> after the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is closed; <see langword="false" /> to dispose <paramref name="fileStream" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-274">디스크의 파일에서 지정된 이름, 용량, 액세스 형식, 보안 권한, 상속 가능성 및 삭제 요구 사항을 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-274">Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="c0a90-275">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-275">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-276">경우 `capacity` 메모리 매핑된 파일에 없는 데이터를 작성 한 경우에 지정된 된 용량에 맞게 디스크, 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-276">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-277">이 방지 하기 발생 0 (영)는 내부적으로 설정 하는 기본 용량의 경우 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-277">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-278"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-278"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-279">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-279">-or-</span></span> 
 <span data-ttu-id="c0a90-280"><paramref name="capacity" /> 및 파일 길이가 0입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-280"><paramref name="capacity" /> and the length of the file are zero.</span></span>  
  
<span data-ttu-id="c0a90-281">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-281">-or-</span></span> 
 <span data-ttu-id="c0a90-282"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형으로 설정되며, 허용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-282"><paramref name="access" /> is set to the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-283"><paramref name="fileStream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-283"><paramref name="fileStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-284"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-284"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="c0a90-285">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-285">-or-</span></span> 
 <span data-ttu-id="c0a90-286"><paramref name="capacity" />가 파일 크기보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-286"><paramref name="capacity" /> is less than the file size.</span></span>  
  
<span data-ttu-id="c0a90-287">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-287">-or-</span></span> 
 <span data-ttu-id="c0a90-288"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-288"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="c0a90-289">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-289">-or-</span></span> 
 <span data-ttu-id="c0a90-290"><paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-290"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0a90-291"><paramref name="fileStream" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-291"><paramref name="fileStream" /> was closed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-292"><paramref name="access" />의 액세스가 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> 또는 <see cref="F:System.IO.FileAccess.Read" />로 설정된 경우 <paramref name="fileStream" />는 <see cref="F:System.IO.FileAccess.Write" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-292"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> when <paramref name="fileStream" />'s access is set to <see cref="F:System.IO.FileAccess.Read" /> or <see cref="F:System.IO.FileAccess.Write" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-293"><paramref name="mapName" />가 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-293"><paramref name="mapName" /> already exists.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c0a90-294">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-294">for access to unmanaged code.</span></span> <span data-ttu-id="c0a90-295">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c0a90-295">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-296">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-296">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNew">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a90-297">시스템 메모리에 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-297">Creates a memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-298">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-298">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-299">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-299">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="c0a90-300">시스템 메모리에서 지정된 용량을 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-300">Creates a memory-mapped file that has the specified capacity in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-301">지정된 이름과 용량을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-301">A memory-mapped file that has the specified name and capacity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-302">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-302">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a90-303">다음 예제에서는 작성 하는 세 가지 별도 프로세스 (콘솔 응용 프로그램)로 이루어져 `Boolean` 메모리 매핑된 파일에는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-303">The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file.</span></span> <span data-ttu-id="c0a90-304">다음 작업 시퀀스가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-304">The following sequence of actions occur:</span></span>  
  
1.  <span data-ttu-id="c0a90-305">프로세스는 메모리 매핑된 파일을 만들고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-305">Process A creates the memory-mapped file and writes a value to it.</span></span>  
  
2.  <span data-ttu-id="c0a90-306">프로세스 B 메모리 매핑된 파일이 열리고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-306">Process B opens the memory-mapped file and writes a value to it.</span></span>  
  
3.  <span data-ttu-id="c0a90-307">프로세스 C 메모리 매핑된 파일이 열리고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-307">Process C opens the memory-mapped file and writes a value to it.</span></span>  
  
4.  <span data-ttu-id="c0a90-308">프로세스는 읽고 메모리 매핑된 파일의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-308">Process A reads and displays the values from the memory-mapped file.</span></span>  
  
5.  <span data-ttu-id="c0a90-309">프로세스는 메모리 매핑된 파일을 사용 하 여 완료 되 면 가비지 수집에 의해 파일이 즉시 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-309">After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="c0a90-310">이 예제를 실행하려면 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-310">To run this example, do the following:</span></span>  
  
1.  <span data-ttu-id="c0a90-311">응용 프로그램을 컴파일하고 세 개의 명령 창을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-311">Compile the applications and open three Command windows.</span></span>  
  
2.  <span data-ttu-id="c0a90-312">첫 번째 명령 창에서 프로세스 A를 실행</span><span class="sxs-lookup"><span data-stu-id="c0a90-312">In the first Command window, run Process A.</span></span>  
  
3.  <span data-ttu-id="c0a90-313">2. 프로세스를 실행 합니다. 두 번째 명령 창에서</span><span class="sxs-lookup"><span data-stu-id="c0a90-313">In the second Command window, run Process B.</span></span>  
  
4.  <span data-ttu-id="c0a90-314">프로세스는 돌아가서 ENTER 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-314">Return to Process A and press ENTER.</span></span>  
  
5.  <span data-ttu-id="c0a90-315">세 번째 명령 창에서 3. 프로세스를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-315">In the third Command window, run Process C.</span></span>  
  
6.  <span data-ttu-id="c0a90-316">프로세스는 돌아가서 ENTER 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-316">Return to Process A and press ENTER.</span></span>  
  
 <span data-ttu-id="c0a90-317">프로세스의 출력은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-317">The output of Process A is as follows:</span></span>  
  
```  
Start Process B and press ENTER to continue.  
Start Process C and press ENTER to continue.  
Process A says: True  
Process B says: False  
Process C says: True  
```  
  
 <span data-ttu-id="c0a90-318">**프로세스 A**</span><span class="sxs-lookup"><span data-stu-id="c0a90-318">**Process A**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#1)]  
  
 <span data-ttu-id="c0a90-319">**프로세스 B**</span><span class="sxs-lookup"><span data-stu-id="c0a90-319">**Process B**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/vb/program.vb#1)]  
  
 <span data-ttu-id="c0a90-320">**프로세스 C**</span><span class="sxs-lookup"><span data-stu-id="c0a90-320">**Process C**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-321"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-321"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-322"><paramref name="capacity" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-322"><paramref name="capacity" /> is less than or equal to zero.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-323">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-323">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-324">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-324">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-325">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-325">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-326">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-326">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-327">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-327">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-328">시스템 메모리에서 지정된 용량과 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-328">Creates a memory-mapped file that has the specified capacity and access type in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-329">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-329">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-330">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-330">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-331"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-331"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-332">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-332">-or-</span></span> 
 <span data-ttu-id="c0a90-333"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-333"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-334"><paramref name="capacity" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-334"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="c0a90-335">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-335">-or-</span></span> 
 <span data-ttu-id="c0a90-336"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-336"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-337">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-337">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access, options, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-338">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-338">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-339">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-339">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-340">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-340">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-341">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-341">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="c0a90-342">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-342">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="c0a90-343">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-343">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="c0a90-344">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-344">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-345">지정된 이름, 용량, 액세스 형식, 메모리 할당 옵션 및 상속을 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-345">Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</span></span></summary>
        <returns><span data-ttu-id="c0a90-346">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-346">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-347"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-347"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-348">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-348">-or-</span></span> 
 <span data-ttu-id="c0a90-349"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-349"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-350"><paramref name="capacity" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-350"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="c0a90-351">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-351">-or-</span></span> 
 <span data-ttu-id="c0a90-352"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-352"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="c0a90-353">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-353">-or-</span></span> 
 <span data-ttu-id="c0a90-354"><paramref name="inheritability" />는 유효한 <see cref="T:System.IO.HandleInheritability" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-354"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access, options, memoryMappedFileSecurity, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-355">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-355">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-356">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-356">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-357">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-357">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-358">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-358">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="c0a90-359">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-359">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="c0a90-360">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-360">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="c0a90-361">이 매개 변수는 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-361">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="c0a90-362">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-362">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="c0a90-363">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-363">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-364">시스템 메모리에서 지정된 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속 가능성을 가진 메모리 매핑된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-364">Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-365">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-365">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-366">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-366">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-367"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-367"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-368">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-368">-or-</span></span> 
 <span data-ttu-id="c0a90-369"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-369"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-370"><paramref name="capacity" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-370"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="c0a90-371">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-371">-or-</span></span> 
 <span data-ttu-id="c0a90-372"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-372"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="c0a90-373">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-373">-or-</span></span> 
 <span data-ttu-id="c0a90-374"><paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-374"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c0a90-375">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-375">for access to unmanaged code.</span></span> <span data-ttu-id="c0a90-376">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c0a90-376">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-377">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-377">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateOrOpen">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a90-378">시스템 메모리에 메모리 매핑된 파일을 만들거나 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-378">Creates or opens a memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-379">메모리 매핑된 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-379">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-380">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-380">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="c0a90-381">시스템 메모리에서 지정된 이름 및 용량을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-381">Creates or opens a memory-mapped file that has the specified name and capacity in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-382">지정된 이름과 크기를 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-382">A memory-mapped file that has the specified name and size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-383">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 열거나 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-383">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-384"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-384"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-385"><paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-385"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="c0a90-386">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-386">-or-</span></span> 
 <span data-ttu-id="c0a90-387"><paramref name="capacity" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-387"><paramref name="capacity" /> is less than or equal to zero.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-388">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-388">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-389">메모리 매핑된 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-389">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-390">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-390">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-391">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-391">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-392">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-392">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-393">시스템 메모리에서 지정된 이름, 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-393">Creates or opens a memory-mapped file that has the specified name, capacity and access type in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-394">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-394">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-395">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 열거나 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-395">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-396"><paramref name="mapName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-396"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-397"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-397"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-398">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-398">-or-</span></span> 
 <span data-ttu-id="c0a90-399"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-399"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-400"><paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-400"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="c0a90-401">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-401">-or-</span></span> 
 <span data-ttu-id="c0a90-402"><paramref name="capacity" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-402"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="c0a90-403">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-403">-or-</span></span> 
 <span data-ttu-id="c0a90-404"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-404"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-405">운영 체제에서 파일에 지정된 액세스 권한을 거부했습니다. 예를 들어, 액세스 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-405">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-406">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-406">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access, options, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-407">메모리 매핑된 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-407">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-408">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-408">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-409">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-409">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-410">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-410">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="c0a90-411">파일에 적용할 메모리 할당 옵션을 나타내는 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-411">A bitwise combination of values that indicate the memory allocation options to apply to the file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="c0a90-412">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-412">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="c0a90-413">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-413">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-414">동일한 이름의 파일이 있는 경우 비어 있는 새 메모리 매핑된 파일을 만들거나 기존의 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-414">Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</span></span> <span data-ttu-id="c0a90-415">기존 파일을 여는 경우 용량, 옵션 및 메모리 인수가 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-415">If opening an existing file, the capacity, options, and memory arguments will be ignored.</span></span></summary>
        <returns><span data-ttu-id="c0a90-416">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-416">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-417"><paramref name="mapName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-417"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-418"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-418"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-419">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-419">-or-</span></span> 
 <span data-ttu-id="c0a90-420"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-420"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-421"><paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-421"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="c0a90-422">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-422">-or-</span></span> 
 <span data-ttu-id="c0a90-423"><paramref name="capacity" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-423"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="c0a90-424">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-424">-or-</span></span> 
 <span data-ttu-id="c0a90-425"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-425"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="c0a90-426">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-426">-or-</span></span> 
 <span data-ttu-id="c0a90-427"><paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-427"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-428">운영 체제에서 파일에 지정된 액세스 권한을 거부했습니다. 예를 들어, 액세스 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-428">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access, options, memoryMappedFileSecurity, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-429">메모리 매핑된 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-429">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="c0a90-430">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-430">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-431">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-431">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-432">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-432">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="c0a90-433">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-433">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="c0a90-434">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-434">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="c0a90-435">이 매개 변수는 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-435">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="c0a90-436">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-436">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="c0a90-437">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-437">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-438">시스템 메모리에서 지정된 이름, 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속 가능성을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-438">Creates or opens a memory-mapped file that has the specified name, capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-439">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-439">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-440">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 열거나 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-440">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-441"><paramref name="mapName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-441"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-442"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-442"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="c0a90-443">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-443">-or-</span></span> 
 <span data-ttu-id="c0a90-444"><paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-444"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-445"><paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-445"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="c0a90-446">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-446">-or-</span></span> 
 <span data-ttu-id="c0a90-447"><paramref name="capacity" />가 0보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-447"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="c0a90-448">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-448">-or-</span></span> 
 <span data-ttu-id="c0a90-449"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-449"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="c0a90-450">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-450">-or-</span></span> 
 <span data-ttu-id="c0a90-451"><paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-451"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-452">운영 체제에서 파일에 지정된 <paramref name="access" /> 권한을 거부했습니다. 예를 들어, <paramref name="access" /> 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-452">The operating system denied the specified <paramref name="access" /> to the file; for example, <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c0a90-453">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-453">for access to unmanaged code.</span></span> <span data-ttu-id="c0a90-454">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c0a90-454">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-455">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-455">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewAccessor">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a90-456">메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-456">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor () As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor();" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a90-457">메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-457">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span></span></summary>
        <returns><span data-ttu-id="c0a90-458">임의로 액세스 가능한 메모리 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-458">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-459">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-459">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-460">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-460">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-461">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-461">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : int64 * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor (offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="c0a90-462">뷰를 시작할 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-462">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="c0a90-463">뷰의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-463">The size of the view.</span></span> <span data-ttu-id="c0a90-464"><paramref name="offset" />에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-464">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="c0a90-465">지정된 오프셋과 크기를 가지고 메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-465">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset and size.</span></span></summary>
        <returns><span data-ttu-id="c0a90-466">임의로 액세스 가능한 메모리 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-466">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-467">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-467">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="c0a90-468">메모리 매핑된 파일의 전체 뷰를 만들려면 0 (영)에 대 한 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-468">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="c0a90-469">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-469">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="c0a90-470">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-470">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a90-471">다음 예제에서는 메모리 매핑된 파일의 뷰를 만들고이 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-471">The following example creates a view of a memory-mapped file and edits it.</span></span> <span data-ttu-id="c0a90-472">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-472">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#2)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-473"><paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-473"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="c0a90-474">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-474">-or-</span></span> 
 <span data-ttu-id="c0a90-475"><paramref name="size" />가 논리 주소 공간보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-475"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-476">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-476">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-477">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-477">An I/O error occurred.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-478">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-478">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : int64 * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor (offset, size, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="c0a90-479">뷰를 시작할 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-479">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="c0a90-480">뷰의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-480">The size of the view.</span></span> <span data-ttu-id="c0a90-481"><paramref name="offset" />에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-481">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-482">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-482">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-483">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-483">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-484">지정된 오프셋, 크기 및 액세스 제한을 가지고 메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-484">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</span></span></summary>
        <returns><span data-ttu-id="c0a90-485">임의로 액세스 가능한 메모리 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-485">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-486">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-486">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="c0a90-487">메모리 매핑된 파일의 전체 뷰를 만들려면 0 (영)에 대 한 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-487">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="c0a90-488">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-488">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="c0a90-489">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-489">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-490"><paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-490"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="c0a90-491">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-491">-or-</span></span> 
 <span data-ttu-id="c0a90-492"><paramref name="size" />가 논리 주소 공간보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-492"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-493"><paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-493"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-494">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-494">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c0a90-495">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-495">for access to unmanaged code.</span></span> <span data-ttu-id="c0a90-496">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c0a90-496">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-497">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-497">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a90-498">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-498">Creates a stream that maps to a view of the memory-mapped file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream () As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream();" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a90-499">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-499">Creates a stream that maps to a view of the memory-mapped file.</span></span></summary>
        <returns><span data-ttu-id="c0a90-500">메모리 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-500">A stream of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-501">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-501">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a90-502">다음 예제에서는 스트림을 만들고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-502">The following example creates a stream and writes a value to it.</span></span> <span data-ttu-id="c0a90-503">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c0a90-503">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-504">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-504">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-505">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-505">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : int64 * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream (offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="c0a90-506">뷰를 시작할 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-506">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="c0a90-507">뷰의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-507">The size of the view.</span></span> <span data-ttu-id="c0a90-508"><paramref name="offset" />에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-508">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="c0a90-509">지정된 오프셋과 크기를 가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-509">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</span></span></summary>
        <returns><span data-ttu-id="c0a90-510">지정된 오프셋과 크기를 가진 메모리 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-510">A stream of memory that has the specified offset and size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-511">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-511">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="c0a90-512">메모리 매핑된 파일의 전체 뷰를 만들려면 0 (영)에 대 한 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-512">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="c0a90-513">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-513">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="c0a90-514">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-514">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-515"><paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-515"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="c0a90-516">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-516">-or-</span></span> 
 <span data-ttu-id="c0a90-517"><paramref name="size" />가 논리 주소 공간보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-517"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-518">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-518">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-519"><paramref name="size" />가 총 가상 메모리보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-519"><paramref name="size" /> is greater than the total virtual memory.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-520">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-520">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : int64 * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream (offset, size, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="c0a90-521">뷰를 시작할 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-521">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="c0a90-522">뷰의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-522">The size of the view.</span></span> <span data-ttu-id="c0a90-523"><paramref name="offset" />에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-523">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="c0a90-524">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-524">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="c0a90-525">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-525">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-526">지정된 오프셋, 크기 및 액세스 형식을 가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-526">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</span></span></summary>
        <returns><span data-ttu-id="c0a90-527">지정된 특성을 가진 메모리 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-527">A stream of memory that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-528">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-528">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="c0a90-529">메모리 매핑된 파일의 전체 뷰를 만들려면 0 (영)에 대 한 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-529">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="c0a90-530">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-530">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="c0a90-531">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-531">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-532"><paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-532"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="c0a90-533">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-533">-or-</span></span> 
 <span data-ttu-id="c0a90-534"><paramref name="size" />가 논리 주소 공간보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-534"><paramref name="size" /> is greater than the logical address space.</span></span>  
  
<span data-ttu-id="c0a90-535">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-535">-or-</span></span> 
 <span data-ttu-id="c0a90-536"><paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-536"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-537"><paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-537"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c0a90-538"><paramref name="size" />가 총 가상 메모리보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-538"><paramref name="size" /> is greater than the total virtual memory.</span></span>  
  
<span data-ttu-id="c0a90-539">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-539">-or-</span></span> 
 <span data-ttu-id="c0a90-540"><paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-540"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c0a90-541">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-541">for access to unmanaged code.</span></span> <span data-ttu-id="c0a90-542">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c0a90-542">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-543">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-543">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a90-544"><see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-544">Releases the resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryMappedFile.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a90-545"><see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-545">Releases all resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="memoryMappedFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="c0a90-546">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-546"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c0a90-547"><see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-547">Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As MemoryMappedFileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Usage="memoryMappedFile.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a90-548">메모리 매핑된 파일 리소스에 대한 액세스 제어를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-548">Gets the access control to the memory-mapped file resource.</span></span></summary>
        <returns><span data-ttu-id="c0a90-549">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-549">The permissions that can be granted for file access and operations on memory-mapped files.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a90-550">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-550">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c0a90-551">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-551">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c0a90-552">메모리 매핑된 파일이 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-552">The memory-mapped file is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c0a90-553">현재 플랫폼은 Windows 98 또는 이전 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-553">The current platform is Windows 98 or earlier.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-554">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-554">An underlying call to set security information failed.</span></span>  
  
<span data-ttu-id="c0a90-555">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-555">-or-</span></span> 
<span data-ttu-id="c0a90-556">메모리 매핑된 파일이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로만 열렸습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-556">The memory-mapped file was opened as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> only.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-557">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-557">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a90-558">시스템 메모리에서 명명된 기존의 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-558">Opens an existing named memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting mapName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-559">메모리 매핑된 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-559">The name of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="c0a90-560">시스템 메모리에서 지정된 이름을 가진 기존의 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-560">Opens an existing memory-mapped file that has the specified name in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-561">지정된 이름을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-561">A memory-mapped file that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a90-562">메모리 매핑된 파일에는 비지속형 또는 하거나 지속형된 메모리 매핑된 파일 (디스크의 파일에 연결) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-562">The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non-persisted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a90-563">**지속형된 메모리 매핑된 파일 열기**</span><span class="sxs-lookup"><span data-stu-id="c0a90-563">**Opening a Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="c0a90-564">다음 예제에서는 명명 된 메모리 매핑된 파일을 엽니다 `ImgA` 이미 디스크에 있는 파일 로부터 만들어진 (에 대 한 예제와 같이 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> 메서드).</span><span class="sxs-lookup"><span data-stu-id="c0a90-564">The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).</span></span>  
  
 [!code-csharp[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/cs/program.cs#1)]
 [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/vb/program.vb#1)]  
  
 <span data-ttu-id="c0a90-565">**비지속형 메모리 매핑된 파일 열기**</span><span class="sxs-lookup"><span data-stu-id="c0a90-565">**Opening a Non-Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="c0a90-566">다음 예제에서는 프로세스 간 통신에 사용 되는 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-566">The following example opens a memory-mapped file used for inter-process communication.</span></span> <span data-ttu-id="c0a90-567">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c0a90-567">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-568"><paramref name="mapName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-568"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-569"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-569"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c0a90-570"><paramref name="mapName" />에 지정된 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-570">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-571">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-571">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.IO.MemoryMappedFiles.MemoryMappedFileRights -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting (mapName, desiredAccessRights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-572">열려는 메모리 매핑된 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-572">The name of the memory-mapped file to open.</span></span></param>
        <param name="desiredAccessRights"><span data-ttu-id="c0a90-573">메모리 매핑된 파일에 적용할 액세스 권한을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-573">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="c0a90-574">시스템 메모리에서 지정된 이름과 액세스 권한을 가진 기존의 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-574">Opens an existing memory-mapped file that has the specified name and access rights in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-575">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-575">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-576"><paramref name="mapName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-576"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-577"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-577"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-578"><paramref name="desiredAccessRights" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-578"><paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c0a90-579"><paramref name="mapName" />에 지정된 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-579">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-580">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-580">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.IO.MemoryMappedFiles.MemoryMappedFileRights * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting (mapName, desiredAccessRights, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="c0a90-581">열려는 메모리 매핑된 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-581">The name of the memory-mapped file to open.</span></span></param>
        <param name="desiredAccessRights"><span data-ttu-id="c0a90-582">메모리 매핑된 파일에 적용할 액세스 권한을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-582">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="c0a90-583">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-583">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="c0a90-584">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-584">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="c0a90-585">시스템 메모리에서 지정된 이름, 액세스 권한 및 상속 가능성을 가진 기존의 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-585">Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="c0a90-586">지정된 특성을 가진 메모리 매핑된 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-586">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-587"><paramref name="mapName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-587"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a90-588"><paramref name="mapName" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-588"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a90-589"><paramref name="desiredAccessRights" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-589"><paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span></span>  
  
<span data-ttu-id="c0a90-590">또는</span><span class="sxs-lookup"><span data-stu-id="c0a90-590">-or-</span></span> 
 <span data-ttu-id="c0a90-591"><paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-591"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-592">요청된 액세스는 메모리 매핑된 파일에 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-592">The requested access is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c0a90-593"><paramref name="mapName" />에 지정된 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-593">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c0a90-594">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-594">for access to unmanaged code.</span></span> <span data-ttu-id="c0a90-595">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c0a90-595">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-596">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-596">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SafeMemoryMappedFileHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeMemoryMappedFileHandle As SafeMemoryMappedFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ SafeMemoryMappedFileHandle { Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeMemoryMappedFileHandle : Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0a90-597">메모리 매핑된 파일의 파일 핸들을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-597">Gets the file handle of a memory-mapped file.</span></span></summary>
        <value><span data-ttu-id="c0a90-598">메모리 매핑된 파일의 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-598">The handle to the memory-mapped file.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c0a90-599">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-599">for access to unmanaged code.</span></span> <span data-ttu-id="c0a90-600">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c0a90-600">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-601">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-601">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.IO.MemoryMappedFiles.MemoryMappedFileSecurity -&gt; unit" Usage="memoryMappedFile.SetAccessControl memoryMappedFileSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="c0a90-602">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-602">The permissions that can be granted for file access and operations on memory-mapped files.</span></span></param>
        <summary><span data-ttu-id="c0a90-603">메모리 매핑된 파일 리소스에 대한 액세스 제어를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-603">Sets the access control to the memory-mapped file resource.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a90-604"><paramref name="memoryMappedFileSecurity" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c0a90-604"><paramref name="memoryMappedFileSecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a90-605">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-605">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c0a90-606">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-606">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c0a90-607">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span><span class="sxs-lookup"><span data-stu-id="c0a90-607">An underlying call to set security information failed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a483d1b5-64aa-45b6-86ef-11b859f7f02e"><span data-ttu-id="c0a90-608">메모리 매핑된 파일</span><span class="sxs-lookup"><span data-stu-id="c0a90-608">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>