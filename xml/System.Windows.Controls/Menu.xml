<Type Name="Menu" FullName="System.Windows.Controls.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc19385e61fc1e493c4773ab4603db4421ad209d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57912086" /></Metadata><TypeSignature Language="C#" Value="public class Menu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Menu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="30326-101">명령 및 이벤트 처리기에 연결된 요소를 계층적으로 구성할 수 있는 Windows 메뉴 컨트롤을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="30326-101">Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30326-102"><xref:System.Windows.Controls.Menu> 컨트롤에 명령 또는 응용 프로그램에 대 한 옵션을 지정 하는 항목의 목록을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-102">The <xref:System.Windows.Controls.Menu> control presents a list of items that specify commands or options for an application.</span></span> <span data-ttu-id="30326-103">일반적으로 메뉴에 항목을 클릭 하면 하위 메뉴를 엽니다 또는 명령을 실행 하는 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-103">Typically, clicking an item on a menu opens a submenu or causes an application to carry out a command.</span></span>  
  
 <span data-ttu-id="30326-104"><xref:System.Windows.Controls.Menu> 가 <xref:System.Windows.Controls.ItemsControl>, 즉 모든 형식 (예: 문자열, 이미지 또는 패널) 개체의 컬렉션을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-104"><xref:System.Windows.Controls.Menu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="30326-105">자세한 내용은 <xref:System.Windows.Controls.ItemsControl> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="30326-105">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span> <span data-ttu-id="30326-106">합니다 <xref:System.Windows.Controls.MenuItem> 에 있는 항목의 가장 일반적인 형식인는 <xref:System.Windows.Controls.Menu>합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-106">The <xref:System.Windows.Controls.MenuItem> is the most common type of item in a <xref:System.Windows.Controls.Menu>.</span></span> <span data-ttu-id="30326-107"><xref:System.Windows.Controls.MenuItem> 자식 항목을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-107">A <xref:System.Windows.Controls.MenuItem> can contain child items.</span></span> <span data-ttu-id="30326-108">사용자가 부모 자식 항목에 하위 메뉴에 표시 됩니다 <xref:System.Windows.Controls.MenuItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-108">The child items will appear in a submenu when the user chooses a parent <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
## <a name="customizing-the-menu-control"></a><span data-ttu-id="30326-109">메뉴 컨트롤 사용자 지정</span><span class="sxs-lookup"><span data-stu-id="30326-109">Customizing the Menu Control</span></span>  
 <span data-ttu-id="30326-110">여러 동일한 속성 설정에 적용할 <xref:System.Windows.Controls.Menu> 컨트롤을 사용 하 여는 <xref:System.Windows.FrameworkElement.Style%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-110">To apply the same property settings to multiple <xref:System.Windows.Controls.Menu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="30326-111">기본값을 수정할 수 있습니다 <xref:System.Windows.Controls.ControlTemplate> 고유한 모양을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-111">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="30326-112">만들기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ControlTemplate>를 참조 하세요 [ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-112">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="30326-113">부분과 관련 된 상태를 볼 수는 <xref:System.Windows.Controls.Menu>를 참조 하세요 [Menu 스타일 및 템플릿](~/docs/framework/wpf/controls/menu-styles-and-templates.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-113">To see the parts and states that are specific to the <xref:System.Windows.Controls.Menu>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="30326-114">이 컨트롤에 대 한 종속성 속성은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-114">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="30326-115">속성이 설정 된 기본 스타일을 컨트롤 응용 프로그램에 표시 되 면 속성 값이 기본값에서 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-115">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="30326-116">기본 스타일은 응용 프로그램 실행 중일 때 사용 되는 바탕 화면 테마에서 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30326-116">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="30326-117">자세한 내용은 [기본 WPF 테마](https://go.microsoft.com/fwlink/?LinkID=158252)합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-117">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.MenuItem" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="30326-118">WPF 컨트롤 갤러리 샘플</span><span class="sxs-lookup"><span data-stu-id="30326-118">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30326-119"><see cref="T:System.Windows.Controls.Menu" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-119">Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected override void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menu.HandleMouseButton e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="30326-120">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-120">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="30326-121">마우스 단추를 누르거나 놓을 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="30326-121">Called when any mouse button is pressed or released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenu">
      <MemberSignature Language="C#" Value="public bool IsMainMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMainMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Menu.IsMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMainMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMainMenu { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMainMenu : bool with get, set" Usage="System.Windows.Controls.Menu.IsMainMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30326-122">이 <see cref="T:System.Windows.Controls.Menu" />에서 주 메뉴 활성화 알림을 받는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-122">Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu" /> receives a main menu activation notification.</span></span></summary>
        <value><span data-ttu-id="30326-123">메뉴에서 주 메뉴 활성화 알림을 받으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-123"><see langword="true" /> if the menu receives a main menu activation notification; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="30326-124">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-124">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30326-125">여러 개 있을 경우 <xref:System.Windows.Controls.Menu> 페이지에서 컨트롤 <xref:System.Windows.Controls.Menu> F10 또는 ALT 키 알림을 받지 않아야 하는 컨트롤이 속성을 설정 해야 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-125">If there are multiple <xref:System.Windows.Controls.Menu> controls on a page, <xref:System.Windows.Controls.Menu> controls that should not receive ALT or F10 key notifications should set this property to `false`.</span></span>  
  
<a name="dependencyPropertyInfo_IsMainMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="30326-126">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="30326-126">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="30326-127">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="30326-127">Identifier field</span></span>|<xref:System.Windows.Controls.Menu.IsMainMenuProperty>|  
|<span data-ttu-id="30326-128">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="30326-128">Metadata properties set to `true`</span></span>|<span data-ttu-id="30326-129">없음</span><span class="sxs-lookup"><span data-stu-id="30326-129">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="30326-130">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.Menu.IsMainMenu%2A> 만들 속성을 <xref:System.Windows.Controls.Menu> 활성화 알림을 수신 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-130">The following example shows how to use the <xref:System.Windows.Controls.Menu.IsMainMenu%2A> property to create a <xref:System.Windows.Controls.Menu> that does not receive activation notification.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#MenuIsMainMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#menuismainmenu)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="30326-131">WPF 컨트롤 갤러리 샘플</span><span class="sxs-lookup"><span data-stu-id="30326-131">WPF Controls Gallery Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMainMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMainMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMainMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMainMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMainMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30326-132"><see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-132">Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="menu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30326-133">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 자동화 인프라의 일부로 이 컨트롤에 대한 적절한 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-133">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span></span></summary>
        <returns><span data-ttu-id="30326-134">형식별 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-134">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="menu.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="30326-135">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-135">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="30326-136"><see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 속성이 <see langword="true" />로 설정될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="30326-136">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="30326-137">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Input.KeyEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-137">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="30326-138"><see cref="E:System.Windows.ContentElement.KeyDown" /> 이벤트에 응답합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-138">Responds to the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="menu.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="30326-139">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-139">The event data.</span></span></param>
        <summary><span data-ttu-id="30326-140">메뉴가 임의의 장치에서 텍스트 입력을 받으면 발생하는 <see cref="E:System.Windows.UIElement.TextInput" /> 라우트된 이벤트를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-140">Handles the <see cref="E:System.Windows.UIElement.TextInput" /> routed event that occurs when the menu receives text input from any device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30326-141">이 구현은 처리 상태를 변경 하지 않습니다 (합니다 <xref:System.Windows.RoutedEventArgs.Handled%2A> 속성)의 <xref:System.Windows.UIElement.TextInput> 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-141">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.TextInput> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="30326-142">재정의 하는 경우 <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, 항상 기본 구현을 호출 하면 <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-142">If you override <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> implementation.</span></span> <span data-ttu-id="30326-143">최종 클래스의 런타임 동작을 변경할 수는 클래스 처리기를 사용 하 여 이벤트 처리에서 기본 클래스를 방지 하는 기본 구현을 호출 하지 못했습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-143">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="30326-144">기본 구현은 앞 이나 뒤에 특수 한 처리 요구 사항에 따라 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-144">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="menu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="30326-145">지정된 항목을 표시하는 데 사용되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-145">The element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="30326-146">표시할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="30326-146">The item to display.</span></span></param>
        <summary><span data-ttu-id="30326-147">지정한 항목을 표시하기 위해 지정한 요소를 준비합니다.</span><span class="sxs-lookup"><span data-stu-id="30326-147">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30326-148">요소를 준비 하 고 스타일, 바인딩 설정 적용을 포함 하 고 등 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30326-148">Preparing the element might involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>