<Type Name="ValidationRule" FullName="System.Windows.Controls.ValidationRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0086f68d83567c0b78f8c8cc9985293a8d86dd0" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57928011" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidationRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationRule abstract" />
  <TypeSignature Language="F#" Value="type ValidationRule = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="82604-101">사용자 입력의 유효성을 검사하기 위해 사용자 지정 규칙을 만드는 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-101">Provides a way to create a custom rule in order to check the validity of user input.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82604-102">사용 하는 경우는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 연결할 수 있습니다 데이터 바인딩 모델을 <xref:System.Windows.Data.Binding.ValidationRules%2A> 바인딩 개체를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-102">When you use the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model, you can associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your binding object.</span></span> <span data-ttu-id="82604-103">사용자 지정 규칙을 만들려면이의 서브 클래스를 구현 하 고 확인을 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="82604-103">To create custom rules, make a subclass of this class and implement the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="82604-104">필요에 따라 사용 하 여 기본 제공 <xref:System.Windows.Controls.ExceptionValidationRule>, 원본 업데이트 중에 throw 되는 예외를 catch 하는 또는 <xref:System.Windows.Controls.DataErrorValidationRule>에서 발생 한 오류에 대 한 확인을 <xref:System.ComponentModel.IDataErrorInfo> 소스 개체의 구현.</span><span class="sxs-lookup"><span data-stu-id="82604-104">Optionally, use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which catches exceptions that are thrown during source updates, or the <xref:System.Windows.Controls.DataErrorValidationRule>, which checks for errors raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span>  
  
 <span data-ttu-id="82604-105">바인딩 엔진에서는 각 검사 <xref:System.Windows.Controls.ValidationRule> 될 때마다 바인딩 소스 속성에는 바인딩 대상 속성 값 입력된 값을 전송 바인딩과 사용 하 여 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-105">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> that is associated with a binding every time it transfers an input value, which is the binding target property value, to the binding source property.</span></span>  
  
 <span data-ttu-id="82604-106">데이터 유효성 검사에 대 한 자세한 내용은 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-106">For detailed information about data validation, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="82604-107">대화 상자에서 사용자가 제공한 데이터의 유효성을 검사 하는 방법에 대 한 정보를 참조 하세요 [대화 상자 개요](~/docs/framework/wpf/app-development/dialog-boxes-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-107">For information about how to validate user-provided data in a dialog box, see [Dialog Boxes Overview](~/docs/framework/wpf/app-development/dialog-boxes-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82604-108">다음 예에서는 유효성 검사 규칙을 구현 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="82604-108">The following example shows how to implement a validation rule.</span></span> <span data-ttu-id="82604-109">입력된 값은 숫자가 아닌 문자를 포함 하는 경우 또는를 벗어난 경우 하 한과 상한을 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="82604-109">The input value is invalid if it contains non-numeric characters or if it is outside the lower and upper bounds.</span></span> <span data-ttu-id="82604-110">경우 반환 된 값 <xref:System.Windows.Controls.ValidationResult> 유효 하지 않은 합니다 <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> 적절 한 오류 메시지 속성 및 <xref:System.Windows.Controls.ValidationResult.IsValid%2A> 속성이 `false`.</span><span class="sxs-lookup"><span data-stu-id="82604-110">If the value of the returned <xref:System.Windows.Controls.ValidationResult> is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property is set to the appropriate error message and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="82604-111">전체 예제는 [방법: 바인딩 유효성 검사 구현](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-111">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82604-112"><see cref="T:System.Windows.Controls.ValidationRule" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-112">Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82604-113"><see cref="T:System.Windows.Controls.ValidationRule" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-113">Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule(System::Windows::Controls::ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationRule : System.Windows.Controls.ValidationStep * bool -&gt; System.Windows.Controls.ValidationRule" Usage="new System.Windows.Controls.ValidationRule (validationStep, validatesOnTargetUpdated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="validationStep" Type="System.Windows.Controls.ValidationStep" />
        <Parameter Name="validatesOnTargetUpdated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validationStep"><span data-ttu-id="82604-114">유효성 검사 규칙이 실행되는 시기를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-114">One of the enumeration values that specifies when the validation rule runs.</span></span></param>
        <param name="validatesOnTargetUpdated"><span data-ttu-id="82604-115"><see cref="T:System.Windows.Data.Binding" />의 대상이 업데이트될 때 유효성 검사가 실행되도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-115"><see langword="true" /> to have the validation rule run when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="82604-116">지정된 유효성 검사 단계와 대상이 업데이트될 때 유효성 검사가 실행되는지 여부를 나타내는 값을 사용하여 <see cref="T:System.Windows.Controls.ValidationRule" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-116">Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule" /> class with the specified validation step and a value that indicates whether the validation rule runs when the target is updated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82604-117">값에 대한 유효성 검사를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-117">Performs validation checks on a value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="82604-118">검사할 바인딩 대상 값입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-118">The value from the binding target to check.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="82604-119">이 규칙에 사용할 문화권입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-119">The culture to use in this rule.</span></span></param>
        <summary><span data-ttu-id="82604-120">파생 클래스에서 재정의하는 경우 값에 대한 유효성 검사를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-120">When overridden in a derived class, performs validation checks on a value.</span></span></summary>
        <returns><span data-ttu-id="82604-121"><see cref="T:System.Windows.Controls.ValidationResult" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-121">A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82604-122">서브 클래스를 만들 때이 메서드를 구현 해야 하는 <xref:System.Windows.Controls.ValidationRule> 사용자 지정 유효성 검사 규칙을 만들기 위해 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-122">You must implement this method when you create a subclass of the <xref:System.Windows.Controls.ValidationRule> class in order to create a custom validation rule.</span></span>  
  
 <span data-ttu-id="82604-123">때마다 바인딩 소스 속성 (기본 데이터) (사용자 입력)에서 바인딩 대상 속성의 값을 전송 하는 데이터 바인딩 엔진, 확인 했는지 여부를 <xref:System.Windows.Data.Binding.ValidationRules%2A> 바인딩에 대해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="82604-123">Each time the data binding engine transfers a value from the binding target property (from user input) to the binding source property (the underlying data), it checks whether any <xref:System.Windows.Data.Binding.ValidationRules%2A> are defined for that binding.</span></span> <span data-ttu-id="82604-124">하는 경우 <xref:System.Windows.Data.Binding.ValidationRules%2A> 바인딩 엔진 호출에 대해 정의 된 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 각 <xref:System.Windows.Controls.ValidationRule> 모두 통과 하거나 둘 중 오류가 발견 될 때까지.</span><span class="sxs-lookup"><span data-stu-id="82604-124">If <xref:System.Windows.Data.Binding.ValidationRules%2A> are defined for the binding, the engine calls the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method on each <xref:System.Windows.Controls.ValidationRule> until one of them finds an error or until all of them pass.</span></span>  
  
 <span data-ttu-id="82604-125">데이터 유효성 검사에 대 한 자세한 내용은 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-125">For detailed information about data validation, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82604-126">다음 예에서는 유효성 검사 규칙을 구현 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="82604-126">The following example shows how to implement a validation rule.</span></span> <span data-ttu-id="82604-127">다음 예제에서는 입력된 값은 올바르지 않습니다 숫자가 아닌 문자를 포함 하는 경우 또는를 벗어난 경우 하 한과 상한을.</span><span class="sxs-lookup"><span data-stu-id="82604-127">In the following example, the input value is invalid if it contains non-numeric characters or if it is outside the lower and upper bounds.</span></span> <span data-ttu-id="82604-128">입력된 값은 유효 하지 않은 경우는 <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> 적절 한 오류 메시지 속성 및 <xref:System.Windows.Controls.ValidationResult.IsValid%2A> 속성이 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-128">If the input value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property is set to the appropriate error message and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="82604-129">전체 예제는 [방법: 바인딩 유효성 검사 구현](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-129">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
        <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159972"><span data-ttu-id="82604-130">바인딩 유효성 검사 샘플</span><span class="sxs-lookup"><span data-stu-id="82604-130">Binding Validation Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingExpressionBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingExpressionBase ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingExpressionBase" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="82604-131">검사할 바인딩 대상 값입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-131">The value from the binding target to check.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="82604-132">이 규칙에 사용할 문화권입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-132">The culture to use in this rule.</span></span></param>
        <param name="owner"><span data-ttu-id="82604-133">유효성 검사 규칙을 사용하는 바인딩 식입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-133">The binding expression that uses the validation rule.</span></span></param>
        <summary><span data-ttu-id="82604-134">값에 대한 유효성 검사를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-134">Performs validation checks on a value.</span></span></summary>
        <returns><span data-ttu-id="82604-135"><see cref="T:System.Windows.Controls.ValidationResult" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-135">A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingGroup owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingGroup ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingGroup" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="82604-136">검사할 바인딩 대상 값입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-136">The value from the binding target to check.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="82604-137">이 규칙에 사용할 문화권입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-137">The culture to use in this rule.</span></span></param>
        <param name="owner"><span data-ttu-id="82604-138">유효성 검사 규칙을 사용하는 바인딩 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-138">The binding group that uses the validation rule.</span></span></param>
        <summary><span data-ttu-id="82604-139">값에 대한 유효성 검사를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-139">Performs validation checks on a value.</span></span></summary>
        <returns><span data-ttu-id="82604-140"><see cref="T:System.Windows.Controls.ValidationResult" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-140">A <see cref="T:System.Windows.Controls.ValidationResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool ValidatesOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnTargetUpdated : bool with get, set" Usage="System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82604-141"><see cref="T:System.Windows.Data.Binding" />의 대상이 업데이트될 때 유효성 검사가 실행되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-141">Gets or sets a value that indicates whether the validation rule runs when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated.</span></span></summary>
        <value><span data-ttu-id="82604-142"><see cref="T:System.Windows.Data.Binding" />의 대상이 업데이트될 때 유효성 검사가 실행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-142"><see langword="true" /> if the validation rule runs when the target of the <see cref="T:System.Windows.Data.Binding" /> is updated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="82604-143">다음 예제에서는 검사 하는지 여부를 <xref:System.Windows.Controls.TextBox> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="82604-143">The following example checks whether the <xref:System.Windows.Controls.TextBox> is empty.</span></span> <span data-ttu-id="82604-144"><xref:System.Windows.Controls.ValidationRule>, `ValueIsNotNull`에 <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> 로 설정 `true`응용 프로그램이 시작 되 면 되도록를 <xref:System.Windows.Controls.ValidationRule> 실행 하는 경우 메시지를 표시 하는 데는 <xref:System.Windows.Controls.TextBox> 비어 합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-144">The <xref:System.Windows.Controls.ValidationRule>, `ValueIsNotNull`, has <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> set to `true`, so that when the application starts, the <xref:System.Windows.Controls.ValidationRule> runs and displays a message if the <xref:System.Windows.Controls.TextBox> is empty.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  
  
 <span data-ttu-id="82604-145">다음 예제에서는 합니다 <xref:System.Windows.Controls.ValidationRule> 앞의 예제에 대 한 이벤트 처리기에 사용 되는 <xref:System.Windows.Controls.Validation.Error> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-145">The following example shows the <xref:System.Windows.Controls.ValidationRule> that is used in the previous example and the event handler for the <xref:System.Windows.Controls.Validation.Error> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]
 [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationStep">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationStep ValidationStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationStep ValidationStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationStep As ValidationStep" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationStep ValidationStep { System::Windows::Controls::ValidationStep get(); void set(System::Windows::Controls::ValidationStep value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationStep : System.Windows.Controls.ValidationStep with get, set" Usage="System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82604-146">유효성 검사가 실행되는 시점을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-146">Gets or sets when the validation rule runs.</span></span></summary>
        <value><span data-ttu-id="82604-147">열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-147">One of the enumeration values.</span></span>  <span data-ttu-id="82604-148">기본값은 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="82604-148">The default is <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="82604-149">다음 예제에서는 합니다 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 를 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> 에 <xref:System.Windows.Controls.ValidationRule> 호출 `ValidateDateAndPrice` 실행 하면 되도록를 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드가 값을 원본 속성의 형식에 대 한 액세스.</span><span class="sxs-lookup"><span data-stu-id="82604-149">The following example sets the <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> on the <xref:System.Windows.Controls.ValidationRule> called `ValidateDateAndPrice` so that when it runs, the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method has access to values that are of the source property's type.</span></span> <span data-ttu-id="82604-150">때 규칙 `PriceIsAPositiveNumber` 하 고 `FutureDateRule` 를 실행 하 고 각각의 값 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드는 문자열 값을 해당 형식으로 변환 되기 전에 규칙 실행 되기 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="82604-150">When the rules `PriceIsAPositiveNumber` and `FutureDateRule` run, the values in each <xref:System.Windows.Controls.ValidationRule.Validate%2A> method are strings because the rules run before the values are converted to their respective types.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="82604-151">다음 예제는 <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-151">The following example shows the <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`.</span></span> <span data-ttu-id="82604-152">에 `Validate` 메서드 재정의 `Price` 형식의 속성은 <xref:System.Double> 및 `OfferExpires` 형식의 속성은 <xref:System.DateTime> 문자열의 시간을 기준으로 해당 형식으로 변환 된 때문에 <xref:System.Windows.Controls.ValidationRule> 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="82604-152">In the `Validate` method override, the `Price` property is of type <xref:System.Double> and the `OfferExpires` property is of type <xref:System.DateTime> because the strings have been converted to their respective types by the time the <xref:System.Windows.Controls.ValidationRule> runs.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>