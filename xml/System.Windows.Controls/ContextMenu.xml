<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76717e86738e171acf4d9492004f6ea549c05fbd" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57959302" /></Metadata><TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="23662-101">컨트롤에서 해당 컨트롤의 컨텍스트에 고유한 기능을 노출할 수 있도록 하는 팝업 메뉴를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="23662-101">Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-102"><xref:System.Windows.Controls.ContextMenu> 가 <xref:System.Windows.Controls.ItemsControl>, 즉 모든 형식 (예: 문자열, 이미지 또는 패널) 개체의 컬렉션을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23662-102"><xref:System.Windows.Controls.ContextMenu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="23662-103">자세한 내용은 <xref:System.Windows.Controls.ItemsControl> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="23662-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="23662-104">속성을 <xref:System.Windows.Controls.ContextMenu> 클래스를 사용 하 여 위치와 동작을 정의할 수는 <xref:System.Windows.Controls.ContextMenu>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-104">The properties of the <xref:System.Windows.Controls.ContextMenu> class are used to define the position and behavior of the <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 <span data-ttu-id="23662-105">A <xref:System.Windows.FrameworkElement> 나 <xref:System.Windows.FrameworkContentElement> 가질 수 있습니다는 <xref:System.Windows.Controls.ContextMenu>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-105">A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a <xref:System.Windows.Controls.ContextMenu>.</span></span>  <span data-ttu-id="23662-106">할당 하는 경우는 <xref:System.Windows.Controls.ContextMenu> 에 <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> 또는 <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> 속성을는 <xref:System.Windows.Controls.ContextMenuService> 사용자 상호 작용에 대 한 응답으로 상황에 맞는 메뉴 작업을 처리 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-106">If you assign a <xref:System.Windows.Controls.ContextMenu> to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction.</span></span> <span data-ttu-id="23662-107">작업 중 일부는 <xref:System.Windows.Controls.ContextMenuService> 않습니다 열리고는 <xref:System.Windows.Controls.ContextMenu> 컨트롤 위에 마우스 오른쪽 단추를 클릭할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-107">Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the <xref:System.Windows.Controls.ContextMenu> when the user clicks the right mouse button over the control.</span></span>  
  
 <span data-ttu-id="23662-108">다음 속성으로 정의 된 합니다 <xref:System.Windows.Controls.ContextMenu> 및 <xref:System.Windows.Controls.ContextMenuService> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-108">The following properties are defined by the <xref:System.Windows.Controls.ContextMenu> and <xref:System.Windows.Controls.ContextMenuService> classes.</span></span>  <span data-ttu-id="23662-109">둘 다에서 이러한 속성에 설정 된 경우 <xref:System.Windows.Controls.ContextMenu> 하며 <xref:System.Windows.Controls.ContextMenuService>, 속성 값을는 <xref:System.Windows.Controls.ContextMenuService> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-109">If any of these properties are set on both <xref:System.Windows.Controls.ContextMenu> and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.</span></span>  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 <span data-ttu-id="23662-110">A <xref:System.Windows.Controls.ContextMenu> 내에서 자동으로 배치 되는 <xref:System.Windows.Controls.Primitives.Popup> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-110">A <xref:System.Windows.Controls.ContextMenu> is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="23662-111">이 동작을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="23662-111">This behavior cannot be changed.</span></span>  
  
## <a name="customizing-the-contextmenu-control"></a><span data-ttu-id="23662-112">ContextMenu 컨트롤 사용자 지정</span><span class="sxs-lookup"><span data-stu-id="23662-112">Customizing the ContextMenu Control</span></span>  
 <span data-ttu-id="23662-113">여러 동일한 속성 설정에 적용할 <xref:System.Windows.Controls.ContextMenu> 컨트롤을 사용 하 여는 <xref:System.Windows.FrameworkElement.Style%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-113">To apply the same property settings to multiple <xref:System.Windows.Controls.ContextMenu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="23662-114">기본값을 수정할 수 있습니다 <xref:System.Windows.Controls.ControlTemplate> 고유한 모양을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23662-114">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="23662-115">만들기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ControlTemplate>를 참조 하세요 [ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-115">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="23662-116">부분과 관련 된 상태를 확인 하려면 합니다 <xref:System.Windows.Controls.ContextMenu>를 참조 하세요 [ContextMenu 스타일 및 템플릿](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-116">To see the parts and states that are specific to the <xref:System.Windows.Controls.ContextMenu>, see [ContextMenu Styles and Templates](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="23662-117">이 컨트롤에 대 한 종속성 속성은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23662-117">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="23662-118">속성이 설정 된 기본 스타일을 컨트롤 응용 프로그램에 표시 되 면 속성 값이 기본값에서 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23662-118">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="23662-119">기본 스타일은 응용 프로그램 실행 중일 때 사용 되는 바탕 화면 테마에서 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-119">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="23662-120">자세한 내용은 [기본 WPF 테마](https://go.microsoft.com/fwlink/?LinkID=158252)합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-120">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="23662-121">다음 예제에서는 한 <xref:System.Windows.Controls.ContextMenu> 의 텍스트를 조작 하는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-121">The following example creates a <xref:System.Windows.Controls.ContextMenu> that manipulates the text of a <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="23662-122">구독 하 고 이벤트를 처리 하는 방법을 보여 줍니다 <xref:System.Windows.Controls.MenuItem> 개체는 <xref:System.Windows.Controls.ContextMenu>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-122">The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23662-123"><see cref="T:System.Windows.Controls.ContextMenu" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : System.Windows.RoutedEventHandler " Usage="member this.Closed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-124"><see cref="T:System.Windows.Controls.ContextMenu" />의 특정 인스턴스가 닫힐 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-124">Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="23662-125">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="23662-125">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-126">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-126">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|<span data-ttu-id="23662-127">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="23662-127">Routing strategy</span></span>|<span data-ttu-id="23662-128">버블링</span><span class="sxs-lookup"><span data-stu-id="23662-128">Bubbling</span></span>|  
|<span data-ttu-id="23662-129">대리자</span><span class="sxs-lookup"><span data-stu-id="23662-129">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="23662-130">다음 방법을 보여 주는 예제는 <xref:System.Windows.Controls.ContextMenu> 이벤트: <xref:System.Windows.Controls.ContextMenu.Opened> 고 <xref:System.Windows.Controls.ContextMenu.Closed>입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-130">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-131"><see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 라우트된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-131">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-132">화면에서 <see cref="T:System.Windows.Controls.ContextMenu" />가 배치되는 위치를 나타내는 콜백을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-132">Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</span></span></summary>
        <value><span data-ttu-id="23662-133"><see cref="T:System.Windows.Controls.ContextMenu" />의 위치를 지정하는 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-133">A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-134">합니다 <xref:System.Windows.Controls.ContextMenu.Placement%2A> 속성으로 설정 되어 있어야 <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> 사용할 콜백 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-134">The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> for the callback delegate to be used.</span></span>  
  
 <span data-ttu-id="23662-135"><xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> 대리자가 가능한 지점 기준으로 정의 된 배열을 반환 합니다 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-135">The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span></span> <span data-ttu-id="23662-136">크기를 최대화는 지점이 선택은 상황에 맞는 메뉴 표시 되 면는 <xref:System.Windows.Controls.ToolTip> 표시 되는 창입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-136">When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.</span></span>  
  
 <span data-ttu-id="23662-137">동작 팝업에 대 한 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-137">The behavior is the same as it is for the popup.</span></span>  <span data-ttu-id="23662-138">자세한 내용은 [방법: 사용자 지정 팝업 위치 지정](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) 하 고 [Popup 배치 샘플](https://go.microsoft.com/fwlink/?LinkID=160032)합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-138">For more information, see [How to: Specify a Custom Popup Position](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) and [Popup Placement Sample](https://go.microsoft.com/fwlink/?LinkID=160032).</span></span>  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-139">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-140">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-140">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="23662-141">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="23662-142">없음</span><span class="sxs-lookup"><span data-stu-id="23662-142">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-143"><see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-143">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-144">컨트롤에서 스크롤을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="23662-144">Gets a value that indicates whether the control supports scrolling.</span></span></summary>
        <value><span data-ttu-id="23662-145">항상 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-145">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-146">컨트롤에 있으면를 <xref:System.Windows.Controls.ScrollViewer> 의 스타일에 있고 사용자 지정 키보드 스크롤 동작이 <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> 반환할지 `true`.</span><span class="sxs-lookup"><span data-stu-id="23662-146">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool with get, set" Usage="System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-147">상황에 맞는 메뉴가 그림자와 함께 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-147">Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</span></span></summary>
        <value><span data-ttu-id="23662-148">상황에 맞는 메뉴가 끌어 놓은 그림자와 함께 나타나면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-148"><see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="23662-149">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-149">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-150">경우는 <xref:System.Windows.Controls.ContextMenu> 가 열립니다. 그러면 값의 값으로 설정 되어 <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-150">When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="23662-151">이 속성을 설정 `true` 영향을 주지 않습니다 경우는 <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-151">Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property is `false`.</span></span>  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-152">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-152">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-153">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-153">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|<span data-ttu-id="23662-154">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-154">Metadata properties set to `true`</span></span>|<span data-ttu-id="23662-155">없음</span><span class="sxs-lookup"><span data-stu-id="23662-155">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="23662-156">다음 예제에서는 <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="23662-156">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> property.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-157"><see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-157">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-158">대상 원점과 팝업 맞춤 지점 간의 가로 거리를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-158">Get or sets the horizontal distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="23662-159">대상 원점과 팝업 맞춤 지점 간의 가로 거리입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-159">The horizontal distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="23662-160">대상 원점 및 popup 맞춤 지점에 대 한 정보를 참조 하세요 [Popup 배치 동작](~/docs/framework/wpf/controls/popup-placement-behavior.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-160">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="23662-161">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-161">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-162">위치를 지정할 수는 <xref:System.Windows.Controls.ContextMenu> 설정 하 여는 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, 및 <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-162">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="23662-163">이러한 속성 동일 하 게 동작에 대 한 것과 <xref:System.Windows.Controls.Primitives.Popup>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-163">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="23662-164">자세한 내용은 [Popup 배치 동작](~/docs/framework/wpf/controls/popup-placement-behavior.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="23662-164">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-165">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-165">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-166">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-166">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|<span data-ttu-id="23662-167">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-167">Metadata properties set to `true`</span></span>|<span data-ttu-id="23662-168">없음</span><span class="sxs-lookup"><span data-stu-id="23662-168">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="23662-169">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="23662-169">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="23662-170">XAML 값</span><span class="sxs-lookup"><span data-stu-id="23662-170">XAML Values</span></span>  
 <span data-ttu-id="23662-171">*double*</span><span class="sxs-lookup"><span data-stu-id="23662-171">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="23662-172">문자열 표현 된 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-172">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="23662-173">이것은 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 측정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-173">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="23662-174">문자열 소수점이 하를 명시적으로 포함 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-174">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="23662-175">예를 들어 값 `1` 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-175">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="23662-176">동일한 <xref:System.Double> 속성 값 섹션에서 설명한 것 처럼 범위 제한 사항이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-176">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="23662-177">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="23662-177">*qualifiedDouble*</span></span>  
 <span data-ttu-id="23662-178">A *이중* 단위 선언 문자열 중 하나에서 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-178">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="23662-179">`px` (기본값) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="23662-179">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="23662-180">`in` 인치; 1에서 96px = =</span><span class="sxs-lookup"><span data-stu-id="23662-180">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="23662-181">`cm` 센티미터; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="23662-181">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="23662-182">`pt` 포인트; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="23662-182">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="23662-183">**참고** 대부분의 경우는 double 값을 Auto로 설정할 수 있습니다 하지만 <xref:System.Windows.Controls.ContextMenu> 오프셋을 Auto로 설정 된 경우 표시 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-183">**Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23662-184">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> 속성을는 <xref:System.Windows.Controls.ContextMenu> 단추 부모와 관련 하 여 지정 된 위치를 열려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-184">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-185"><see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-185">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-186"><see cref="T:System.Windows.Controls.ContextMenu" />의 표시 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-186">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</span></span></summary>
        <value><span data-ttu-id="23662-187"><see cref="T:System.Windows.Controls.ContextMenu" />가 표시되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-187"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="23662-188">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-188">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-189">때 <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> 로 설정 된 `true`, 마우스 캡처를로 <xref:System.Windows.Controls.ContextMenu> 및 해당 하위 트리.</span><span class="sxs-lookup"><span data-stu-id="23662-189">When <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-190">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-190">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-191">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-191">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|<span data-ttu-id="23662-192">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-192">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="23662-193">이 예제를 확인 하는 방법을 보여 줍니다 여부를 <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-193">This example shows how to check to determine whether the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-194"><see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-194">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="23662-195"><see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 이벤트에 대한 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-195">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</span></span></param>
        <summary><span data-ttu-id="23662-196"><see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 이벤트가 발생할 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-196">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contextMenu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23662-197">이 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />에 대한 <see cref="T:System.Windows.Controls.ContextMenu" /> 개체를 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-197">Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <returns><span data-ttu-id="23662-198">이 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />에 대한 <see cref="T:System.Windows.Controls.ContextMenu" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-198">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contextMenu.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="23662-199"><see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 이벤트에 대한 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-199">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="23662-200"><see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 속성이 변경되었음을 보고합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-200">Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="23662-201"><see cref="E:System.Windows.UIElement.KeyDown" /> 이벤트에 대한 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-201">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="23662-202"><see cref="E:System.Windows.ContentElement.KeyDown" /> 내의 개체에 의해 <see cref="T:System.Windows.Controls.ContextMenu" /> 이벤트가 발생될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-202">Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="23662-203"><see cref="E:System.Windows.UIElement.KeyUp" /> 이벤트에 대한 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-203">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="23662-204"><see cref="E:System.Windows.ContentElement.KeyUp" /> 이벤트에 응답합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-204">Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="23662-205"><see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 이벤트에 대한 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-205">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</span></span></param>
        <summary><span data-ttu-id="23662-206"><see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 이벤트가 발생할 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-206">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="contextMenu.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="23662-207">상황에 맞는 메뉴가 이전에 연결되어 있던 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-207">The object that the context menu was previously attached to.</span></span></param>
        <summary><span data-ttu-id="23662-208">상황에 맞는 메뉴의 표시 부모가 변경될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-208">Called when a context menu's visual parent changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : System.Windows.RoutedEventHandler " Usage="member this.Opened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-209">상황에 맞는 메뉴의 특정 인스턴스가 열리면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-209">Occurs when a particular instance of a context menu opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="23662-210">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="23662-210">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-211">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-211">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|<span data-ttu-id="23662-212">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="23662-212">Routing strategy</span></span>|<span data-ttu-id="23662-213">버블링</span><span class="sxs-lookup"><span data-stu-id="23662-213">Bubbling</span></span>|  
|<span data-ttu-id="23662-214">대리자</span><span class="sxs-lookup"><span data-stu-id="23662-214">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="23662-215">다음 방법을 보여 주는 예제는 <xref:System.Windows.Controls.ContextMenu> 이벤트: <xref:System.Windows.Controls.ContextMenu.Opened> 고 <xref:System.Windows.Controls.ContextMenu.Closed>입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-215">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-216"><see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 라우트된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-216">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.ContextMenu.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-217"><see cref="P:System.Windows.Controls.ContextMenu.Placement" />의 <see cref="T:System.Windows.Controls.ContextMenu" /> 속성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-217">Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <value><span data-ttu-id="23662-218"><see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 열거형 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-218">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration.</span></span> <span data-ttu-id="23662-219">기본값은 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-219">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-220">때를 <xref:System.Windows.Controls.ContextMenu> 에 할당 된를 <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> 또는 <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> 속성을 <xref:System.Windows.Controls.ContextMenuService> 이 속성의이 값을 변경 때는 <xref:System.Windows.Controls.ContextMenu> 열립니다.</span><span class="sxs-lookup"><span data-stu-id="23662-220">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="23662-221">사용자는 <xref:System.Windows.Controls.ContextMenu> 마우스를 사용 하 여 <xref:System.Windows.Controls.ContextMenu.Placement%2A> 로 설정 된 <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-221">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span></span>  <span data-ttu-id="23662-222">사용자는 <xref:System.Windows.Controls.ContextMenu> 키보드를 사용 하 여 <xref:System.Windows.Controls.ContextMenu.Placement%2A> 로 설정 된 <xref:System.Windows.Controls.Primitives.PlacementMode.Center>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-222">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span></span>  <span data-ttu-id="23662-223">위치를 변경 하려는 경우는 <xref:System.Windows.Controls.ContextMenu>설정는 <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> 속성에는 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-223">If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="23662-224">위치를 지정할 수는 <xref:System.Windows.Controls.ContextMenu> 설정 하 여는 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, 및 <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-224">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="23662-225">이러한 속성 동일 하 게 동작에 대 한 것과 <xref:System.Windows.Controls.Primitives.Popup>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-225">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="23662-226">자세한 내용은 [Popup 배치 동작](~/docs/framework/wpf/controls/popup-placement-behavior.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="23662-226">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-227">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-227">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-228">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-228">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|<span data-ttu-id="23662-229">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-229">Metadata properties set to `true`</span></span>|<span data-ttu-id="23662-230">없음</span><span class="sxs-lookup"><span data-stu-id="23662-230">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="23662-231">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.ContextMenu.Placement%2A> 속성 및 위치를 지정 하는 배치 모드는 <xref:System.Windows.Controls.ContextMenu> 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-231">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.Placement%2A> property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-232"><see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-232">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-233">상황에 맞는 메뉴가 열리는 위치의 기준이 되는 영역을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-233">Gets or sets the area relative to which the context menu is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="23662-234">상황에 맞는 메뉴를 배치하는 데 사용되는 사각형을 정의하는 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-234">The area that defines the rectangle that is used to position the context menu.</span></span> <span data-ttu-id="23662-235">기본값은 <see cref="P:System.Windows.Rect.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-235">The default is <see cref="P:System.Windows.Rect.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-236">위치를 지정할 수는 <xref:System.Windows.Controls.ContextMenu> 설정 하 여는 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, 및 <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-236">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="23662-237">이러한 속성 동일 하 게 동작에 대 한 것과 <xref:System.Windows.Controls.Primitives.Popup>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-237">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="23662-238">자세한 내용은 [Popup 배치 동작](~/docs/framework/wpf/controls/popup-placement-behavior.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="23662-238">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-239">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-239">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-240">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-240">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|<span data-ttu-id="23662-241">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-241">Metadata properties set to `true`</span></span>|<span data-ttu-id="23662-242">없음</span><span class="sxs-lookup"><span data-stu-id="23662-242">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="23662-243">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> 속성 위치를 지정 하 고는 <xref:System.Windows.Controls.ContextMenu> 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-243">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-244"><see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-244">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-245"><see cref="T:System.Windows.UIElement" />이 열리는 위치의 기준이 되는 <see cref="T:System.Windows.Controls.ContextMenu" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-245">Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="23662-246"><see cref="T:System.Windows.Controls.ContextMenu" />가 열리는 위치의 기준이 되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-246">The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span> <span data-ttu-id="23662-247">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-247">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-248">경우는 <xref:System.Windows.Controls.ContextMenu> 에 할당 된를 <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> 또는 <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> 속성인을 <xref:System.Windows.Controls.ContextMenuService> 소유 하 고 있는이 속성의이 값이 변경 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement> 때를 <xref:System.Windows.Controls.ContextMenu> 열립니다.</span><span class="sxs-lookup"><span data-stu-id="23662-248">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="23662-249">다른 데 <xref:System.Windows.UIElement>로 설정 된 <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="23662-249">To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-250">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-251">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-251">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|<span data-ttu-id="23662-252">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-252">Metadata properties set to `true`</span></span>|<span data-ttu-id="23662-253">없음</span><span class="sxs-lookup"><span data-stu-id="23662-253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="23662-254">대상 된 <xref:System.Windows.Controls.ContextMenu> 부모입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-254">The target of a <xref:System.Windows.Controls.ContextMenu> is its parent.</span></span> <span data-ttu-id="23662-255">다음 예제에 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> 속성의 부모를 찾습니다는 <xref:System.Windows.Controls.ContextMenu>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-255">The following examples show how to use the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-256"><see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-256">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="contextMenu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="23662-257">지정된 항목을 표시하는 데 사용되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-257">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="23662-258">지정된 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-258">Specified item.</span></span></param>
        <summary><span data-ttu-id="23662-259">지정한 항목을 표시하기 위해 지정한 요소를 준비합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-259">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-260">요소를 준비 하 고 스타일, 바인딩 설정 적용을 포함 하 고 등 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23662-260">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-261"><see cref="T:System.Windows.Controls.ContextMenu" />를 자동으로 닫을지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-261">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</span></span></summary>
        <value><span data-ttu-id="23662-262"><see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 속성이 <see langword="true" />로 변경될 때까지 메뉴가 열려 있으면 <see langword="false" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-262"><see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="23662-263">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-263">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-264">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-264">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-265">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-265">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|<span data-ttu-id="23662-266">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-266">Metadata properties set to `true`</span></span>|<span data-ttu-id="23662-267">없음</span><span class="sxs-lookup"><span data-stu-id="23662-267">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="23662-268">다음 예제에서는 합니다 <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> 속성을 변경 하는 열려 있는 이벤트가 발생할 때까지 다음과 같은 상황에 맞는 메뉴의 <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-268">The following example uses the <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-269"><see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-269">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-270">대상 원점과 팝업 맞춤 지점 간의 세로 거리를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-270">Get or sets the vertical distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="23662-271">대상 원점과 팝업 맞춤 지점 간의 세로 거리입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-271">The vertical distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="23662-272">대상 원점 및 popup 맞춤 지점에 대 한 정보를 참조 하세요 [Popup 배치 동작](~/docs/framework/wpf/controls/popup-placement-behavior.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-272">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="23662-273">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-273">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23662-274">위치를 지정할 수는 <xref:System.Windows.Controls.ContextMenu> 설정 하 여는 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, 및 <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-274">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="23662-275">이러한 속성 동일 하 게 동작에 대 한 것과 <xref:System.Windows.Controls.Primitives.Popup>합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-275">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="23662-276">자세한 내용은 [Popup 배치 동작](~/docs/framework/wpf/controls/popup-placement-behavior.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="23662-276">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="23662-277">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="23662-277">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="23662-278">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="23662-278">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|<span data-ttu-id="23662-279">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="23662-279">Metadata properties set to `true`</span></span>|<span data-ttu-id="23662-280">없음</span><span class="sxs-lookup"><span data-stu-id="23662-280">None</span></span>|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="23662-281">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="23662-281">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="23662-282">XAML 값</span><span class="sxs-lookup"><span data-stu-id="23662-282">XAML Values</span></span>  
 <span data-ttu-id="23662-283">*double*</span><span class="sxs-lookup"><span data-stu-id="23662-283">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="23662-284">문자열 표현 된 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="23662-284">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="23662-285">이것은 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 측정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-285">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="23662-286">문자열 소수점이 하를 명시적으로 포함 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-286">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="23662-287">예를 들어 값 `1` 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-287">For instance, a value of `1` is acceptable.</span></span> <span data-ttu-id="23662-288">동일한 <xref:System.Double> 속성 값 섹션에서 설명한 것 처럼 범위 제한 사항이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23662-288">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="23662-289">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="23662-289">*qualifiedDouble*</span></span>  
 <span data-ttu-id="23662-290">A *이중* 단위 선언 문자열 중 하나에서 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-290">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="23662-291">`px` (기본값) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="23662-291">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="23662-292">`in` 인치; 1에서 96px = =</span><span class="sxs-lookup"><span data-stu-id="23662-292">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="23662-293">`cm` 센티미터; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="23662-293">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="23662-294">`pt` 포인트; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="23662-294">`pt` is points; 1pt==(96/72) px</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="23662-295">대부분의 double 값을 Auto로 설정할 수 있습니다 하지만 <xref:System.Windows.Controls.ContextMenu> 오프셋을 Auto로 설정 된 경우 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="23662-295">In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23662-296">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> 속성을는 <xref:System.Windows.Controls.ContextMenu> 단추 부모와 관련 하 여 지정 된 위치를 열려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-296">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23662-297"><see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="23662-297">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>