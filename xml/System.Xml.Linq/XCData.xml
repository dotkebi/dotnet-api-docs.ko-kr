<Type Name="XCData" FullName="System.Xml.Linq.XCData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4ed07644d584f2d0d4bee3f20c36a3311090f22" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57941011" /></Metadata><TypeSignature Language="C#" Value="public class XCData : System.Xml.Linq.XText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XCData extends System.Xml.Linq.XText" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XCData" />
  <TypeSignature Language="VB.NET" Value="Public Class XCData&#xA;Inherits XText" />
  <TypeSignature Language="C++ CLI" Value="public ref class XCData : System::Xml::Linq::XText" />
  <TypeSignature Language="F#" Value="type XCData = class&#xA;    inherit XText" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XText</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="539db-101">CDATA가 들어 있는 텍스트 노드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="539db-101">Represents a text node that contains CDATA.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539db-102">XML CDATA 섹션을 사용 하면 XML 요소의 내용으로 거의 모든 임의 문자열을 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="539db-102">An XML CDATA section allows you to store almost any arbitrary string as the contents of an XML element.</span></span> <span data-ttu-id="539db-103">이 클래스는 XML에 대 한 개념이 CDATA 텍스트 노드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="539db-103">This class represents the XML concept of a CDATA text node.</span></span>  
  
 <span data-ttu-id="539db-104">이 클래스에서 파생 됩니다 <xref:System.Xml.Linq.XText>, XML 텍스트를 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="539db-104">This class derives from <xref:System.Xml.Linq.XText>, which represents XML text.</span></span> <span data-ttu-id="539db-105">CDATA 섹션은 XML 텍스트의 특수 한 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="539db-105">CDATA sections are special cases of XML text.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="539db-106">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="539db-106">LINQ to XML</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="539db-107"><see cref="T:System.Xml.Linq.XCData" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="539db-107">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="539db-108">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="539db-108">LINQ to XML</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XCData (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XCData(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XCData : string -&gt; System.Xml.Linq.XCData" Usage="new System.Xml.Linq.XCData value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="539db-109"><see cref="T:System.Xml.Linq.XCData" /> 노드의 값이 들어 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="539db-109">A string that contains the value of the <see cref="T:System.Xml.Linq.XCData" /> node.</span></span></param>
        <summary><span data-ttu-id="539db-110"><see cref="T:System.Xml.Linq.XCData" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="539db-110">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="539db-111">다음 예제에서는 CDATA 노드를 포함 하는 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="539db-111">The following example creates an element that contains a CDATA node.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XCData("Some content")  
);  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root>  
                           <![CDATA[Some content]]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="539db-112">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="539db-112">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XCData (System.Xml.Linq.XCData other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XCData other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XCData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XCData(System::Xml::Linq::XCData ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XCData : System.Xml.Linq.XCData -&gt; System.Xml.Linq.XCData" Usage="new System.Xml.Linq.XCData other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XCData" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="539db-113">복사할 <see cref="T:System.Xml.Linq.XCData" /> 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="539db-113">The <see cref="T:System.Xml.Linq.XCData" /> node to copy from.</span></span></param>
        <summary><span data-ttu-id="539db-114"><see cref="T:System.Xml.Linq.XCData" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="539db-114">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539db-115">이 생성자는 주로 XML 트리의 전체 복사본을 만들기를 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539db-115">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="539db-116">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="539db-116">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XCData.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XCData.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="539db-117">이 노드에 대한 노드 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="539db-117">Gets the node type for this node.</span></span></summary>
        <value><span data-ttu-id="539db-118">노드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="539db-118">The node type.</span></span> <span data-ttu-id="539db-119"><see cref="T:System.Xml.Linq.XCData" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.CDATA" />입니다.</span><span class="sxs-lookup"><span data-stu-id="539db-119">For <see cref="T:System.Xml.Linq.XCData" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.CDATA" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539db-120">파생 하는 모든 클래스 <xref:System.Xml.Linq.XObject> 포함 된 <xref:System.Xml.Linq.XObject.NodeType%2A> 속성 컬렉션의 구체적인 서브 클래스에 대해 작동 하는 코드를 작성할 수 있습니다 <xref:System.Xml.Linq.XObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="539db-120">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="539db-121">컬렉션에서 각 노드의 노드 유형에 대 한 코드 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="539db-121">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="539db-122">다음 예제에서는 다양 한 유형의 노드를 포함 하는 XML 트리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="539db-122">The following example creates an XML tree that contains various types of nodes.</span></span> <span data-ttu-id="539db-123">그런 다음 트리를 통해 반복 하 고 각 노드 형식의 노드를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="539db-123">It then iterates through the tree, and prints the node type of each node.</span></span>  
  
```csharp  
// Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  
XDocument xmlTree = new XDocument(  
    new XComment("a comment"),  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\""),  
    new XElement("Root",  
        new XAttribute("Att", "attContent"),  
        new XElement("Child1",  
            new XCData("CDATA content")  
        ),  
        new XElement("Child2",  
            new XText("Text content")  
        )  
    )  
);  
  
foreach (XNode node in xmlTree.DescendantNodes())  
{  
    Console.WriteLine(node.NodeType);  
    if (node.NodeType == XmlNodeType.Element)  
    {  
        foreach (XAttribute att in ((XElement)node).Attributes())  
            Console.WriteLine(att.NodeType);  
    }  
}  
```  
  
```vb  
Dim xmlTree As XDocument = _   
    <?xml version="1.0" encoding="utf-8"?>  
        <!--a comment-->  
        <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
        <Root Att="attContent">  
            <Child1><![CDATA[CDATA content]]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
        <altmember cref="T:System.Xml.Linq.XNode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="539db-124">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="539db-124">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xCData.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="539db-125">이 메서드가 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="539db-125">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span></span></param>
        <summary><span data-ttu-id="539db-126">이 CDATA 개체를 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="539db-126">Writes this CDATA object to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539db-127">이 메서드는 주로 내부적으로 XML 트리를 작성 하는 메서드에서 <xref:System.Xml.XmlWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="539db-127">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="539db-128">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="539db-128">LINQ to XML</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f01bdf96-c5a9-4859-b220-125ee531e71f"><span data-ttu-id="539db-129">XML 트리 serialization</span><span class="sxs-lookup"><span data-stu-id="539db-129">Serializing XML Trees</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xCData.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>