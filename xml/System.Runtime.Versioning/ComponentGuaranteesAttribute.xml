<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db2f92b95a83451e22fe1c611f785a5e391b9476" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56351701" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9040a-101">여러 버전으로 확장될 수 있는 구성 요소, 형식 또는 형식 멤버의 호환성 보장을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-101">Defines the compatibility guarantee of a component, type, or type member that may span multiple versions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9040a-102"><xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 라이브러리의 소비자는 여러 버전에서 예상할 수 있는 호환성 수준을 나타내는 구성 요소 및 클래스 라이브러리의 개발자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-102">The <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> is used by developers of components and class libraries to indicate the level of compatibility that consumers of their libraries can expect across multiple versions.</span></span> <span data-ttu-id="9040a-103">이후 버전의 라이브러리 또는 구성 요소를 기존 클라이언트를 중단 하지 않는다는 보증 수준을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-103">It indicates the level of guarantee that a future version of the library or component will not break an existing client.</span></span> <span data-ttu-id="9040a-104">그런 다음 클라이언트가 사용할 수는 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 버전 간 안정성을 보장 하는 자체 인터페이스 디자인에 보조 도구로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-104">Clients can then use the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> as an aid in designing their own interfaces to ensure stability across versions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9040a-105">CLR (공용 언어 런타임)은 어떤 방식으로이 특성을 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-105">The common language runtime (CLR) does not use this attribute in any way.</span></span> <span data-ttu-id="9040a-106">해당 값은 구성 요소 작성자의 의도 공식적으로 문서화 있다는 점입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-106">Its value lies in formally documenting the intent of the component author.</span></span> <span data-ttu-id="9040a-107">컴파일 시간 도구는 선언 된 보증을 위반 하는 컴파일 타임 오류를 검색 하려면 이러한 선언을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-107">Compile-time tools can also use these declarations to detect compile-time errors that would otherwise break the declared guarantee.</span></span>  
  
## <a name="levels-of-compatibility"></a><span data-ttu-id="9040a-108">호환성 수준</span><span class="sxs-lookup"><span data-stu-id="9040a-108">Levels of Compatibility</span></span>  
 <span data-ttu-id="9040a-109">합니다 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 의 멤버에 의해 표현 되는 다음 호환성 수준을 지원 합니다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 열거형:</span><span class="sxs-lookup"><span data-stu-id="9040a-109">The <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> supports the following levels of compatibility, which are represented by members of the <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> enumeration:</span></span>  
  
-   <span data-ttu-id="9040a-110">버전 간 호환성 없습니다 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="9040a-110">No version-to-version compatibility (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>).</span></span> <span data-ttu-id="9040a-111">클라이언트는 이후 버전에서 기존 클라이언트가 중단 됩니다 기대할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-111">The client can expect that future versions will break the existing client.</span></span> <span data-ttu-id="9040a-112">자세한 내용은 참조는 [아니요 호환성](#None) 이 항목의 뒷부분에 나오는 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-112">For more information, see the [No Compatibility](#None) section later in this topic.</span></span>  
  
-   <span data-ttu-id="9040a-113">Side-by-side-버전 간 호환성 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="9040a-113">Side-by-side version-to-version compatibility (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>).</span></span> <span data-ttu-id="9040a-114">구성 요소는 동일한 애플리케이션 도메인에 어셈블리의 둘 이상의 버전이 로드 될 때 작동 하도록 테스트 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-114">The component has been tested to work when more than one version of the assembly is loaded in the same application domain.</span></span> <span data-ttu-id="9040a-115">일반적으로 이후 버전 호환성이 깨질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-115">In general, future versions can break compatibility.</span></span> <span data-ttu-id="9040a-116">주요 변경 되 면 이전 버전은 수정 되지 않습니다 하지만 새 버전과 함께 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-116">However, when breaking changes are made, the old version is not modified but exists alongside the new version.</span></span> <span data-ttu-id="9040a-117">Side-by-side-실행에는 기존 클라이언트에 주요 변경 사항이 있을 경우 사용할 수 있도록 예상된 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-117">Side-by-side execution is the expected way to make existing clients work when breaking changes are made.</span></span> <span data-ttu-id="9040a-118">자세한 내용은 참조는 [Side-by-side-호환성](#SideBySide) 이 항목의 뒷부분에 나오는 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-118">For more information, see the [Side-by-Side Compatibility](#SideBySide) section later in this topic.</span></span>  
  
-   <span data-ttu-id="9040a-119">안정적인 버전 간 호환성 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="9040a-119">Stable version-to-version compatibility (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>).</span></span> <span data-ttu-id="9040a-120">이후 버전의 클라이언트를 해제 하지 말아야 하 고-나란히 실행 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-120">Future versions should not break the client, and side-by-side execution should not be needed.</span></span> <span data-ttu-id="9040a-121">그러나 클라이언트가 의도치 않게 중단 되는 경우 문제를 해결 하려면-병렬 실행을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-121">However, if the client is inadvertently broken, it may be possible to use side-by-side execution to fix the problem.</span></span> <span data-ttu-id="9040a-122">자세한 내용은 참조는 [안정적인 호환성](#Standard) 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-122">For more information, see the [Stable Compatibility](#Standard) section.</span></span>  
  
-   <span data-ttu-id="9040a-123">버전 간 호환성을 exchange (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="9040a-123">Exchange version-to-version compatibility (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>).</span></span> <span data-ttu-id="9040a-124">이후 버전은 클라이언트를 중단 되지 않음을 확인 하는 특별 한 주의 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-124">Extraordinary care is taken to ensure that future versions will not break the client.</span></span> <span data-ttu-id="9040a-125">클라이언트는 서로 독립적으로 배포 되는 다른 어셈블리와의 통신에 사용 되는 인터페이스의 서명을 이러한 형식을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-125">The client should use only these types in the signature of interfaces that are used for communication with other assemblies that are deployed independently of one another.</span></span> <span data-ttu-id="9040a-126">이러한 형식 중 하나의 버전 즉, 클라이언트 중단 된 경우-병렬 실행 수 없습니다. 호환성 문제를 해결할 수정 지정된 애플리케이션 도메인에 있을 예정입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-126">Only one version of these types is expected to be in a given application domain, which means that if a client breaks, side-by-side execution cannot fix the compatibility problem.</span></span> <span data-ttu-id="9040a-127">자세한 내용은 참조는 [교환 형식 호환성](#Exchange) 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-127">For more information, see the [Exchange Type Compatibility](#Exchange) section.</span></span>  
  
 <span data-ttu-id="9040a-128">다음 섹션에서는 각 수준의 보증을 더 자세히 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-128">The following sections discuss each level of guarantee in greater detail.</span></span>  
  
<a name="None"></a>   
### <a name="no-compatibility"></a><span data-ttu-id="9040a-129">비 호환성</span><span class="sxs-lookup"><span data-stu-id="9040a-129">No Compatibility</span></span>  
 <span data-ttu-id="9040a-130">구성 요소가 표시 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> 공급자는 호환성에 대 한 보증도 하지 않습니다는 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-130">Marking a component as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> indicates that the provider makes no guarantees about compatibility.</span></span> <span data-ttu-id="9040a-131">클라이언트에 노출 된 인터페이스 의존 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-131">Clients should avoid taking any dependencies on the exposed interfaces.</span></span> <span data-ttu-id="9040a-132">이 호환성 수준의 실험적 되거나 공개적으로 노출 되는 있지만 동시에 항상 업데이트 되는 구성 요소에 대해서만 형식에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-132">This level of compatibility is useful for types that are experimental or that are publicly exposed but are intended only for components that are always updated at the same time.</span></span> <span data-ttu-id="9040a-133"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 명시적으로 외부 구성 요소에서이 구성 요소를 사용 하지 해야 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-133"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> explicitly indicates that this component should not be used by external components.</span></span>  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a><span data-ttu-id="9040a-134">Side-by-side-호환성</span><span class="sxs-lookup"><span data-stu-id="9040a-134">Side-by-Side Compatibility</span></span>  
 <span data-ttu-id="9040a-135">구성 요소가 표시 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> 구성 요소는 테스트 어셈블리의 버전이 둘 이상 동일한 애플리케이션 도메인에 로드 되 면 작업을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-135">Marking a component as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> indicates that the component has been tested to work when more than one version of the assembly is loaded into the same application domain.</span></span> <span data-ttu-id="9040a-136">주요 변경 내용 버전 수가 있는 어셈블리에 수행 되는으로 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-136">Breaking changes are allowed as long as they are made to the assembly that has the greater version number.</span></span> <span data-ttu-id="9040a-137">어셈블리의 이전 버전에 바인딩되는 구성 요소는 이전 버전에 바인딩할 것으로 예상 되 고 다른 구성 요소는 새 버전으로 바인딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-137">Components that are bound to an old version of the assembly are expected to continue to bind to the old version, and other components can bind to the new version.</span></span> <span data-ttu-id="9040a-138">으로 선언 하는 구성 요소를 업데이트할 수 이기도 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> 안전 하 게 이전 버전을 수정 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-138">It is also possible to update a component that is declared to be <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> by destructively modifying the old version.</span></span>  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a><span data-ttu-id="9040a-139">안정적인 호환성</span><span class="sxs-lookup"><span data-stu-id="9040a-139">Stable Compatibility</span></span>  
 <span data-ttu-id="9040a-140">으로 형식을 표시 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> 는 남아 야 하는 안정적인 버전을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-140">Marking a type as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> indicates that the type should remain stable across versions.</span></span> <span data-ttu-id="9040a-141">그러나 동일한 애플리케이션 도메인에 존재 하는 안정적인 유형 side-by-side-버전용 수도 있습니다 것입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-141">However, it may also be possible for side-by-side versions of a stable type to exist in the same application domain.</span></span>  
  
 <span data-ttu-id="9040a-142">안정적인 형식은 이진 높은 호환성 수준을 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-142">Stable types maintain a high binary compatibility bar.</span></span> <span data-ttu-id="9040a-143">따라서 공급자는 안정적인 형식에 대 한 주요 변경 피해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-143">Because of this, providers should avoid making breaking changes to stable types.</span></span> <span data-ttu-id="9040a-144">다음과 같은 유형의 변경 내용 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-144">The following kinds of changes are acceptable:</span></span>  
  
-   <span data-ttu-id="9040a-145">전용 인스턴스 필드를 추가 또는 serialization 형식을이 중단 되지 않습니다으로 형식에서 필드를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-145">Adding private instance fields to, or removing fields from, a type, as long as this does not break the serialization format.</span></span>  
  
-   <span data-ttu-id="9040a-146">직렬화 형식을 직렬화 가능 형식으로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-146">Changing a non-serializable type to a serializable type.</span></span> <span data-ttu-id="9040a-147">그러나 (직렬화 형식을 변경할 수 없습니다 직렬화 형식으로.)</span><span class="sxs-lookup"><span data-stu-id="9040a-147">(However, a serializable type cannot be changed to a non-serializable type.)</span></span>  
  
-   <span data-ttu-id="9040a-148">메서드에서 더 파생된 예외를 새를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-148">Throwing new, more derived exceptions from a method.</span></span>  
  
-   <span data-ttu-id="9040a-149">메서드의 성능을 개선합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-149">Improving the performance of a method.</span></span>  
  
-   <span data-ttu-id="9040a-150">변경 내용이 부정적인 영향을 주지 않습니다 대부분의 클라이언트와 반환 값의 범위를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-150">Changing the range of return values, as long as the change does not adversely affect the majority of clients.</span></span>  
  
-   <span data-ttu-id="9040a-151">비즈니스 근거는 높은 경우 부정적인 영향을 받는 클라이언트 수가 부족 심각한 버그를 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-151">Fixing serious bugs, if the business justification is high and the number of adversely affected clients is low.</span></span>  
  
 <span data-ttu-id="9040a-152">새 버전의 안정적인 구성 요소를 기존 클라이언트를 중단 하므로 일반적으로 안정 된 구성 요소의 버전을 하나만 필요 애플리케이션 도메인에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-152">Because new versions of stable components are not expected to break existing clients, generally only one version of a stable component is needed in an application domain.</span></span> <span data-ttu-id="9040a-153">그러나이 아니므로 요구 안정적인 유형이 모든 구성 요소에 동의 하는 잘 알려진 교환 형식으로 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-153">However, this is not a requirement, because stable types are not used as well-known exchange types that all components agree upon.</span></span> <span data-ttu-id="9040a-154">따라서 새 버전의 구성 요소가 안정적으로 일부 구성 요소를 실수로 손상지 않습니다 및 다른 구성 요소는 새 버전이 필요한 경우에 모두 이전 및 새 구성 요소를 로드 하 여 문제를 해결할 수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-154">Therefore, if a new version of a stable component does inadvertently break some component, and if other components need the new version, it may be possible to fix the problem by loading both the old and new component.</span></span>  
  
 <span data-ttu-id="9040a-155"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 보다 강력한 버전 호환성 보증을 제공 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-155"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> provides a stronger version compatibility guarantee than <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.</span></span> <span data-ttu-id="9040a-156">다중 버전 구성 요소에 대 한 일반적인 기본 것입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-156">It is a common default for multi-version components.</span></span>  
  
 <span data-ttu-id="9040a-157"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 함께 사용할 수 있습니다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, 구성 요소 호환성을 중단 하지 것입니다 하지만 둘 이상의 버전이 지정 된 애플리케이션 도메인에 로드 될 때 제대로 작동 하는지 테스트 되는 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-157"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> can be combined with <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, which states that the component will not break compatibility but is tested to work when more than one version is loaded in a given application domain.</span></span>  
  
 <span data-ttu-id="9040a-158">형식 또는 메서드를로 표시 된 후 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>를 업그레이드할 수 있습니다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-158">After a type or method is marked as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, it can be upgraded to <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.</span></span> <span data-ttu-id="9040a-159">그러나이 다운 그레이드할 수 없습니다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-159">However, it cannot be downgraded to <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.</span></span>  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a><span data-ttu-id="9040a-160">교환 형식 호환성</span><span class="sxs-lookup"><span data-stu-id="9040a-160">Exchange Type Compatibility</span></span>  
 <span data-ttu-id="9040a-161">형식으로 표시 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> 보다 강력한 버전 호환성 보증을 제공 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, 모든 종류의 가장 안정적인를 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-161">Marking a type as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> provides a stronger version compatibility guarantee than <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, and should be applied to the most stable of all types.</span></span> <span data-ttu-id="9040a-162">이러한 형식은 모두 시간 (CLR의 모든 버전) 또는 구성 요소 또는 애플리케이션의 모든 버전에서에서 모든 구성 요소 경계를 넘어 독립적으로 빌드된 구성 요소와 공간 (프로세스 간, 단일 프로세스에서 크로스-CLR 간 교환에 사용할 수는 애플리케이션 간 도메인 하나 CLR에서).</span><span class="sxs-lookup"><span data-stu-id="9040a-162">These types are intended to be used for interchange between independently built components across all component boundaries in both time (any version of the CLR or any version of a component or application) and space (cross-process, cross-CLR in one process, cross-application domain in one CLR).</span></span> <span data-ttu-id="9040a-163">주요 변경 내용 교환 유형의 하려고 하면 유형의 여러 버전을 로드 하 여 문제를 해결 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-163">If a breaking change is made to an exchange type, it is impossible to fix the issue by loading multiple versions of the type.</span></span>  
  
 <span data-ttu-id="9040a-164">교환 유형이 문제 (예: 심각한 보안 문제가) 매우 심각한 되었거나 파손 가능성이 매우 부족 합니다 (즉, 동작이 이미 인해 끊어진 경우 코드는 있다고 볼 오프 없습니다 종속성에는 임의 방식으로) 하는 경우에 변경 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-164">Exchange types should be changed only when a problem is very serious (such as a severe security issue) or the probability of breakage is very low (that is, if the behavior was already broken in a random way that code could not have conceivably taken a dependency on).</span></span> <span data-ttu-id="9040a-165">교환 형식에는 다음과 같은 종류의 변경 내용 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-165">You can make the following kinds of changes to an exchange type:</span></span>  
  
-   <span data-ttu-id="9040a-166">새 인터페이스 정의의 상속을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-166">Add inheritance of new interface definitions.</span></span>  
  
-   <span data-ttu-id="9040a-167">새로 상속 된 인터페이스 정의의 메서드를 구현 하는 새 private 메서드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-167">Add new private methods that implement the methods of newly inherited interface definitions.</span></span>  
  
-   <span data-ttu-id="9040a-168">새 정적 필드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-168">Add new static fields.</span></span>  
  
-   <span data-ttu-id="9040a-169">새 정적 메서드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-169">Add new static methods.</span></span>  
  
-   <span data-ttu-id="9040a-170">새 가상이 아닌 인스턴스 메서드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-170">Add new non-virtual instance methods.</span></span>  
  
 <span data-ttu-id="9040a-171">다음 주요 변경 내용으로 간주 됩니다 및 기본 형식에 대해 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-171">The following are considered breaking changes and are not allowed for primitive types:</span></span>  
  
-   <span data-ttu-id="9040a-172">Serialization 형식을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-172">Changing serialization formats.</span></span> <span data-ttu-id="9040a-173">버전 독립적 serialization가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-173">Version-tolerant serialization is required.</span></span>  
  
-   <span data-ttu-id="9040a-174">추가 하거나 개인 인스턴스 필드를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-174">Adding or removing private instance fields.</span></span> <span data-ttu-id="9040a-175">이 형식의 serialization 형식을 변경 하 고 리플렉션을 사용 하는 클라이언트 코드가 손상 시킬 위험이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-175">This risks changing the serialization format of the type and breaking client code that uses reflection.</span></span>  
  
-   <span data-ttu-id="9040a-176">형식의 순차성을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-176">Changing the serializability of a type.</span></span> <span data-ttu-id="9040a-177">순차 불가능 형식 있습니다 수 직렬화 하 고 그 반대의 경우도 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-177">A non-serializable type may not be made serializable, and vice versa.</span></span>  
  
-   <span data-ttu-id="9040a-178">메서드에서 다른 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-178">Throwing different exceptions from a method.</span></span>  
  
-   <span data-ttu-id="9040a-179">멤버 정의가 이러한 가능성 하 고 클라이언트에서 알 수 없는 값을 처리 하는 방법을 명확 하 게 나타냅니다 않으면 메서드의 반환 값의 범위를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-179">Changing the range of a method's return values, unless the member definition raises this possibility and clearly indicates how clients should handle unknown values.</span></span>  
  
-   <span data-ttu-id="9040a-180">대부분의 버그를 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-180">Fixing most bugs.</span></span> <span data-ttu-id="9040a-181">해당 형식의 소비자는 기존 동작에 의존 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-181">Consumers of the type will rely on the existing behavior.</span></span>  
  
 <span data-ttu-id="9040a-182">구성 요소, 형식 또는 멤버는 표시 된 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 보장을 변경할 수 없습니다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 또는 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-182">After a component, type, or member is marked with the <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> guarantee, it cannot be changed to either <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> or <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.</span></span>  
  
 <span data-ttu-id="9040a-183">교환 유형이 기본 유형은 일반적으로 (같은 <xref:System.Int32> 및 <xref:System.String> .NET framework에서) 및 인터페이스 (같은 <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, 및 <xref:System.IComparable%601>) 공용 인터페이스에서 일반적으로 사용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-183">Typically, exchange types are the basic types (such as <xref:System.Int32> and <xref:System.String> in the .NET Framework) and interfaces (such as <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, and <xref:System.IComparable%601>) that are commonly used in public interfaces.</span></span>  
  
 <span data-ttu-id="9040a-184">교환 유형이 다른 형식으로 표시 된 공개적으로 노출 될 수 있습니다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 호환성.</span><span class="sxs-lookup"><span data-stu-id="9040a-184">Exchange types may publicly expose only other types that are also marked with <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> compatibility.</span></span> <span data-ttu-id="9040a-185">또한 교환 유형이 변경 된 Windows Api의 동작은 확신할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-185">In addition, exchange types cannot depend on the behavior of Windows APIs that are prone to change.</span></span>  
  
## <a name="component-guarantees-a-summary"></a><span data-ttu-id="9040a-186">구성 요소 보장 합니다. 요약</span><span class="sxs-lookup"><span data-stu-id="9040a-186">Component Guarantees: A Summary</span></span>  
 <span data-ttu-id="9040a-187">다음 표에서 구성 요소의 특성 및 사용 현황의 호환성 보장에 영향을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-187">The following table indicates how a component's characteristics and usage affect its compatibility guarantee.</span></span>  
  
|<span data-ttu-id="9040a-188">구성 요소 특성</span><span class="sxs-lookup"><span data-stu-id="9040a-188">Component characteristics</span></span>|<span data-ttu-id="9040a-189">Exchange</span><span class="sxs-lookup"><span data-stu-id="9040a-189">Exchange</span></span>|<span data-ttu-id="9040a-190">안정</span><span class="sxs-lookup"><span data-stu-id="9040a-190">Stable</span></span>|<span data-ttu-id="9040a-191">Side-by-side-</span><span class="sxs-lookup"><span data-stu-id="9040a-191">Side-by-Side</span></span>|<span data-ttu-id="9040a-192">없음</span><span class="sxs-lookup"><span data-stu-id="9040a-192">None</span></span>|  
|-------------------------------|--------------|------------|--------------------|----------|  
|<span data-ttu-id="9040a-193">수 구성 요소 간의 인터페이스에는 버전 독립적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-193">Can be used in interfaces between components that version independently.</span></span>|<span data-ttu-id="9040a-194">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-194">Y</span></span>|<span data-ttu-id="9040a-195">N</span><span class="sxs-lookup"><span data-stu-id="9040a-195">N</span></span>|<span data-ttu-id="9040a-196">N</span><span class="sxs-lookup"><span data-stu-id="9040a-196">N</span></span>|<span data-ttu-id="9040a-197">N</span><span class="sxs-lookup"><span data-stu-id="9040a-197">N</span></span>|  
|<span data-ttu-id="9040a-198">수 (개인적으로) 어셈블리에서 해당 버전 독립적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-198">Can be used (privately) by an assembly that versions independently.</span></span>|<span data-ttu-id="9040a-199">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-199">Y</span></span>|<span data-ttu-id="9040a-200">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-200">Y</span></span>|<span data-ttu-id="9040a-201">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-201">Y</span></span>|<span data-ttu-id="9040a-202">N</span><span class="sxs-lookup"><span data-stu-id="9040a-202">N</span></span>|  
|<span data-ttu-id="9040a-203">단일 애플리케이션 도메인의 여러 버전이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-203">Can have multiple versions in a single application domain.</span></span>|<span data-ttu-id="9040a-204">N</span><span class="sxs-lookup"><span data-stu-id="9040a-204">N</span></span>|<span data-ttu-id="9040a-205">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-205">Y</span></span>|<span data-ttu-id="9040a-206">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-206">Y</span></span>|<span data-ttu-id="9040a-207">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-207">Y</span></span>|  
|<span data-ttu-id="9040a-208">주요 변경 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-208">Can make breaking changes</span></span>|<span data-ttu-id="9040a-209">N</span><span class="sxs-lookup"><span data-stu-id="9040a-209">N</span></span>|<span data-ttu-id="9040a-210">N</span><span class="sxs-lookup"><span data-stu-id="9040a-210">N</span></span>|<span data-ttu-id="9040a-211">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-211">Y</span></span>|<span data-ttu-id="9040a-212">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-212">Y</span></span>|  
|<span data-ttu-id="9040a-213">특정 어셈블리의 여러 버전을 함께 로드할 수 있도록 테스트 했습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-213">Tested to make certain multiple versions of the assembly can be loaded together.</span></span>|<span data-ttu-id="9040a-214">N</span><span class="sxs-lookup"><span data-stu-id="9040a-214">N</span></span>|<span data-ttu-id="9040a-215">N</span><span class="sxs-lookup"><span data-stu-id="9040a-215">N</span></span>|<span data-ttu-id="9040a-216">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-216">Y</span></span>|<span data-ttu-id="9040a-217">N</span><span class="sxs-lookup"><span data-stu-id="9040a-217">N</span></span>|  
|<span data-ttu-id="9040a-218">현재 위치에서 주요 변경 내용 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-218">Can make breaking changes in place.</span></span>|<span data-ttu-id="9040a-219">N</span><span class="sxs-lookup"><span data-stu-id="9040a-219">N</span></span>|<span data-ttu-id="9040a-220">N</span><span class="sxs-lookup"><span data-stu-id="9040a-220">N</span></span>|<span data-ttu-id="9040a-221">N</span><span class="sxs-lookup"><span data-stu-id="9040a-221">N</span></span>|<span data-ttu-id="9040a-222">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-222">Y</span></span>|  
|<span data-ttu-id="9040a-223">매우 안전 줄 바꿈하지 않는 변경이 서비스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-223">Can make very safe non-breaking servicing changes in place.</span></span>|<span data-ttu-id="9040a-224">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-224">Y</span></span>|<span data-ttu-id="9040a-225">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-225">Y</span></span>|<span data-ttu-id="9040a-226">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-226">Y</span></span>|<span data-ttu-id="9040a-227">Y</span><span class="sxs-lookup"><span data-stu-id="9040a-227">Y</span></span>|  
  
## <a name="applying-the-attribute"></a><span data-ttu-id="9040a-228">특성 적용</span><span class="sxs-lookup"><span data-stu-id="9040a-228">Applying the Attribute</span></span>  
 <span data-ttu-id="9040a-229">적용할 수는 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 어셈블리, 형식 또는 형식 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-229">You can apply the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> to an assembly, a type, or a type member.</span></span> <span data-ttu-id="9040a-230">해당 애플리케이션은 계층적입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-230">Its application is hierarchical.</span></span> <span data-ttu-id="9040a-231">즉, 기본적으로 보장을 정의한는 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 어셈블리 수준 특성의 속성은 어셈블리와 해당 형식의 모든 멤버에 모든 종류의 보증을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-231">That is, by default, the guarantee defined by the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> property of the attribute at the assembly level defines the guarantee of all types in the assembly and all members in those types.</span></span> <span data-ttu-id="9040a-232">마찬가지로, 보장 된 형식에 적용 되는 경우 기본적으로도 적용 됩니다 형식의 각 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-232">Similarly, if the guarantee is applied to the type, by default it also applies to each member of the type.</span></span>  
  
 <span data-ttu-id="9040a-233">이 상속 된 보증을 적용 하 여 재정의할 수 있습니다는 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 개별 형식 및 형식 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-233">This inherited guarantee can be overridden by applying the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> to individual types and type members.</span></span> <span data-ttu-id="9040a-234">그러나 기본값을 재정의 하는 보증 보장; 약화만 수 있습니다. 이러한 높일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-234">However, guarantees that override the default can only weaken the guarantee; they cannot strengthen it.</span></span> <span data-ttu-id="9040a-235">예를 들어, 어셈블리 표시 되는 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 보장, 해당 형식 및 멤버는 호환성 보장 되지 않습니다 하 고 어셈블리에서 형식 또는 멤버에 적용 되는 다른 모든 보장은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-235">For example, if an assembly is marked with the <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> guarantee, its types and members have no compatibility guarantee, and any other guarantee that is applied to types or members in the assembly is ignored.</span></span>  
  
## <a name="testing-the-guarantee"></a><span data-ttu-id="9040a-236">보증 테스트</span><span class="sxs-lookup"><span data-stu-id="9040a-236">Testing the Guarantee</span></span>  
 <span data-ttu-id="9040a-237"><xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 속성의 멤버를 반환 합니다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 열거형으로 표시 된를 <xref:System.FlagsAttribute> 특성.</span><span class="sxs-lookup"><span data-stu-id="9040a-237">The <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> property returns a member of the <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> enumeration, which is marked with the <xref:System.FlagsAttribute> attribute.</span></span> <span data-ttu-id="9040a-238">이 자리 비움 잠재적으로 알 수 없는 플래그를 가장 하 여 관심 있는 플래그에 대 한 테스트 해야 하는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-238">This means that you should test for the flag that you are interested in by masking away potentially unknown flags.</span></span> <span data-ttu-id="9040a-239">다음 예제에서는 형식으로 표시 되는지 여부를 테스트 하는 예를 들어 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-239">For example, the following example tests whether a type is marked as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>.</span></span>  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 <span data-ttu-id="9040a-240">다음 예제에서는 형식으로 표시 되는지 여부를 테스트 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 또는 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-240">The following example tests whether a type is marked as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> or <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.</span></span>  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 <span data-ttu-id="9040a-241">다음 형식 되는지 여부를 테스트 하는 예제로 표시 됩니다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (즉, 둘 다 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 도 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).</span><span class="sxs-lookup"><span data-stu-id="9040a-241">The following example tests wither a type is marked as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (that is, neither <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> nor <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).</span></span>  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees"><span data-ttu-id="9040a-242">여러 버전에서 보장되는 호환성 수준을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-242">One of the enumeration values that specifies the level of compatibility that is guaranteed across multiple versions.</span></span></param>
        <summary><span data-ttu-id="9040a-243">라이브러리, 형식 또는 여러 버전에서 보장되는 멤버의 호환성 수준을 나타내는 값을 사용하여 <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-243">Initializes a new instance of the <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> class with a value that indicates a library, type, or member's guaranteed level of compatibility across multiple versions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9040a-244">경우는 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 클래스가 인스턴스화되면 값을 `guarantees` 매개 변수를 할당 하는 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-244">When the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> class is instantiated, the value of the `guarantees` parameter is assigned to the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9040a-245">여러 버전으로 확장되는 라이브러리, 형식 또는 형식 멤버의 보장된 호환성 수준을 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-245">Gets a value that indicates the guaranteed level of compatibility of a library, type, or type member that spans multiple versions.</span></span></summary>
        <value><span data-ttu-id="9040a-246">여러 버전에서 보장되는 호환성 수준을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="9040a-246">One of the enumeration values that specifies the level of compatibility that is guaranteed across multiple versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9040a-247">값 합니다 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 속성에 해당 하는 `guarantees` 의 매개 변수를 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> 생성자.</span><span class="sxs-lookup"><span data-stu-id="9040a-247">The value of the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> property corresponds to the `guarantees` parameter of the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>