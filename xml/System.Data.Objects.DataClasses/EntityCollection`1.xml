<Type Name="EntityCollection&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityCollection&lt;TEntity&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34f656f81d55560f0391c78df0dc981258e58612" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57960186" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityCollection&lt;TEntity&gt; : System.Data.Objects.DataClasses.RelatedEnd, System.Collections.Generic.ICollection&lt;TEntity&gt;, System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.ComponentModel.IListSource where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityCollection`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.RelatedEnd implements class System.Collections.Generic.ICollection`1&lt;!TEntity&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityCollection(Of TEntity)&#xA;Inherits RelatedEnd&#xA;Implements ICollection(Of TEntity), IEnumerable(Of TEntity), IListSource" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityCollection sealed : System::Data::Objects::DataClasses::RelatedEnd, System::Collections::Generic::ICollection&lt;TEntity&gt;, System::Collections::Generic::IEnumerable&lt;TEntity&gt;, System::ComponentModel::IListSource" />
  <TypeSignature Language="F#" Value="type EntityCollection&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit RelatedEnd&#xA;    interface ICollection&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface seq&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IEnumerable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.RelatedEnd</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity"><span data-ttu-id="c52d6-101">컬렉션의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-101">The entity type of the collection.</span></span></typeparam>
    <summary><span data-ttu-id="c52d6-102">관계의 "다" 쪽에 있는 개체의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-102">Represents a collection of objects on the "many" end of a relationship.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-103"><xref:System.Data.Objects.DataClasses.EntityCollection%601>은 일대다 또는 다대다 관계의 "다" 쪽을 나타내는 특정 엔터티 형식의 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-103">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> is a collection of objects of a particular entity type that represents the "many" end of a one-to-many or many-to-many relationship.</span></span>  
  
 <span data-ttu-id="c52d6-104"><xref:System.Data.Objects.DataClasses.EntityCollection%601>은 탐색 속성에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-104">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> is returned by a navigation property.</span></span> <span data-ttu-id="c52d6-105"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 메서드를 사용하여 관련 개체를 <xref:System.Data.Objects.DataClasses.EntityCollection%601>에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-105">Use the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method to load related objects into an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="c52d6-106"><xref:System.Data.Objects.ObjectQuery%601>의 결과와 같은 특정 엔터티 형식의 관련되지 않은 개체 컬렉션을 복원하려면 <xref:System.Collections.Generic.List%601> 클래스의 인스턴스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-106">To store an unrelated collection of objects of a specific entity type, such as the result of an <xref:System.Data.Objects.ObjectQuery%601>, use an instance of the <xref:System.Collections.Generic.List%601> class.</span></span>  
  
 <span data-ttu-id="c52d6-107"><xref:System.Data.Objects.DataClasses.EntityCollection%601>에는 대응되는 <xref:System.Data.Objects.DataClasses.EntityReference%601>가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-107">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> might have a corresponding <xref:System.Data.Objects.DataClasses.EntityReference%601>.</span></span> <span data-ttu-id="c52d6-108"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 모델이 같은 관계의 반대편 End에 있으면 관계의 무결성이 개체 수준에서 유지 관리됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-108">When an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and an <xref:System.Data.Objects.DataClasses.EntityReference%601> model opposite ends of the same relationship, the integrity of the relationship is maintained at the object level.</span></span> <span data-ttu-id="c52d6-109">두 클래스는 자동으로 동기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-109">The two classes are synchronized automatically.</span></span>  
  
 <span data-ttu-id="c52d6-110">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-110">This class cannot be inherited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52d6-111">이 예제는 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-111">This example is based on the .</span></span> <span data-ttu-id="c52d6-112">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-112">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="c52d6-113">이렇게 하려면의 절차를 완료 [방법: Entity Framework 프로젝트 수동 구성](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) 고 [방법: 수동으로 모델을 정의 및 매핑 파일](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-113">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="c52d6-114">이 예제에서는 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-114">This example does the following:</span></span>  
  
1.  <span data-ttu-id="c52d6-115">두 `SalesOrderHeader` 엔터티를 새로 만들어 `Contact` 엔터티에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-115">Creates two new `SalesOrderHeader` entities and adds them to the `Contact` entity.</span></span>  
  
2.  <span data-ttu-id="c52d6-116"><xref:System.Data.Objects.DataClasses.RelationshipManager> 엔터티와 연결된 `Contact`에서 관련 End를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-116">Gets all related ends from the <xref:System.Data.Objects.DataClasses.RelationshipManager> that is associated with the `Contact` entity.</span></span>  
  
3.  <span data-ttu-id="c52d6-117"><xref:System.Data.Objects.DataClasses.IRelatedEnd>의 컬렉션을 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-117">Iterates through the collection of <xref:System.Data.Objects.DataClasses.IRelatedEnd>s.</span></span>  
  
4.  <span data-ttu-id="c52d6-118">각 관련 End의 <xref:System.Data.Objects.DataClasses.EntityCollection%601>을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-118">Gets the <xref:System.Data.Objects.DataClasses.EntityCollection%601> for each related end.</span></span>  
  
5.  <span data-ttu-id="c52d6-119"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 메서드를 사용하여 컬렉션에서 엔터티 중 하나를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-119">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection.</span></span>  
  
6.  <span data-ttu-id="c52d6-120"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> 메서드를 호출하여 개체가 컬렉션에서 제거되었는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-120">Calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>  
  
7.  <span data-ttu-id="c52d6-121"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 메서드를 사용하여 엔터티를 다시 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-121">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the entity back.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c52d6-122"><see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-122">Initializes a new instance of the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-123"><xref:System.Data.Objects.DataClasses.EntityCollection%601>의 이 public 생성자는 개체 그래프를 deserialize할 때 개체 서비스에서 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-123">This public constructor for <xref:System.Data.Objects.DataClasses.EntityCollection%601> is intended to be used by Object Services when deserializing object graphs.</span></span> <span data-ttu-id="c52d6-124"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 인스턴스에 액세스할 때는 이 생성자 대신 탐색 속성을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-124">You should access an instance of <xref:System.Data.Objects.DataClasses.EntityCollection%601> from a navigation property instead of using this constructor.</span></span>  
  
 <span data-ttu-id="c52d6-125"><xref:System.Data.Objects.ObjectQuery%601>의 결과와 같은 특정 엔터티 형식의 관련되지 않은 개체 컬렉션을 복원하려면 <xref:System.Collections.Generic.List%601> 인스턴스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-125">To store an unrelated collection of objects of a specific entity type, such as the result of an <xref:System.Data.Objects.ObjectQuery%601>, use an instance of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Add : 'Entity -&gt; unit" Usage="entityCollection.Add entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="c52d6-126">컬렉션에 추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-126">An object to add to the collection.</span></span> <span data-ttu-id="c52d6-127"><paramref name="entity" />는 <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-127"><paramref name="entity" /> must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</span></span></param>
        <summary><span data-ttu-id="c52d6-128">개체를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-128">Adds an object to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-129"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 메서드에서는 개체를 <xref:System.Data.Objects.DataClasses.EntityCollection%601>에 추가하고 두 개체 사이의 관계를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-129">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method adds an object to an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and creates a relationship between the two objects.</span></span> <span data-ttu-id="c52d6-130">소스 개체가 <xref:System.Data.Objects.ObjectContext> 인스턴스에 연결되어 있으면 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 메서드에서 개체를 <xref:System.Data.Objects.ObjectContext>에도 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-130">When the source object is attached to an <xref:System.Data.Objects.ObjectContext> instance, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method also adds the object to the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="c52d6-131"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A>가 호출되면 이 작업은 데이터 소스에서 삽입 작업으로 변환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-131">This operation is translated into an insert operation in the data source when <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> is called.</span></span> <span data-ttu-id="c52d6-132">자세한 내용은 [만들기, 추가, 수정, 및 개체 삭제](https://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-132">For more information, see [Creating, Adding, Modifying, and Deleting Objects](https://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1).</span></span>  
  
 <span data-ttu-id="c52d6-133"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 메서드는 동일 개체 인스턴스에 대해 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-133">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method can be called multiple times on the same object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52d6-134">이 예제는 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-134">This example is based on the .</span></span> <span data-ttu-id="c52d6-135">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-135">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="c52d6-136">이렇게 하려면의 절차를 완료 [방법: Entity Framework 프로젝트 수동 구성](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) 고 [방법: 수동으로 모델을 정의 및 매핑 파일](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-136">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="c52d6-137">이 예제에서는 두 `SalesOrderHeader` 엔터티를 새로 만들어 `Contact` 엔터티에 추가하고 개체를 제거한 후 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 메서드를 사용하여 개체를 다시 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-137">This example creates two new `SalesOrderHeader` entities, adds them to the `Contact` entity, and, after removing an object, uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the object back to the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c52d6-138"><paramref name="entity" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-138"><paramref name="entity" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c52d6-139">개체 컨텍스트의 연결된 두 개체 간의 관계를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-139">Defines a relationship between two attached objects in an object context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.Collections.Generic.IEnumerable&lt;TEntity&gt; entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt; entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entities As IEnumerable(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ entities);" />
      <MemberSignature Language="F#" Value="override this.Attach : seq&lt;'Entity (requires 'Entity : null)&gt; -&gt; unit" Usage="entityCollection.Attach entities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="entities"><span data-ttu-id="c52d6-140">소스 개체와 관련된 개체 컨텍스트의 개체 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-140">Collection of objects in the object context that are related to the source object.</span></span></param>
        <summary><span data-ttu-id="c52d6-141">개체와 개체 컨텍스트의 관련 개체 컬렉션 간의 관계를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-141">Defines relationships between an object and a collection of related objects in an object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-142"><xref:System.Data.Objects.ObjectContext.Attach%2A> 메서드는 소스 개체와 관련 개체 컬렉션이 모두 개체 컨텍스트에 이미 있을 때 개체와 관련 개체 컬렉션 간의 관계를 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-142">The <xref:System.Data.Objects.ObjectContext.Attach%2A> method is used to define relationships between an object and a collection of related objects when both the source object and the collection of related objects already exist in the object context.</span></span> <span data-ttu-id="c52d6-143">관계가 이미 정의된 개체 또는 개체 그래프를 연결하려면 <xref:System.Data.Objects.ObjectContext.Attach%2A>에 대해 <xref:System.Data.Objects.ObjectContext> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-143">To attach an object or an object graph where the relationships are already defined, call the <xref:System.Data.Objects.ObjectContext.Attach%2A> method on the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="c52d6-144">소스 개체와 관련된 새 개체를 만들려면 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>에 대해 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-144">To create a new object that is related to the source object, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="c52d6-145">자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-145">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="c52d6-146">컬렉션이 이미 채워져 있거나 부분적으로 채워져 있으면 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> 메서드는 기존 엔터티를 지정된 엔터티와 병합합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-146">If the collection is already filled or partially filled, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method merges existing entities with the given entities.</span></span> <span data-ttu-id="c52d6-147">지정된 엔터티는 관련 엔터티의 전체 집합이 아닐 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-147">The given entities are not assumed to be the complete set of related entities.</span></span>  
  
 <span data-ttu-id="c52d6-148">전달되는 모든 엔터티는 <xref:System.Data.EntityState.Unchanged> 또는 <xref:System.Data.EntityState.Modified> 상태여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-148">All entities passed in must be in the <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span> <span data-ttu-id="c52d6-149"><xref:System.Data.EntityState.Deleted> 상태의 개체는 상태 관리자가 관계 인스턴스를 이미 추적하고 있는 경우에만 허용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-149">Objects in the <xref:System.Data.EntityState.Deleted> state are only allowed when the state manager is already tracking the relationship instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c52d6-150"><paramref name="entities" /> 컬렉션은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-150"><paramref name="entities" /> collection is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c52d6-151">소스 개체 또는 <paramref name="entities" /> 컬렉션의 개체가 <see langword="null" />이거나, <see cref="F:System.Data.EntityState.Unchanged" /> 또는 <see cref="F:System.Data.EntityState.Modified" /> 상태가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c52d6-151">The source object or an object in the <paramref name="entities" /> collection is <see langword="null" /> or is not in an <see cref="F:System.Data.EntityState.Unchanged" /> or <see cref="F:System.Data.EntityState.Modified" /> state.</span></span>  
  
<span data-ttu-id="c52d6-152">또는</span><span class="sxs-lookup"><span data-stu-id="c52d6-152">-or-</span></span> 
<span data-ttu-id="c52d6-153">EDM 메타데이터를 기반으로 관계를 정의할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="c52d6-153">The relationship cannot be defined based on the EDM metadata.</span></span> <span data-ttu-id="c52d6-154">개념 스키마의 연결이 두 형식 간의 관계를 지원하지 않을 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-154">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Attach : 'Entity -&gt; unit" Usage="entityCollection.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="c52d6-155">연결 중인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-155">The object being attached.</span></span></param>
        <summary><span data-ttu-id="c52d6-156">개체 컨텍스트의 연결된 두 개체 간의 관계를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-156">Defines a relationship between two attached objects in an object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-157"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> 메서드는 두 개체가 모두 개체 컨텍스트에 이미 있을 때 두 개체 간의 관계를 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-157">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method is used to define relationships between two objects when both objects already exist in the object context.</span></span> <span data-ttu-id="c52d6-158">관계가 이미 정의된 개체 또는 개체 그래프를 연결하려면 <xref:System.Data.Objects.ObjectContext.Attach%2A>에 대해 <xref:System.Data.Objects.ObjectContext> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-158">To attach an object or an object graph where the relationships are already defined, call the <xref:System.Data.Objects.ObjectContext.Attach%2A> method on the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="c52d6-159">소스 개체와 관련된 새 개체를 만들려면 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>에 대해 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-159">To create a new object that is related to the source object, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="c52d6-160">자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-160">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="c52d6-161"><xref:System.Data.Objects.DataClasses.EntityCollection%601>에 로드된 개체가 이미 있으면 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> 메서드는 개체를 <xref:System.Data.Objects.DataClasses.EntityCollection%601>의 기존 개체와 병합합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-161">If the <xref:System.Data.Objects.DataClasses.EntityCollection%601> already has loaded objects, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method merges the object together with the existing objects in the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span>  
  
 <span data-ttu-id="c52d6-162">연결된 개체는 관련 엔터티 개체의 전체 집합이 아닐 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-162">The attached object is not assumed to be the complete set of related entity objects.</span></span>  
  
 <span data-ttu-id="c52d6-163">이 <xref:System.Data.Objects.DataClasses.EntityCollection%601>과 연결된 개체 및 여기에 연결 중인 모든 개체는 <xref:System.Data.EntityState.Unchanged> 또는 <xref:System.Data.EntityState.Modified> 상태여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-163">The object associated with this <xref:System.Data.Objects.DataClasses.EntityCollection%601> and all objects being attached to it must be in an <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span>  
  
 <span data-ttu-id="c52d6-164"><xref:System.Data.EntityState.Deleted> 상태의 개체는 <xref:System.Data.Objects.ObjectStateManager>가 관계 인스턴스를 이미 추적하고 있는 경우에만 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-164">Objects in the <xref:System.Data.EntityState.Deleted> state can only be attached when the <xref:System.Data.Objects.ObjectStateManager> is already tracking the relationship instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52d6-165">이 예제는 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-165">This example is based on the .</span></span> <span data-ttu-id="c52d6-166">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-166">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="c52d6-167">이렇게 하려면의 절차를 완료 [방법: Entity Framework 프로젝트 수동 구성](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) 고 [방법: 수동으로 모델을 정의 및 매핑 파일](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-167">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="c52d6-168">이 예제에서는 연결의 분리 된 컬렉션 `SalesOrderDetail` 개체와 분리 된 `SalesOrderHeader` 를 개체 컨텍스트에 개체를 다음 간의 관계를 정의 합니다 `SalesOrderHeader` 개체와 각 `SalesOrderDetail` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-168">This example attaches a collection of detached `SalesOrderDetail` objects and a detached `SalesOrderHeader` object to an object context, and then defines the relationships between the `SalesOrderHeader` object and each `SalesOrderDetail` object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#attachrelatedobjects)]
 [!code-vb[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#attachrelatedobjects)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c52d6-169"><paramref name="entity" />이 <see langword="null" />인 경우.</span><span class="sxs-lookup"><span data-stu-id="c52d6-169">When the <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c52d6-170"><paramref name="entity" />를 소스 개체와 관련시킬 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="c52d6-170">When the <paramref name="entity" /> cannot be related to the source object.</span></span> <span data-ttu-id="c52d6-171">개념 스키마의 연결이 두 형식 간의 관계를 지원하지 않을 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-171">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span></span>  
  
<span data-ttu-id="c52d6-172">또는</span><span class="sxs-lookup"><span data-stu-id="c52d6-172">-or-</span></span> 
<span data-ttu-id="c52d6-173">어느 한 개체가 <see langword="null" />이거나 <see cref="F:System.Data.EntityState.Unchanged" /> 또는 <see cref="F:System.Data.EntityState.Modified" /> 상태에 있지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="c52d6-173">When either object is <see langword="null" /> or is not in an <see cref="F:System.Data.EntityState.Unchanged" /> or <see cref="F:System.Data.EntityState.Modified" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="entityCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c52d6-174">컬렉션에서 엔터티를 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-174">Removes all entities from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-175"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>에서는 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-175"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> does the following:</span></span>  
  
-   <span data-ttu-id="c52d6-176">설정 된 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 플래그를 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-176">Sets the <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> flag to `false`.</span></span>  
  
-   <span data-ttu-id="c52d6-177">컬렉션에서 엔터티를 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-177">Removes all entities from the collection.</span></span>  
  
-   <span data-ttu-id="c52d6-178">제거된 엔터티 및 <xref:System.Data.Objects.DataClasses.EntityCollection%601>의 소유자 간의 관계를 <xref:System.Data.Objects.ObjectStateManager>에서 분리합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-178">Detaches relationships between removed entities and the owner of the <xref:System.Data.Objects.DataClasses.EntityCollection%601> from the <xref:System.Data.Objects.ObjectStateManager>.</span></span>  
  
-   <span data-ttu-id="c52d6-179">관련 엔터티에서 <xref:System.Data.Objects.DataClasses.EntityCollection%601>의 소유자를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-179">Removes the owner of the <xref:System.Data.Objects.DataClasses.EntityCollection%601> from the related entities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'Entity -&gt; bool&#xA;override this.Contains : 'Entity -&gt; bool" Usage="entityCollection.Contains entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="c52d6-180"><see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-180">The object to locate in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="c52d6-181">특정 개체가 컬렉션에 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-181">Determines whether a specific object exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="c52d6-182"><see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />에 개체가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-182"><see langword="true" /> if the object is found in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-183">지정된 개체를 컬렉션에 이미 있는 개체와 비교하려면 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-183">Uses the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method to compare the specified object with the objects already in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52d6-184">이 예제는 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-184">This example is based on the .</span></span> <span data-ttu-id="c52d6-185">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-185">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="c52d6-186">이렇게 하려면의 절차를 완료 [방법: Entity Framework 프로젝트 수동 구성](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) 고 [방법: 수동으로 모델을 정의 및 매핑 파일](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-186">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="c52d6-187">이 예제에서는 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-187">This example does the following:</span></span>  
  
1.  <span data-ttu-id="c52d6-188">두 `SalesOrderHeader` 엔터티를 새로 만들어 `Contact` 엔터티에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-188">Creates two new `SalesOrderHeader` entities and adds them to the `Contact` entity.</span></span>  
  
2.  <span data-ttu-id="c52d6-189">Contact 엔터티와 연결된 <xref:System.Data.Objects.DataClasses.RelationshipManager>에서 관련 End를 모두 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-189">Gets all related ends from the <xref:System.Data.Objects.DataClasses.RelationshipManager> that is associated with the Contact entity.</span></span>  
  
3.  <span data-ttu-id="c52d6-190"><xref:System.Data.Objects.DataClasses.IRelatedEnd>의 컬렉션을 반복합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-190">Iterates through the collection of <xref:System.Data.Objects.DataClasses.IRelatedEnd>s.</span></span>  
  
4.  <span data-ttu-id="c52d6-191">각 관련 End의 <xref:System.Data.Objects.DataClasses.EntityCollection%601>을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-191">Gets the <xref:System.Data.Objects.DataClasses.EntityCollection%601> for each related end.</span></span>  
  
5.  <span data-ttu-id="c52d6-192"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 메서드를 사용하여 컬렉션에서 엔터티 중 하나를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-192">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection.</span></span>  
  
6.  <span data-ttu-id="c52d6-193"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> 메서드를 호출하여 개체가 컬렉션에서 제거되었는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-193">Calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>  
  
7.  <span data-ttu-id="c52d6-194"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 메서드를 사용하여 엔터티를 다시 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-194">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the entity back.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (TEntity[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!TEntity[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TEntity(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;TEntity&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'Entity[] * int -&gt; unit&#xA;override this.CopyTo : 'Entity[] * int -&gt; unit" Usage="entityCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="TEntity[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c52d6-195">복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-195">The array to copy to.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="c52d6-196">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-196">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c52d6-197">대상 배열의 지정된 인덱스부터 시작하여 컬렉션의 모든 내용을 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-197">Copies all the contents of the collection to an array, starting at the specified index of the target array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null)&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c52d6-198">컬렉션에 포함된 개체 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-198">Gets the number of objects that are contained in the collection.</span></span></summary>
        <value><span data-ttu-id="c52d6-199"><see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />에 포함된 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-199">The number of elements that are contained in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-200"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A> 속성은 로컬 컬렉션에 현재 있는 엔터티 수를 가져오며 데이터 소스의 컬렉션 크기는 반영하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-200">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A> property gets the number of entities currently in the local collection and does not reflect the size of the collection in the data source.</span></span> <span data-ttu-id="c52d6-201">0개라고 해서 관련 컬렉션이 반드시 비어 있는 것은 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-201">A count of zero does not necessarily indicate that the related collection is empty.</span></span> <span data-ttu-id="c52d6-202">데이터 소스의 컬렉션 크기를 확인하려면 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 메서드를 호출하거나 관련 개체를 쿼리 경로에 포함시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-202">To determine the collection size in the data source, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method or include the related object in the query path.</span></span> <span data-ttu-id="c52d6-203">자세한 내용은 [관련 개체 로드](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-203">For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityCollection.CreateSourceQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c52d6-204">실행되면 현재 컬렉션에 있는 동일한 개체 집합을 반환하는 개체 쿼리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-204">Returns an object query that, when it is executed, returns the same set of objects that exists in the current collection.</span></span></summary>
        <returns><span data-ttu-id="c52d6-205">엔터티 컬렉션을 나타내는 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-205">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the entity collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-206">이 속성은 동일한 개체 집합을 반환하는 새 <xref:System.Data.Objects.ObjectQuery%601> 인스턴스를 가져오는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-206">This property is used to obtain a new instance of <xref:System.Data.Objects.ObjectQuery%601> that returns the same set of objects.</span></span> <span data-ttu-id="c52d6-207">이 속성은 보다 복잡한 조인, 통합 또는 필터링된 쿼리의 시작 지점으로 사용하거나, <xref:System.Data.Objects.MergeOption.NoTracking> 옵션을 사용하여 분리된 상태의 동일한 개체를 반환하는 데 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-207">This is useful as the starting point for a more complex join, union, or filtered query, or to return the same objects in a detached state by using the <xref:System.Data.Objects.MergeOption.NoTracking> option.</span></span>  
  
 <span data-ttu-id="c52d6-208"><xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> 개체를 필터링 하는 데 사용 되는 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 특정 형식의 개체에만 바인딩할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-208"><xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> is used to filter objects in an <xref:System.Data.Objects.DataClasses.EntityCollection%601> to enable you to bind only objects of a specific type.</span></span> <span data-ttu-id="c52d6-209">자세한 내용은 [컨트롤에 개체 바인딩](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-209">For more information, see [Binding Objects to Controls](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52d6-210">이 예제는 수정된 된 버전에 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-210">This example is based on a modified version of the .</span></span> <span data-ttu-id="c52d6-211">이 버전에서는 추상 형식이 `Course`인 형식당 하나의 테이블 상속을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-211">This version supports table-per-type inheritance with `Course` as an abstract type.</span></span> <span data-ttu-id="c52d6-212">이 항목에 사용 된 형식당 하나의 테이블 상속 예제를 지원 하도록 School 모델을 수정 하려면이 연습을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-212">Complete the  walkthrough to modify the School model to support the table-per-type inheritance example used in this topic.</span></span>  
  
 <span data-ttu-id="c52d6-213">이 예제에 사용 하는 방법을 보여 줍니다 <xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> 에서 개체를 필터링 하는 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 특정 형식의 개체에만 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-213">This example shows how to use <xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> to filter objects in an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and bind only to objects of a specific type.</span></span> <span data-ttu-id="c52d6-214">이 예제의 전체 버전을 참조 하세요. [방법: 파생된 형식에 컨트롤 바인딩](https://msdn.microsoft.com/library/09730c14-3b7b-4563-af4a-7ecfa4e34bd5)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-214">For a complete version of this example, see [How to: Bind Controls to Derived Types](https://msdn.microsoft.com/library/09730c14-3b7b-4563-af4a-7ecfa4e34bd5).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c52d6-215">개체가 <see cref="F:System.Data.EntityState.Added" /> 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="c52d6-215">When the object is in an <see cref="F:System.Data.EntityState.Added" /> state.</span></span>  
  
<span data-ttu-id="c52d6-216">또는</span><span class="sxs-lookup"><span data-stu-id="c52d6-216">-or-</span></span> 
<span data-ttu-id="c52d6-217">개체가 <see cref="F:System.Data.EntityState.Detached" /> 이외의 <see cref="T:System.Data.Objects.MergeOption" />이 설정된 <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="c52d6-217">When the object is in a <see cref="F:System.Data.EntityState.Detached" /> state with a <see cref="T:System.Data.Objects.MergeOption" /> other than <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TEntity&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TEntity&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TEntity&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c52d6-218">컬렉션의 개체를 반복하는 데 사용되는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-218">Returns an enumerator that is used to iterate through the objects in the collection.</span></span></summary>
        <returns><span data-ttu-id="c52d6-219"><see cref="T:System.Collections.IEnumerator" />에서 캐시하는 값 집합을 반복하는 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-219">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null)&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c52d6-220"><see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-220">Gets a value that indicates whether the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="c52d6-221">항상 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-221">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Data.Objects.MergeOption -&gt; unit" Usage="entityCollection.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="c52d6-222">같은 <see cref="T:System.Data.Objects.ObjectContext" />에 대한 이전 쿼리에서 반환된 개체가 있는 경우 이 컬렉션의 개체와 병합할 방법을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-222">Specifies how the objects in this collection should be merged with the objects that might have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="c52d6-223">지정된 병합 옵션을 사용하여 관련 개체를 컬렉션에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-223">Loads related objects into the collection, using the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="c52d6-224">이 메서드 호출 내부 `RelatedEnd.ValidateLoad` 메서드를 호출 하는지 확인 하는 컬렉션을 로드 하기 전에 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 에 올바른 조건이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-224">This method calls the internal `RelatedEnd.ValidateLoad` method before loading the collection, which validates that a call to <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> has the correct conditions.</span></span> <span data-ttu-id="c52d6-225">`RelatedEnd.ValidateLoad` 메서드 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-225">The `RelatedEnd.ValidateLoad` method checks that:</span></span>

* <span data-ttu-id="c52d6-226">유효한 <xref:System.Data.Objects.ObjectContext> 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-226">A valid <xref:System.Data.Objects.ObjectContext> exists.</span></span>
* <span data-ttu-id="c52d6-227">에 없는 엔터티는 <xref:System.Data.EntityState.Deleted> 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-227">The entity isn't in a <xref:System.Data.EntityState.Deleted> state.</span></span>
* <span data-ttu-id="c52d6-228"><xref:System.Data.Objects.MergeOption> 에 대 한 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 있어야 <xref:System.Data.Objects.MergeOption.NoTracking> 경우에 원본 엔터티가 <xref:System.Data.Objects.MergeOption.NoTracking>합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-228"><xref:System.Data.Objects.MergeOption> for <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> must be <xref:System.Data.Objects.MergeOption.NoTracking> if and only if the source entity was <xref:System.Data.Objects.MergeOption.NoTracking>.</span></span> <span data-ttu-id="c52d6-229">원본 엔터티는 다른를 사용 하 여 검색 된 경우 <xref:System.Data.Objects.MergeOption>는 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> 도 될 수 있습니다 <xref:System.Data.Objects.MergeOption.NoTracking> (예를 들어, 엔터티 수 로드 된 <xref:System.Data.Objects.MergeOption.OverwriteChanges> 및 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 옵션 수<xref:System.Data.Objects.MergeOption.AppendOnly>).</span><span class="sxs-lookup"><span data-stu-id="c52d6-229">If the source entity was retrieved with any other <xref:System.Data.Objects.MergeOption>, the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> can be anything but <xref:System.Data.Objects.MergeOption.NoTracking> (for example, the entity could have been loaded with <xref:System.Data.Objects.MergeOption.OverwriteChanges> and the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> option can be <xref:System.Data.Objects.MergeOption.AppendOnly>).</span></span>
* <span data-ttu-id="c52d6-230">하는 경우 `mergeOption` 됩니다 <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 이미 로드 된 엔터티에 대해 호출 되지 않은 및 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 는 비어 있지 않은, not 추적에서 호출 되지 않은 <xref:System.Data.Objects.DataClasses.RelatedEnd>합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-230">If `mergeOption` is <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on an already loaded entity and <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on a non-empty, not-tracked <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span>
  
 <span data-ttu-id="c52d6-231">컬렉션의 개체에 이미 로드 되는 경우는 <xref:System.Data.Objects.ObjectContext>, <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 메서드 적용 합니다 <xref:System.Data.Objects.MergeOption> 에 지정 된는 `mergeOption` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="c52d6-231">When objects in the collection are already loaded into the <xref:System.Data.Objects.ObjectContext>, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method enforces the <xref:System.Data.Objects.MergeOption> specified by the `mergeOption` parameter.</span></span> <span data-ttu-id="c52d6-232">자세한 내용은 [Id 확인, 상태 관리 및 변경 내용 추적](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-232">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="c52d6-233">관련된 개체를 명시적으로 로드를 호출 해야 합니다 `Load` 탐색 속성에서 반환 된 관련된 end 메서드.</span><span class="sxs-lookup"><span data-stu-id="c52d6-233">To explicitly load related objects, you must call the `Load` method on the related end returned by the navigation property.</span></span> <span data-ttu-id="c52d6-234">1 대 다 관계에 대해 호출을 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 메서드를 <xref:System.Data.Objects.DataClasses.EntityCollection%601>입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-234">For a one-to-many relationship, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method on <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="c52d6-235">한 일 관계에 대해 호출 된 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> 에서 <xref:System.Data.Objects.DataClasses.EntityReference%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-235">For a one-to-one relationship, call the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> on <xref:System.Data.Objects.DataClasses.EntityReference%601>.</span></span> <span data-ttu-id="c52d6-236">이렇게 하면 관련 개체 데이터가 개체 컨텍스트에 로드됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-236">This loads the related object data into the object context.</span></span> <span data-ttu-id="c52d6-237">사용 하 여 반환 된 결과의 컬렉션을 열거할 수 있습니다는 `foreach` 루프 (`For Each...Next` Visual Basic의) 조건부로 호출 합니다 `Load` 메서드를 <xref:System.Data.Objects.DataClasses.EntityReference%601> 및 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 결과의 각 엔터티에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-237">You can enumerate through the collection of returned results using a `foreach` loop (`For Each...Next` in Visual Basic) and conditionally call the `Load` method on <xref:System.Data.Objects.DataClasses.EntityReference%601> and <xref:System.Data.Objects.DataClasses.EntityCollection%601> properties for each entity in the results.</span></span>  
  
 <span data-ttu-id="c52d6-238">합니다 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 메서드는 데이터 소스의 여부 관련된 개체를 로드 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-238">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c52d6-239"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A>(C#) 또는 `foreach`(Visual Basic) 열거를 수행하는 동안 `For Each` 메서드를 호출하면 개체 서비스에서 새 데이터 판독기를 열려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-239">When you call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method during a `foreach` (C#) or `For Each` (Visual Basic) enumeration, Object Services tries to open a new data reader.</span></span> <span data-ttu-id="c52d6-240">연결 문자열에서 `multipleactiveresultsets=true`를 지정하여 MARS(Multiple Active Result Sets)를 활성화하지 않은 경우에는 이 작업이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-240">This operation will fail unless you have enabled multiple active results sets by specifying `multipleactiveresultsets=true` in the connection string.</span></span> <span data-ttu-id="c52d6-241">쿼리 결과를 <xref:System.Collections.Generic.List%601> 컬렉션에 로드할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-241">You can also load the result of the query into a <xref:System.Collections.Generic.List%601> collection.</span></span> <span data-ttu-id="c52d6-242">이렇게 하면 데이터 판독기가 닫히고 컬렉션 전체를 열거하여 참조된 개체를 로드할 수 있게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-242">This closes the data reader and enables you to enumerate over the collection to load referenced objects.</span></span>  
  
 <span data-ttu-id="c52d6-243"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType> 메서드가 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType> 메서드와 동기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-243">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType> method is synchronized with the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52d6-244">이 예제는 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-244">This example is based on the .</span></span> <span data-ttu-id="c52d6-245">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-245">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="c52d6-246">이렇게 하려면의 절차를 완료 [방법: Entity Framework 프로젝트 수동 구성](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) 고 [방법: 수동으로 모델을 정의 및 매핑 파일](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-246">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="c52d6-247">이 예제에서는 `SalesOrderHeader` 엔터티의 관련 `Contact` 개체를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-247">This example loads the related `SalesOrderHeader` objects for the `Contact` entity.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryWithLoad](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithload)]
 [!code-vb[DP ObjectServices Concepts#QueryWithLoad](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithload)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionDeserialized">
      <MemberSignature Language="C#" Value="public void OnCollectionDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnCollectionDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCollectionDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCollectionDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnCollectionDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityCollection.OnCollectionDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c52d6-248">스트리밍 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-248">The streaming context.</span></span></param>
        <summary><span data-ttu-id="c52d6-249">엔터티 개체를 deserialize하기 위해 내부적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-249">Used internally to deserialize entity objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityCollection.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c52d6-250">스트리밍 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-250">The streaming context.</span></span></param>
        <summary><span data-ttu-id="c52d6-251">엔터티 개체를 serialize하기 위해 내부적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-251">Used internally to serialize entity objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Entity -&gt; bool" Usage="entityCollection.Remove entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="c52d6-252">컬렉션에서 제거할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-252">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="c52d6-253">컬렉션에서 개체를 제거하고 삭제할 관계를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-253">Removes an object from the collection and marks the relationship for deletion.</span></span></summary>
        <returns><span data-ttu-id="c52d6-254">항목이 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-254"><see langword="true" /> if item was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-255"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 메서드는 소스 개체와 컬렉션에서 제거되고 있는 개체 사이의 관계도 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-255">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method also deletes the relationship between the source object and the object being removed from the collection.</span></span> <span data-ttu-id="c52d6-256">관계에 참조 무결성 제약 조건이 있으면 종속 개체에 대해 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 메서드를 호출하면 삭제할 관계 및 종속 개체를 모두 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-256">If the relationship has a referential integrity constraint, calling the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method on a dependent object marks both the relationship and the dependent object for deletion.</span></span> <span data-ttu-id="c52d6-257">이것은 부모와의 관계가 없으면 종속 개체가 존재할 수 없다는 제약 조건이 있기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-257">This occurs because the constraint indicates that the dependent object cannot exist without a relationship to the parent.</span></span> <span data-ttu-id="c52d6-258">자세한 내용은 [ReferentialConstraint 요소 (CSDL)](https://msdn.microsoft.com/library/24f96a80-85b5-4f2e-a14c-0e3eb6796fa0)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-258">For more information, see [ReferentialConstraint Element (CSDL)](https://msdn.microsoft.com/library/24f96a80-85b5-4f2e-a14c-0e3eb6796fa0).</span></span>  
  
 <span data-ttu-id="c52d6-259"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 반환 `false` 지정된 된 개체가 없는 경우 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-259"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> returns `false` when the specified object is not in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52d6-260">이 예제는 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-260">This example is based on the .</span></span> <span data-ttu-id="c52d6-261">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-261">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="c52d6-262">이렇게 하려면의 절차를 완료 [방법: Entity Framework 프로젝트 수동 구성](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) 고 [방법: 수동으로 모델을 정의 및 매핑 파일](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-262">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](https://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="c52d6-263">이 예제에서는 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 메서드를 사용하여 컬렉션에서 엔터티 중 하나를 제거한 다음 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> 메서드를 호출하여 개체가 컬렉션에서 제거되었는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-263">This example uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection and then calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c52d6-264"><paramref name="entity" /> 개체가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c52d6-264"><paramref name="entity" /> object is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c52d6-265"><paramref name="entity" /> 개체가 같은 개체 컨텍스트에 연결되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-265">The <paramref name="entity" /> object is not attached to the same object context.</span></span>  
  
<span data-ttu-id="c52d6-266">또는</span><span class="sxs-lookup"><span data-stu-id="c52d6-266">-or-</span></span> 
<span data-ttu-id="c52d6-267"><paramref name="entity" /> 개체에 올바른 관계 관리자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-267">The <paramref name="entity" /> object does not have a valid relationship manager.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c52d6-268"><see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />에서 캐시되는 값 집합을 반복하는 데 사용되는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-268">Returns an enumerator that is used to iterate through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="c52d6-269"><see cref="T:System.Collections.IEnumerator" />에서 캐시하는 값 집합을 반복하는 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-269">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c52d6-270">관련 엔터티 컬렉션이 컬렉션 개체로 구성되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-270">Gets a value that indicates whether the related entity collection consists of collection objects.</span></span></summary>
        <value><span data-ttu-id="c52d6-271"><see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />에는 컬렉션이 아닌 개체가 들어 있으므로 이 속성은 항상 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-271">This property always returns <see langword="false" /> because the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> contains objects and not collections.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-272">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c52d6-272">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c52d6-273"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-273">It can be used only when the <xref:System.Data.Objects.DataClasses.EntityCollection%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c52d6-274">컬렉션을 데이터 바인딩에 사용되는 <see cref="T:System.Collections.IList" />로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-274">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span></span></summary>
        <returns><span data-ttu-id="c52d6-275">엔터티 개체의 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-275">An <see cref="T:System.Collections.IList" /> of entity objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52d6-276">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c52d6-276">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c52d6-277"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-277">It can be used only when the <xref:System.Data.Objects.DataClasses.EntityCollection%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="c52d6-278">이 메서드는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>에 대한 데이터 바인딩을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-278">This method enables data binding to an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="c52d6-279">@FSHO2@이 메서드는 컬렉션에 바인딩된 컨트롤에 의해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-279">It is called by the control bound to the collection.</span></span> <span data-ttu-id="c52d6-280">자세한 내용은 [컨트롤에 개체 바인딩](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)합니다.</span><span class="sxs-lookup"><span data-stu-id="c52d6-280">For more information, see [Binding Objects to Controls](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>