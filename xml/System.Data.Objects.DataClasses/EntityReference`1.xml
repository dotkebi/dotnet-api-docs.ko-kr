<Type Name="EntityReference&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityReference&lt;TEntity&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6fbda2e3260fa67e9d29ef7f66e757b45c6c3bca" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57960212" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityReference`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityReference(Of TEntity)&#xA;Inherits EntityReference" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityReference sealed : System::Data::Objects::DataClasses::EntityReference" />
  <TypeSignature Language="F#" Value="type EntityReference&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit EntityReference" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.EntityReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity"><span data-ttu-id="b5354-101">참조의 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-101">The entity type of the reference.</span></span></typeparam>
    <summary><span data-ttu-id="b5354-102">다중성이 0 또는 1인 연결의 관련 End를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-102">Represents a related end of an association with a multiplicity of zero or one.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5354-103">관련 End의 다중성이 0 또는 1이면 탐색 속성에 의해 <xref:System.Data.Objects.DataClasses.EntityReference%601> 개체가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-103">An <xref:System.Data.Objects.DataClasses.EntityReference%601> object is returned by a navigation property when the related end has a multiplicity of zero or one.</span></span> <span data-ttu-id="b5354-104">자세한 내용은 [NavigationProperty 요소 (CSDL)](https://msdn.microsoft.com/library/5829a238-a50e-4c81-901d-7b54fc00f27e)합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-104">For more information, see [NavigationProperty Element (CSDL)](https://msdn.microsoft.com/library/5829a238-a50e-4c81-901d-7b54fc00f27e).</span></span>  
  
 <span data-ttu-id="b5354-105"><xref:System.Data.Objects.DataClasses.EntityReference%601> 개체 관계의 다른 쪽 End에 해당 <xref:System.Data.Objects.DataClasses.EntityCollection%601>(일대다 관계) 또는 <xref:System.Data.Objects.DataClasses.EntityReference%601>(일대일 관계)가 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-105">An <xref:System.Data.Objects.DataClasses.EntityReference%601> object might have a corresponding <xref:System.Data.Objects.DataClasses.EntityCollection%601> (one-to-many relationship) or <xref:System.Data.Objects.DataClasses.EntityReference%601> (one-to-one relationship) at the other end of the relationship.</span></span> <span data-ttu-id="b5354-106"><xref:System.Data.Objects.DataClasses.EntityReference%601> 및 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 모델이 같은 관계의 반대편 End에 있으면 관계의 무결성이 개체 수준에서 유지 관리됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-106">When an <xref:System.Data.Objects.DataClasses.EntityReference%601> and an <xref:System.Data.Objects.DataClasses.EntityCollection%601> model opposing ends of the same relationship, the integrity of the relationship is maintained at the object level.</span></span>  
  
 <span data-ttu-id="b5354-107">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-107">This class cannot be inherited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5354-108">이 예제에서는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 개체를 사용하여 `SalesOrderHeader` 개체와 주문의 배송 주소를 나타내는 관련 `Address` 개체 사이의 관계를 변경하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-108">This example shows how to use the <xref:System.Data.Objects.DataClasses.EntityReference%601> object to change a relationship between a `SalesOrderHeader` object and a related `Address` object that represents the shipping address for the order.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#changeobjectrelationship)]
 [!code-vb[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#changeobjectrelationship)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5354-109"><see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-109">Creates a new instance of <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Attach : 'Entity -&gt; unit" Usage="entityReference.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="b5354-110">연결 중인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-110">The object being attached.</span></span></param>
        <summary><span data-ttu-id="b5354-111">개체 컨텍스트의 두 개체 간에 다대일 또는 일대일 관계를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-111">Creates a many-to-one or one-to-one relationship between two objects in the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5354-112"><xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A> 메서드는 한 개체와 관련 개체가 모두 개체 컨텍스트에 이미 연결되어 있을 때 두 개체 간의 관계를 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-112">The <xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A> method is used to define a relationship between an object and a related object when both objects are already attached to an object context.</span></span> <span data-ttu-id="b5354-113">관련 개체가 개체 컨텍스트에 이미 연결되지 않은 경우 관련 개체를 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 속성으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-113">Set the related object to the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property if the related object is not already attached to the object context.</span></span> <span data-ttu-id="b5354-114">@FSHO2@두 개체가 모두 분리되어 있으면 관련 개체를 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 속성으로 설정하고 개체 그래프의 루트 개체를 연결하여 관계를 정의할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-114">When both objects are detached, you can also define the relationship by setting the related object to the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property and then attaching the root object in the object graph.</span></span> <span data-ttu-id="b5354-115">자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-115">For more information, see [Attaching and Detaching Objects](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="b5354-116">이 <xref:System.Data.Objects.DataClasses.EntityReference%601>과 연결된 개체 및 여기에 연결 중인 모든 개체는 <xref:System.Data.EntityState.Unchanged> 또는 <xref:System.Data.EntityState.Modified> 상태여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-116">The object associated with this <xref:System.Data.Objects.DataClasses.EntityReference%601> and all objects being attached to it must be in an <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span>  
  
 <span data-ttu-id="b5354-117">@FSHO2@<xref:System.Data.EntityState.Deleted>가 관계 인스턴스를 이미 추적하고 있는 경우 <xref:System.Data.Objects.ObjectStateManager> 상태의 개체만 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-117">An object in the <xref:System.Data.EntityState.Deleted> state can only be attached when the <xref:System.Data.Objects.ObjectStateManager> is already tracking the relationship instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5354-118"><paramref name="entity" />이 <see langword="null" />인 경우.</span><span class="sxs-lookup"><span data-stu-id="b5354-118">When the <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5354-119"><paramref name="entity" />를 현재 관련 End에 연결할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="b5354-119">When the <paramref name="entity" /> cannot be related to the current related end.</span></span> <span data-ttu-id="b5354-120">개념 스키마의 연결이 두 형식 간의 관계를 지원하지 않을 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-120">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityReference.CreateSourceQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5354-121">관련 개체를 반환하는 해당 개체 쿼리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-121">Creates an equivalent object query that returns the related object.</span></span></summary>
        <returns><span data-ttu-id="b5354-122">관련 개체를 반환하는 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-122">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that returns the related object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5354-123">이 메서드는 실행되면 관련 개체를 반환하는 새 <xref:System.Data.Objects.ObjectQuery%601> 인스턴스를 가져오는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-123">This method is used to obtain a new instance of <xref:System.Data.Objects.ObjectQuery%601> that, when it is executed, returns the related object.</span></span> <span data-ttu-id="b5354-124">이 메서드는 보다 복잡한 조인, 통합 또는 필터링된 쿼리의 시작 지점으로 사용하거나, <xref:System.Data.Objects.MergeOption.NoTracking> 옵션을 사용하여 분리된 상태의 참조된 개체를 반환하는 데 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-124">This is useful as the starting point for a more complex join, union, or filtered query, or to return the referenced object in a detached state using the <xref:System.Data.Objects.MergeOption.NoTracking> option.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5354-125">개체가 <see cref="F:System.Data.EntityState.Added" /> 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="b5354-125">When the object is in an <see cref="F:System.Data.EntityState.Added" /> state.</span></span>  
  
<span data-ttu-id="b5354-126">또는</span><span class="sxs-lookup"><span data-stu-id="b5354-126">-or-</span></span> 
<span data-ttu-id="b5354-127">개체가 <see cref="F:System.Data.EntityState.Detached" /> 이외의 <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" />이 설정된 <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="b5354-127">When the object is in a <see cref="F:System.Data.EntityState.Detached" /> state with a <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" /> other than <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Data.Objects.MergeOption -&gt; unit" Usage="entityReference.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="b5354-128"><see cref="T:System.Data.Objects.ObjectContext" />에 개체가 이미 있는 경우 해당 개체를 반환하는 방법을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-128">Specifies how the object should be returned if it already exists in the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="b5354-129">지정된 병합 옵션을 사용하여 이 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />의 관련 개체를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-129">Loads the related object for this <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> with the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5354-130">이 메서드는 관련 개체를 로드하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-130">This method is used to load the related object.</span></span>  
  
 <span data-ttu-id="b5354-131">로드된 후에는 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 속성에서 관련 개체에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-131">When loaded, the related object is accessed from the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property.</span></span>  
  
 <span data-ttu-id="b5354-132">관련 개체를 명시적으로 로드하려면 탐색 속성을 통해 반환된 관련 End에서 `Load` 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-132">To explicitly load related objects, you must call the `Load` method on the related end retuned by the navigation property.</span></span> <span data-ttu-id="b5354-133">일대다 관계의 경우 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A>에 대해 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 메서드를 호출하고, 일대일 관계의 경우 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>에 대해 <xref:System.Data.Objects.DataClasses.EntityReference%601>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-133">For a one-to-many relationship, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method on <xref:System.Data.Objects.DataClasses.EntityCollection%601>, and for a one-to-one relationship, call the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> on <xref:System.Data.Objects.DataClasses.EntityReference%601>.</span></span> <span data-ttu-id="b5354-134">이렇게 하면 관련 개체 데이터가 개체 컨텍스트에 로드됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-134">This loads the related object data into the object context.</span></span> <span data-ttu-id="b5354-135">쿼리 결과 반환 하는 경우 사용 하 여 개체의 컬렉션을 열거할 수 있습니다는 `foreach` 루프 (`For Each...Next` Visual Basic의) 조건부로 호출 합니다 `Load` 메서드를 <xref:System.Data.Objects.DataClasses.EntityReference%601> 및 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 의 각 엔터티에 대 한 속성 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-135">When a query returns results, you can enumerate through the collection of objects using a `foreach` loop (`For Each...Next` in Visual Basic) and conditionally call the `Load` method on <xref:System.Data.Objects.DataClasses.EntityReference%601> and <xref:System.Data.Objects.DataClasses.EntityCollection%601> properties for each entity in the results.</span></span>  
  
 <span data-ttu-id="b5354-136">합니다 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> 메서드는 데이터 소스의 여부 관련된 개체를 로드 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-136">The <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5354-137"><xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>(C#) 또는 `foreach`(Visual Basic) 열거를 수행하는 동안 `For Each` 메서드를 호출하면 개체 서비스에서 새 데이터 판독기를 열려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-137">When you call the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> method during a `foreach` (C#) or `For Each` (Visual Basic) enumeration, Object Services tries to open a new data reader.</span></span> <span data-ttu-id="b5354-138">연결 문자열에서 `multipleactiveresultsets=true`를 지정하여 MARS(Multiple Active Result Sets)를 활성화하지 않은 경우에는 이 작업이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-138">This operation will fail unless you have enabled multiple active results sets by specifying `multipleactiveresultsets=true` in the connection string.</span></span> <span data-ttu-id="b5354-139">쿼리 결과를 <xref:System.Collections.Generic.List%601> 컬렉션에 로드할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-139">You can also load the result of the query into a <xref:System.Collections.Generic.List%601> collection.</span></span> <span data-ttu-id="b5354-140">이렇게 하면 데이터 판독기가 닫히고 컬렉션 전체를 열거하여 참조된 개체를 로드할 수 있게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-140">This closes the data reader and enables you to enumerate over the collection to load referenced objects.</span></span>  
 
<span data-ttu-id="b5354-141">이 메서드 호출 내부 `RelatedEnd.ValidateLoad` 메서드를 호출 하는지 확인 하는 관련된 개체를 로드 하기 전에 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 에 올바른 조건이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-141">This method calls the internal `RelatedEnd.ValidateLoad` method before loading the related object, which validates that a call to <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> has the correct conditions.</span></span> <span data-ttu-id="b5354-142">`RelatedEnd.ValidateLoad` 메서드 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-142">The `RelatedEnd.ValidateLoad` method checks that:</span></span>

* <span data-ttu-id="b5354-143">유효한 <xref:System.Data.Objects.ObjectContext> 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-143">A valid <xref:System.Data.Objects.ObjectContext> exists.</span></span>
* <span data-ttu-id="b5354-144">에 없는 엔터티는 <xref:System.Data.EntityState.Deleted> 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-144">The entity isn't in a <xref:System.Data.EntityState.Deleted> state.</span></span>
* <span data-ttu-id="b5354-145"><xref:System.Data.Objects.MergeOption> 에 대 한 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 있어야 <xref:System.Data.Objects.MergeOption.NoTracking> 경우에 원본 엔터티가 <xref:System.Data.Objects.MergeOption.NoTracking>합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-145"><xref:System.Data.Objects.MergeOption> for <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> must be <xref:System.Data.Objects.MergeOption.NoTracking> if and only if the source entity was <xref:System.Data.Objects.MergeOption.NoTracking>.</span></span> <span data-ttu-id="b5354-146">원본 엔터티는 다른를 사용 하 여 검색 된 경우 <xref:System.Data.Objects.MergeOption>는 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> 도 될 수 있습니다 <xref:System.Data.Objects.MergeOption.NoTracking> (예를 들어, 엔터티 수 로드 된 <xref:System.Data.Objects.MergeOption.OverwriteChanges> 및 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 옵션 수<xref:System.Data.Objects.MergeOption.AppendOnly>).</span><span class="sxs-lookup"><span data-stu-id="b5354-146">If the source entity was retrieved with any other <xref:System.Data.Objects.MergeOption>, the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> can be anything but <xref:System.Data.Objects.MergeOption.NoTracking> (for example, the entity could have been loaded with <xref:System.Data.Objects.MergeOption.OverwriteChanges> and the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> option can be <xref:System.Data.Objects.MergeOption.AppendOnly>).</span></span>
* <span data-ttu-id="b5354-147">하는 경우 `mergeOption` 됩니다 <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 이미 로드 된 엔터티에 대해 호출 되지 않은 및 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 는 비어 있지 않은, not 추적에서 호출 되지 않은 <xref:System.Data.Objects.DataClasses.RelatedEnd>합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-147">If `mergeOption` is <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on an already loaded entity and <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on a non-empty, not-tracked <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span>

 <span data-ttu-id="b5354-148">관련된 개체가 이미 로드 되는 경우는 <xref:System.Data.Objects.ObjectContext>, <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> 메서드를 적용 합니다 <xref:System.Data.Objects.MergeOption> 에 지정 된를 `mergeOption` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="b5354-148">When the related object is already loaded in the <xref:System.Data.Objects.ObjectContext>, the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> method enforces the <xref:System.Data.Objects.MergeOption> specified by the `mergeOption` parameter.</span></span> <span data-ttu-id="b5354-149">자세한 내용은 [Id 확인, 상태 관리 및 변경 내용 추적](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-149">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5354-150"><see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />의 소스가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b5354-150">The source of the <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b5354-151">또는</span><span class="sxs-lookup"><span data-stu-id="b5354-151">-or-</span></span> 
<span data-ttu-id="b5354-152">쿼리에서 관련 끝을 둘 이상 반환한 경우</span><span class="sxs-lookup"><span data-stu-id="b5354-152">A query returned more than one related end.</span></span>  
  
<span data-ttu-id="b5354-153">또는</span><span class="sxs-lookup"><span data-stu-id="b5354-153">-or-</span></span> 
<span data-ttu-id="b5354-154">쿼리에서 관련 End가 하나 반환되어야 하는데 반환되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b5354-154">A query returned zero related ends, and one related end was expected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="b5354-155">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="b5354-155">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRefDeserialized">
      <MemberSignature Language="C#" Value="public void OnRefDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRefDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRefDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRefDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnRefDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnRefDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b5354-156">serialize된 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-156">The serialized stream.</span></span></param>
        <summary><span data-ttu-id="b5354-157">이 메서드는 관련 엔터티 개체를 serialize하기 위해 내부적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-157">This method is used internally to serialize related entity objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b5354-158">serialize된 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-158">The serialized stream.</span></span></param>
        <summary><span data-ttu-id="b5354-159">이 메서드는 관련 엔터티 개체를 serialize하기 위해 내부적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-159">This method is used internally to serialize related entity objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public TEntity Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TEntity Value { TEntity get(); void set(TEntity value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'Entity with get, set" Usage="System.Data.Objects.DataClasses.EntityReference&lt;'Entity (requires 'Entity : null)&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5354-160">이 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />에서 반환되는 관련 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-160">Gets or sets the related object returned by this <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</span></span></summary>
        <value><span data-ttu-id="b5354-161">이 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />에서 반환되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-161">The object returned by this <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5354-162">설정할 값이 현재 값과 같으면 값이 할당되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b5354-162">No value will be assigned if the value being set is the same as the current value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>