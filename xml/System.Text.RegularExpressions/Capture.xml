<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebdd330498b2c685e0206d9b2b5cfb3efb50c537" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58682139" /></Metadata><TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a5ac-101">성공한 단일 하위 식 캡처의 결과를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-101">Represents the results from a single successful subexpression capture.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a5ac-102"><xref:System.Text.RegularExpressions.Capture> 개체는 변경할 수 없습니다 및 공용 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-102">A <xref:System.Text.RegularExpressions.Capture> object is immutable and has no public constructor.</span></span> <span data-ttu-id="8a5ac-103">인스턴스를 통해 반환 되는 <xref:System.Text.RegularExpressions.CaptureCollection> 에서 반환 하는 개체를 `Match.Captures` 및 <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-103">Instances are returned through the <xref:System.Text.RegularExpressions.CaptureCollection> object, which is returned by the `Match.Captures` and <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="8a5ac-104">그러나 합니다 `Match.Captures` 와 동일한 일치 항목에 대 한 정보를 제공 하는 속성을 <xref:System.Text.RegularExpressions.Match> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-104">However, the `Match.Captures` property provides information about the same match as the <xref:System.Text.RegularExpressions.Match> object.</span></span>  
  
 <span data-ttu-id="8a5ac-105">캡처링 그룹에 수량자를 적용 하지 않는 경우는 <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> 속성에서 반환을 <xref:System.Text.RegularExpressions.CaptureCollection> 단일 <xref:System.Text.RegularExpressions.Capture> 개체와 동일한 캡처를 하는 방법에 대 한 정보를 제공 하는 <xref:System.Text.RegularExpressions.Group> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-105">If you do not apply a quantifier to a capturing group, the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> with a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="8a5ac-106">캡처링 그룹에 수량자를 적용 수행 하는 경우는 `Group.Index`, `Group.Length`, 및 `Group.Value` 속성 반면 캡처된 마지막 그룹에 대 한 정보를 제공 합니다 <xref:System.Text.RegularExpressions.Capture> 개체를 <xref:System.Text.RegularExpressions.CaptureCollection> 모든 정보를 제공 하위 식을 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-106">If you do apply a quantifier to a capturing group, the `Group.Index`, `Group.Length`, and `Group.Value` properties provide information only about the last captured group, whereas the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> provide information about all subexpression captures.</span></span> <span data-ttu-id="8a5ac-107">예제에서는 그림을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-107">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a5ac-108">다음 예제에서는 정규식을 정의 하는 기간을 제외 하 고 없는 문장 부호를 포함 하는 문장을 찾습니다 (".").</span><span class="sxs-lookup"><span data-stu-id="8a5ac-108">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="8a5ac-109">정규식 패턴 `((\w+)[\s.])+` 는 다음 테이블과 같이 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-109">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="8a5ac-110">Note이 정규식은 수량자 (+)는 전체 정규식에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-110">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="8a5ac-111">무늬</span><span class="sxs-lookup"><span data-stu-id="8a5ac-111">Pattern</span></span>|<span data-ttu-id="8a5ac-112">설명</span><span class="sxs-lookup"><span data-stu-id="8a5ac-112">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="8a5ac-113">하나 이상의 단어 문자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-113">Match one or more word characters.</span></span> <span data-ttu-id="8a5ac-114">이 그룹은 두 번째 캡처링 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-114">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="8a5ac-115">공백 문자 또는 마침표 (".").</span><span class="sxs-lookup"><span data-stu-id="8a5ac-115">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="8a5ac-116">하나 이상의 단어 문자 뒤에 공백 문자 또는 마침표를 찾습니다 (".").</span><span class="sxs-lookup"><span data-stu-id="8a5ac-116">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="8a5ac-117">이 그룹은 첫 번째 캡처링 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-117">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="8a5ac-118">일치 항목을 찾습니다 하나 이상의 단어 문자 또는 문자 뒤에 공백 문자 또는 마침표 (".").</span><span class="sxs-lookup"><span data-stu-id="8a5ac-118">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="8a5ac-119">이 예제에서는 입력된 문자열 두 문장으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-119">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="8a5ac-120">하나의 단어의 첫 번째 문장 구성 출력에서 볼 수 있듯이 때문 <xref:System.Text.RegularExpressions.CaptureCollection> 개체에는 단일 <xref:System.Text.RegularExpressions.Capture> 와 동일한 캡처를 나타내는 개체를 <xref:System.Text.RegularExpressions.Group> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-120">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="8a5ac-121">두 번째 문장을 여러 단어로 구성 하므로 <xref:System.Text.RegularExpressions.Group> 개체만 마지막 일치 하위 식에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-121">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="8a5ac-122">나타내는 첫 번째 캡처 그룹 1에 마침표가 있는 문장에서 마지막 단어를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-122">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="8a5ac-123">나타내는 두 번째 캡처 그룹 2 문장에서 마지막 단어를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-123">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="8a5ac-124">그러나 합니다 <xref:System.Text.RegularExpressions.Capture> 그룹의 개체 <xref:System.Text.RegularExpressions.CaptureCollection> 개체에는 각 하위 식 찾기를 캡처.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-124">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="8a5ac-125"><xref:System.Text.RegularExpressions.Capture> 캡처의 첫 번째 캡처링 그룹의 컬렉션의 각 캡처된 단어로 및 공백 문자 또는 기간에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-125">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="8a5ac-126"><xref:System.Text.RegularExpressions.Capture> 캡처의 두 번째 캡처링 그룹의 컬렉션에 개체가 캡처된 각 단어에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-126">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a5ac-127">원래 문자열에서 캡처된 부분 문자열의 첫째 문자를 찾은 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-127">The position in the original string where the first character of the captured substring is found.</span></span></summary>
        <value><span data-ttu-id="8a5ac-128">원래 문자열에서 캡처된 부분 문자열을 찾은 0부터 시작하는 시작 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-128">The zero-based starting position in the original string where the captured substring is found.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a5ac-129">캡처된 부분 문자열의 길이를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-129">Gets the length of the captured substring.</span></span></summary>
        <value><span data-ttu-id="8a5ac-130">캡처된 부분 문자열의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-130">The length of the captured substring.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a5ac-131"><see cref="P:System.Text.RegularExpressions.Capture.Value" /> 속성을 호출하여 입력 문자열로부터 캡처된 하위 문자열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-131">Retrieves the captured substring from the input string by calling the <see cref="P:System.Text.RegularExpressions.Capture.Value" /> property.</span></span></summary>
        <returns><span data-ttu-id="8a5ac-132">일치 항목으로 캡처한 부분 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-132">The substring that was captured by the match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a5ac-133">`ToString` 에 내부 호출이 실제로 <xref:System.Text.RegularExpressions.Capture.Value%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-133">`ToString` is actually an internal call to the <xref:System.Text.RegularExpressions.Capture.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a5ac-134">입력 문자열에서 캡처된 부분 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-134">Gets the captured substring from the input string.</span></span></summary>
        <value><span data-ttu-id="8a5ac-135">일치 항목으로 캡처한 부분 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-135">The substring that is captured by the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a5ac-136">호출 하는 경우는 <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> 또는 <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> 메서드가 일치 하는 반환 된 값을 찾지 못하면 `Match.Value` 속성이 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-136">If a call to the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> or <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> method fails to find a match, the value of the returned `Match.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a5ac-137">정규식 엔진이 캡처링 그룹을 일치 시킬 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-137">If the regular expression engine is unable to match a capturing group.</span></span> <span data-ttu-id="8a5ac-138">반환 된 값 `Group.Value` 속성은 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-138">the value of the returned `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a5ac-139">그림은 두 번째 예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-139">See the second example for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a5ac-140">다음 예제에서는 정규식을 정의 하는 기간을 제외 하 고 없는 문장 부호를 포함 하는 문장을 찾습니다 (".").</span><span class="sxs-lookup"><span data-stu-id="8a5ac-140">The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</span></span> <span data-ttu-id="8a5ac-141">`Match.Value` 속성 각 일치 항목에 대 한 일치를 문장으로 구성 된 결과 문자열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-141">The `Match.Value` property displays the result string, which consists of a matched sentence, for each match.</span></span> <span data-ttu-id="8a5ac-142">`Group.Value` 각 캡처링 그룹에 대 한 결과 문자열을 표시 하는 속성, 해당 캡처링 그룹에 의해 캡처된 마지막 문자열 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-142">The `Group.Value` property displays the result string for each capturing group; it consists of the last string captured by that capturing group.</span></span> <span data-ttu-id="8a5ac-143"><xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> 각 캡처에 대 한 결과 문자열을 표시 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-143">The <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> property displays the result string for each capture.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="8a5ac-144">정규식 패턴 `((\w+)[\s.])+` 는 다음 테이블과 같이 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-144">The regular expression pattern `((\w+)[\s.])+` is defined as shown in the following table.</span></span> <span data-ttu-id="8a5ac-145">Note이 정규식은 수량자 (+)는 전체 정규식에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-145">Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</span></span>  
  
|<span data-ttu-id="8a5ac-146">무늬</span><span class="sxs-lookup"><span data-stu-id="8a5ac-146">Pattern</span></span>|<span data-ttu-id="8a5ac-147">설명</span><span class="sxs-lookup"><span data-stu-id="8a5ac-147">Description</span></span>|  
|-------------|-----------------|  
|`(\w+)`|<span data-ttu-id="8a5ac-148">하나 이상의 단어 문자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-148">Match one or more word characters.</span></span> <span data-ttu-id="8a5ac-149">이 그룹은 두 번째 캡처링 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-149">This is the second capturing group.</span></span>|  
|`[\s.])`|<span data-ttu-id="8a5ac-150">공백 문자 또는 마침표 (".").</span><span class="sxs-lookup"><span data-stu-id="8a5ac-150">Match a white-space character or period (".").</span></span>|  
|`((\w+)[\s.])`|<span data-ttu-id="8a5ac-151">하나 이상의 단어 문자 뒤에 공백 문자 또는 마침표를 찾습니다 (".").</span><span class="sxs-lookup"><span data-stu-id="8a5ac-151">Match one or more word characters followed by a white-space character or period (".").</span></span> <span data-ttu-id="8a5ac-152">이 그룹은 첫 번째 캡처링 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-152">This is the first capturing group.</span></span>|  
|`((\w+)[\s.])+`|<span data-ttu-id="8a5ac-153">일치 항목을 찾습니다 하나 이상의 단어 문자 또는 문자 뒤에 공백 문자 또는 마침표 (".").</span><span class="sxs-lookup"><span data-stu-id="8a5ac-153">Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</span></span>|  
  
 <span data-ttu-id="8a5ac-154">이 예제에서는 입력된 문자열 두 문장으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-154">In this example, the input string consists of two sentences.</span></span> <span data-ttu-id="8a5ac-155">하나의 단어의 첫 번째 문장 구성 출력에서 볼 수 있듯이 때문 <xref:System.Text.RegularExpressions.CaptureCollection> 개체에는 단일 <xref:System.Text.RegularExpressions.Capture> 와 동일한 캡처를 나타내는 개체를 <xref:System.Text.RegularExpressions.Group> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-155">As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object.</span></span> <span data-ttu-id="8a5ac-156">두 번째 문장을 여러 단어로 구성 하므로 <xref:System.Text.RegularExpressions.Group> 개체만 마지막 일치 하위 식에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-156">The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression.</span></span> <span data-ttu-id="8a5ac-157">나타내는 첫 번째 캡처 그룹 1에 마침표가 있는 문장에서 마지막 단어를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-157">Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</span></span> <span data-ttu-id="8a5ac-158">나타내는 두 번째 캡처 그룹 2 문장에서 마지막 단어를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-158">Group 2, which represents the second capture, contains the last word in the sentence.</span></span> <span data-ttu-id="8a5ac-159">그러나 합니다 <xref:System.Text.RegularExpressions.Capture> 그룹의 개체 <xref:System.Text.RegularExpressions.CaptureCollection> 개체에는 각 하위 식 찾기를 캡처.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-159">However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match.</span></span> <span data-ttu-id="8a5ac-160"><xref:System.Text.RegularExpressions.Capture> 캡처의 첫 번째 캡처링 그룹의 컬렉션의 각 캡처된 단어로 및 공백 문자 또는 기간에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-160">The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</span></span> <span data-ttu-id="8a5ac-161"><xref:System.Text.RegularExpressions.Capture> 캡처의 두 번째 캡처링 그룹의 컬렉션에 개체가 캡처된 각 단어에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-161">The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.</span></span>  
  
 <span data-ttu-id="8a5ac-162">다음 예제에서는 정규식 패턴을 사용 하 여 `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, 마침표로 구분 하는 두 부분으로 구성 된 제품 수와 일치 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-162">The following example uses a regular expression pattern, `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, to match a product number that consists of two parts separated by a period.</span></span> <span data-ttu-id="8a5ac-163">알파벳 문자 뒤에 선택적 숫자 두 부분으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-163">Both parts consist of alphabetic characters followed by optional numbers.</span></span> <span data-ttu-id="8a5ac-164">첫 번째 입력된 문자열에서 패턴을 반환 된 값과 일치 하지 않으므로 <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> 개체의 `Value` 속성은 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-164">Because the first input string does not match the pattern, the value of the returned <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a5ac-165">마찬가지로, 정규식 패턴 수 없는 경우 캡처링 그룹에 해당 값에 맞게 <xref:System.Text.RegularExpressions.Group> 개체의 `Value` 속성은 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-165">Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <xref:System.Text.RegularExpressions.Group> object's `Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 <span data-ttu-id="8a5ac-166">정규식 패턴은 다음 테이블과 같이 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-166">The regular expression pattern is defined as shown in the following table:</span></span>  
  
|<span data-ttu-id="8a5ac-167">무늬</span><span class="sxs-lookup"><span data-stu-id="8a5ac-167">Pattern</span></span>|<span data-ttu-id="8a5ac-168">설명</span><span class="sxs-lookup"><span data-stu-id="8a5ac-168">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="8a5ac-169">문자열의 시작 부분에서 검색을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-169">Begin the match at the beginning of the string.</span></span>|  
|`([a-z]+)`|<span data-ttu-id="8a5ac-170">임의의 문자 하나를 찾습니다는 오름차순입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-170">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="8a5ac-171">정규식 엔진에 전달 되기 때문에 <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> 옵션을이 비교는 대/소문자 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-171">Because the regular expression engine is passed the <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> option, this comparison is case-insensitive.</span></span> <span data-ttu-id="8a5ac-172">이 그룹은 첫 번째 캡처링 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-172">This is the first capturing group.</span></span>|  
|`(\d+)?`|<span data-ttu-id="8a5ac-173">하나 이상의 소수 자릿수 0 개 또는 1 번을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-173">Match zero or one occurrence of one or more decimal digits.</span></span> <span data-ttu-id="8a5ac-174">이 그룹은 두 번째 캡처링 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-174">This is the second capturing group.</span></span>|  
|`\.`|<span data-ttu-id="8a5ac-175">리터럴 마침표 문자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-175">Match a literal period character.</span></span>|  
|`([a-z]+`|<span data-ttu-id="8a5ac-176">임의의 문자 하나를 찾습니다는 오름차순입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-176">Match one or more occurrences of any character from a to z.</span></span> <span data-ttu-id="8a5ac-177">비교는 대/소문자 구분.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-177">The comparison is case-insensitive.</span></span>|  
|`(\d)*`|<span data-ttu-id="8a5ac-178">0번 이상 나오는 10진수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-178">Match zero or more decimal digits.</span></span> <span data-ttu-id="8a5ac-179">일치 하는 한 자리는 네 번째 캡처링 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-179">A single matched digit is the fourth capturing group.</span></span>|  
|`([a-z]+(\d)*)`|<span data-ttu-id="8a5ac-180">하나 이상의 알파벳 문자를 찾습니다는 0 개 또는 하나 이상의 10 진수 뒤에 오름차순입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-180">Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits.</span></span> <span data-ttu-id="8a5ac-181">이 그룹은 네 번째 캡처링 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-181">This is the fourth capturing group.</span></span>|  
|`$`|<span data-ttu-id="8a5ac-182">문자열의 끝에서 일치 항목 찾기를 결론을 내립니다.</span><span class="sxs-lookup"><span data-stu-id="8a5ac-182">Conclude the match at the end of the string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>