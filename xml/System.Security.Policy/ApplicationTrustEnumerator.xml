<Type Name="ApplicationTrustEnumerator" FullName="System.Security.Policy.ApplicationTrustEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2044b49a20cd2bbd10b514978191e74dab9eb0be" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56772195" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationTrustEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.ApplicationTrustEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationTrustEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationTrustEnumerator sealed : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type ApplicationTrustEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="62bfb-101"><see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 컬렉션의 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체에 대한 열거자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-101">Represents the enumerator for <see cref="T:System.Security.Policy.ApplicationTrust" /> objects in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62bfb-102">열거자는 컬렉션의 데이터 읽기를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-102">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="62bfb-103">내부 컬렉션을 수정 하 여 열거자를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-103">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="62bfb-104">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="62bfb-105"><xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> 메서드 또한 다시이 위치로 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-105">The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="62bfb-106">이 위치에서, 호출 된 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 속성 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-106">At this position, calling the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="62bfb-107">따라서 호출 해야 합니다는 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 해당 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소를 이동 하는 방법의 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-107">Therefore, you must call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="62bfb-108"><xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>에서는 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 또는 <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-108"><xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the same object until either <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="62bfb-109"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>는 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-109"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> sets <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="62bfb-110">컬렉션의 끝이 전달된 후 열거자는 컬렉션의 마지막 요소 뒤에 배치되고 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>를 호출하면 `false`가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-110">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="62bfb-111">마지막으로 호출 하는 경우 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 반환 `false`호출, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-111">If the last call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="62bfb-112">원래 대로 되돌리려면 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 컬렉션의 첫 번째 요소를 호출 <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> 에 대 한 호출 뒤에 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-112">To reset <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> followed by a call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="62bfb-113">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="62bfb-114">변경에 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제, 열거자가 복구할 유효 하지 않으며을 다음에 호출할 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 또는 <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throw는 <xref:System.InvalidOperationException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException> exception.</span></span> <span data-ttu-id="62bfb-115">컬렉션 사이 수정 된 경우 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 하 고 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 열거자가 이미 무효화 된 경우에이 현재 설정 된, 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-115">If the collection is modified between calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> and <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="62bfb-116">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="62bfb-117">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-117">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="62bfb-118">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-118">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.ApplicationTrust Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.ApplicationTrustEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::ApplicationTrust ^ Current { System::Security::Policy::ApplicationTrust ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Policy.ApplicationTrust" Usage="System.Security.Policy.ApplicationTrustEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62bfb-119"><see cref="T:System.Security.Policy.ApplicationTrust" /> 컬렉션에서 현재 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-119">Gets the current <see cref="T:System.Security.Policy.ApplicationTrust" /> object in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="62bfb-120"><see cref="T:System.Security.Policy.ApplicationTrust" />의 현재 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-120">The current <see cref="T:System.Security.Policy.ApplicationTrust" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62bfb-121">열거자가 만들어진 개체에 가리키지 않습니다 하므로 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 속성을 올바르지 않으며 액세스 하는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-121">When the enumerator is created, it does not point to an object, so the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="62bfb-122">먼저 호출 해야 합니다는 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 컬렉션의 첫 번째 개체에 커서를 배치 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-122">You must first call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.</span></span>  
  
 <span data-ttu-id="62bfb-123">여러 번 호출 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 에 대 한 중간 호출을 사용 하 여 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 동일 돌아갑니다 <xref:System.Security.Policy.ApplicationTrust> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-123">Multiple calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> with no intervening calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return the same <xref:System.Security.Policy.ApplicationTrust> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="applicationTrustEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62bfb-124"><see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 컬렉션의 다음 요소로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-124">Moves to the next element in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
        <returns><span data-ttu-id="62bfb-125">열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-125"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62bfb-126">합니다 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 메서드가 즉시 반환 `false` 컬렉션에 개체가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="62bfb-126">The <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method immediately returns `false` if there are no objects in the collection.</span></span>  
  
 <span data-ttu-id="62bfb-127"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 돌아갑니다 `true` 컬렉션의 끝에 도달할 때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-127"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="62bfb-128">그런 다음 반환 합니다 `false` 각 연속 호출에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-128">It will then return `false` for each successive call.</span></span> <span data-ttu-id="62bfb-129">그러나 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 돌아온 `false`에 액세스를 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 속성 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-129">However, after <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property will throw an exception.</span></span>  
  
 <span data-ttu-id="62bfb-130">를 만들면 첫 번째 열거자 위치가 <xref:System.Security.Policy.ApplicationTrust> 개체 컬렉션 및 첫 번째 호출은 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 컬렉션의 첫 번째 개체에 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-130">Upon creation, an enumerator is positioned before the first <xref:System.Security.Policy.ApplicationTrust> object in the collection, and the first call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> positions the enumerator at the first object in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.ApplicationTrustEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="applicationTrustEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62bfb-131">열거자를 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 컬렉션의 시작 부분을 가리키도록 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-131">Resets the enumerator to the beginning of the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62bfb-132">열거자는 앞 으로만 이동 가능한 방향으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-132">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="62bfb-133">이 메서드를 사용 하 여 컬렉션의 시작 부분에 열거자를 반환 하려면 <xref:System.Security.Policy.ApplicationTrust> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-133">Use this method to return the enumerator to the beginning of the collection of <xref:System.Security.Policy.ApplicationTrust> objects.</span></span>  
  
 <span data-ttu-id="62bfb-134"><xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> 메서드는 컬렉션의 첫 번째 개체에서 커서를 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-134">The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method positions the cursor at the first object in the collection.</span></span> <span data-ttu-id="62bfb-135">호출한 후 <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>를 호출할 필요가 없습니다를 <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> 첫 번째 개체는 커서를 앞으로 이동 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-135">After calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>, you do not need to call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to move the cursor forward to the first object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62bfb-136"><see cref="T:System.Object" /> 컬렉션의 현재 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-136">Gets the current <see cref="T:System.Object" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="62bfb-137"><see cref="T:System.Object" />의 현재 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-137">The current <see cref="T:System.Object" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62bfb-138">이 메서드를 호출 하지 마세요 사용 된 <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> 속성 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="62bfb-138">Do not call this method; use the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>