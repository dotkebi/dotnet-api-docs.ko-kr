<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44cb7c8ebf4a6ea2f4000429bc09fd5ecfaacc31" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58743707" /></Metadata><TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="276df-101">웹 요청을 처리할 때 URL 인코딩 및 디코딩을 위한 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-102"><xref:System.Web.HttpUtility> 인코딩 및 디코딩 유틸리티 메서드를 사용 하 여 HTML 인코딩 문자열을 사용 하 여 클래스에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="276df-103"><xref:System.Uri?displayProperty=nameWithType> 클래스도 비슷한 용도로 사용할 수 있는 속성과 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="276df-104">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="276df-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="276df-105">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="276df-106">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-106">The string to decode.</span></span></param>
        <summary><span data-ttu-id="276df-107">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="276df-108">디코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-108">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-109">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="276df-110">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="276df-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="276df-111">예를 들어, 텍스트 문자를 블록에 포함 하는 경우 `<` 하 고 `>` 로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="276df-112">경우는 `value` 매개 변수가 `null`, 반환 되는 디코딩된 문자열은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="276df-113">경우는 `value` 매개 변수는 빈 문자열을 반환 되는 디코딩된 문자열은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="output" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="276df-114">디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-114">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="276df-115"><see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="276df-116">HTML 인코딩된 문자열을 디코딩된 문자열로 변환하여 디코딩된 문자열을 <see cref="T:System.IO.TextWriter" /> 출력 스트림에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="276df-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-117">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="276df-118">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="276df-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="276df-119">예를 들어, 텍스트 문자를 블록에 포함 하는 경우 `<` 하 고 `>` 로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276df-120"><paramref name="output" /> 매개 변수가 <see langword="null" />이 아니면 <paramref name="value" /> 매개 변수가 <see langword="null" />이 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="276df-121">문자열을 HTML 인코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-121">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="276df-122">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-122">The string to encode.</span></span></param>
        <summary><span data-ttu-id="276df-123">문자열을 HTML 인코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-123">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="276df-124">인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-124">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-125">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="276df-126">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="276df-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="276df-127">예를 들어, 텍스트 문자를 블록에 포함 하는 경우 `<` 하 고 `>` 로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="276df-128">경우는 `value` 매개 변수가 `null`, 반환된 된 인코딩된 문자열은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="276df-129">경우는 `value` 매개 변수는 빈 문자열을 반환된 된 인코딩된 문자열은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="276df-130">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="276df-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="output" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="276df-131">인코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-131">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="276df-132"><see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="276df-133">문자열을 HTML 인코딩된 문자열로 변환하고 출력 스트림 <see cref="T:System.IO.TextWriter" />로 출력을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-134">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="276df-135">해당 하는 문자 엔터티로; HTML에서 허용 되지 않는 문자를 변환 HTML 인코딩 HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="276df-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="276df-136">예를 들어, 텍스트 문자를 블록에 포함 하는 경우 `<` 하 고 `>` 로 인코딩되며 `&lt;` 및 `&gt;` HTTP 전송에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="276df-137"><paramref name="output" /> 매개 변수가 <see langword="null" />이 아니면 <paramref name="value" /> 매개 변수가 <see langword="null" />이 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="276df-138">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</span><span class="sxs-lookup"><span data-stu-id="276df-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="276df-139">디코딩할 URL 인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-139">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="276df-140">URL 전송을 위해 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="276df-141">디코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-141">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-142">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="276df-143">URL 인코딩은 URL에 해당 하는 16 진수 이스케이프 시퀀스를 허용 하지 않는 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="276df-144"><xref:System.Net.WebUtility.UrlEncode%2A> 메서드 URL로 인코딩된 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="276df-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="276df-145">URL 디코딩 해당 ascii 문자를 사용 하 여 16 진수 이스케이프 시퀀스를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="276df-146">예를 들어 URL로 인코딩된 텍스트 블록에 포함 하는 경우 이스케이프 시퀀스 `%3c` 하 고 `%3e` 문자를 디코딩 `<` 및 `>`합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="276df-147">디코딩할 URL 인코딩된 <see cref="T:System.Byte" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="276df-148">디코딩할 <see cref="T:System.Byte" /> 배열의 시작 부분부터의 오프셋(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="276df-149"><see cref="T:System.Byte" /> 배열에서 디코딩할 개수입니다(바이트 단위).</span><span class="sxs-lookup"><span data-stu-id="276df-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="276df-150">URL에서 전송을 위해 인코딩된 바이트 문자열을 디코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="276df-151">디코딩된 <see cref="T:System.Byte" /> 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-151">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-152">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="276df-153">URL 인코딩은 URL에 해당 하는 16 진수 이스케이프 시퀀스를 허용 하지 않는 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="276df-154"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A> 메서드 URL로 인코딩된 바이트 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="276df-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="276df-155">URL 디코딩 해당 ascii 문자를 사용 하 여 16 진수 이스케이프 시퀀스를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="276df-156">예를 들어 URL로 인코딩된 텍스트 블록에 포함 하는 경우 이스케이프 시퀀스 `%3c` 하 고 `%3e` 문자를 디코딩 `<` 및 `>`합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="276df-157">URL로 인코딩할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-157">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="276df-158">텍스트 문자열을 URL 인코딩된 문자열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-158">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="276df-159">URL 인코딩된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-160">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="276df-161">URL 인코딩 문자 엔터티가 해당 하는 16 진수 이스케이프 시퀀스의 구성 된 URL에 허용 되지 않는 문자를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="276df-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="276df-162">변환된 된 문자열은 u t F-8 형식을 준수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="276df-163">URL 인코딩 문자, 숫자 및 문장 부호 문자를 제외한 모든 문자 코드를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="276df-164">`-` (빼기 기호)</span><span class="sxs-lookup"><span data-stu-id="276df-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="276df-165">`_` (밑줄)</span><span class="sxs-lookup"><span data-stu-id="276df-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="276df-166">`.` (마침표)</span><span class="sxs-lookup"><span data-stu-id="276df-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="276df-167">`!` (느낌표)</span><span class="sxs-lookup"><span data-stu-id="276df-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="276df-168">`*` (별표)</span><span class="sxs-lookup"><span data-stu-id="276df-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="276df-169">`(` 및 `)` (열고 닫는 괄호)</span><span class="sxs-lookup"><span data-stu-id="276df-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="276df-170">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 하면 `<` 하 고 `>` 로 인코딩되며 `%3c` 및 `%3e`합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="276df-171"><xref:System.Net.WebUtility.UrlDecode%2A> 인코딩 메서드를 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="276df-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="276df-172">URL 인코딩할 <see cref="T:System.Byte" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-172">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="276df-173">인코딩할 <see cref="T:System.Byte" /> 배열의 시작 부분부터의 오프셋(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="276df-174"><see cref="T:System.Byte" /> 배열에서 인코딩할 개수입니다(바이트 단위).</span><span class="sxs-lookup"><span data-stu-id="276df-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="276df-175">바이트 배열을 URL 인코딩된 바이트 배열로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-175">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="276df-176">인코딩된 <see cref="T:System.Byte" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="276df-176">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="276df-177">공백 및 문장 부호 등의 문자에 HTTP 스트림으로 전달 하면 수신 측에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="276df-177">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="276df-178">URL 인코딩 문자 엔터티가 해당 하는 16 진수 이스케이프 시퀀스의 구성 된 URL에 허용 되지 않는 문자를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="276df-178">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="276df-179">변환된 된 문자열은 u t F-8 형식을 준수 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-179">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="276df-180">URL 인코딩 문자, 숫자 및 문장 부호 문자를 제외한 모든 문자 코드를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-180">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="276df-181">`-` (빼기 기호)</span><span class="sxs-lookup"><span data-stu-id="276df-181">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="276df-182">`_` (밑줄)</span><span class="sxs-lookup"><span data-stu-id="276df-182">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="276df-183">`.` (마침표)</span><span class="sxs-lookup"><span data-stu-id="276df-183">`.` (period)</span></span>  
  
-   <span data-ttu-id="276df-184">`!` (느낌표)</span><span class="sxs-lookup"><span data-stu-id="276df-184">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="276df-185">`*` (별표)</span><span class="sxs-lookup"><span data-stu-id="276df-185">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="276df-186">`'` (작은따옴표)</span><span class="sxs-lookup"><span data-stu-id="276df-186">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="276df-187">`(` 및 `)` (열고 닫는 괄호)</span><span class="sxs-lookup"><span data-stu-id="276df-187">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="276df-188">예를 들어, 텍스트 문자를 URL에 전송 될 블록에 포함 하면 `<` 하 고 `>` 로 인코딩되며 `%3c` 및 `%3e`합니다.</span><span class="sxs-lookup"><span data-stu-id="276df-188">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="276df-189"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A> 인코딩 메서드를 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="276df-189">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>