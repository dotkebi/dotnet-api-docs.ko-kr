<Type Name="HttpListenerContext" FullName="System.Net.HttpListenerContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a17bd064766dd25b18a3582f67d463fb76ff690d" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58697319" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerContext sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerContext = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e140e-101"><see cref="T:System.Net.HttpListener" /> 클래스에서 사용되는 요청 및 응답 개체에 액세스할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-101">Provides access to the request and response objects used by the <see cref="T:System.Net.HttpListener" /> class.</span></span> <span data-ttu-id="e140e-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-103">이 클래스에 의해 처리 되는 클라이언트의 하이퍼텍스트 전송 프로토콜 (HTTP) 요청에 관련 된 정보를 제공는 <xref:System.Net.HttpListener> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-103">This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e140e-104">이 클래스에 사용할 수 있는 메서드는 <xref:System.Net.HttpListener> WebSocket 연결을 허용 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-104">This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.</span></span>  
  
 <span data-ttu-id="e140e-105">합니다 <xref:System.Net.HttpListener.GetContext%2A> 의 인스턴스를 반환 하는 메서드를 <xref:System.Net.HttpListenerContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-105">The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class.</span></span> <span data-ttu-id="e140e-106">클라이언트 요청을 나타내는 개체를 가져오려면는 <xref:System.Net.HttpListenerContext.Request%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-106">To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property.</span></span> <span data-ttu-id="e140e-107">클라이언트에 전송 될 응답을 나타내는 개체를 가져와 <xref:System.Net.HttpListener>를 사용 하 여는 <xref:System.Net.HttpListenerContext.Response%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-107">To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span> <span data-ttu-id="e140e-108">로그인 이름 및 해당의 인증 여부,와 같은 요청을 보내는 클라이언트에 대 한 사용자 정보 속성을 쿼리할 수 있습니다 합니다 <xref:System.Security.Principal.IPrincipal> 에서 반환 된 개체는 <xref:System.Net.HttpListenerContext.User%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-108">To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.</span></span>  
  
 <span data-ttu-id="e140e-109">닫기는 <xref:System.Net.HttpListenerContext> 개체는 클라이언트에 응답을 보내고에서 사용 하는 리소스를 해제 합니다 <xref:System.Net.HttpListenerContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-109">Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="e140e-110">중단을 <xref:System.Net.HttpListenerContext> 개체에서 사용 하는 리소스를 해제 하지 이미 전송 된 경우 클라이언트에 대 한 응답을 삭제 합니다 <xref:System.Net.HttpListenerContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-110">Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="e140e-111">닫기 또는 중단 후는 <xref:System.Net.HttpListenerContext> 개체의 메서드 또는 속성을 참조할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-111">After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties.</span></span> <span data-ttu-id="e140e-112">이렇게 하면 받게는 <xref:System.ObjectDisposedException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-112">If you do so, you will receive an <xref:System.ObjectDisposedException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e140e-113">다음 코드 예제에서는 클라이언트 요청에 대 한 사용자 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-113">The following code example displays the user information for a client request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerRequest" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptWebSocketAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-114">WebSocket 연결을 비동기 작업으로 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-114">Accept a WebSocket connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync subProtocol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="e140e-115">지원되는 WebSocket 하위 프로토콜입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-115">The supported WebSocket sub-protocol.</span></span></param>
        <summary><span data-ttu-id="e140e-116">WebSocket 연결을 비동기 작업으로 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-116">Accept a WebSocket connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e140e-117">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-117">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="e140e-118">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-118">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-119">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-119">This operation will not block.</span></span> <span data-ttu-id="e140e-120">반환 된 <xref:System.Threading.Tasks.Task%601> 개체는 WebSocket 연결이 수락 된 후 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-120">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="e140e-121">수신 버퍼의 크기는 16,385 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-121">The size of the receive buffer is 16,385 bytes.</span></span> <span data-ttu-id="e140e-122">WebSocket keep-alive 간격 30000 (30 초)의 기본값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-122">The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e140e-123"><paramref name="subProtocol" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e140e-123"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="e140e-124">또는</span><span class="sxs-lookup"><span data-stu-id="e140e-124">-or-</span></span> 
 <span data-ttu-id="e140e-125"><paramref name="subProtocol" />에 잘못된 문자가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-125"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="e140e-126">WebSocket 핸드셰이크를 완료하기 위해 응답을 전송하는 동안 오류가 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-126">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="e140e-127">지원되는 WebSocket 하위 프로토콜입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-127">The supported WebSocket sub-protocol.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="e140e-128">WebSocket 프로토콜의 Keep-Alive 간격입니다(밀리초 단위).</span><span class="sxs-lookup"><span data-stu-id="e140e-128">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <summary><span data-ttu-id="e140e-129">지원되는 WebSocket 하위 프로토콜 및 WebSocket Keep-Alive 간격을 비동기 작업으로 지정하는 WebSocket 연결을 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-129">Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e140e-130">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-130">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="e140e-131">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-131">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-132">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-132">This operation will not block.</span></span> <span data-ttu-id="e140e-133">반환 된 <xref:System.Threading.Tasks.Task%601> 개체는 WebSocket 연결이 수락 된 후 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-133">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="e140e-134">수신 버퍼의 크기는 16,385 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-134">The size of the receive buffer is 16,385 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e140e-135"><paramref name="subProtocol" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e140e-135"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="e140e-136">또는</span><span class="sxs-lookup"><span data-stu-id="e140e-136">-or-</span></span> 
 <span data-ttu-id="e140e-137"><paramref name="subProtocol" />에 잘못된 문자가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-137"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e140e-138"><paramref name="keepAliveInterval" />가 너무 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-138"><paramref name="keepAliveInterval" /> is too small.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="e140e-139">WebSocket 핸드셰이크를 완료하기 위해 응답을 전송하는 동안 오류가 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-139">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * int * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, receiveBufferSize, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="e140e-140">지원되는 WebSocket 하위 프로토콜입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-140">The supported WebSocket sub-protocol.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="e140e-141">수신 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-141">The receive buffer size in bytes.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="e140e-142">WebSocket 프로토콜의 Keep-Alive 간격입니다(밀리초 단위).</span><span class="sxs-lookup"><span data-stu-id="e140e-142">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <summary><span data-ttu-id="e140e-143">지원되는 WebSocket 하위 프로토콜, 수신 버퍼 크기 및 WebSocket 연결 유지 간격을 비동기 작업으로 지정하는 WebSocket 연결을 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-143">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e140e-144">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-144">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="e140e-145">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-145">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-146">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-146">This operation will not block.</span></span> <span data-ttu-id="e140e-147">반환 된 <xref:System.Threading.Tasks.Task%601> > 개체는 WebSocket 연결이 수락 된 후 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-147">The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e140e-148"><paramref name="subProtocol" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e140e-148"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="e140e-149">또는</span><span class="sxs-lookup"><span data-stu-id="e140e-149">-or-</span></span> 
 <span data-ttu-id="e140e-150"><paramref name="subProtocol" />에 잘못된 문자가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-150"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e140e-151"><paramref name="keepAliveInterval" />가 너무 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-151"><paramref name="keepAliveInterval" /> is too small.</span></span>  
  
<span data-ttu-id="e140e-152">또는</span><span class="sxs-lookup"><span data-stu-id="e140e-152">-or-</span></span> 
 <span data-ttu-id="e140e-153"><paramref name="receiveBufferSize" />가 16바이트보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="e140e-153"><paramref name="receiveBufferSize" /> is less than 16 bytes</span></span> 
<span data-ttu-id="e140e-154">또는</span><span class="sxs-lookup"><span data-stu-id="e140e-154">-or-</span></span> 
 <span data-ttu-id="e140e-155"><paramref name="receiveBufferSize" />가 64K 바이트보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="e140e-155"><paramref name="receiveBufferSize" /> is greater than 64K bytes.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="e140e-156">WebSocket 핸드셰이크를 완료하기 위해 응답을 전송하는 동안 오류가 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-156">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;byte&gt; internalBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval, valuetype System.ArraySegment`1&lt;unsigned int8&gt; internalBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan, internalBuffer As ArraySegment(Of Byte)) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;System::Byte&gt; internalBuffer);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * int * TimeSpan * ArraySegment&lt;byte&gt; -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, receiveBufferSize, keepAliveInterval, internalBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment&lt;System.Byte&gt;" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="e140e-157">지원되는 WebSocket 하위 프로토콜입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-157">The supported WebSocket sub-protocol.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="e140e-158">수신 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-158">The receive buffer size in bytes.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="e140e-159">WebSocket 프로토콜의 Keep-Alive 간격입니다(밀리초 단위).</span><span class="sxs-lookup"><span data-stu-id="e140e-159">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <param name="internalBuffer"><span data-ttu-id="e140e-160">이 작업에 사용할 내부 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-160">An internal buffer to use for this operation.</span></span></param>
        <summary><span data-ttu-id="e140e-161">지원되는 WebSocket 하위 프로토콜, 수신 버퍼 크기, WebSocket 연결 유지 간격 및 내부 버퍼를 비동기 작업으로 지정하는 WebSocket 연결을 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-161">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e140e-162">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-162">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="e140e-163">작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-164">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-164">This operation will not block.</span></span> <span data-ttu-id="e140e-165">반환 된 <xref:System.Threading.Tasks.Task%601> 개체는 WebSocket 연결이 수락 된 후 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-165">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e140e-166"><paramref name="subProtocol" />이 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e140e-166"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="e140e-167">또는</span><span class="sxs-lookup"><span data-stu-id="e140e-167">-or-</span></span> 
 <span data-ttu-id="e140e-168"><paramref name="subProtocol" />에 잘못된 문자가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-168"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e140e-169"><paramref name="keepAliveInterval" />가 너무 작습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-169"><paramref name="keepAliveInterval" /> is too small.</span></span>  
  
<span data-ttu-id="e140e-170">또는</span><span class="sxs-lookup"><span data-stu-id="e140e-170">-or-</span></span> 
 <span data-ttu-id="e140e-171"><paramref name="receiveBufferSize" />가 16바이트보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="e140e-171"><paramref name="receiveBufferSize" /> is less than 16 bytes</span></span> 
<span data-ttu-id="e140e-172">또는</span><span class="sxs-lookup"><span data-stu-id="e140e-172">-or-</span></span> 
 <span data-ttu-id="e140e-173"><paramref name="receiveBufferSize" />가 64K 바이트보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="e140e-173"><paramref name="receiveBufferSize" /> is greater than 64K bytes.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="e140e-174">WebSocket 핸드셰이크를 완료하기 위해 응답을 전송하는 동안 오류가 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-174">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpListenerRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerRequest ^ Request { System::Net::HttpListenerRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Net.HttpListenerRequest" Usage="System.Net.HttpListenerContext.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-175">클라이언트의 리소스 요청을 나타내는 <see cref="T:System.Net.HttpListenerRequest" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-175">Gets the <see cref="T:System.Net.HttpListenerRequest" /> that represents a client's request for a resource.</span></span></summary>
        <value><span data-ttu-id="e140e-176">클라이언트 요청을 나타내는 <see cref="T:System.Net.HttpListenerRequest" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-176">An <see cref="T:System.Net.HttpListenerRequest" /> object that represents the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-177">이 닫으면 <xref:System.Net.HttpListenerContext>, 닫기는 클라이언트에 응답을 보냅니다를 <xref:System.Net.HttpListenerResponse> 닫은 응답을 포함 하는 <xref:System.Net.HttpListenerRequest> 이 속성에서 반환 된 개체.</span><span class="sxs-lookup"><span data-stu-id="e140e-177">If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e140e-178">다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-178">The following code example demonstrates calling this method.</span></span> <span data-ttu-id="e140e-179">합니다 `listener` 변수에 <xref:System.Net.HttpListener> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-179">The `listener` variable holds an <xref:System.Net.HttpListener> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpListenerResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerResponse ^ Response { System::Net::HttpListenerResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Net.HttpListenerResponse" Usage="System.Net.HttpListenerContext.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-180">클라이언트의 요청에 대한 응답으로 클라이언트에 보낼 <see cref="T:System.Net.HttpListenerResponse" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-180">Gets the <see cref="T:System.Net.HttpListenerResponse" /> object that will be sent to the client in response to the client's request.</span></span></summary>
        <value><span data-ttu-id="e140e-181">클라이언트에 응답을 보내는 데 사용되는 <see cref="T:System.Net.HttpListenerResponse" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-181">An <see cref="T:System.Net.HttpListenerResponse" /> object used to send a response back to the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-182">응용 프로그램에서 속성을 설정 하 여 응답을 구성 합니다 <xref:System.Net.HttpListenerResponse> 이 속성에 의해 반환 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-182">Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property.</span></span> <span data-ttu-id="e140e-183">응답을 구성한 후 보내기 클라이언트로 응답을 닫아 또는이 닫아 <xref:System.Net.HttpListenerContext> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-183">After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e140e-184">다음 코드 예제에서는 클라이언트의 요청에 대 한 응답을 가져오고 응답 본문을 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-184">The following code example demonstrates getting the response to a client's request and adding the response body.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e140e-185">참고: 응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-185">Note: This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e140e-186">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-186">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Net.HttpListenerContext.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-187">이 <see cref="T:System.Net.HttpListenerContext" /> 개체가 나타내는 요청을 보낸 클라이언트의 ID, 인증 정보 및 보안 규칙을 얻는 데 사용되는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-187">Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <see cref="T:System.Net.HttpListenerContext" /> object.</span></span></summary>
        <value><span data-ttu-id="e140e-188">클라이언트를 설명하는 <see cref="T:System.Security.Principal.IPrincipal" /> 개체이거나, 이 <see cref="T:System.Net.HttpListener" />를 제공한 <see cref="T:System.Net.HttpListenerContext" />에서 인증을 필요로 하지 않는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-188">An <see cref="T:System.Security.Principal.IPrincipal" /> object that describes the client, or <see langword="null" /> if the <see cref="T:System.Net.HttpListener" /> that supplied this <see cref="T:System.Net.HttpListenerContext" /> does not require authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-189"><xref:System.Net.HttpListener> 사용 하 여 인증 필요 함을 나타냅니다는 <xref:System.Net.HttpListener.AuthenticationSchemes%2A> 속성을 지정 하 여는 <xref:System.Net.AuthenticationSchemeSelector> 사용 하 여 대리자를 <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="e140e-189">An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="e140e-190">클라이언트의 로그인 이름 및 인증 정보를 확인 하려면 확인을 <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> 이 속성에서 반환 된 개체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-190">To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property in the object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e140e-191">다음 코드 예제에서는 클라이언트 및 클라이언트 응답에 반환 하는 방법에 대 한 액세스 id 및 인증 정보를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e140e-191">The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e140e-192">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e140e-192">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>