<Type Name="TransportContext" FullName="System.Net.TransportContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dd76a98f645732a832074f284279bb7e98b4e01" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57956429" /></Metadata><TypeSignature Language="C#" Value="public abstract class TransportContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransportContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.TransportContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransportContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransportContext abstract" />
  <TypeSignature Language="F#" Value="type TransportContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2386b-101"><see cref="T:System.Net.TransportContext" /> 클래스는 내부 전송 계층에 대한 추가 컨텍스트를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-101">The <see cref="T:System.Net.TransportContext" /> class provides additional context about the underlying transport layer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2386b-102">합니다 <xref:System.Net.TransportContext> 클래스에서 클래스를 사용 합니다 <xref:System.Security.Authentication.ExtendedProtection> 네임 스페이스를 사용 하 여 인증에 대 한 지원을 제공 애플리케이션에 대 한 보호를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-102">The <xref:System.Net.TransportContext> class is used with classes in the <xref:System.Security.Authentication.ExtendedProtection> namespace to provide support for authentication using extended protection for applications.</span></span>  
  
 <span data-ttu-id="2386b-103">Windows 통합 인증의 디자인을 사용하면 일부 자격 증명 시도 응답이 유니버설이 될 수 있으므로 다시 사용되거나 전달될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-103">The design of integrated Windows authentication allows for some credential challenge responses to be universal, meaning they can be re-used or forwarded.</span></span> <span data-ttu-id="2386b-104">이 특정 디자인 기능이 필요 하지 않은 경우 다음 응답 해야 하는 챌린지를 사용 하 여 생성, 최소한 대상 관련 정보를 기껏해야 일부 채널 관련 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-104">If this particular design feature is not needed then the challenge responses should be constructed with, at minimum, target specific information and, at best, also some channel specific information.</span></span> <span data-ttu-id="2386b-105">그런 다음 서비스가 수 있도록 자격 증명 시도 응답 서비스 (서비스 공급자 이름 또는 SPN) 관련 정보가 포함, 필요한 경우 특정 채널 확장 된 보호 제공 정보 (채널 바인딩 토큰 또는 CBT).</span><span class="sxs-lookup"><span data-stu-id="2386b-105">Services can then provide extended protection to ensure that credential challenge responses contain service specific information (a Service Provider Name or SPN) and, if necessary, channel specific information (a channel binding token or CBT).</span></span> <span data-ttu-id="2386b-106">서비스 자격 증명 교환에이 정보를 사용 하 여 얻은 수 부적절 하 게 자격 증명 시도 응답의 악의적인 사용 으로부터 더 잘 보호할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-106">With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.</span></span>  
  
 <span data-ttu-id="2386b-107"><xref:System.Net.HttpWebRequest> 파생 클래스만 <xref:System.Net.WebRequest> 클래스는 IWA를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-107"><xref:System.Net.HttpWebRequest> is the only class derived from <xref:System.Net.WebRequest> class that can potentially use IWA.</span></span> <span data-ttu-id="2386b-108"><xref:System.Net.FtpWebRequest> 클래스만 FTP 일반 텍스트 인증을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-108">The <xref:System.Net.FtpWebRequest> class does only FTP clear text authentication.</span></span> <span data-ttu-id="2386b-109"><xref:System.Net.FileWebRequest> 클래스 인증을 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-109">The <xref:System.Net.FileWebRequest> class doesn't perform any authentication.</span></span>  
  
 <span data-ttu-id="2386b-110">여러 가지 방법으로 애플리케이션에서 발생할 수는 <xref:System.Net.TransportContext> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="2386b-110">There are several ways an application may get a <xref:System.Net.TransportContext> instance.</span></span> <span data-ttu-id="2386b-111">사용 하는 애플리케이션 <xref:System.Net.Security.SslStream> 가져올 수는 <xref:System.Net.TransportContext> 사용 하 여는 <xref:System.Net.Security.SslStream.TransportContext%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-111">An application that uses <xref:System.Net.Security.SslStream> can get the <xref:System.Net.TransportContext> using the <xref:System.Net.Security.SslStream.TransportContext%2A> property.</span></span> <span data-ttu-id="2386b-112">사용 하는 애플리케이션 <xref:System.Net.HttpWebRequest> 얻을 수는 <xref:System.Net.TransportContext> 사용 하 여 합니다 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 또는 <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2386b-112">An application that uses <xref:System.Net.HttpWebRequest> can get a <xref:System.Net.TransportContext> using the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Net.Security.SslStream.TransportContext" />
    <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
    <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
    <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="2386b-113">확장된 보호를 사용하는 Windows 통합 인증</span><span class="sxs-lookup"><span data-stu-id="2386b-113">Integrated Windows Authentication with Extended Protection</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransportContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.TransportContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TransportContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2386b-114"><see cref="T:System.Net.TransportContext" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-114">Creates a new instance of the <see cref="T:System.Net.TransportContext" /> class</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelBinding">
      <MemberSignature Language="C#" Value="public abstract System.Security.Authentication.ExtendedProtection.ChannelBinding GetChannelBinding (System.Security.Authentication.ExtendedProtection.ChannelBindingKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Authentication.ExtendedProtection.ChannelBinding GetChannelBinding(valuetype System.Security.Authentication.ExtendedProtection.ChannelBindingKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChannelBinding (kind As ChannelBindingKind) As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Authentication::ExtendedProtection::ChannelBinding ^ GetChannelBinding(System::Security::Authentication::ExtendedProtection::ChannelBindingKind kind);" />
      <MemberSignature Language="F#" Value="abstract member GetChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBindingKind -&gt; System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="transportContext.GetChannelBinding kind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Security.Authentication.ExtendedProtection.ChannelBindingKind" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="kind"><span data-ttu-id="2386b-115">검색할 채널 바인딩의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-115">The type of channel binding to retrieve.</span></span></param>
        <summary><span data-ttu-id="2386b-116">요청된 채널 바인딩을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-116">Retrieves the requested channel binding.</span></span></summary>
        <returns><span data-ttu-id="2386b-117">요청된 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />이거나, 현재 전송 또는 운영 체제에서 채널 바인딩을 지원하지 않을 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-117">The requested <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />, or <see langword="null" /> if the channel binding is not supported by the current transport or by the operating system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2386b-118">에 대 한 가능한 값은 `kind` 매개 변수는 <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint> 또는 <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique>합니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-118">The possible values for the `kind` parameter are <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint> or <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique>.</span></span>  
  
 <span data-ttu-id="2386b-119">애플리케이션에서의 CBT (채널 바인딩 토큰)를 검색을 시도 합니다.는 <xref:System.Net.HttpListenerRequest.TransportContext%2A> 사용 하 여 속성을 <xref:System.Net.TransportContext.GetChannelBinding%2A> 메서드 및 <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> 아닙니다 <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, 해당 <xref:System.Net.HttpListenerRequest> throw 됩니다 <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="2386b-119">If an application attempts to retrieve the channel binding token (CBT) from the <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="2386b-120">합니다 <xref:System.Net.HttpListenerRequest> 재정의 <xref:System.Net.TransportContext.GetChannelBinding%2A> 내부 구현을 메서드</span><span class="sxs-lookup"><span data-stu-id="2386b-120">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2386b-121"><paramref name="kind" />는 <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> 속성에서 검색된 <see cref="T:System.Net.TransportContext" />에 사용할 <see cref="P:System.Net.HttpListenerRequest.TransportContext" />가 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-121"><paramref name="kind" /> is must be <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> for use with the <see cref="T:System.Net.TransportContext" /> retrieved from the <see cref="P:System.Net.HttpListenerRequest.TransportContext" /> property.</span></span></exception>
        <altmember cref="P:System.Net.Security.SslStream.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetTlsTokenBindings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt; GetTlsTokenBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Authentication.ExtendedProtection.TokenBinding&gt; GetTlsTokenBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.TransportContext.GetTlsTokenBindings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTlsTokenBindings () As IEnumerable(Of TokenBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Authentication::ExtendedProtection::TokenBinding ^&gt; ^ GetTlsTokenBindings();" />
      <MemberSignature Language="F#" Value="abstract member GetTlsTokenBindings : unit -&gt; seq&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt;&#xA;override this.GetTlsTokenBindings : unit -&gt; seq&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt;" Usage="transportContext.GetTlsTokenBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2386b-122">전송 보안 계층 토큰 바인딩을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-122">Gets the transport security layer token bindings.</span></span></summary>
        <returns><span data-ttu-id="2386b-123">전송 보안 계층 토큰 바인딩입니다.</span><span class="sxs-lookup"><span data-stu-id="2386b-123">The transport security layer token bindings.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>