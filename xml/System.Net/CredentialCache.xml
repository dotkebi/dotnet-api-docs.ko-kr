<Type Name="CredentialCache" FullName="System.Net.CredentialCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="894e0d53c0aaf6a45547b3e6846b35c176d742aa" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57956728" /></Metadata><TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <TypeSignature Language="DocId" Value="T:System.Net.CredentialCache" />
  <TypeSignature Language="VB.NET" Value="Public Class CredentialCache&#xA;Implements ICredentials, ICredentialsByHost, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CredentialCache : System::Collections::IEnumerable, System::Net::ICredentials, System::Net::ICredentialsByHost" />
  <TypeSignature Language="F#" Value="type CredentialCache = class&#xA;    interface ICredentials&#xA;    interface ICredentialsByHost&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a0afa-101">여러 자격 증명에 대한 스토리지를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-101">Provides storage for multiple credentials.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-102"><xref:System.Net.CredentialCache> 클래스는 여러 인터넷 리소스에 대 한 자격 증명을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-102">The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources.</span></span> <span data-ttu-id="a0afa-103">여러 리소스에 액세스 해야 하는 응용 프로그램에서 이러한 리소스에 대 한 자격 증명을 저장할 수는 <xref:System.Net.CredentialCache> 다음 적절 한 집합이 필요한 경우 인터넷 리소스에 대 한 자격 증명을 제공 하는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a0afa-103">Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required.</span></span> <span data-ttu-id="a0afa-104">경우는 <xref:System.Net.CredentialCache.GetCredential%2A> 메서드는의 리소스 URI (Uniform Identifier)를 비교 하 고와 제공 하는 인증 유형 캐시에 저장 첫 번째 일치 하는 자격 증명 집합을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-104">When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.</span></span>  
  
 <span data-ttu-id="a0afa-105"><xref:System.Net.CredentialCache.DefaultCredentials%2A> 속성의 현재 보안 컨텍스트 시스템 자격 증명을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-105">The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context.</span></span> <span data-ttu-id="a0afa-106">클라이언트 응용 프로그램에 대 한 사용자 이름, 암호 및 도메인에 현재 로그온 한 사용자의 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-106">For client applications, these represent the user name, password, and domain of the user who is currently logged in.</span></span> <span data-ttu-id="a0afa-107">ASP.NET 응용 프로그램에 대 한 기본 자격 증명이 사용자 자격 증명에 로그인 한 사용자의 가장 된 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-107">For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0afa-108">다음 코드 예제에서는 초기화 된 <xref:System.Net.CredentialCache> 여러 보안 자격 증명 및 사용 하 여 자격 증명을 사용을 <xref:System.Net.WebRequest>입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-108">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ICredentials" />
    <altmember cref="P:System.Net.WebRequest.Credentials" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CredentialCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0afa-109"><see cref="T:System.Net.CredentialCache" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-109">Creates a new instance of the <see cref="T:System.Net.CredentialCache" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-110">생성자는 만듭니다는 <xref:System.Net.CredentialCache> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a0afa-110">The constructor creates a <xref:System.Net.CredentialCache> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0afa-111">다음 코드 예제에서는 초기화 된 <xref:System.Net.CredentialCache> 여러 보안 자격 증명 및 사용 하 여 자격 증명을 사용을 <xref:System.Net.WebRequest>입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-111">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0afa-112">자격 증명 캐시에 <see cref="T:System.Net.NetworkCredential" />을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-112">Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As Uri, authType As String, cred As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uriPrefix, System::String ^ authType, System::Net::NetworkCredential ^ cred);" />
      <MemberSignature Language="F#" Value="member this.Add : Uri * string * System.Net.NetworkCredential -&gt; unit" Usage="credentialCache.Add (uriPrefix, authType, cred)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="a0afa-113">자격 증명이 권한을 부여하는 리소스의 URI 접두사를 지정하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-113">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to.</span></span></param>
        <param name="authType"><span data-ttu-id="a0afa-114"><paramref name="uriPrefix" />에 명명된 리소스가 사용한 인증 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-114">The authentication scheme used by the resource named in <paramref name="uriPrefix" />.</span></span></param>
        <param name="cred"><span data-ttu-id="a0afa-115">자격 증명 캐시에 추가할 <see cref="T:System.Net.NetworkCredential" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-115">The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache.</span></span></param>
        <summary><span data-ttu-id="a0afa-116">SMTP 이외의 프로토콜과 함께 사용할 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 자격 증명 캐시에 추가하고 이를 URI(Uniform Resource Identifier) 접두사 및 인증 프로토콜과 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-116">Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-117"><xref:System.Net.CredentialCache.Add%2A> 메서드 위치를 <xref:System.Net.NetworkCredential> 에 SMTP 이외의 프로토콜과 함께 사용할 인스턴스를 <xref:System.Net.CredentialCache>입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-117">The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="a0afa-118">캐시에 추가 되는 순서 대로 자격 증명을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-118">The cache stores credentials in the order in which they are added to it.</span></span> <span data-ttu-id="a0afa-119">경우는 <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> 메서드는 반환 되 고 일치 하는 적절 한 <xref:System.Net.NetworkCredential> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a0afa-119">When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0afa-120">다음 코드 예제에서는 초기화 된 <xref:System.Net.CredentialCache> 여러 보안 자격 증명 및 사용 하 여 자격 증명을 사용을 <xref:System.Net.WebRequest>입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-120">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0afa-121"><paramref name="uriPrefix" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-121"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a0afa-122">또는</span><span class="sxs-lookup"><span data-stu-id="a0afa-122">-or-</span></span> 
 <span data-ttu-id="a0afa-123"><paramref name="authType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-123"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a0afa-124">동일한 자격 증명이 두 번 이상 추가되는 경우</span><span class="sxs-lookup"><span data-stu-id="a0afa-124">The same credentials are added more than once.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (host As String, port As Integer, authenticationType As String, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ host, int port, System::String ^ authenticationType, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="member this.Add : string * int * string * System.Net.NetworkCredential -&gt; unit" Usage="credentialCache.Add (host, port, authenticationType, credential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="a0afa-125">호스트 컴퓨터를 식별하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-125">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="a0afa-126"><paramref name="host" />에 연결할 포트를 지정하는 <see cref="T:System.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-126">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="a0afa-127"><paramref name="host" />를 사용하여 <paramref name="cred" />에 연결할 때 사용되는 인증 체계를 식별하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-127">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" /> using <paramref name="cred" />.</span></span></param>
        <param name="credential"><span data-ttu-id="a0afa-128">자격 증명 캐시에 추가할 <see cref="T:System.Net.NetworkCredential" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-128">The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache.</span></span></param>
        <summary><span data-ttu-id="a0afa-129">SMTP와 함께 사용할 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 자격 증명 캐시에 추가하고 이를 호스트 컴퓨터, 포트 및 인증 프로토콜과 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-129">Adds a <see cref="T:System.Net.NetworkCredential" /> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol.</span></span> <span data-ttu-id="a0afa-130">이 메서드를 사용하여 추가한 자격 증명은 SMTP에 대해서만 유효합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-130">Credentials added using this method are valid for SMTP only.</span></span> <span data-ttu-id="a0afa-131">HTTP 또는 FTP 요청에는 이 메서드가 작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-131">This method does not work for HTTP or FTP requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-132">이 메서드는 배치를 <xref:System.Net.NetworkCredential> 에 SMTP 사용 하 여 사용에 대 한 인스턴스는 <xref:System.Net.CredentialCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-132">This method places a <xref:System.Net.NetworkCredential> instance for use with SMTP into the <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="a0afa-133">캐시에 추가 되는 순서 대로 자격 증명을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-133">The cache stores credentials in the order in which they are added to it.</span></span> <span data-ttu-id="a0afa-134">경우는 <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> 반환 메서드를 호출을 <xref:System.Net.NetworkCredential> 비교 하 여 선택 된 인스턴스를 `host`, `port`, 및 `authType`합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-134">When the <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> method is called, it returns a <xref:System.Net.NetworkCredential> instance that is selected by matching the `host`, `port`, and `authType`.</span></span> <span data-ttu-id="a0afa-135">비교는 대 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-135">The comparison is done case-insensitively.</span></span>  
  
 <span data-ttu-id="a0afa-136">지원 되는 값에 대 한 `authType` "NTLM", "Digest", "Kerberos" 및 "Negotiate" 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-136">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span>  
  
 <span data-ttu-id="a0afa-137">이 메서드를 사용 하 여 추가한 자격 증명 SMTP 사용에 대해서만 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-137">Credentials added with this method are only valid for use with SMTP.</span></span> <span data-ttu-id="a0afa-138">이 메서드는 HTTP 또는 FTP 프로토콜에 대 한 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-138">This method does not work for HTTP or FTP protocols.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0afa-139">다음 코드 예제에서는 초기화 된 <xref:System.Net.CredentialCache> 여러 보안 자격 증명 사용 하 여 SMTP 사용 하 여 사용 하 여 사용 하 여 자격 증명 중 하나를 사용 하 여는 <xref:System.Net.Mail.SmtpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-139">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials for use with SMTP and uses one of those credentials with a <xref:System.Net.Mail.SmtpClient>.</span></span>  
  
 [!code-cpp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]
 [!code-csharp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]
 [!code-vb[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0afa-140"><paramref name="host" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-140"><paramref name="host" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a0afa-141">또는</span><span class="sxs-lookup"><span data-stu-id="a0afa-141">-or-</span></span> 
 <span data-ttu-id="a0afa-142"><paramref name="authType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-142"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a0afa-143"><paramref name="authType" />이 허용되는 값이 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="a0afa-143"><paramref name="authType" /> not an accepted value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a0afa-144"><paramref name="port" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="a0afa-144"><paramref name="port" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentials ^ DefaultCredentials { System::Net::ICredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCredentials : System.Net.ICredentials" Usage="System.Net.CredentialCache.DefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0afa-145">응용 프로그램의 시스템 자격 증명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-145">Gets the system credentials of the application.</span></span></summary>
        <value><span data-ttu-id="a0afa-146">응용 프로그램의 시스템 자격 증명을 나타내는 <see cref="T:System.Net.ICredentials" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-146">An <see cref="T:System.Net.ICredentials" /> that represents the system credentials of the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-147"><xref:System.Net.CredentialCache.DefaultCredentials%2A> 속성 적용 NTLM, 협상 및 Kerberos 기반 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-147">The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property applies only to NTLM, negotiate, and Kerberos-based authentication.</span></span>  
  
 <span data-ttu-id="a0afa-148"><xref:System.Net.CredentialCache.DefaultCredentials%2A> 응용 프로그램이 실행 되 고 있는 현재 보안 컨텍스트에 대 한 시스템 자격 증명을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-148"><xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running.</span></span> <span data-ttu-id="a0afa-149">클라이언트 쪽 응용 프로그램의 경우 이들은 일반적으로 Windows 자격 증명 (사용자 이름, 암호 및 도메인)의 응용 프로그램을 실행 하는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-149">For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.</span></span> <span data-ttu-id="a0afa-150">ASP.NET 응용 프로그램에 대 한 기본 자격 증명이 로그인 한 사용자 또는 가장 된 사용자의 사용자 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-150">For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.</span></span>  
  
 <span data-ttu-id="a0afa-151">에 따라 자격 증명을 가져올는 <xref:System.Net.NetworkCredential> 인스턴스를 사용 하 여는 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-151">To get the credentials as a <xref:System.Net.NetworkCredential> instance, use the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property.</span></span>  
  
 <span data-ttu-id="a0afa-152">지원 되는 값에 대 한 `authType` "NTLM", "Digest", "Kerberos" 및 "Negotiate" 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-152">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span> <span data-ttu-id="a0afa-153">이 메서드는 HTTP 또는 FTP 프로토콜에 대 한 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-153">This method does not work for HTTP or FTP protocols.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0afa-154">합니다 <xref:System.Net.ICredentials> 에서 반환한 인스턴스 <xref:System.Net.CredentialCache.DefaultCredentials%2A> 사용자 이름, 암호 또는 도메인의 현재 보안 컨텍스트를 보는 데 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-154">The <xref:System.Net.ICredentials> instance returned by <xref:System.Net.CredentialCache.DefaultCredentials%2A> cannot be used to view the user name, password, or domain of the current security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0afa-155">다음 코드 예제에서는 <xref:System.Net.CredentialCache.DefaultCredentials%2A> 응용 프로그램의 시스템 자격 증명을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-155">The following code example uses the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property to get the system credentials of the application.</span></span>  
  
 [!code-cpp[CredentialCache_DefaultCredentials#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]
 [!code-csharp[CredentialCache_DefaultCredentials#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]
 [!code-vb[CredentialCache_DefaultCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="a0afa-156">사용자 환경 변수를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-156">for reading the USERNAME environment variable.</span></span> <span data-ttu-id="a0afa-157">연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="a0afa-157">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultNetworkCredentials As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::NetworkCredential ^ DefaultNetworkCredentials { System::Net::NetworkCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNetworkCredentials : System.Net.NetworkCredential" Usage="System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0afa-158">현재 보안 컨텍스트의 네트워크 자격 증명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-158">Gets the network credentials of the current security context.</span></span></summary>
        <value><span data-ttu-id="a0afa-159">현재 사용자 또는 응용 프로그램의 네트워크 자격 증명을 나타내는 <see cref="T:System.Net.NetworkCredential" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-159">An <see cref="T:System.Net.NetworkCredential" /> that represents the network credentials of the current user or application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-160">반환 하는 자격 증명을는 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> 속성은 NTLM에 대해서만 적용할 수, 협상 및 Kerberos 기반 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-160">The credentials returned by the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.</span></span>  
  
 <span data-ttu-id="a0afa-161">반환 하는 자격 증명을 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> 응용 프로그램이 실행 되 고 있는 현재 보안 컨텍스트에 대 한 인증 자격 증명을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-161">The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running.</span></span> <span data-ttu-id="a0afa-162">클라이언트 쪽 응용 프로그램의 경우 이들은 일반적으로 Windows 자격 증명 (사용자 이름, 암호 및 도메인)의 응용 프로그램을 실행 하는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-162">For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.</span></span> <span data-ttu-id="a0afa-163">ASP.NET 응용 프로그램에 대 한 기본 네트워크 자격 증명이 로그인 한 사용자 또는 가장 된 사용자의 사용자 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-163">For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="a0afa-164">사용자 환경 변수를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-164">for reading the USERNAME environment variable.</span></span> <span data-ttu-id="a0afa-165">연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="a0afa-165">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCredential">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0afa-166">지정된 URI(Uniform Resource Identifier)나 호스트 및 인증 형식과 관련된 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-166">Returns a <see cref="T:System.Net.NetworkCredential" /> instance associated with a specified Uniform Resource Identifier (URI) or host, and authentication type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (uriPrefix As Uri, authType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : Uri * string -&gt; System.Net.NetworkCredential&#xA;override this.GetCredential : Uri * string -&gt; System.Net.NetworkCredential" Usage="credentialCache.GetCredential (uriPrefix, authType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentials.GetCredential(System.Uri,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="a0afa-167">자격 증명이 권한을 부여하는 리소스의 URI 접두사를 지정하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-167">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to.</span></span></param>
        <param name="authType"><span data-ttu-id="a0afa-168"><paramref name="uriPrefix" />에 명명된 리소스가 사용한 인증 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-168">The authentication scheme used by the resource named in <paramref name="uriPrefix" />.</span></span></param>
        <summary><span data-ttu-id="a0afa-169">지정된 URI(Uniform Resource Identifier) 및 인증 형식과 관련된 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-169">Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.</span></span></summary>
        <returns><span data-ttu-id="a0afa-170"><see cref="T:System.Net.NetworkCredential" />이거나 캐시에 일치하는 자격 증명이 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-170">A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-171"><xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> 메서드를 검색 합니다 <xref:System.Net.CredentialCache> 반환 합니다를 <xref:System.Net.NetworkCredential> 지정된 된 URI 및 인증 형식에 대 한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a0afa-171">The <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified URI and authorization type.</span></span> <span data-ttu-id="a0afa-172">경우는 <xref:System.Net.CredentialCache> 일치 하는 포함 <xref:System.Net.NetworkCredential> 인스턴스에 `null` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-172">If the <xref:System.Net.CredentialCache> contains no matching <xref:System.Net.NetworkCredential> instance, `null` is returned.</span></span>  
  
 <span data-ttu-id="a0afa-173"><xref:System.Net.CredentialCache.GetCredential%2A> 캐시에서 가장 긴 일치 하는 URI 접두사를 사용 하 여 권한 부여 유형에 대 한 반환 하려면 자격 증명 집합을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-173"><xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type.</span></span> <span data-ttu-id="a0afa-174">다음 표에서 예를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-174">The following table shows examples.</span></span>  
  
|<span data-ttu-id="a0afa-175">URI 접두사</span><span class="sxs-lookup"><span data-stu-id="a0afa-175">URI Prefix</span></span>|<span data-ttu-id="a0afa-176">일치 항목</span><span class="sxs-lookup"><span data-stu-id="a0afa-176">Matches</span></span>|  
|----------------|-------------|  
|`http://www.contoso.com/portal/news.htm`|<span data-ttu-id="a0afa-177">특정 웹 페이지에 대 한 요청 `news.htm`합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-177">Requests for the specific Web page `news.htm`.</span></span>|  
|`http://www.contoso.com/portal/`|<span data-ttu-id="a0afa-178">모든 콘텐츠에 대 한 요청을 `portal` 페이지를 제외한 경로 `news.htm`합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-178">Requests for all content in the `portal` path, except the page `news.htm`.</span></span>|  
|`http://www.contoso.com/`|<span data-ttu-id="a0afa-179">모든 리소스에 대 한 요청 `www.contoso.com`에서 제외 하 고는 `portal` 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-179">Requests for all resources at `www.contoso.com`, except those in the `portal` path.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a0afa-180">다음 코드 예제에서는 합니다 <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> 반환할 메서드를 <xref:System.Net.NetworkCredential> 지정 된 URI 및 인증 형식과 관련 된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a0afa-180">The following code example uses the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method to return the <xref:System.Net.NetworkCredential> instance associated with the specified URI and authentication type.</span></span>  
  
 [!code-cpp[CredentialCache_GetCredential#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]
 [!code-csharp[CredentialCache_GetCredential#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]
 [!code-vb[CredentialCache_GetCredential#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0afa-181"><paramref name="uriPrefix" /> 또는 <paramref name="authType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="a0afa-181"><paramref name="uriPrefix" /> or <paramref name="authType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (host As String, port As Integer, authenticationType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : string * int * string -&gt; System.Net.NetworkCredential&#xA;override this.GetCredential : string * int * string -&gt; System.Net.NetworkCredential" Usage="credentialCache.GetCredential (host, port, authenticationType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="a0afa-182">호스트 컴퓨터를 식별하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-182">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="a0afa-183"><paramref name="host" />에 연결할 포트를 지정하는 <see cref="T:System.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-183">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="a0afa-184"><paramref name="host" />에 연결할 때 사용되는 인증 체계를 식별하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-184">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />.</span></span></param>
        <summary><span data-ttu-id="a0afa-185">지정된 호스트, 포트 및 인증 프로토콜과 관련된 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-185">Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified host, port, and authentication protocol.</span></span></summary>
        <returns><span data-ttu-id="a0afa-186"><see cref="T:System.Net.NetworkCredential" />이거나 캐시에 일치하는 자격 증명이 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-186">A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-187">이 메서드를 검색 합니다 <xref:System.Net.CredentialCache> 반환 하 고는 <xref:System.Net.NetworkCredential> 지정 된 호스트, 포트 및 인증 형식에 대 한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a0afa-187">This method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified host, port, and authorization type.</span></span> <span data-ttu-id="a0afa-188">`host`, `port`, 및 `authType` 값이이 메서드에 전달 된 자격 증명에 추가 될 때 지정 된 값과 비교 됩니다 합니다 <xref:System.Net.CredentialCache> 사용 하 여를 <xref:System.Net.CredentialCache.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a0afa-188">The `host`, `port`, and `authType` values passed to this method are case-insensitively compared to the values specified when the credential was added to the <xref:System.Net.CredentialCache> using the <xref:System.Net.CredentialCache.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="a0afa-189">지원 되는 값에 대 한 `authType` "NTLM", "Digest", "Kerberos" 및 "Negotiate" 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-189">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0afa-190"><paramref name="host" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-190"><paramref name="host" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a0afa-191">또는</span><span class="sxs-lookup"><span data-stu-id="a0afa-191">-or-</span></span> 
 <span data-ttu-id="a0afa-192"><paramref name="authType" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-192"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a0afa-193"><paramref name="authType" />이 허용되는 값이 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="a0afa-193"><paramref name="authType" /> not an accepted value.</span></span>  
  
<span data-ttu-id="a0afa-194">또는</span><span class="sxs-lookup"><span data-stu-id="a0afa-194">-or-</span></span> 
 <span data-ttu-id="a0afa-195"><paramref name="host" />가 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="a0afa-195"><paramref name="host" /> is equal to the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a0afa-196"><paramref name="port" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="a0afa-196"><paramref name="port" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="credentialCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0afa-197"><see cref="T:System.Net.CredentialCache" /> 인스턴스에서 반복할 수 있는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-197">Returns an enumerator that can iterate through the <see cref="T:System.Net.CredentialCache" /> instance.</span></span></summary>
        <returns><span data-ttu-id="a0afa-198"><see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Net.CredentialCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-198">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Net.CredentialCache" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0afa-199">다음 코드 예제에서는 합니다 <xref:System.Net.CredentialCache.GetEnumerator%2A> 반복할 수 있는 열거자를 반환 하는 메서드는 <xref:System.Net.CredentialCache> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a0afa-199">The following code example uses the <xref:System.Net.CredentialCache.GetEnumerator%2A> method to return an enumerator that can iterate through the <xref:System.Net.CredentialCache> instance.</span></span>  
  
 [!code-cpp[CredentialCache_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]
 [!code-csharp[CredentialCache_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]
 [!code-vb[CredentialCache_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0afa-200">캐시에서 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-200">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (uriPrefix As Uri, authType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberSignature Language="F#" Value="member this.Remove : Uri * string -&gt; unit" Usage="credentialCache.Remove (uriPrefix, authType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="a0afa-201">자격 증명이 권한을 부여하는 리소스의 URI 접두사를 지정하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-201">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential is used for.</span></span></param>
        <param name="authType"><span data-ttu-id="a0afa-202"><paramref name="uriPrefix" />에 명명된 호스트가 사용한 인증 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-202">The authentication scheme used by the host named in <paramref name="uriPrefix" />.</span></span></param>
        <summary><span data-ttu-id="a0afa-203"><see cref="T:System.Net.NetworkCredential" /> 인스턴스가 지정된 URI(Uniform Resource Identifier) 접두사 및 인증 프로토콜과 관련된 경우 캐시에서 해당 인스턴스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-203">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-204">이 메서드로 제거 되는 <xref:System.Net.NetworkCredential> 에서 인스턴스는 <xref:System.Net.CredentialCache> 관련 자격 증명을 사용 하 여 지정된 된 URI 접두사 및 인증 프로토콜과 일치 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="a0afa-204">This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential.</span></span> <span data-ttu-id="a0afa-205">여러 번 호출 하 여 <xref:System.Net.CredentialCache.Remove%2A> 동일한 메서드 <xref:System.Net.NetworkCredential> 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-205">Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.</span></span>  
  
 <span data-ttu-id="a0afa-206">경우 `authType` 됩니다 `null` 또는 `uriPrefix` 는 `null`, 일치 하는 자격 증명이 없으면이 메서드는 아무 작업도 수행 하지 캐시에서 발견 되는 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-206">If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0afa-207">다음 코드 예제에서는이 메서드를 사용 하 여 삭제를 <xref:System.Net.NetworkCredential> 캐시에서 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a0afa-207">The following code example uses this method to delete a <xref:System.Net.NetworkCredential> instance from the cache.</span></span>  
  
 [!code-cpp[CredentialCache_Add_Remove#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]
 [!code-csharp[CredentialCache_Add_Remove#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]
 [!code-vb[CredentialCache_Add_Remove#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (host As String, port As Integer, authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="member this.Remove : string * int * string -&gt; unit" Usage="credentialCache.Remove (host, port, authenticationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="a0afa-208">호스트 컴퓨터를 식별하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-208">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="a0afa-209"><paramref name="host" />에 연결할 포트를 지정하는 <see cref="T:System.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-209">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="a0afa-210"><paramref name="host" />에 연결할 때 사용되는 인증 체계를 식별하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-210">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />.</span></span></param>
        <summary><span data-ttu-id="a0afa-211"><see cref="T:System.Net.NetworkCredential" /> 인스턴스가 지정된 호스트, 포트 및 인증 프로토콜과 관련된 경우 캐시에서 해당 인스턴스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-211">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified host, port, and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0afa-212">이 메서드로 제거 되는 <xref:System.Net.NetworkCredential> 에서 인스턴스는 <xref:System.Net.CredentialCache> 지정된 된 호스트, 포트 및 인증 프로토콜 자격 증명과 연관 된 일치 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="a0afa-212">This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential.</span></span> <span data-ttu-id="a0afa-213">여러 번 호출 하 여 <xref:System.Net.CredentialCache.Remove%2A> 동일한 메서드 <xref:System.Net.NetworkCredential> 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-213">Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.</span></span>  
  
 <span data-ttu-id="a0afa-214">경우 `authType` 됩니다 `null` 또는 `uriPrefix` 는 `null`, 일치 하는 자격 증명이 없으면이 메서드는 아무 작업도 수행 하지 캐시에서 발견 되는 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a0afa-214">If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>