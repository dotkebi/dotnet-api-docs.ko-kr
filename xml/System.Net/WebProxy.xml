<Type Name="WebProxy" FullName="System.Net.WebProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c4b1d0832e56207ce17d25b473164708275a59b" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56402666" /></Metadata><TypeSignature Language="C#" Value="public class WebProxy : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WebProxy extends System.Object implements class System.Net.IWebProxy, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class WebProxy&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebProxy : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebProxy = class&#xA;    interface ISerializable&#xA;    interface IWebProxy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebProxy</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.IWebProxy</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8c513-101"><see cref="T:System.Net.WebRequest" /> 클래스에 대해 HTTP 프록시 설정을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-101">Contains HTTP proxy settings for the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-102"><xref:System.Net.WebProxy> 클래스는 프록시 설정을 포함 하는 <xref:System.Net.WebRequest> 인스턴스 사용 하 여 요청을 보내도록 웹 프록시를 사용할지를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-102">The <xref:System.Net.WebProxy> class contains the proxy settings that <xref:System.Net.WebRequest> instances use to determine whether a Web proxy is used to send requests.</span></span> <span data-ttu-id="8c513-103">컴퓨터 및 애플리케이션 구성 파일을 애플리케이션 프록시 설정을 지정할 수 있습니다 하는 글로벌 웹 인스턴스를 사용할 수는 <xref:System.Net.WebProxy> 웹 프록시 사용 하 여 사용자 지정 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-103">Global Web proxy settings can be specified in machine and application configuration files, and applications can use instances of the <xref:System.Net.WebProxy> class to customize Web proxy use.</span></span> <span data-ttu-id="8c513-104">합니다 <xref:System.Net.WebProxy> 클래스의 기본 구현은 <xref:System.Net.IWebProxy> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-104">The <xref:System.Net.WebProxy> class is the base implementation of the <xref:System.Net.IWebProxy> interface.</span></span>  
  
 <span data-ttu-id="8c513-105">웹 프록시 클래스의 인스턴스를 가져오려면 다음 방법 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-105">To obtain instances of the Web proxy class, you can use any of the following methods:</span></span>  
  
-   <span data-ttu-id="8c513-106"><xref:System.Net.WebProxy.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-106">The <xref:System.Net.WebProxy.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="8c513-107"><xref:System.Net.WebProxy.GetDefaultProxy%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="8c513-107">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method.</span></span>  
  
-   <span data-ttu-id="8c513-108"><xref:System.Net.GlobalProxySelection.Select%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="8c513-108">The <xref:System.Net.GlobalProxySelection.Select%2A> method.</span></span>  
  
 <span data-ttu-id="8c513-109">이러한 각 메서드는 <xref:System.Net.WebProxy> 수행할 수 있습니다. 인스턴스를 사용자 지정; 차이점은 애플리케이션에 반환 되기 전에 인스턴스가 초기화 되는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-109">These methods each supply a <xref:System.Net.WebProxy> instance that you can further customize; the difference between them is how the instance is initialized before it is returned to your application.</span></span> <span data-ttu-id="8c513-110"><xref:System.Net.WebProxy.%23ctor%2A> 생성자의 인스턴스를 반환 합니다 <xref:System.Net.WebProxy> 클래스는 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-110">The <xref:System.Net.WebProxy.%23ctor%2A> constructor returns an instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A> property set to `null`.</span></span> <span data-ttu-id="8c513-111">요청을 사용 하는 경우는 <xref:System.Net.WebProxy> 인스턴스가이 상태에서는 프록시가 없는 요청을 보내는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-111">When a request uses a <xref:System.Net.WebProxy> instance in this state, no proxy is used to send the request.</span></span>  
  
 <span data-ttu-id="8c513-112"><xref:System.Net.WebProxy.GetDefaultProxy%2A> 의 인스턴스를 반환 하는 메서드를 <xref:System.Net.WebProxy> 클래스는 <xref:System.Net.WebProxy.Address%2A>, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>, 및 <xref:System.Net.WebProxy.BypassList%2A> Internet Explorer 5.5 및 나중에 사용 되는 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-112">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method returns an instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A>, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>, and <xref:System.Net.WebProxy.BypassList%2A> properties set to the values used by Internet Explorer 5.5 and later.</span></span>  
  
 <span data-ttu-id="8c513-113">합니다 <xref:System.Net.GlobalProxySelection.Select%2A> 의 인스턴스를 반환 하는 메서드를 <xref:System.Net.WebProxy> 클래스와 Internet Explorer 및 구성 파일 설정의 조합에 따라 설정 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-113">The <xref:System.Net.GlobalProxySelection.Select%2A> method returns an instance of the <xref:System.Net.WebProxy> class with it properties set according to a combination of Internet Explorer and configuration file settings.</span></span>  
  
 <span data-ttu-id="8c513-114"><xref:System.Net.WebProxy> 클래스는 자동 검색 및 프록시 구성 스크립트의 실행을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-114">The <xref:System.Net.WebProxy> class supports automatic detection and execution of proxy configuration scripts.</span></span> <span data-ttu-id="8c513-115">이 기능을 WPAD(웹 프록시 자동 검색)라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-115">This feature is also known as Web Proxy Auto-Discovery (WPAD).</span></span> <span data-ttu-id="8c513-116">자동 프록시 구성을 사용 하는 경우 일반적으로 Wpad.dat에 명명 된 구성 스크립트를 해야 수 있는, 다운로드, 컴파일 및 실행</span><span class="sxs-lookup"><span data-stu-id="8c513-116">When using automatic proxy configuration, a configuration script, typically named Wpad.dat, must be located, downloaded, compiled, and run.</span></span> <span data-ttu-id="8c513-117">이러한 작업에 성공한 경우 스크립트는 요청에 사용할 수 있는 프록시를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-117">If these operations are successful, the script returns the proxies that can be used for a request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-118">다음 코드 예제에서는 할당을 <xref:System.Net.WebProxy> 인스턴스는 <xref:System.Net.WebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8c513-118">The following code example assigns a <xref:System.Net.WebProxy> instance to a <xref:System.Net.WebRequest> instance.</span></span> <span data-ttu-id="8c513-119"><xref:System.Net.WebRequest> 인스턴스는 외부 인터넷 리소스에 연결할 프록시를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-119">The <xref:System.Net.WebRequest> instance uses the proxy to connect to external Internet resources.</span></span> <span data-ttu-id="8c513-120">(WPAD 기능을 사용 하는 방법을 보여 주는 예에 대 한 설명서를 참조 합니다 <xref:System.Net.IWebProxyScript> 클래스입니다.)</span><span class="sxs-lookup"><span data-stu-id="8c513-120">(For an example that demonstrates using the WPAD feature, see the documentation for the <xref:System.Net.IWebProxyScript> class.)</span></span>  
  
 [!code-cpp[Classic WebProxy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebProxy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebProxy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebProxy Example/CS/source.cs#1)]
 [!code-vb[Classic WebProxy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebProxy Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c513-121"><see cref="T:System.Net.WebProxy" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-121">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c513-122"><see cref="T:System.Net.WebProxy" /> 클래스의 빈 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-122">Initializes an empty instance of the <see cref="T:System.Net.WebProxy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-123">기본 생성자의 빈 인스턴스를 초기화 합니다 <xref:System.Net.WebProxy> 클래스를 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정 `null`.</span><span class="sxs-lookup"><span data-stu-id="8c513-123">The default constructor initializes an empty instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A> property set to `null`.</span></span>  
  
 <span data-ttu-id="8c513-124">경우는 <xref:System.Net.WebProxy.Address%2A> 속성은 `null`의 <xref:System.Net.WebProxy.IsBypassed%2A> 메서드가 반환 되는 `true` 및 <xref:System.Net.WebProxy.GetProxy%2A> 메서드 대상 주소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-124">When the <xref:System.Net.WebProxy.Address%2A> property is `null`, the <xref:System.Net.WebProxy.IsBypassed%2A> method returns `true` and the <xref:System.Net.WebProxy.GetProxy%2A> method returns the destination address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-125">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-125">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#1)]
 [!code-csharp[NCLWebProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy Address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="8c513-126">프록시 서버의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-126">The URI of the proxy server.</span></span></param>
        <summary><span data-ttu-id="8c513-127">URI가 지정된 <see cref="T:System.Net.WebProxy" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-127">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-128"><xref:System.Net.WebProxy> 인스턴스가 사용 하 여 초기화 되는 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정를 <xref:System.Uri> 인스턴스를 포함 하 `Address`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-128">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance containing `Address`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-129">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-129">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#6)]
 [!code-csharp[NCLWebProxy#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="8c513-130"><paramref name="Address" />가 잘못된 URI인 경우</span><span class="sxs-lookup"><span data-stu-id="8c513-130"><paramref name="Address" /> is an invalid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy Address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="8c513-131">프록시 서버의 주소를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-131">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></param>
        <summary><span data-ttu-id="8c513-132">지정된 <see cref="T:System.Net.WebProxy" /> 인스턴스에서 <see cref="T:System.Uri" />클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-132">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class from the specified <see cref="T:System.Uri" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-133"><xref:System.Net.WebProxy> 인스턴스를 초기화할 합니다 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정 합니다 `Address` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-133">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to the `Address` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-134">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-134">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#2)]
 [!code-csharp[NCLWebProxy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebProxy (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebProxy(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="8c513-135">serialization 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-135">The serialization data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="8c513-136">serialize된 데이터에 대한 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-136">The context for the serialized data.</span></span></param>
        <summary><span data-ttu-id="8c513-137">이전에 serialize된 내용을 사용하여 <see cref="T:System.Net.WebProxy" /> 클래스의 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-137">Initializes an instance of the <see cref="T:System.Net.WebProxy" /> class using previously serialized content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-138">이 메서드는 시스템에서는 <xref:System.Net.WebProxy> 인스턴스; 호출 애플리케이션이 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-138">This method is called by the system to deserialize a <xref:System.Net.WebProxy> instance; applications do not call it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="8c513-139">프록시 서버의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-139">The URI of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="8c513-140">로컬 주소의 프록시를 사용하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-140"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8c513-141">지정된 URI와 사용 안 함 설정을 사용하여 <see cref="T:System.Net.WebProxy" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-141">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI and bypass setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-142"><xref:System.Net.WebProxy> 인스턴스가 사용 하 여 초기화 되는 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정를 <xref:System.Uri> 포함 하는 인스턴스 `Address` 및 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 속성이로 설정 `BypassOnLocal`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-142">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address` and the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-143">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-143">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#7)]
 [!code-csharp[NCLWebProxy#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="8c513-144"><paramref name="Address" />가 잘못된 URI인 경우</span><span class="sxs-lookup"><span data-stu-id="8c513-144"><paramref name="Address" /> is an invalid URI.</span></span></exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Host, int Port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Host, int32 Port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Host As String, Port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Host, int Port);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * int -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Host, Port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Host" Type="System.String" />
        <Parameter Name="Port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Host"><span data-ttu-id="8c513-145">프록시 호스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-145">The name of the proxy host.</span></span></param>
        <param name="Port"><span data-ttu-id="8c513-146">사용할 <paramref name="Host" />의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-146">The port number on <paramref name="Host" /> to use.</span></span></param>
        <summary><span data-ttu-id="8c513-147">지정된 호스트와 포트 번호를 사용하여 <see cref="T:System.Net.WebProxy" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-147">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified host and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-148"><xref:System.Net.WebProxy> 인스턴스가 사용 하 여 초기화 되는 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정를 <xref:System.Uri> http:// 인스턴스의 `Host` : `Port`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-148">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance of the form http:// `Host` : `Port`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-149">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-149">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#5)]
 [!code-csharp[NCLWebProxy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="8c513-150"><paramref name="Host" />와 <paramref name="Port" />를 결합하여 만든 URI가 잘못된 URI인 경우</span><span class="sxs-lookup"><span data-stu-id="8c513-150">The URI formed by combining <paramref name="Host" /> and <paramref name="Port" /> is not a valid URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="8c513-151">프록시 서버의 주소를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-151">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="8c513-152">로컬 주소의 프록시를 사용하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-152"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8c513-153"><see cref="T:System.Net.WebProxy" /> 인스턴스와 사용 안 함 설정을 사용하여 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-153">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the <see cref="T:System.Uri" /> instance and bypass setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-154"><xref:System.Net.WebProxy> 인스턴스가 사용 하 여 초기화 되는 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정 `Address` 와 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 속성이로 설정 `BypassOnLocal`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-154">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address` and with the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-155">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-155">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#3)]
 [!code-csharp[NCLWebProxy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal, string[] BypassList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal, string[] BypassList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean, BypassList As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool * string[] -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="8c513-156">프록시 서버의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-156">The URI of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="8c513-157">로컬 주소의 프록시를 사용하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-157"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <param name="BypassList"><span data-ttu-id="8c513-158">사용하지 않을 서버의 URI가 들어 있는 정규식 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-158">An array of regular expression strings that contain the URIs of the servers to bypass.</span></span></param>
        <summary><span data-ttu-id="8c513-159">지정된 URI, 사용 안 함 설정 및 사용하지 않을 URI 목록을 사용하여 <see cref="T:System.Net.WebProxy" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-159">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, and list of URIs to bypass.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-160"><xref:System.Net.WebProxy> 인스턴스를 초기화할 합니다 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정를 <xref:System.Uri> 포함 하는 인스턴스 `Address`의 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 속성이로 설정 `BypassOnLocal`, 및 <xref:System.Net.WebProxy.BypassList%2A> 속성이로 설정 `BypassList`.</span><span class="sxs-lookup"><span data-stu-id="8c513-160">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, and the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-161">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-161">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#8)]
 [!code-csharp[NCLWebProxy#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="8c513-162"><paramref name="Address" />가 잘못된 URI인 경우</span><span class="sxs-lookup"><span data-stu-id="8c513-162"><paramref name="Address" /> is an invalid URI.</span></span></exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
        <altmember cref="P:System.Net.WebProxy.BypassList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal, string[] BypassList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean, BypassList As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool * string[] -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="8c513-163">프록시 서버의 주소를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-163">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="8c513-164">로컬 주소의 프록시를 사용하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-164"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <param name="BypassList"><span data-ttu-id="8c513-165">사용하지 않을 서버의 URI가 들어 있는 정규식 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-165">An array of regular expression strings that contains the URIs of the servers to bypass.</span></span></param>
        <summary><span data-ttu-id="8c513-166">지정된 <see cref="T:System.Net.WebProxy" /> 인스턴스, 사용 안 함 설정 및 사용하지 않을 URI 목록을 사용하여 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-166">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, and list of URIs to bypass.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-167"><xref:System.Net.WebProxy> 인스턴스를 초기화할 합니다 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정 `Address`의 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 속성이로 설정 `BypassOnLocal`, 및 <xref:System.Net.WebProxy.BypassList%2A> 속성이로 설정 `BypassList`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-167">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, and the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-168">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-168">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#4)]
 [!code-csharp[NCLWebProxy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal, string[] BypassList, class System.Net.ICredentials Credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean, BypassList As String(), Credentials As ICredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList, System::Net::ICredentials ^ Credentials);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool * string[] * System.Net.ICredentials -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList, Credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
        <Parameter Name="Credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="8c513-169">프록시 서버의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-169">The URI of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="8c513-170">로컬 주소의 프록시를 사용하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-170"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <param name="BypassList"><span data-ttu-id="8c513-171">사용하지 않을 서버의 URI가 들어 있는 정규식 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-171">An array of regular expression strings that contains the URIs of the servers to bypass.</span></span></param>
        <param name="Credentials"><span data-ttu-id="8c513-172">인증을 위해 프록시 서버에 제출할 <see cref="T:System.Net.ICredentials" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-172">An <see cref="T:System.Net.ICredentials" /> instance to submit to the proxy server for authentication.</span></span></param>
        <summary><span data-ttu-id="8c513-173">지정된 URI, 사용 안 함 설정, 사용하지 않을 URI 목록 및 자격 증명을 사용하여 <see cref="T:System.Net.WebProxy" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-173">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, list of URIs to bypass, and credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-174"><xref:System.Net.WebProxy> 인스턴스를 초기화할 합니다 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정를 <xref:System.Uri> 포함 하는 인스턴스 `Address`의 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 속성이로 설정 `BypassOnLocal`, <xref:System.Net.WebProxy.BypassList%2A> 속성이로 설정 `BypassList`, 및 합니다 <xref:System.Net.WebProxy.Credentials%2A> 속성이 설정 `Credentials`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-174">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`, and the <xref:System.Net.WebProxy.Credentials%2A> property set to `Credentials`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-175">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-175">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#9)]
 [!code-csharp[NCLWebProxy#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="8c513-176"><paramref name="Address" />가 잘못된 URI인 경우</span><span class="sxs-lookup"><span data-stu-id="8c513-176"><paramref name="Address" /> is an invalid URI.</span></span></exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
        <altmember cref="P:System.Net.WebProxy.BypassList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal, string[] BypassList, class System.Net.ICredentials Credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean, BypassList As String(), Credentials As ICredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList, System::Net::ICredentials ^ Credentials);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool * string[] * System.Net.ICredentials -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList, Credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
        <Parameter Name="Credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="Address"><span data-ttu-id="8c513-177">프록시 서버의 주소를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-177">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></param>
        <param name="BypassOnLocal"><span data-ttu-id="8c513-178">로컬 주소의 프록시를 사용하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-178"><see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span></span></param>
        <param name="BypassList"><span data-ttu-id="8c513-179">사용하지 않을 서버의 URI가 들어 있는 정규식 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-179">An array of regular expression strings that contains the URIs of the servers to bypass.</span></span></param>
        <param name="Credentials"><span data-ttu-id="8c513-180">인증을 위해 프록시 서버에 제출할 <see cref="T:System.Net.ICredentials" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-180">An <see cref="T:System.Net.ICredentials" /> instance to submit to the proxy server for authentication.</span></span></param>
        <summary><span data-ttu-id="8c513-181">지정된 <see cref="T:System.Net.WebProxy" /> 인스턴스, 사용 안 함 설정, 사용하지 않을 URI 목록 및 자격 증명을 사용하여 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-181">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, list of URIs to bypass, and credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-182"><xref:System.Net.WebProxy> 인스턴스를 초기화할 합니다 <xref:System.Net.WebProxy.Address%2A> 속성이로 설정 `Address`의 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 속성이로 설정 `BypassOnLocal`의 <xref:System.Net.WebProxy.BypassList%2A> 속성이로 설정 `BypassList`, 및 <xref:System.Net.WebProxy.Credentials%2A> 로설정하는속성`Credentials`.</span><span class="sxs-lookup"><span data-stu-id="8c513-182">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`, and the <xref:System.Net.WebProxy.Credentials%2A> property set to `Credentials`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-183">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-183">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#13)]
 [!code-csharp[NCLWebProxy#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.Address" />
      <MemberSignature Language="VB.NET" Value="Public Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Address : Uri with get, set" Usage="System.Net.WebProxy.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c513-184">프록시 서버의 주소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-184">Gets or sets the address of the proxy server.</span></span></summary>
        <value><span data-ttu-id="8c513-185">프록시 서버의 주소를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-185">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-186"><xref:System.Net.WebProxy.Address%2A> 프록시 서버의 주소를 포함 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-186">The <xref:System.Net.WebProxy.Address%2A> property contains the address of the proxy server.</span></span> <span data-ttu-id="8c513-187">자동 프록시 검색을 사용 하지 않는 경우 없음 자동 구성 스크립트를 지정한 경우는 <xref:System.Net.WebProxy.Address%2A> 속성 및 <xref:System.Net.WebProxy.BypassList%2A> 요청에 사용 되는 프록시를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-187">When automatic proxy detection is not enabled, and no automatic configuration script is specified, the <xref:System.Net.WebProxy.Address%2A> property and <xref:System.Net.WebProxy.BypassList%2A> determine the proxy used for a request.</span></span>  
  
 <span data-ttu-id="8c513-188">경우는 <xref:System.Net.WebProxy.Address%2A> 속성은 `null`, 요청 프록시를 바이패스 하 고 대상 호스트에 직접 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-188">When the <xref:System.Net.WebProxy.Address%2A> property is `null`, requests bypass the proxy and connect directly to the destination host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-189">속성을 표시 하는 다음 코드 예제는 <xref:System.Net.WebProxy> 개체를 포함 하 여 해당 <xref:System.Net.WebProxy.Address%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-189">The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its <xref:System.Net.WebProxy.Address%2A>.</span></span>  
  
 [!code-cpp[NCLAutoProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#1)]
 [!code-csharp[NCLAutoProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassArrayList">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList BypassArrayList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList BypassArrayList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassArrayList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BypassArrayList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ BypassArrayList { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BypassArrayList : System.Collections.ArrayList" Usage="System.Net.WebProxy.BypassArrayList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c513-190">프록시 서버를 사용하지 않는 주소 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-190">Gets a list of addresses that do not use the proxy server.</span></span></summary>
        <value><span data-ttu-id="8c513-191">프록시 서버를 사용하지 않고 액세스되는 URI를 나타내는 <see cref="T:System.Collections.ArrayList" /> 배열의 목록이 들어 있는 <see cref="P:System.Net.WebProxy.BypassList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-191">An <see cref="T:System.Collections.ArrayList" /> that contains a list of <see cref="P:System.Net.WebProxy.BypassList" /> arrays that represents URIs that do not use the proxy server when accessed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-192">합니다 <xref:System.Net.WebProxy.BypassList%2A> Uri를 설명 하는 정규식 문자열의 배열 목록입니다는 <xref:System.Net.WebRequest> 인스턴스가 프록시 서버를 통해 대신 직접 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-192">The <xref:System.Net.WebProxy.BypassList%2A> is an array list of regular expression strings that describe the URIs that a <xref:System.Net.WebRequest> instance accesses directly instead of through the proxy server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassList">
      <MemberSignature Language="C#" Value="public string[] BypassList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] BypassList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassList" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassList As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ BypassList { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BypassList : string[] with get, set" Usage="System.Net.WebProxy.BypassList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c513-193">프록시 서버를 사용하지 않는 주소의 배열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-193">Gets or sets an array of addresses that do not use the proxy server.</span></span></summary>
        <value><span data-ttu-id="8c513-194">프록시 서버를 사용하지 않고 액세스되는 URI를 설명하는 정규식 목록이 들어 있는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-194">An array that contains a list of regular expressions that describe URIs that do not use the proxy server when accessed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-195">합니다 <xref:System.Net.WebProxy.BypassList%2A> 속성에는 Uri를 설명 하는 정규식의 배열을 포함 하는 <xref:System.Net.WebRequest> 인스턴스가 프록시 서버를 통해 대신 직접 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-195">The <xref:System.Net.WebProxy.BypassList%2A> property contains an array of regular expressions that describe URIs that a <xref:System.Net.WebRequest> instance accesses directly instead of through the proxy server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-196">속성을 표시 하는 다음 코드 예제는 <xref:System.Net.WebProxy> 개체를 포함 하 여 해당 <xref:System.Net.WebProxy.BypassList%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-196">The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its <xref:System.Net.WebProxy.BypassList%2A> property.</span></span>  
  
 [!code-cpp[NCLAutoProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#1)]
 [!code-csharp[NCLAutoProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.Net.WebProxy.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c513-197">로컬 주소에 대해 프록시 서버를 사용하지 않을 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-197">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span></span></summary>
        <value><span data-ttu-id="8c513-198">로컬 주소에 대해 프록시 서버를 사용하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-198"><see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8c513-199">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-199">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-200">설정 합니다 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 속성에 따라 결정 여부를 <xref:System.Net.WebRequest> 인스턴스 로컬 인터넷 리소스에 액세스할 때 프록시 서버를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-200">The setting of the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property determines whether <xref:System.Net.WebRequest> instances use the proxy server when accessing local Internet resources.</span></span>  
  
 <span data-ttu-id="8c513-201"><xref:System.Net.WebProxy.BypassProxyOnLocal%2A>이 `true`이면, 로컬 인터넷 리소스에 대한 요청이 프록시 서버를 사용하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-201">If <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="8c513-202">로컬 요청에서와 같이 부족이 uri에서 마침표 (.)으로 식별 됩니다 http://webserver/, 로컬 서버에 액세스 하거나 포함 하 여 http://localhost를 http://loopback, 또는 http://127.0.0.1합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-202">Local requests are identified by the lack of a period (.) in the URI, as in http://webserver/, or access the local server, including http://localhost, http://loopback, or http://127.0.0.1.</span></span> <span data-ttu-id="8c513-203"><xref:System.Net.WebProxy.BypassProxyOnLocal%2A>이 `false`이면, 모든 인터넷 요청이 프록시 서버를 통해 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-203">When <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c513-204">프록시를 사용 하는 기간을 포함 하는 URI 사용 하 여 로컬 호스트에 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-204">Requests to a local host with a URI that contain a period use the proxy.</span></span> <span data-ttu-id="8c513-205">프록시를 사용 하 여 이러한 경우를 방지 하려면 호스트에 대 한 항목을 만들고는 <xref:System.Net.WebProxy.BypassList%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-205">To avoid using a proxy in these cases, create an entry for the host in the <xref:System.Net.WebProxy.BypassList%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-206">다음 코드 예제는이 속성을 설정 하는 생성자를 호출 하 고이 속성의 값을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-206">The following code example demonstrates calling a constructor that sets this property and getting the value of this property.</span></span>  
  
 [!code-cpp[NCLWebProxy#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#7)]
 [!code-csharp[NCLWebProxy#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy CreateDefaultProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy CreateDefaultProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.CreateDefaultProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ CreateDefaultProxy();" />
      <MemberSignature Language="F#" Value="static member CreateDefaultProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebProxy.CreateDefaultProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebProxy.Credentials" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Net.IWebProxy.Credentials</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c513-207">인증을 위해 프록시 서버에 제출할 자격 증명을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-207">Gets or sets the credentials to submit to the proxy server for authentication.</span></span></summary>
        <value><span data-ttu-id="8c513-208">인증을 위해 프록시 서버에 제출할 자격 증명이 들어 있는 <see cref="T:System.Net.ICredentials" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-208">An <see cref="T:System.Net.ICredentials" /> instance that contains the credentials to submit to the proxy server for authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-209"><xref:System.Net.WebProxy.Credentials%2A> 속성 프록시 서버는 HTTP 407 (프록시 권한 부여) 상태 코드에 대 한 응답에 보낼 인증 자격 증명을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-209">The <xref:System.Net.WebProxy.Credentials%2A> property contains the authentication credentials to send to the proxy server in response to an HTTP 407 (proxy authorization) status code.</span></span> <span data-ttu-id="8c513-210">대부분의 클라이언트 시나리오에서 사용 해야는 <xref:System.Net.CredentialCache.DefaultCredentials%2A>, 현재 로그온된 한 사용자의 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-210">In most client scenarios, you should use the <xref:System.Net.CredentialCache.DefaultCredentials%2A>, which are the credentials of the currently logged on user.</span></span> <span data-ttu-id="8c513-211">이 위해 설정 된 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 속성을 `true` 이 속성을 설정 하는 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-211">To do this, set the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true` instead of setting this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c513-212">설정 하는 경우는 <xref:System.Net.WebProxy.Credentials%2A> 속성 이외의 다른 자격 증명을를 <xref:System.Net.CredentialCache.DefaultCredentials%2A>설정 합니다 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 속성을 `true` 하면는 <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8c513-212">If you set the <xref:System.Net.WebProxy.Credentials%2A> property to credentials other than the <xref:System.Net.CredentialCache.DefaultCredentials%2A>, setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true` causes a <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8c513-213">이 방지 하려면 설정 해야 합니다 <xref:System.Net.WebProxy.Credentials%2A> 속성을 `null` 설정 하기 전에 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-213">To prevent this, you must set the <xref:System.Net.WebProxy.Credentials%2A> property to `null` before setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true`.</span></span> <span data-ttu-id="8c513-214">이 속성에 설정할 수 없습니다 마찬가지로 값 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 는 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-214">Likewise, you cannot set this property to any value when <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c513-215"><see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> 속성이 <see langword="true" />로 설정되어 있을 때 이 속성을 설정하려고 했습니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-215">You attempted to set this property when the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> property was set to <see langword="true" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProxy">
      <MemberSignature Language="C#" Value="public static System.Net.WebProxy GetDefaultProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebProxy GetDefaultProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetDefaultProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProxy () As WebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebProxy ^ GetDefaultProxy();" />
      <MemberSignature Language="F#" Value="static member GetDefaultProxy : unit -&gt; System.Net.WebProxy" Usage="System.Net.WebProxy.GetDefaultProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use the proxy selected for you by default. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use the proxy selected for you by default. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c513-216">Internet Explorer 비동적 프록시 설정을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-216">Reads the Internet Explorer nondynamic proxy settings.</span></span></summary>
        <returns><span data-ttu-id="8c513-217">Internet Explorer 5.5 이상에서 비동적 프록시 설정이 들어 있는 <see cref="T:System.Net.WebProxy" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-217">A <see cref="T:System.Net.WebProxy" /> instance that contains the nondynamic proxy settings from Internet Explorer 5.5 and later.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-218">합니다 <xref:System.Net.WebProxy.GetDefaultProxy%2A> 메서드 저장 Internet Explorer 5.5 이상에서 비동적 프록시 설정을 읽고 만듭니다는 <xref:System.Net.WebProxy> 이러한 설정 사용 하 여 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="8c513-218">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method reads the nondynamic proxy settings stored by Internet Explorer 5.5 and later, and creates a <xref:System.Net.WebProxy> instance with those settings.</span></span>  
  
 <span data-ttu-id="8c513-219"><xref:System.Net.WebProxy.GetDefaultProxy%2A> 메서드는 Internet Explorer에서 실행 된 스크립트, 자동 구성 항목 또는 DHCP 또는 DNS 조회에서 생성 되는 모든 동적 설정을 선택 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-219">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method does not pick up any dynamic settings that are generated from scripts run by Internet Explorer, from automatic configuration entries, or from DHCP or DNS lookups.</span></span>  
  
 <span data-ttu-id="8c513-220">애플리케이션 사용 해야 합니다 <xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=nameWithType> 속성 및 <xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=nameWithType> 메서드 대신는 <xref:System.Net.WebProxy.GetDefaultProxy%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8c513-220">Applications should use the <xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=nameWithType> property and the <xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=nameWithType> method instead of the <xref:System.Net.WebProxy.GetDefaultProxy%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-221">다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-221">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLWebProxy#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#11)]
 [!code-csharp[NCLWebProxy#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="8c513-222">네트워크 리소스에 무제한 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-222">for unrestricted access to network resources.</span></span> <span data-ttu-id="8c513-223">연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-223">Associated Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webProxy.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="8c513-224">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-224">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="8c513-225">이 serialization의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-225">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="8c513-226">대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-226">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data that is needed to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-227">에 포함 된 모든 개체는 <xref:System.Runtime.Serialization.SerializationInfo> 자동으로 추적 되 고 포맷터가 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-227">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxy">
      <MemberSignature Language="C#" Value="public Uri GetProxy (Uri destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GetProxy(class System.Uri destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetProxy(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxy (destination As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ GetProxy(Uri ^ destination);" />
      <MemberSignature Language="F#" Value="abstract member GetProxy : Uri -&gt; Uri&#xA;override this.GetProxy : Uri -&gt; Uri" Usage="webProxy.GetProxy destination" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.IWebProxy.GetProxy(System.Uri)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="8c513-228">요청된 인터넷 리소스의 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-228">The <see cref="T:System.Uri" /> instance of the requested Internet resource.</span></span></param>
        <summary><span data-ttu-id="8c513-229">요청에 대한 프록시된 URI를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-229">Returns the proxied URI for a request.</span></span></summary>
        <returns><span data-ttu-id="8c513-230">리소스가 사용 안 함 목록에 있으면 인터넷 리소스의 <see cref="T:System.Uri" /> 인스턴스이고, 그렇지 않으면 프록시의 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-230">The <see cref="T:System.Uri" /> instance of the Internet resource, if the resource is on the bypass list; otherwise, the <see cref="T:System.Uri" /> instance of the proxy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-231">합니다 <xref:System.Net.WebProxy.GetProxy%2A> 메서드는 URI를 반환 합니다 <xref:System.Net.WebRequest> 인스턴스 사용 하 여 인터넷 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-231">The <xref:System.Net.WebProxy.GetProxy%2A> method returns the URI that the <xref:System.Net.WebRequest> instance uses to access the Internet resource.</span></span>  
  
 <span data-ttu-id="8c513-232"><xref:System.Net.WebProxy.GetProxy%2A> 비교 `destination` 의 콘텐츠로 <xref:System.Net.WebProxy.BypassList%2A>를 사용 하 여는 <xref:System.Net.WebProxy.IsBypassed%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8c513-232"><xref:System.Net.WebProxy.GetProxy%2A> compares `destination` with the contents of <xref:System.Net.WebProxy.BypassList%2A>, using the <xref:System.Net.WebProxy.IsBypassed%2A> method.</span></span> <span data-ttu-id="8c513-233">하는 경우 <xref:System.Net.WebProxy.IsBypassed%2A> 반환 `true`를 <xref:System.Net.WebProxy.GetProxy%2A> 반환 `destination` 및 <xref:System.Net.WebRequest> 인스턴스가 프록시 서버를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-233">If <xref:System.Net.WebProxy.IsBypassed%2A> returns `true`, <xref:System.Net.WebProxy.GetProxy%2A> returns `destination` and the <xref:System.Net.WebRequest> instance does not use the proxy server.</span></span>  
  
 <span data-ttu-id="8c513-234">하는 경우 `destination` 아닙니다 <xref:System.Net.WebProxy.BypassList%2A>의 <xref:System.Net.WebRequest> 프록시 서버를 사용 하는 인스턴스 및 <xref:System.Net.WebProxy.Address%2A> 속성이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-234">If `destination` is not in <xref:System.Net.WebProxy.BypassList%2A>, the <xref:System.Net.WebRequest> instance uses the proxy server and the <xref:System.Net.WebProxy.Address%2A> property is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-235">다음 코드 예제는 <xref:System.Net.WebProxy> 개체 및 리소스에 대해 선택 되어 있는 프록시를 가져오려면이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-235">The following code example creates a <xref:System.Net.WebProxy> object and calls this method to get the proxy that is selected for a resource.</span></span>  
  
 [!code-cpp[NCLAutoProxy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#2)]
 [!code-csharp[NCLAutoProxy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c513-236"><paramref name="destination" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8c513-236">The <paramref name="destination" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsBypassed">
      <MemberSignature Language="C#" Value="public bool IsBypassed (Uri host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBypassed(class System.Uri host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.IsBypassed(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBypassed (host As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBypassed(Uri ^ host);" />
      <MemberSignature Language="F#" Value="abstract member IsBypassed : Uri -&gt; bool&#xA;override this.IsBypassed : Uri -&gt; bool" Usage="webProxy.IsBypassed host" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.IWebProxy.IsBypassed(System.Uri)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="8c513-237">프록시 사용 여부를 확인할 호스트의 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-237">The <see cref="T:System.Uri" /> instance of the host to check for proxy use.</span></span></param>
        <summary><span data-ttu-id="8c513-238">지정된 호스트에 프록시 서버를 사용할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-238">Indicates whether to use the proxy server for the specified host.</span></span></summary>
        <returns><span data-ttu-id="8c513-239">프록시 서버를 <paramref name="host" />로 사용하지 말아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-239"><see langword="true" /> if the proxy server should not be used for <paramref name="host" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-240"><xref:System.Net.WebProxy.IsBypassed%2A> 메서드를 사용 하는 인터넷 리소스에 액세스할 때 프록시 서버를 무시할 것인지 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-240">The <xref:System.Net.WebProxy.IsBypassed%2A> method is used to determine whether to bypass the proxy server when accessing an Internet resource.</span></span>  
  
 <span data-ttu-id="8c513-241"><xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 하 고 <xref:System.Net.WebProxy.BypassList%2A> 의 반환 값을 제어 하는 속성을 <xref:System.Net.WebProxy.IsBypassed%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8c513-241">The <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> and <xref:System.Net.WebProxy.BypassList%2A> properties control the return value of the <xref:System.Net.WebProxy.IsBypassed%2A> method.</span></span>  
  
 <span data-ttu-id="8c513-242"><xref:System.Net.WebProxy.IsBypassed%2A> 반환 `true` 다음 조건 중 하나에서:</span><span class="sxs-lookup"><span data-stu-id="8c513-242"><xref:System.Net.WebProxy.IsBypassed%2A> returns `true` under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="8c513-243">하는 경우 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 됩니다 `true` 및 `host` 로컬 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-243">If <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `true` and `host` is a local URI.</span></span> <span data-ttu-id="8c513-244">로컬 요청에서와 같이 부족이 uri에서 마침표 (.)으로 식별 됩니다 "http://webserver/"입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-244">Local requests are identified by the lack of a period (.) in the URI, as in "http://webserver/".</span></span>  
  
-   <span data-ttu-id="8c513-245">하는 경우 `host` 에서 정규식과 일치 <xref:System.Net.WebProxy.BypassList%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-245">If `host` matches a regular expression in <xref:System.Net.WebProxy.BypassList%2A>.</span></span>  
  
-   <span data-ttu-id="8c513-246"><xref:System.Net.WebProxy.Address%2A>이 `null`인 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-246">If <xref:System.Net.WebProxy.Address%2A> is `null`.</span></span>  
  
 <span data-ttu-id="8c513-247">다른 모든 경우 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-247">All other conditions return `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c513-248">다음 코드 예제는 <xref:System.Net.WebProxy> 개체 하 고 바이패스 목록에는 제대로 설정 되었는지 여부를 확인 하려면이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-248">The following code example creates a <xref:System.Net.WebProxy> object and calls this method to check whether the bypass list is properly set.</span></span>  
  
 [!code-cpp[NCLWebProxy#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#12)]
 [!code-csharp[NCLWebProxy#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c513-249"><paramref name="host" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8c513-249">The <paramref name="host" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="8c513-250">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-250">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="8c513-251">이 serialization의 대상을 나타내는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-251">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that indicates the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="8c513-252">시스템에서 <see cref="T:System.Net.WebProxy" /> 개체를 serialize하는 데 사용하는 serialization 데이터 및 컨텍스트를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-252">Creates the serialization data and context that are used by the system to serialize a <see cref="T:System.Net.WebProxy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-253">시스템 개체를 serialize 할이 메서드를 호출 합니다. 애플리케이션 않습니다 메서드를 직접 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-253">The system calls this method to serialize an object; applications do not call it directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebProxy.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c513-254">요청에 <see cref="T:System.Boolean" />을 보낼지 여부를 제어하는 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-254">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</span></span></summary>
        <value><span data-ttu-id="8c513-255">기본 자격 증명이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-255"><see langword="true" /> if the default credentials are used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8c513-256">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-256">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c513-257">이 속성을 설정 `true` 에서이 요청을 수행 하는 경우 <xref:System.Net.WebProxy> 개체, 서버에서 요청 하는 경우 인증 해야 현재 로그온된 한 사용자의 자격 증명을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-257">Set this property to `true` when requests made by this <xref:System.Net.WebProxy> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="8c513-258">클라이언트 애플리케이션에 대 한 대부분의 시나리오에 필요한 동작은 이것이입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-258">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="8c513-259">이 속성을 사용 하는 대신 ASP.NET 애플리케이션과 같은 중간 계층 애플리케이션에 대 한 일반적으로 설정 된 <xref:System.Net.WebProxy.Credentials%2A> 속성 대신 요청 클라이언트의 자격 증명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-259">For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.WebProxy.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 <span data-ttu-id="8c513-260">다음 표에서 설정의 효과 보여 줍니다.는 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 의 값을 기반으로 값을 <xref:System.Net.WebProxy.Credentials%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-260">The following table shows the effect of setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> value, based on the value of the <xref:System.Net.WebProxy.Credentials%2A> property.</span></span>  
  
|<span data-ttu-id="8c513-261"><xref:System.Net.WebProxy.Credentials%2A> 값</span><span class="sxs-lookup"><span data-stu-id="8c513-261"><xref:System.Net.WebProxy.Credentials%2A> value</span></span>|<span data-ttu-id="8c513-262"><xref:System.Net.WebProxy.UseDefaultCredentials%2A> 값</span><span class="sxs-lookup"><span data-stu-id="8c513-262"><xref:System.Net.WebProxy.UseDefaultCredentials%2A> value</span></span>|<span data-ttu-id="8c513-263">효과</span><span class="sxs-lookup"><span data-stu-id="8c513-263">Effect</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|  
|<xref:System.Net.CredentialCache.DefaultCredentials%2A>|`true`|<span data-ttu-id="8c513-264">영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-264">No effect.</span></span>|  
|<xref:System.Net.CredentialCache.DefaultCredentials%2A>|`false`|<span data-ttu-id="8c513-265"><xref:System.Net.WebProxy.Credentials%2A>이 `null`로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-265"><xref:System.Net.WebProxy.Credentials%2A> is set to `null`.</span></span>|  
|`null`|`true`|<span data-ttu-id="8c513-266"><xref:System.Net.WebProxy.Credentials%2A>이 <xref:System.Net.CredentialCache.DefaultCredentials%2A>로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-266"><xref:System.Net.WebProxy.Credentials%2A> is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span>|  
|<span data-ttu-id="8c513-267">이외의 모든 값 <xref:System.Net.CredentialCache.DefaultCredentials%2A> 또는 `null`</span><span class="sxs-lookup"><span data-stu-id="8c513-267">Any value other than <xref:System.Net.CredentialCache.DefaultCredentials%2A> or `null`</span></span>|<span data-ttu-id="8c513-268">`true` 또는 `false`</span><span class="sxs-lookup"><span data-stu-id="8c513-268">`true` or `false`</span></span>|<span data-ttu-id="8c513-269">설정 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-269">Setting <xref:System.Net.WebProxy.UseDefaultCredentials%2A> throws an exception.</span></span>|  
  
 <span data-ttu-id="8c513-270">경우 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 됩니다 `false`를 변경할 수 있습니다는 <xref:System.Net.WebProxy.Credentials%2A> 속성 자격 증명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-270">If <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `false`, you can change the <xref:System.Net.WebProxy.Credentials%2A> property to any credentials.</span></span> <span data-ttu-id="8c513-271">경우 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 는 `true`변경는 <xref:System.Net.WebProxy.Credentials%2A> 속성을 <xref:System.Net.CredentialCache.DefaultCredentials%2A> (때 설정 된 값을 <xref:System.Net.WebProxy.UseDefaultCredentials%2A> 속성 `true`) 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8c513-271">If <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `true`, changing the <xref:System.Net.WebProxy.Credentials%2A> property from <xref:System.Net.CredentialCache.DefaultCredentials%2A> (the value that is set when the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property is set to `true`) will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c513-272"><see cref="P:System.Net.WebProxy.Credentials" /> 속성에 기본 자격 증명 이외의 자격 증명이 들어 있을 때 이 속성을 설정하려고 한 경우.</span><span class="sxs-lookup"><span data-stu-id="8c513-272">You attempted to set this property when the <see cref="P:System.Net.WebProxy.Credentials" /> property contains credentials other than the default credentials.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>