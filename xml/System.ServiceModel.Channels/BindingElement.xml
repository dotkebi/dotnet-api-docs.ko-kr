<Type Name="BindingElement" FullName="System.ServiceModel.Channels.BindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6730b0b96c969b751a68cbfeda96b75008ae2520" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56777031" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingElement abstract" />
  <TypeSignature Language="F#" Value="type BindingElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="43055-101">보내는 메시지와 들어오는 메시지를 처리하는 데 사용되는 다양한 형식의 채널에 대한 채널 팩터리 및 채널 수신기를 생성하는 바인딩 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-101">The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43055-102">바인딩은 이 추상 기본 클래스에서 상속된 바인딩 요소 집합으로 구성되며 이러한 바인딩 요소는 순서가 지정되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-102">A binding consists of an ordered set of binding elements that inherit from this abstract base class.</span></span>  <span data-ttu-id="43055-103"><xref:System.ServiceModel.Channels.TransportBindingElement> 클래스는 <xref:System.ServiceModel.Channels.BindingElement> 클래스에서 상속합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-103">The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.</span></span>  
  
 <span data-ttu-id="43055-104">채널 모델을 사용할 경우 전송에 대한 바인딩 및 바인딩 요소를 선택적으로 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-104">Creating a binding and binding element for your transport is optional if you are just using the channel model.</span></span> <span data-ttu-id="43055-105">채널 팩터리 및 수신기가 public으로 만들어진 경우 이를 통해 필요한 모든 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-105">It is possible to do everything you need through the channel factory and listener as long as they are made public.</span></span>  
  
 <span data-ttu-id="43055-106">Windows Communication Foundation (WCF) 서비스 모델 바인딩이 채널 스택을 만드는 데 사용 되는 위치는 팩터리 패턴을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-106">The Windows Communication Foundation (WCF) service model uses a factory pattern where the binding is used to create the channel stack.</span></span> <span data-ttu-id="43055-107">WCF 서비스 모델을 사용 하려는 경우 필요 그런 다음 전송 바인딩 요소를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-107">If you want to use the WCF service model, then using a transport binding element is required.</span></span> <span data-ttu-id="43055-108">이 바인딩 요소를 바인딩에 추가하면 전송을 위해 사용자 지정 바인딩을 만들 필요가 없으므로 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-108">Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</span></span> <span data-ttu-id="43055-109">바인딩과 바인딩 요소를 만들고 어셈블리 내부에 채널 팩터리와 수신기를 숨기는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-109">It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</span></span>  
  
 <span data-ttu-id="43055-110">보내는 쪽에서는 바인딩을 사용하여 <xref:System.ServiceModel.Channels.IChannelFactory>를 만들며 이를 통해 채널 스택을 차례로 만들고 스택의 맨 위 채널에 대한 참조를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-110">On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</span></span> <span data-ttu-id="43055-111">그러면 애플리케이션에서 이 채널을 사용하여 메시지를 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-111">The application can then use this channel to send messages.</span></span>  
  
 <span data-ttu-id="43055-112">마찬가지로 받는 쪽에서는 바인딩을 사용하여 <xref:System.ServiceModel.Channels.IChannelListener>를 생성하며 이를 통해 들어오는 메시지를 수신 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-112">Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages.</span></span> <span data-ttu-id="43055-113"><xref:System.ServiceModel.Channels.IChannelListener>는 채널 스택을 만들고 맨 위 채널에 대한 참조를 애플리케이션에 전달함으로써 수신 대기 애플리케이션에 메시지를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-113">The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</span></span> <span data-ttu-id="43055-114">그러면 애플리케이션에서 이 채널을 사용하여, 들어오는 메시지를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-114">The application then uses this channel to receive incoming messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43055-115">암호화해야 하는 메시지 헤더를 추가할 경우 <xref:System.ServiceModel.Security.ChannelProtectionRequirements>가 요청되면 해당 요구 사항을 포함하는 <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> 인스턴스를 <xref:System.ServiceModel.Security.ChannelProtectionRequirements> 메서드로부터 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-115">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43055-116">다음 예제에서는 사용자 지정 바인딩에 전송 바인딩 요소를 추가한 다음 들어오는 메시지를 수락할 수 있는 채널 수신기를 생성하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="43055-116">The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</span></span>  
  
 [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]
 [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43055-117"><see cref="T:System.ServiceModel.Channels.BindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43055-118"><see cref="T:System.ServiceModel.Channels.BindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.BindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement(System::ServiceModel::Channels::BindingElement ^ elementToBeCloned);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.BindingElement : System.ServiceModel.Channels.BindingElement -&gt; System.ServiceModel.Channels.BindingElement" Usage="new System.ServiceModel.Channels.BindingElement elementToBeCloned" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned"><span data-ttu-id="43055-119">복제할 <see cref="T:System.ServiceModel.Channels.BindingElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-119">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="43055-120">지정된 바인딩 요소에서 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;&#xA;override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="bindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="43055-121">팩터리가 생성하는 채널의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-121">The type of channel the factory builds.</span></span></typeparam>
        <param name="context"><span data-ttu-id="43055-122">바인딩 요소의 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-122">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="43055-123">바인딩 컨텍스트를 사용하여 지정된 형식의 채널을 생성하는 채널 팩터리를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-123">Initializes a channel factory for producing channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="43055-124"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />에서 초기화되는 <paramref name="TChannel" /> 형식의 <paramref name="context" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-124">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43055-125"><paramref name="context" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-125"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="43055-126">수락할 수신기를 생성하는 채널의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-126">The type of channel the listener is built to accept.</span></span></typeparam>
        <param name="context"><span data-ttu-id="43055-127">바인딩 요소의 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-127">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="43055-128">바인딩 컨텍스트를 사용하여 지정된 형식의 채널을 수락하기 위해 채널 수신기를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-128">Initializes a channel listener to accept channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="43055-129"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" />에서 초기화되는 <see cref="T:System.ServiceModel.Channels.IChannel" /> 형식의 <paramref name="context" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-129">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43055-130"><paramref name="context" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-130"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool&#xA;override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="bindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="43055-131">채널 팩터리에서 생성하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-131">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="context"><span data-ttu-id="43055-132">바인딩 요소의 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-132">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="43055-133">바인딩 요소에서 특정 채널 형식에 대한 채널 팩터리를 만들 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-133">Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</span></span></summary>
        <returns><span data-ttu-id="43055-134">바인딩 요소에서 <see langword="true" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />를 만들 수 있으면 <paramref name="TChannel" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-134"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43055-135">팩터리를 생성하기 전에 제공된 `TChannel`를 사용하여 `context` 형식의 채널에 대한 채널 팩터리를 만들 수 있는지 여부를 확인하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-135">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory.</span></span> <span data-ttu-id="43055-136">또는 <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A>를 호출하여 채널 팩터리를 만들어 보고 만들 수 없는 경우 생성되는 예외를 catch할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-136">Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43055-137"><paramref name="context" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-137"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="43055-138">수신기가 수락하는 채널의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-138">The type of channel the listener accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="43055-139">바인딩 요소의 컨텍스트를 제공하는 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-139">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="43055-140">바인딩 요소에서 특정 채널 형식에 대한 수신기를 만들 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-140">Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</span></span></summary>
        <returns><span data-ttu-id="43055-141">바인딩 요소에서 <see langword="true" /> 형식의 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" />를 만들 수 있으면 <see cref="T:System.ServiceModel.Channels.IChannel" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-141"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43055-142">수신기를 실제로 생성하기 전에 제공된 `TChannel`를 사용하여 `context` 형식의 채널에 대한 채널 수신기를 만들 수 있는지 여부를 확인하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-142">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener.</span></span> <span data-ttu-id="43055-143">또는 <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A>를 호출하여 채널 팩터리를 만들어 보고 만들 수 없는 경우 생성되는 예외를 catch할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-143">Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43055-144"><paramref name="context" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-144"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="bindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43055-145">파생 클래스에서 재정의되는 경우 바인딩 요소 개체의 복사본을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-145">When overridden in a derived class, returns a copy of the binding element object.</span></span></summary>
        <returns><span data-ttu-id="43055-146">원본의 전체 복제본인 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-146">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43055-147"><xref:System.ServiceModel.Channels.BindingElement.Clone%2A> 메서드를 구현하여 바인딩 요소의 전체 복제본을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-147">Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element.</span></span> <span data-ttu-id="43055-148">복제를 반환하면 런타임에서 여러 개의 사용자 지정 바인딩이 하나의 사용자 지정 바인딩 요소를 공유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-148">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="43055-149">복제가 반환되지 않으면 런타임 동작이 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43055-149">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="43055-150">이와 반대로 개체의 전체 복제는 개체와, 개체에서 직접 또는 간접 참조하는 모든 대상을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-150">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="43055-151">이를 전체 개체 그래프 복사라고도 합니다. 반대로 개체의 단순 복제는 개체만 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-151">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="43055-152">개체에 다른 개체에 대한 참조가 포함된 경우 단순 복사는 참조된 개체의 복사본을 만들지 않고 대신 원본 개체에 대한 참조만 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-152">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class abstract T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="bindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="43055-153">메서드에서 쿼리하고 있는 형식화된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-153">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="43055-154">바인딩 요소의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-154">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span></span></param>
        <summary><span data-ttu-id="43055-155">파생 클래스에서 재정의되는 경우 요청한 형식화된 개체가 있으면 바인딩 스택의 해당 계층에서 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-155">When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="43055-156">요청한 형식화된 개체 <paramref name="T" />가 있으면 해당 개체이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43055-156">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not present.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43055-157">바인딩 요소 스택에서 기능, 요구 사항 및 매개 변수를 검색하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-157">Use this to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="43055-158">바인딩 요소가 요청된 개체의 반환을 지원하면 해당 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="43055-159">그렇지 않으면 스택의 다음 바인딩 요소에 호출을 위임합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="43055-160">스택의 맨 아래에 도달할 때까지 요청된 개체를 지원하는 바인딩 요소가 없으면 메서드는 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-160">If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43055-161">암호화해야 하는 메시지 헤더를 추가할 경우 <xref:System.ServiceModel.Security.ChannelProtectionRequirements>가 요청되면 해당 요구 사항을 포함하는 <xref:System.ServiceModel.Security.ChannelProtectionRequirements> 인스턴스를 이 메서드로부터 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43055-161">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>