<Type Name="RequestContext" FullName="System.ServiceModel.Channels.RequestContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9650bbdea576ed0678ad1b137d6b0adcef8d0d4" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56792332" /></Metadata><TypeSignature Language="C#" Value="public abstract class RequestContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RequestContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.RequestContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RequestContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestContext abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type RequestContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8fcb8-101">들어오는 요청과 상호 관련된 회신을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-101">Provides a reply that is correlated to an incoming request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcb8-102"><xref:System.ServiceModel.Channels.IReplyChannel>에서 요청 컨텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-102">You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span> <span data-ttu-id="8fcb8-103">각 <xref:System.ServiceModel.Channels.RequestContext>가 요청에 회신하는 데 필요한 정보를 캡슐화하므로, 각 요청 메시지가 회신을 대기할 때 채널을 차단할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-103">Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.</span></span>  
  
 <span data-ttu-id="8fcb8-104">요청/회신 모델에서 <xref:System.ServiceModel.Channels.RequestContext> 개체는 들어오는 요청과 나가는 회신 간의 링크입니다. 서버는 요청을 수신하면 채널에 요청을 전달하는 <xref:System.ServiceModel.Channels.RequestContext> 인스턴스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-104">In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel.</span></span> <span data-ttu-id="8fcb8-105">요청 컨텍스트에는 다른 유용한 속성과 함께 원본 요청 메시지가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-105">The request context contains the original request message among other useful properties.</span></span> <span data-ttu-id="8fcb8-106">그런 다음 이 요청은 서비스에서 검색할 수 있도록 <xref:System.ServiceModel.OperationContext>에 보관됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-106">This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service.</span></span> <span data-ttu-id="8fcb8-107">일반적으로 <xref:System.ServiceModel.OperationContext.Current%2A> 속성을 사용하여 현재 작업에 대한 요청에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-107">You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.</span></span>  
  
 <span data-ttu-id="8fcb8-108"><xref:System.ServiceModel.Channels.RequestContext> 값은 `null`이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-108">The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`.</span></span> <span data-ttu-id="8fcb8-109">요청 컨텍스트는 요청을 회신에 연결하는 역할을 하기 때문에 회신하지 않을 때는 요청 컨텍스트를 사용하는 의미가 없습니다. 따라서 이 경우 컨텍스트가 `null`로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-109">Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`.</span></span> <span data-ttu-id="8fcb8-110">요청/회신 모델에서 단방향 작업을 수행하는 경우 서버는 요청을 수신하지만 클라이언트에 응답을 돌려 보내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-110">For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client.</span></span> <span data-ttu-id="8fcb8-111">따라서 예기치 않게 <xref:System.ServiceModel.Channels.RequestContext>가 `null`인 경우 먼저 작업 계약이 IsOneWay인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-111">So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay.</span></span>  
  
 <span data-ttu-id="8fcb8-112">이 클래스에서 파생된 Managed C++ 사용자 관련 참고 사항:</span><span class="sxs-lookup"><span data-stu-id="8fcb8-112">Special note for Managed C++ users deriving from this class:</span></span>  
  
-   <span data-ttu-id="8fcb8-113">소멸자가 아니라 (On)(Begin)Close 및/또는 OnAbort에 정리 코드를 입력하십시오.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-113">Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</span></span>  
  
-   <span data-ttu-id="8fcb8-114">소멸자를 사용하지 마십시오. 소멸자를 사용하면 컴파일러에서 <xref:System.IDisposable>을 자동으로 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-114">Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>.</span></span>  
  
-   <span data-ttu-id="8fcb8-115">비참조 멤버를 사용하지 마십시오. 비참조 멤버를 사용하면 컴파일러에서 <xref:System.IDisposable>을 자동으로 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-115">Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>.</span></span>  
  
-   <span data-ttu-id="8fcb8-116">종료자를 사용하지 마십시오. 그러나 종료자를 포함하는 경우 자동으로 생성되는 <xref:System.GC.SuppressFinalize%28System.Object%29> 동작을 에뮬레이트하기 위해 빌드 경고를 표시하지 않고 (On)(Begin)Close 및/또는 OnAbort에서 <xref:System.IDisposable> 및 해당 종료자를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-116">Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RequestContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RequestContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fcb8-117"><see cref="T:System.ServiceModel.Channels.RequestContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.RequestContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Abort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="requestContext.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fcb8-118">파생 클래스에서 재정의되는 경우 컨텍스트와 연결된 요청에 대한 처리를 중단합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-118">When overridden in a derived class, aborts processing the request associated with the context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReply">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fcb8-119">현재 컨텍스트와 연결된 요청에 회신하는 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-119">Begins an asynchronous operation to reply to the request associated with the current context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcb8-120">동기 작업은 명시적 시간 제한과 상관없이 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-120">The asynchronous operation is available with or without an explicit time-out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReply">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReply(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginReply(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReply : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="requestContext.BeginReply (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8fcb8-121">요청이 포함된 들어오는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-121">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></param>
        <param name="callback"><span data-ttu-id="8fcb8-122">비동기 회신 작업의 완료에 대한 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="8fcb8-123">애플리케이션에 의해 지정되는 개체로, 비동기 회신 작업과 연결된 상태 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-123">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</span></span></param>
        <summary><span data-ttu-id="8fcb8-124">파생 클래스에서 재정의되는 경우 현재 컨텍스트와 연결된 요청에 회신하는 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-124">When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.</span></span></summary>
        <returns><span data-ttu-id="8fcb8-125">비동기 회신 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcb8-126">대기하지 않고 애플리케이션 처리를 계속해야 하는 경우 비동기 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-126">Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting.</span></span> <span data-ttu-id="8fcb8-127">요청 메시지에 응답하는 동안 또는 시간 제한 간격을 초과할 때까지 현재 스레드를 차단할 수 있는 경우 동기 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> 메서드 중 하나를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-127">Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</span></span>  
  
 <span data-ttu-id="8fcb8-128">이 메서드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-128">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="8fcb8-129">이 작업은 회신을 보내거나 시간 제한이 발생해야 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-129">The operation is not complete until either the reply is sent or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fcb8-130">작업을 완료하기 전에 지정된 <see cref="T:System.TimeoutException" />이 초과되면 작업에서 <paramref name="timeout" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-130">The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginReply">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReply(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginReply(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReply : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="requestContext.BeginReply (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8fcb8-131">요청이 포함된 들어오는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-131">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></param>
        <param name="timeout"><span data-ttu-id="8fcb8-132">사용 가능한 요청의 회신을 대기할 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to an available request.</span></span></param>
        <param name="callback"><span data-ttu-id="8fcb8-133">비동기 회신 작업의 완료에 대한 알림을 받는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-133">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</span></span></param>
        <param name="state"><span data-ttu-id="8fcb8-134">애플리케이션에 의해 지정되는 개체로, 비동기 회신 작업과 연결된 상태 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-134">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</span></span></param>
        <summary><span data-ttu-id="8fcb8-135">파생 클래스에서 재정의되는 경우 지정된 기간 내에 현재 컨텍스트와 연결된 요청에 회신하는 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-135">When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="8fcb8-136">비동기 회신 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-136">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcb8-137">요청 완료를 대기하지 않고 애플리케이션 처리를 계속하도록 허용하려면 비동기 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-137">Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete.</span></span>  
  
 <span data-ttu-id="8fcb8-138">요청 메시지에 응답하는 동안 또는 시간 제한 간격을 초과할 때까지 현재 스레드를 차단할 수 있는 경우 동기 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> 메서드 중 하나를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-138">Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</span></span> <span data-ttu-id="8fcb8-139">이 메서드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-139">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="8fcb8-140">이 작업은 회신을 보내거나 시간 제한이 발생해야 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-140">The operation is not complete until either the reply is sent or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fcb8-141">작업을 완료하기 전에 지정된 <see cref="T:System.TimeoutException" />이 초과되면 작업에서 <paramref name="timeout" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-141">The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fcb8-142">현재 컨텍스트와 연결된 요청 컨텍스트에 회신하는 작업을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-142">Closes the operation that is replying to the request context associated with the current context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="requestContext.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fcb8-143">파생 클래스에서 재정의되는 경우 현재 컨텍스트와 연결된 요청 컨텍스트에 회신하는 작업을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-143">When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="requestContext.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8fcb8-144">현재 컨텍스트에 연결된 회신 작업을 닫아야 하는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-144">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the reply operation associated with the current context must close.</span></span></param>
        <summary><span data-ttu-id="8fcb8-145">파생 클래스에서 재정의되는 경우 지정된 기간 내에 현재 컨텍스트와 연결된 요청 컨텍스트에 회신하는 작업을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-145">When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fcb8-146">작업을 완료하기 전에 지정된 <see cref="T:System.TimeoutException" />이 초과되면 작업에서 <paramref name="timeout" />을 throw해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-146">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="requestContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8fcb8-147">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-147"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8fcb8-148">컨텍스트와 연결된 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-148">Releases resources associated with the context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReply">
      <MemberSignature Language="C#" Value="public abstract void EndReply (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReply(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndReply (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndReply(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReply : IAsyncResult -&gt; unit" Usage="requestContext.EndReply result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="8fcb8-149"><see cref="T:System.IAsyncResult" /> 메서드 중 하나를 호출하면 반환되는 <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-149">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> methods.</span></span></param>
        <summary><span data-ttu-id="8fcb8-150">파생 클래스에서 재정의되는 경우 요청 메시지에 회신하는 비동기 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-150">When overridden in a derived class, completes an asynchronous operation to reply to a request message.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reply">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fcb8-151">요청 메시지에 회신합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-151">Replies to a request message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public abstract void Reply (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reply(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Reply : System.ServiceModel.Channels.Message -&gt; unit" Usage="requestContext.Reply message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8fcb8-152">요청이 포함된 들어오는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-152">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></param>
        <summary><span data-ttu-id="8fcb8-153">파생 클래스에서 재정의되는 경우 요청 메시지에 회신합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-153">When overridden in a derived class, replies to a request message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcb8-154">요청 메시지에 회신하는 동안 현재 스레드를 차단하는 것이 허용되는 경우 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-154">Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message.</span></span> <span data-ttu-id="8fcb8-155">지정된 `timeout`까지 스레드가 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-155">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="8fcb8-156">회신이 완료되는 동안 대기하지 않고 애플리케이션 처리를 계속하려면 비동기 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-156">If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method.</span></span> <span data-ttu-id="8fcb8-157">이 메서드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-157">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="8fcb8-158">이 작업은 채널에서 메시지를 사용할 수 있거나 시간 초과가 발생해야 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-158">The operation is not complete until either a message becomes available in the channel or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public abstract void Reply (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reply(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Reply : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="requestContext.Reply (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8fcb8-159">요청이 포함된 들어오는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-159">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></param>
        <param name="timeout"><span data-ttu-id="8fcb8-160">요청에 회신하는 동안 대기할 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-160">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to a request.</span></span></param>
        <summary><span data-ttu-id="8fcb8-161">파생 클래스에서 재정의되는 경우 지정된 기간 내에 요청 메시지에 회신합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-161">When overridden in a derived class, replies to a request message within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fcb8-162">요청 메시지에 회신하는 동안 현재 스레드를 차단하는 것이 허용되는 경우 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-162">Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message.</span></span> <span data-ttu-id="8fcb8-163">지정된 `timeout`까지 스레드가 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-163">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="8fcb8-164">회신이 완료되는 동안 대기하지 않고 애플리케이션 처리를 계속하려면 비동기 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-164">If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method.</span></span> <span data-ttu-id="8fcb8-165">이 메서드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-165">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="8fcb8-166">이 작업은 채널에서 메시지를 사용할 수 있거나 시간 초과가 발생해야 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-166">The operation is not complete until either a message becomes available in the channel or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message RequestMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Message RequestMessage" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.RequestContext.RequestMessage" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequestMessage As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::Message ^ RequestMessage { System::ServiceModel::Channels::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestMessage : System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.RequestContext.RequestMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fcb8-167">파생 클래스에서 재정의되는 경우 요청을 포함하는 메시지를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-167">When overridden in a derived class, gets the message that contains the request.</span></span></summary>
        <value><span data-ttu-id="8fcb8-168">요청을 포함하는 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-168">The <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fcb8-169">컨텍스트와 연결된 관리되는 리소스와 관리되지 않는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="8fcb8-169">Releases both managed and unmanaged resources associated with the context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>