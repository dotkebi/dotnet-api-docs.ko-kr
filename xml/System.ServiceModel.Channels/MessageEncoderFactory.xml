<Type Name="MessageEncoderFactory" FullName="System.ServiceModel.Channels.MessageEncoderFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c41e350aba1c28c7ef4d4aeed0cd881d67c0ea6" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56788211" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageEncoderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageEncoderFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MessageEncoderFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageEncoderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageEncoderFactory abstract" />
  <TypeSignature Language="F#" Value="type MessageEncoderFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="757f9-101">다양한 메시지 인코딩 형식의 스트림에서 메시지를 읽고 쓸 수 있는 메시지 인코더를 생성하기 위한 팩터리를 나타내는 추상 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-101">An abstract base class that represents the factory for producing message encoders that can read messages from a stream and write them to a stream for various types of message encoding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="757f9-102">인코딩은 메시지를 바이트 시퀀스로 변형하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-102">Encoding is the process of transforming a message into a sequence of bytes.</span></span> <span data-ttu-id="757f9-103">디코딩은 역프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-103">Decoding is the reverse process.</span></span>  
  
 <span data-ttu-id="757f9-104">사용자 지정 메시지 인코더를 구현하려면 이 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-104">Use this class if you want to implement a custom message encoder.</span></span> <span data-ttu-id="757f9-105">사용자 지정 메시지 인코더를 구현하려면 다음 세 가지 추상 기본 클래스에 대한 사용자 지정 구현을 제공해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-105">To implement your own custom message encoder, you must provide custom implementations of the following three abstract base classes:</span></span>  
  
-   <xref:System.ServiceModel.Channels.MessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoderFactory>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoder>  
  
 <span data-ttu-id="757f9-106">사용자 지정 <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A>의 인스턴스를 반환하도록 <xref:System.ServiceModel.Channels.MessageEncoder>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-106">Override the <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> to return an instance of your custom <xref:System.ServiceModel.Channels.MessageEncoder>.</span></span> <span data-ttu-id="757f9-107">그런 다음 이 팩터리의 인스턴스를 반환하도록 <xref:System.ServiceModel.Channels.MessageEncoderFactory> 메서드를 재정의하여 서비스 또는 클라이언트를 구성하는 데 사용되는 바인딩 요소 스택에 사용자 지정 <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A>를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-107">Then wire up your custom <xref:System.ServiceModel.Channels.MessageEncoderFactory> to the binding element stack used to configure the service or client by overriding the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> method to return an instance of this factory.</span></span> <span data-ttu-id="757f9-108">사용자 지정 인코더에 대 한 자세한 내용은 참조 하세요. [데이터 전송 및 Serialization](~/docs/framework/wcf/feature-details/data-transfer-and-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-108">For more information about custom encoders, see [Data Transfer and Serialization](~/docs/framework/wcf/feature-details/data-transfer-and-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="757f9-109">다음 코드에서는 <xref:System.ServiceModel.Channels.MessageEncoderFactory>에서 파생되는 클래스를 작성하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-109">The following code shows how to write a class that is derived from <xref:System.ServiceModel.Channels.MessageEncoderFactory>:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#8)]
 [!code-csharp[S_UE_CustomTextMessageEncoder#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageEncoderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageEncoderFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="757f9-110"><see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionEncoder">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.MessageEncoder CreateSessionEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.MessageEncoder CreateSessionEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionEncoder () As MessageEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::MessageEncoder ^ CreateSessionEncoder();" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionEncoder : unit -&gt; System.ServiceModel.Channels.MessageEncoder&#xA;override this.CreateSessionEncoder : unit -&gt; System.ServiceModel.Channels.MessageEncoder" Usage="messageEncoderFactory.CreateSessionEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="757f9-111">세션 기반 교환에서 메시지를 연결하는 데 사용할 수 있는 메시지 인코더를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-111">Returns a message encoder that can be used to correlate messages in session-based exchanges.</span></span></summary>
        <returns><span data-ttu-id="757f9-112">메시지의 세션 기반 교환에 사용되는 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-112">The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> that is used in session-based exchanges of messages.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="757f9-113">세션 기반 메시지 인코더는 세션의 일부인 두 엔드포인트 간에 교환되는 모든 메시지로 구성된 대화 부분을 형성하는 개별 메시지를 추적할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-113">A session-based message encoder can keep track the individual messages that form part of a conversation that consists of all the messages exchanged between two endpoints that are part of a session.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoder">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageEncoder Encoder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageEncoder Encoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Encoder As MessageEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageEncoder ^ Encoder { System::ServiceModel::Channels::MessageEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoder : System.ServiceModel.Channels.MessageEncoder" Usage="System.ServiceModel.Channels.MessageEncoderFactory.Encoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="757f9-114">파생 클래스에서 재정의되는 경우 팩터리에서 생성되는 메시지 인코더를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-114">When overridden in a derived class, gets the message encoder that is produced by the factory.</span></span></summary>
        <value><span data-ttu-id="757f9-115">팩터리에서 사용하는 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-115">The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> used by the factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="757f9-116">다음 코드에서는 <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> 속성을 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-116">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> property:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageVersion MessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion" Usage="System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="757f9-117">파생 클래스에서 재정의된 경우 팩터리에서 메시지를 인코딩하기 위해 생성한 인코더에 사용되는 메시지 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-117">When overridden in a derived class, gets the message version that is used by the encoders produced by the factory to encode messages.</span></span></summary>
        <value><span data-ttu-id="757f9-118">팩터리에서 사용하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-118">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="757f9-119">메시지 버전은 <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A> 속성을 사용하여 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-119">The message version can be set using the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A> property.</span></span> <span data-ttu-id="757f9-120"><xref:System.ServiceModel.Channels.MessageVersion>은 SOAP 및 WS-Addressing의 특정 버전을 사용하도록 제한되며 확장할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-120"><xref:System.ServiceModel.Channels.MessageVersion> is limited to using certain versions of SOAP and WS-Addressing and is not extensible.</span></span> <span data-ttu-id="757f9-121">따라서 이러한 버전을 사용하지 않으려면 <xref:System.ServiceModel.Channels.MessageVersion.None%2A?displayProperty=nameWithType>을 반환하도록 이 속성을 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-121">So if these versions are not to be used, this property should be overridden to return <xref:System.ServiceModel.Channels.MessageVersion.None%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="757f9-122">다음 코드에서는 <xref:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion%2A> 속성을 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="757f9-122">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion%2A> property:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>