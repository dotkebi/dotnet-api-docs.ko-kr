<Type Name="IChannel" FullName="System.ServiceModel.Channels.IChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c0935f5aead76fbd67c3eb6fc01022eea919aad" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56791084" /></Metadata><TypeSignature Language="C#" Value="public interface IChannel : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannel implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannel&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannel : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type IChannel = interface&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5be76-101">모든 채널 개체가 구현해야 하는 기본 인터페이스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-101">Defines the basic interface that all channel objects must implement.</span></span> <span data-ttu-id="5be76-102">채널 개체는 모든 통신 개체에서 공유하는 상태 시스템 인터페이스를 구현하고 채널 스택에서 개체를 검색할 메서드를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-102">It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="5be76-103">채널은 <xref:System.ServiceModel.ICommunicationObject> 인터페이스에 정의된 상태 시스템의 계약을 충족해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-103">Channels must satisfy the contract of a state machine as defined by the <xref:System.ServiceModel.ICommunicationObject> interface.</span></span>  
  
 <span data-ttu-id="5be76-104"><xref:System.ServiceModel.Channels.IChannel> 인터페이스는</span><span class="sxs-lookup"><span data-stu-id="5be76-104">The <xref:System.ServiceModel.Channels.IChannel> interface adds the</span></span>  
  
 <span data-ttu-id="5be76-105"><xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> 인터페이스에 <xref:System.ServiceModel.ICommunicationObject> 메서드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-105"><xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> method to the <xref:System.ServiceModel.ICommunicationObject> interface.</span></span> <span data-ttu-id="5be76-106">이 메서드는 스택에서 속성이 상주하는 위치에 관계없이 채널 스택에서 속성을 검색하는 메커니즘을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-106">This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live.</span></span> <span data-ttu-id="5be76-107">메서드 이름에서 "속성"이란 스택에서 채널 중 하나에 속하는 정보 부분을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-107">The term "property" in the method name refers to a piece of information that belongs to one of the channels in the stack.</span></span> <span data-ttu-id="5be76-108">속성에 대한 CLR 형식은 `T`에 의해 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-108">The CLR type for that property is determined by `T`.</span></span> <span data-ttu-id="5be76-109">이 검색 메서드는 채널 팩터리와 채널 수신기에서도 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-109">This method of retrieval is also used on channel factories and channel listeners.</span></span>  
  
 <span data-ttu-id="5be76-110">`IChannel`은 기본 메시지 교환 패턴과 연결된 각 채널 인터페이스에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-110">`IChannel` is inherited by each of the channel interfaces associated with the basic message-exchange patterns:</span></span>  
  
-   <span data-ttu-id="5be76-111">메시지를 받기 위한 <xref:System.ServiceModel.Channels.IInputChannel>입니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-111"><xref:System.ServiceModel.Channels.IInputChannel> for receiving messages.</span></span>  
  
-   <span data-ttu-id="5be76-112">메시지를 보내기 위한 <xref:System.ServiceModel.Channels.IOutputChannel>입니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-112"><xref:System.ServiceModel.Channels.IOutputChannel> for sending messages.</span></span>  
  
-   <span data-ttu-id="5be76-113">요청을 보내기 위한 <xref:System.ServiceModel.Channels.IRequestChannel>입니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-113"><xref:System.ServiceModel.Channels.IRequestChannel> for sending a request.</span></span>  
  
-   <span data-ttu-id="5be76-114">회신을 보내기 위한 <xref:System.ServiceModel.Channels.IReplyChannel>입니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-114"><xref:System.ServiceModel.Channels.IReplyChannel> for sending a reply.</span></span>  
  
-   <span data-ttu-id="5be76-115">양방향 메시징을 위한 <xref:System.ServiceModel.Channels.IDuplexChannel>입니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-115"><xref:System.ServiceModel.Channels.IDuplexChannel> for bi-directional messaging.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="iChannel.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="5be76-116">메서드에서 쿼리하고 있는 형식화된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-116">The typed object for which the method is querying.</span></span></typeparam>
        <summary><span data-ttu-id="5be76-117">요청한 형식화된 개체가 있는 경우 채널 스택의 해당 계층에서 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-117">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span></span></summary>
        <returns><span data-ttu-id="5be76-118">요청한 형식의 개체가 있으면 해당 형식의 개체 <paramref name="T" />이고, 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-118">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5be76-119">이 메서드를 사용하여 속성을 설정하거나 채널 스택의 해당 계층에서 상태를 가져오기 위한 인터페이스 등과 같은 형식의 개체를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-119">Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="5be76-120">요청된 개체의 반환을 지원하는 계층이 있으면 해당 개체가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-120">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="5be76-121">그렇지 않으면 스택의 다음 계층에 호출을 위임합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-121">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="5be76-122">스택의 맨 아래에 도달할 때까지 요청된 개체를 지원하는 채널 계층이 없으면 메서드는 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-122">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5be76-123">다음 샘플에서는이 속성을 사용 하 여 스택을 따라 호출을 위임 하는 채널에서 구현할 수 있는 방법을`InnerChannel` 이 채널에 대 한 내부 채널을 검색 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5be76-123">The following sample shows how this property can be implemented by a channel that delegates the call down the stack using an`InnerChannel` property that retrieves the inner channel for this channel.</span></span>  
  
 [!code-csharp[S_UEIChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueichannel/cs/generatedclient.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>