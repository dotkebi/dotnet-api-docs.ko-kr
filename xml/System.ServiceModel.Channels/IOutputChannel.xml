<Type Name="IOutputChannel" FullName="System.ServiceModel.Channels.IOutputChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="534e215b27bf140a586d8785f5bb951b3986b6f0" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58550982" /></Metadata><TypeSignature Language="C#" Value="public interface IOutputChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOutputChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IOutputChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOutputChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOutputChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IOutputChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ef96f-101">메시지를 보내기 위해 채널이 구현해야 할 인터페이스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-101">Defines the interface that a channel must implement to send a message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="ef96f-102"><xref:System.ServiceModel.Channels.IOutputChannel> 인터페이스는 <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> 작업의 동기 및 비동기 variant를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-102">The <xref:System.ServiceModel.Channels.IOutputChannel> interface defines synchronous and asynchronous variants of the <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> operation.</span></span> <span data-ttu-id="ef96f-103">이 인터페이스는 채널에서 보내는 메시지의 대상에 대해 <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A>를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-103">It provides a <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A> for the destination of the messages sent out on the channel.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef96f-104">메시지를 보내기 위해 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-104">Begins an asynchronous operation to send a message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSend : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOutputChannel.BeginSend (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ef96f-105">출력 채널에서 보낼 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-105">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span></span></param>
        <param name="callback"><span data-ttu-id="ef96f-106"><see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-106">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="ef96f-107">애플리케이션에 의해 지정되는 개체로, 비동기 발신 작업과 관련된 상태 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-107">An object, specified by the application, that contains state information associated with the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="ef96f-108">출력 채널의 대상으로 메시지를 전송하기 위해 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-108">Begins an asynchronous operation to transmit a message to the destination of the output channel.</span></span></summary>
        <returns><span data-ttu-id="ef96f-109">비동기 메시지 전송을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef96f-110">출력 채널에서 보내는 메시지의 대상은 채널 작성 시간에 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-110">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="ef96f-111"><xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> 메서드는 원격 엔드포인트로의 메시지 배달을 보증하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-111">The <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="ef96f-112">배달 보증이 필요한 경우 <xref:System.ServiceModel.Channels.IOutputSessionChannel>을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-112">If delivery guarantees are required, use the <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="ef96f-113">보낸 메시지가 사용되는 바인딩에서 허용하는 최대 메시지 크기보다 크면 <xref:System.ServiceModel.QuotaExceededException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-113">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="ef96f-114">최대 메시지 크기는 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 속성에서 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-114">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="ef96f-115">기본값은 65536 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-115">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef96f-116">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-116">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSend : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOutputChannel.BeginSend (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ef96f-117">출력 채널에서 보낼 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-117">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span></span></param>
        <param name="timeout"><span data-ttu-id="ef96f-118">시간 제한이 초과되기 전에 보내기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-118">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="ef96f-119">비동기 작업 발신 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-119">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation send completion.</span></span></param>
        <param name="state"><span data-ttu-id="ef96f-120">애플리케이션에 의해 지정되는 개체로, 비동기 발신 작업과 관련된 상태 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-120">An object, specified by the application, that contains state information associated with the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="ef96f-121">지정된 시간 간격 내에 출력 채널의 대상으로 메시지를 전송하기 위해 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-121">Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="ef96f-122">비동기 발신 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-122">The <see cref="T:System.IAsyncResult" /> that references the asynchronous send operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef96f-123">출력 채널에서 보내는 메시지의 대상은 채널 작성 시간에 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-123">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="ef96f-124"><xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> 메서드는 원격 엔드포인트로의 메시지 배달을 보증하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-124">The <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="ef96f-125">배달 보증이 필요한 경우 <xref:System.ServiceModel.Channels.IOutputSessionChannel>을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-125">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="ef96f-126">보낸 메시지가 사용되는 바인딩에서 허용하는 최대 메시지 크기보다 크면 <xref:System.ServiceModel.QuotaExceededException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-126">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="ef96f-127">최대 메시지 크기는 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 속성에서 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-127">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="ef96f-128">기본값은 65536 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-128">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef96f-129">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-129">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef96f-130">지정된 <see cref="T:System.TimeoutException" />이 초과된 경우 작업에서 <paramref name="timeout" />을 throw해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-130">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public void EndSend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndSend : IAsyncResult -&gt; unit" Usage="iOutputChannel.EndSend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ef96f-131"><see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-131">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> method.</span></span></param>
        <summary><span data-ttu-id="ef96f-132">출력 채널의 대상으로 메시지를 전송하기 위해 비동기 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-132">Completes an asynchronous operation to transmit a message to the destination of the output channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef96f-133">보낸 메시지가 사용되는 바인딩에서 허용하는 최대 메시지 크기보다 크면 <xref:System.ServiceModel.QuotaExceededException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-133">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="ef96f-134">최대 메시지 크기는 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 속성에서 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-134">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="ef96f-135">기본값은 65536 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-135">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef96f-136">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-136">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef96f-137">출력 채널에서 메시지를 보내는 서비스의 대상을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-137">Gets the destination of the service to which messages are sent out on the output channel.</span></span></summary>
        <value><span data-ttu-id="ef96f-138">출력 채널에서 메시지를 보내는 서비스의 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-138">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the service to which the output channel sends messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef96f-139"><xref:System.ServiceModel.EndpointAddress>가 지정되지 않은 경우 <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A>가 최종 대상과 물리적 주소 둘 모두로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-139">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="ef96f-140"><xref:System.ServiceModel.Channels.IOutputChannel.Via%2A>가 지정된 경우 이 속성이 메시지를 보낸 실제 물리적 주소이고 이 주소를 통해 메시지가 대상에 도착해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-140">If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef96f-141">다음 코드에서는 이 속성을 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-141">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef96f-142">현재 출력 채널에서 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-142">Sends a message on the current output channel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.ServiceModel.Channels.Message -&gt; unit" Usage="iOutputChannel.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ef96f-143">출력 채널에서 보낼 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-143">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span></span></param>
        <summary><span data-ttu-id="ef96f-144">출력 채널의 대상으로 메시지를 전송합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-144">Transmits a message to the destination of the output channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef96f-145">출력 채널에서 보내는 메시지의 대상은 채널 작성 시간에 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-145">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="ef96f-146"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 메서드는 원격 엔드포인트로의 메시지 배달을 보증하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-146">The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="ef96f-147"><xref:System.ServiceModel.Channels.IOutputChannel>의 구현에서는 다양한 이유로 메시지가 자동으로 손실될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-147">An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons.</span></span> <span data-ttu-id="ef96f-148">예를 들어, 추가 버퍼 공간이 없는 경우가 이에 해당됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-148">There may be no more buffer room, for example.</span></span> <span data-ttu-id="ef96f-149">배달 보증이 필요한 경우 <xref:System.ServiceModel.Channels.IOutputSessionChannel>을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-149">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="ef96f-150">메시지를 출력 채널로 전달하면 메시지가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-150">Passing the message into the output channel causes the message to be consumed.</span></span> <span data-ttu-id="ef96f-151"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>를 호출한 후에는 더 이상 메시지를 검사하거나 메시지에서 <xref:System.ServiceModel.Channels.Message.Close%2A>를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-151">After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef96f-152">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-152">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="iOutputChannel.Send (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ef96f-153">출력 채널에서 보낼 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-153">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span></span></param>
        <param name="timeout"><span data-ttu-id="ef96f-154">시간 제한이 초과되기 전에 보내기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-154">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="ef96f-155">지정된 시간 간격 내에 현재 출력 채널에서 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-155">Sends a message on the current output channel within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef96f-156">출력 채널에서 보내는 메시지의 대상은 채널 작성 시간에 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-156">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="ef96f-157"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 메서드는 원격 엔드포인트로의 메시지 배달을 보증하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-157">The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="ef96f-158"><xref:System.ServiceModel.Channels.IOutputChannel>의 구현에서는 다양한 이유로 메시지가 자동으로 손실될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-158">An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons.</span></span> <span data-ttu-id="ef96f-159">예를 들어, 추가 버퍼 공간이 없는 경우가 이에 해당됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-159">There may be no more buffer room, for example.</span></span> <span data-ttu-id="ef96f-160">배달 보증이 필요한 경우 <xref:System.ServiceModel.Channels.IOutputSessionChannel>을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-160">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="ef96f-161">메시지를 출력 채널로 전달하면 메시지가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-161">Passing the message into the output channel causes the message to be consumed.</span></span> <span data-ttu-id="ef96f-162"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>를 호출한 후에는 더 이상 메시지를 검사하거나 메시지에서 <xref:System.ServiceModel.Channels.Message.Close%2A>를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-162">After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef96f-163">다음 코드에서는 이 메서드를 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-163">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ef96f-164">지정된 <see cref="T:System.TimeoutException" />이 초과된 경우 작업에서 <paramref name="timeout" />을 throw해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-164">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef96f-165">출력 채널에서 보내는 메시지의 전송 주소가 포함된 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-165">Gets the URI that contains the transport address to which messages are sent on the output channel.</span></span></summary>
        <value><span data-ttu-id="ef96f-166">출력 채널에서 보내는 메시지의 전송 주소가 포함된 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-166">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef96f-167"><xref:System.ServiceModel.EndpointAddress>가 지정되지 않은 경우 <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A>가 최종 대상과 물리적 주소 둘 모두로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-167">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="ef96f-168"><xref:System.ServiceModel.Channels.IOutputChannel.Via%2A>가 지정된 경우 이 속성이 메시지를 보낸 실제 물리적 주소이고 이 주소를 통해 메시지가 대상에 도착해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-168">If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef96f-169">다음 코드에서는 이 속성을 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef96f-169">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>