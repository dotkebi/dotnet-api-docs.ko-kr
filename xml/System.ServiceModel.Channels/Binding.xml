<Type Name="Binding" FullName="System.ServiceModel.Channels.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48b0347d4d9d99b5d74894ad20cf0ed5c1c32ac9" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58553869" /></Metadata><TypeSignature Language="C#" Value="public abstract class Binding : System.ServiceModel.IDefaultCommunicationTimeouts" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Binding extends System.Object implements class System.ServiceModel.IDefaultCommunicationTimeouts" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.Binding" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binding&#xA;Implements IDefaultCommunicationTimeouts" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding abstract : System::ServiceModel::IDefaultCommunicationTimeouts" />
  <TypeSignature Language="F#" Value="type Binding = class&#xA;    interface IDefaultCommunicationTimeouts" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IDefaultCommunicationTimeouts</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f60cb-101">클라이언트와 서비스 간의 통신에 사용되는 프로토콜, 전송 및 메시지 인코더를 지정하는 바인딩 요소를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-101">Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-102">바인딩 요소의 컬렉션을 나타냅니다. 각 바인딩 요소는 한 엔드포인트가 다른 엔드포인트와 통신하는 방법을 설명하며 이는 클라이언트의 채널 팩터리와 서비스의 채널 수신기에 일관성 있게 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-102">Represents a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints and that are built, consistently, into a channel factory on the client and into a channel listener on the service.</span></span> <span data-ttu-id="f60cb-103">바인딩은 프로토콜 채널, 전송 채널 및 메시지 인코더에 해당되는 바인딩 요소의 컬렉션을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-103">A binding contains a collection of binding elements that correspond to protocol channels, transport channels, and message encoders.</span></span> <span data-ttu-id="f60cb-104">프로토콜 채널에 대한 바인딩 요소 수는 무제한이지만 각 전송 채널 및 메시지 인코더에 대한 바인딩 요소는 하나씩만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-104">There can be any number of binding elements for protocol channels but one and only one binding element for each the transport and message encoder.</span></span> <span data-ttu-id="f60cb-105">일반적으로 바인딩에는 여섯 개의 바인딩 요소 계층이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-105">There are commonly six layers of binding elements in a binding.</span></span> <span data-ttu-id="f60cb-106">스택의 맨 아래에는 전송 및 인코딩 바인딩 요소만 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-106">Only the transport and encoding binding elements at the bottom of the stack are required.</span></span> <span data-ttu-id="f60cb-107">인코딩은 각 바인딩의 필수적 요소는 인코딩이 지정 되지 않은 경우, Windows Communication Foundation (WCF) 수에 대 한 기본 인코딩을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-107">Because an encoding is required for each binding, if an encoding is not specified, Windows Communication Foundation (WCF) adds a default encoding for you.</span></span> <span data-ttu-id="f60cb-108">기본값은 HTTP 및 HTTPS 전송의 경우 텍스트/XML이고 기타 전송의 경우 이진입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-108">The default is Text/XML for the HTTP and HTTPS transports, and Binary for other transports.</span></span>  
  
 <span data-ttu-id="f60cb-109">다음 표에서는 각 계층의 옵션을 요약합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-109">The following table summarizes the options for each layer.</span></span>  
  
|<span data-ttu-id="f60cb-110">계층</span><span class="sxs-lookup"><span data-stu-id="f60cb-110">Layer</span></span>|<span data-ttu-id="f60cb-111">옵션</span><span class="sxs-lookup"><span data-stu-id="f60cb-111">Options</span></span>|<span data-ttu-id="f60cb-112">필수</span><span class="sxs-lookup"><span data-stu-id="f60cb-112">Required</span></span>|  
|-----------|-------------|--------------|  
|<span data-ttu-id="f60cb-113">트랜잭션 흐름</span><span class="sxs-lookup"><span data-stu-id="f60cb-113">Transaction Flow</span></span>|<xref:System.ServiceModel.Channels.TransactionFlowBindingElement>|<span data-ttu-id="f60cb-114">아니요</span><span class="sxs-lookup"><span data-stu-id="f60cb-114">No</span></span>|  
|<span data-ttu-id="f60cb-115">안정성</span><span class="sxs-lookup"><span data-stu-id="f60cb-115">Reliability</span></span>|<xref:System.ServiceModel.Channels.ReliableSessionBindingElement>|<span data-ttu-id="f60cb-116">아니요</span><span class="sxs-lookup"><span data-stu-id="f60cb-116">No</span></span>|  
|<span data-ttu-id="f60cb-117">보안</span><span class="sxs-lookup"><span data-stu-id="f60cb-117">Security</span></span>|<span data-ttu-id="f60cb-118">대칭, 비대칭, 전송 수준</span><span class="sxs-lookup"><span data-stu-id="f60cb-118">Symmetric, Asymmetric, Transport-Level</span></span>|<span data-ttu-id="f60cb-119">아니요</span><span class="sxs-lookup"><span data-stu-id="f60cb-119">No</span></span>|  
|<span data-ttu-id="f60cb-120">Shape Change</span><span class="sxs-lookup"><span data-stu-id="f60cb-120">Shape Change</span></span>|<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>|<span data-ttu-id="f60cb-121">아니요</span><span class="sxs-lookup"><span data-stu-id="f60cb-121">No</span></span>|  
|<span data-ttu-id="f60cb-122">Transport Upgrades</span><span class="sxs-lookup"><span data-stu-id="f60cb-122">Transport Upgrades</span></span>|<span data-ttu-id="f60cb-123">SSL 스트림, Windows 스트림, 피어 확인자</span><span class="sxs-lookup"><span data-stu-id="f60cb-123">SSL stream, Windows stream, Peer Resolver</span></span>|<span data-ttu-id="f60cb-124">아니요</span><span class="sxs-lookup"><span data-stu-id="f60cb-124">No</span></span>|  
|<span data-ttu-id="f60cb-125">인코딩</span><span class="sxs-lookup"><span data-stu-id="f60cb-125">Encoding</span></span>|<span data-ttu-id="f60cb-126">텍스트, 이진, MTOM, 사용자 지정</span><span class="sxs-lookup"><span data-stu-id="f60cb-126">Text, Binary, MTOM, Custom</span></span>|<span data-ttu-id="f60cb-127">예</span><span class="sxs-lookup"><span data-stu-id="f60cb-127">Yes</span></span>|  
|<span data-ttu-id="f60cb-128">전송</span><span class="sxs-lookup"><span data-stu-id="f60cb-128">Transport</span></span>|<span data-ttu-id="f60cb-129">TCP, 명명된 파이프, HTTP, HTTPS, MSMQ, 사용자 지정</span><span class="sxs-lookup"><span data-stu-id="f60cb-129">TCP, Named Pipes, HTTP, HTTPS, MSMQ, Custom</span></span>|<span data-ttu-id="f60cb-130">예</span><span class="sxs-lookup"><span data-stu-id="f60cb-130">Yes</span></span>|  
  
 <span data-ttu-id="f60cb-131">각 바인딩 요소는 클라이언트의 채널 팩터리 및 서비스의 채널 수신기를 빌드하기 위한 사양을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-131">Each binding element provides the specification for building a channel factory on the client and a channel listener on the service.</span></span> <span data-ttu-id="f60cb-132">예를 들어, 채널 팩터리 스택을 구성하면 바인딩 내의 바인딩 요소별로 하나씩 채널 팩터리가 스택에 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-132">When the channel factory stack is constructed, for example, there is one channel factory in the stack for each binding element in the binding.</span></span> <span data-ttu-id="f60cb-133">서비스에 스택으로 구성된 채널 수신기에도 동일한 종류의 매핑이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-133">The same sort of mapping applies to the channel listeners in the stack on the service.</span></span> <span data-ttu-id="f60cb-134">이러한 엔드포인트 간에 채널 기반 연결을 설정하려면 클라이언트와 서비스의 일관성이 유지되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-134">Consistency on the client and service is critical for establishing the channel-based connection between these endpoints.</span></span> <span data-ttu-id="f60cb-135">각 팩터리와 수신기는 연결 채널 스택에서 해당 채널의 전송과 수신을 교대로 처리하며, 그런 다음 이 채널은 통신하는 데 사용되는 메시지를 전송하고 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-135">Each factory and listener, in turn, processes the sending and accepting of the corresponding channels in the channel stack that connects them, and these channels can then send and receive the messages used to communicate.</span></span>  
  
 <span data-ttu-id="f60cb-136"><xref:System.ServiceModel.Channels.Binding>의 각 인스턴스에는 서비스의 메타데이터에서 인스턴스를 고유하게 식별하는 <xref:System.ServiceModel.Channels.Binding.Name%2A> 및 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-136">Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify it in the metadata of the service.</span></span> <span data-ttu-id="f60cb-137">없는 이름 또는 네임 스페이스를 지정 하는 경우 WCF를 기본 값을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-137">If no name or namespace is specified, WCF adds a default values for you.</span></span> <span data-ttu-id="f60cb-138">기본 이름은 `null` 이 고 기본 네임 스페이스가 http://tempuri.org/합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-138">The default name is `null` and the default namespace is http://tempuri.org/.</span></span> <span data-ttu-id="f60cb-139">바인딩에 대한 이 사용자 이름은 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 속성에 의해 지정되는 프로토콜 이름 사양과는 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-139">This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property.</span></span> <span data-ttu-id="f60cb-140">예를 들어, HTTP 바인딩을 추가하려면 바인딩의 이름을 원하는 대로 지정하고 모든 체계를 "http"로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-140">If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to "http".</span></span> <span data-ttu-id="f60cb-141"><xref:System.ServiceModel.Channels.Binding.Scheme%2A>를 기반으로 하는 고유한 응용 프로그램이나 컴퓨터 디스패치가 없으므로,</span><span class="sxs-lookup"><span data-stu-id="f60cb-141">There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>.</span></span> <span data-ttu-id="f60cb-142">잘 알려진 프로토콜에 대하여 추가 처리기를 등록할 수 없는 일반적인 문제를 피할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-142">So you avoid the common problem of being unable to register additional handlers for well-known protocols.</span></span> <span data-ttu-id="f60cb-143">또한 각 버전에 서로 다른 이름을 지정하여 여러 버전의 바인딩을 함께 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-143">You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.</span></span>  
  
 <span data-ttu-id="f60cb-144"><xref:System.ServiceModel.Channels.Binding> 클래스는 장기간 동안 리소스를 묶어 두는 방법을 사용하는 DOS(서비스 거부) 공격을 줄일 수 있는 <xref:System.ServiceModel.IDefaultCommunicationTimeouts> 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-144">The <xref:System.ServiceModel.Channels.Binding> class implements the <xref:System.ServiceModel.IDefaultCommunicationTimeouts> interface to mitigate Denial of Service (DOS) attacks that rely on tying up resources for extended intervals of time.</span></span> <span data-ttu-id="f60cb-145">이 구현에서는 연결 설정과 끊기 및 메시지 송수신 관련 작업 읽기와 쓰기에 대한 통신 제한 시간 값을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-145">The implementation specifies the communication timeouts values for opening and closing connections and for the reading and writing operations associated with receiving and sending messages.</span></span> <span data-ttu-id="f60cb-146">이러한 제한 시간을 가져오고 설정하는 데 사용되는 속성 및 이러한 속성의 기본값이 다음 표에 요약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-146">The properties used to get and set these timeouts and their default values operations are summarized in the following table.</span></span>  
  
|<span data-ttu-id="f60cb-147">제한 시간 속성</span><span class="sxs-lookup"><span data-stu-id="f60cb-147">Timeout Property</span></span>|<span data-ttu-id="f60cb-148">기본값</span><span class="sxs-lookup"><span data-stu-id="f60cb-148">Default Value</span></span>|  
|----------------------|-------------------|  
|<xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A>|<span data-ttu-id="f60cb-149">1분</span><span class="sxs-lookup"><span data-stu-id="f60cb-149">1 minute</span></span>|  
|<xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A>|<span data-ttu-id="f60cb-150">1분</span><span class="sxs-lookup"><span data-stu-id="f60cb-150">1 minute</span></span>|  
|<xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>|<span data-ttu-id="f60cb-151">1분</span><span class="sxs-lookup"><span data-stu-id="f60cb-151">1 minute</span></span>|  
|<xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>|<span data-ttu-id="f60cb-152">10분</span><span class="sxs-lookup"><span data-stu-id="f60cb-152">10 minutes</span></span>|  
  
 <span data-ttu-id="f60cb-153"><xref:System.ServiceModel.Channels.Binding>에서 상속하여 바인딩을 만들 경우 <xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A>를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-153">When you create a binding by inheriting from <xref:System.ServiceModel.Channels.Binding>, you must override <xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A>.</span></span>  
  
 <span data-ttu-id="f60cb-154">또한 고유의 바인딩 요소를 정의하여 이전 테이블의 정의된 계층 사이에 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-154">In addition, you can define your own binding elements and insert them between any of the defined layers in the preceding table.</span></span> <span data-ttu-id="f60cb-155">자세한 내용은 <xref:System.ServiceModel.Channels.CustomBinding> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f60cb-155">For more information, see the <xref:System.ServiceModel.Channels.CustomBinding> class.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBinding#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebinding/cs/service.cs#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f60cb-156"><see cref="T:System.ServiceModel.Channels.Binding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-156">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f60cb-157">기본 이름과 네임스페이스를 사용하여 <see cref="T:System.ServiceModel.Channels.Binding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-157">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class with a default name and namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-158">기본 이름은 `null` 이 고 기본 네임 스페이스가 http://tempuri.org/합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-158">The default name is `null` and the default namespace is http://tempuri.org/.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBinding#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebinding/cs/service.cs#2)]
 [!code-vb[S_UEBinding#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebinding/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binding (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binding(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.Binding : string * string -&gt; System.ServiceModel.Channels.Binding" Usage="new System.ServiceModel.Channels.Binding (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f60cb-159">바인딩의 <see cref="P:System.ServiceModel.Channels.Binding.Name" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-159">The <see cref="P:System.ServiceModel.Channels.Binding.Name" /> of the binding.</span></span></param>
        <param name="ns"><span data-ttu-id="f60cb-160">바인딩의 <see cref="P:System.ServiceModel.Channels.Binding.Namespace" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-160">The <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> of the binding.</span></span></param>
        <summary><span data-ttu-id="f60cb-161">서비스의 지정된 바인딩에서 <see cref="T:System.ServiceModel.Channels.Binding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-161">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class from a specified binding of the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-162"><xref:System.ServiceModel.Channels.Binding.Name%2A> 및 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>는 서비스의 메타데이터에서 <xref:System.ServiceModel.Channels.Binding>의 인스턴스를 고유하게 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-162">The <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> together uniquely identify an instance of a <xref:System.ServiceModel.Channels.Binding> in the metadata of the service.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f60cb-163"><paramref name="name" />이 <see langword="null" /> 또는 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-163"><paramref name="name" /> is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f60cb-164"><paramref name="ns" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-164"><paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f60cb-165">바인딩에서 지정된 채널 팩터리 스택을 클라이언트에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-165">Builds the channel factory stack on the client specified by the binding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildChannelFactory(Of TChannel) (ParamArray parameters As Object()) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BuildChannelFactory : obj[] -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="binding.BuildChannelFactory parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-166">채널 팩터리에서 생성하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-166">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-167">생성되는 채널 수신기에 대한 요구 사항을 지정하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-167">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-168">지정된 유형의 채널을 만들고 개체 배열에서 지정된 기능을 충족하는 채널 팩터리 스택을 클라이언트에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-168">Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.</span></span></summary>
        <returns><span data-ttu-id="f60cb-169">컬렉션에서 지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-169">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-170">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-170">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelFactory : System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;&#xA;override this.BuildChannelFactory : System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="binding.BuildChannelFactory parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-171">채널 팩터리에서 생성하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-171">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-172">생성되는 채널 팩터리에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-172">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory built.</span></span></param>
        <summary><span data-ttu-id="f60cb-173">지정된 유형의 채널을 만들고 바인딩 매개 변수 컬렉션에서 지정된 기능을 충족하는 채널 팩터리 스택을 클라이언트에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-173">Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</span></span></summary>
        <returns><span data-ttu-id="f60cb-174">컬렉션에서 지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-174">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-175">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-175">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildChannelListener&lt;TChannel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f60cb-176">지정된 유형의 채널을 허용하고 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-176">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (ParamArray parameters As Object()) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : obj[] -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : obj[] -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.BuildChannelListener parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-177">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-177">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-178">생성되는 채널 수신기에 대한 요구 사항을 지정하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-178">The object array that specifies requirements for the channel factory built.</span></span></param>
        <summary><span data-ttu-id="f60cb-179">지정된 유형의 채널을 허용하고 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-179">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-180">지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-180">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-181">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-181">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (parameters As BindingParameterCollection) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.BuildChannelListener parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-182">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-182">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-183">생성되는 채널 수신기에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-183">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-184">지정된 유형의 채널을 허용하고 바인딩 매개 변수 컬렉션에서 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-184">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified by a collection of binding parameters.</span></span></summary>
        <returns><span data-ttu-id="f60cb-185">지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-185">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-186">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-186">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, string listenUriRelativeAddress, params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, string listenUriRelativeAddress, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUriBaseAddress As Uri, listenUriRelativeAddress As String, ParamArray parameters As Object()) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::String ^ listenUriRelativeAddress, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : Uri * string * obj[] -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : Uri * string * obj[] -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.BuildChannelListener (listenUriBaseAddress, listenUriRelativeAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="listenUriRelativeAddress" Type="System.String" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-187">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-187">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="f60cb-188">서비스가 수신 대기하는 기본 주소를 제공하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-188">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUriRelativeAddress"><span data-ttu-id="f60cb-189">기준 주소에 대해 상대적이며 서비스가 수신 대기하는 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-189">The address, relative to the base address, on which the service listens.</span></span></param>
        <param name="parameters"><span data-ttu-id="f60cb-190">생성되는 채널 수신기에 대한 요구 사항을 지정하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-190">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-191">지정된 유형의 채널을 허용하고 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-191">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-192">지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-192">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-193">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-193">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, string listenUriRelativeAddress, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUriBaseAddress As Uri, listenUriRelativeAddress As String, parameters As BindingParameterCollection) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::String ^ listenUriRelativeAddress, System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : Uri * string * System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : Uri * string * System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.BuildChannelListener (listenUriBaseAddress, listenUriRelativeAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="listenUriRelativeAddress" Type="System.String" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-194">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-194">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="f60cb-195">서비스가 수신 대기하는 기본 주소를 제공하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-195">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUriRelativeAddress"><span data-ttu-id="f60cb-196">기준 주소에 대해 상대적이며 서비스가 수신 대기하는 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-196">The address, relative to the base address, on which the service listens.</span></span></param>
        <param name="parameters"><span data-ttu-id="f60cb-197">생성되는 채널 수신기에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-197">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-198">지정된 유형의 채널을 허용하고 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-198">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-199">지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-199">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-200">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-200">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, object[] parameters) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUriBaseAddress As Uri, ParamArray parameters As Object()) As IChannelListener(Of TChannel)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUri, params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUri, object[] parameters) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUri As Uri, ParamArray parameters As Object()) As IChannelListener(Of TChannel)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUri, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : Uri * obj[] -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : Uri * obj[] -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.BuildChannelListener (listenUri, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="listenUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-201">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-201">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="f60cb-202">서비스가 수신 대기하는 기본 주소를 제공하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-202">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUri"><span data-ttu-id="f60cb-203">서비스가 수신 대기하는 기본 주소를 제공하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-203">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="parameters"><span data-ttu-id="f60cb-204">생성되는 채널 수신기에 대한 요구 사항을 지정하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-204">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-205">지정된 유형의 채널을 허용하고 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-205">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-206">지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-206">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-207">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-207">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUriBaseAddress As Uri, parameters As BindingParameterCollection) As IChannelListener(Of TChannel)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUri, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUri, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUri As Uri, parameters As BindingParameterCollection) As IChannelListener(Of TChannel)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUri, System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : Uri * System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : Uri * System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.BuildChannelListener (listenUri, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="listenUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-208">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-208">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="f60cb-209">서비스가 수신 대기하는 기본 주소를 제공하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-209">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUri"><span data-ttu-id="f60cb-210">서비스가 수신 대기하는 기본 주소를 제공하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-210">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="parameters"><span data-ttu-id="f60cb-211">생성되는 채널 수신기에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-211">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-212">지정된 유형의 채널을 허용하고 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-212">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-213">지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-213">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-214">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-214">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Description.ListenUriMode listenUriMode, params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, string listenUriRelativeAddress, valuetype System.ServiceModel.Description.ListenUriMode listenUriMode, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::String ^ listenUriRelativeAddress, System::ServiceModel::Description::ListenUriMode listenUriMode, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : Uri * string * System.ServiceModel.Description.ListenUriMode * obj[] -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : Uri * string * System.ServiceModel.Description.ListenUriMode * obj[] -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.BuildChannelListener (listenUriBaseAddress, listenUriRelativeAddress, listenUriMode, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="listenUriRelativeAddress" Type="System.String" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="listenUriMode" Type="System.ServiceModel.Description.ListenUriMode" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="3" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-215">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-215">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="f60cb-216">서비스가 수신 대기하는 기본 주소를 제공하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-216">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUriRelativeAddress"><span data-ttu-id="f60cb-217">기준 주소에 대해 상대적이며 서비스가 수신 대기하는 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-217">The address, relative to the base address, on which the service listens.</span></span></param>
        <param name="listenUriMode"><span data-ttu-id="f60cb-218">전송 시 서비스에서 수신하도록 제공된 URI의 고유성을 확인할지 아니면 제공된 그대로 사용할지를 나타내는 <see cref="T:System.ServiceModel.Description.ListenUriMode" />의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-218">A value of the <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</span></span></param>
        <param name="parameters"><span data-ttu-id="f60cb-219">생성되는 채널 수신기에 대한 요구 사항을 지정하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-219">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-220">지정된 유형의 채널을 허용하고 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-220">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-221">지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-221">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-222">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-222">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Description.ListenUriMode listenUriMode, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, string listenUriRelativeAddress, valuetype System.ServiceModel.Description.ListenUriMode listenUriMode, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::String ^ listenUriRelativeAddress, System::ServiceModel::Description::ListenUriMode listenUriMode, System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : Uri * string * System.ServiceModel.Description.ListenUriMode * System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : Uri * string * System.ServiceModel.Description.ListenUriMode * System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.BuildChannelListener (listenUriBaseAddress, listenUriRelativeAddress, listenUriMode, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="listenUriRelativeAddress" Type="System.String" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="listenUriMode" Type="System.ServiceModel.Description.ListenUriMode" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" Index="3" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-223">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-223">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="f60cb-224">서비스가 수신 대기하는 기본 주소를 제공하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-224">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUriRelativeAddress"><span data-ttu-id="f60cb-225">기준 주소에 대해 상대적이며 서비스가 수신 대기하는 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-225">The address, relative to the base address, on which the service listens.</span></span></param>
        <param name="listenUriMode"><span data-ttu-id="f60cb-226">전송 시 서비스에서 수신하도록 제공된 URI의 고유성을 확인할지 아니면 제공된 그대로 사용할지를 나타내는 <see cref="T:System.ServiceModel.Description.ListenUriMode" />의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-226">A value of the <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</span></span></param>
        <param name="parameters"><span data-ttu-id="f60cb-227">생성되는 채널 수신기에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-227">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-228">지정된 유형의 채널을 허용하고 지정된 기능을 충족하는 채널 수신기를 서비스에 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-228">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-229">지정된 기능을 충족하는 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-229">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f60cb-230">전송 요소가 없거나 순서가 잘못되었거나, 체계가 잘못되었거나, 메시지 버전이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-230">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f60cb-231">현재 바인딩이 특정 기준을 충족하는 채널 팩터리 스택을 클라이언트에 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-231">Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies some specific criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-232">팩터리를 실제로 생성하기 전에 제공된 `TChannel`를 사용하여 `context` 형식의 채널에 대한 채널 팩터리를 만들 수 있는지 여부를 확인하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-232">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to actually build the factory.</span></span> <span data-ttu-id="f60cb-233">또는 <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A>를 호출하여 채널 팩터리를 만들어 보고 만들 수 없는 경우 생성되는 예외를 catch할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-233">Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public bool CanBuildChannelFactory&lt;TChannel&gt; (params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanBuildChannelFactory&lt;TChannel&gt;(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CanBuildChannelFactory(Of TChannel) (ParamArray parameters As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; bool CanBuildChannelFactory(... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CanBuildChannelFactory : obj[] -&gt; bool" Usage="binding.CanBuildChannelFactory parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-234">팩터리를 테스트할 대상 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-234">The type of channel for which the factory is being tested.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-235">생성되는 채널 수신기에 대한 요구 사항을 지정하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-235">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-236">현재 바인딩이 개체 배열에서 지정된 요구 사항을 충족하는 채널 팩터리 스택을 클라이언트에 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-236">Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.</span></span></summary>
        <returns><span data-ttu-id="f60cb-237">지정된 채널 팩터리 스택을 클라이언트에 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-237"><see langword="true" /> if the specified channel factory stack can be build on the client; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-238">팩터리를 실제로 생성하기 전에 지정된 바인딩 `TChannel`를 사용하여 `parameters` 형식의 채널에 대한 채널 팩터리를 만들 수 있는지 여부를 확인하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-238">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory.</span></span> <span data-ttu-id="f60cb-239">또는 <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29>를 호출하여 채널 팩터리를 만들어 보고 만들 수 없는 경우 생성되는 예외를 catch할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-239">Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelFactory : System.ServiceModel.Channels.BindingParameterCollection -&gt; bool&#xA;override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingParameterCollection -&gt; bool" Usage="binding.CanBuildChannelFactory parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-240">팩터리를 테스트할 대상 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-240">The type of channel for which the factory is being tested.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-241">생성되는 채널 팩터리에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-241">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-242">현재 바인딩이 지정된 바인딩 매개 변수 컬렉션을 충족하는 채널 팩터리 스택을 클라이언트에 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-242">Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-243">지정된 채널 팩터리 스택을 클라이언트에 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-243"><see langword="true" /> if the specified channel factory stack can be build on the client; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-244">팩터리를 실제로 생성하기 전에 지정된 바인딩 `TChannel`를 사용하여 `parameters` 형식의 채널에 대한 채널 팩터리를 만들 수 있는지 여부를 확인하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-244">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory.</span></span> <span data-ttu-id="f60cb-245">또는 <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29>를 호출하여 채널 팩터리를 만들어 보고 만들 수 없는 경우 생성되는 예외를 catch할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-245">Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f60cb-246">현재 바인딩이 지정된 기준을 충족하는 채널 수신기를 서비스에 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-246">Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies some specified criteria.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public bool CanBuildChannelListener&lt;TChannel&gt; (params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (ParamArray parameters As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel bool CanBuildChannelListener(... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CanBuildChannelListener : obj[] -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.CanBuildChannelListener parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-247">수신기를 테스트할 대상 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-247">The type of channel for which the listener is being tested.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-248">생성되는 채널 수신기에 대한 요구 사항을 지정하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-248">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-249">현재 바인딩이 개체 배열에 지정된 기준을 충족하는 채널 수신기 스택을 서비스에 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-249">Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the criteria specified in an array of objects.</span></span></summary>
        <returns><span data-ttu-id="f60cb-250">지정된 채널 수신기 스택을 서비스에 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-250"><see langword="true" /> if the specified channel listener stack can be build on the service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-251">수신기를 실제로 생성하기 전에 지정된 바인딩 `TChannel`를 사용하여 `parameters` 형식의 채널에 대한 채널 수신기를 만들 수 있는지 여부를 확인하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-251">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener.</span></span> <span data-ttu-id="f60cb-252">또는 <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29>를 호출하여 채널 수신기를 만들어 보고 만들 수 없는 경우 생성되는 예외를 catch할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-252">Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (parameters As BindingParameterCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelListener : System.ServiceModel.Channels.BindingParameterCollection -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingParameterCollection -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="binding.CanBuildChannelListener parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="f60cb-253">수신기를 테스트할 대상 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-253">The type of channel for which the listener is being tested.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-254">생성되는 채널 수신기에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-254">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-255">현재 바인딩이 지정된 바인딩 매개 변수 컬렉션을 충족하는 채널 수신기 스택을 서비스에 생성할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-255">Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the collection of binding parameters specified.</span></span></summary>
        <returns><span data-ttu-id="f60cb-256">지정된 채널 수신기 스택을 서비스에 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-256"><see langword="true" /> if the specified channel listener stack can be build on the service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-257">수신기를 실제로 생성하기 전에 지정된 바인딩 `TChannel`를 사용하여 `parameters` 형식의 채널에 대한 채널 수신기를 만들 수 있는지 여부를 확인하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-257">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener.</span></span> <span data-ttu-id="f60cb-258">또는 <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29>를 호출하여 채널 수신기를 만들어 보고 만들 수 없는 경우 생성되는 예외를 catch할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-258">Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CloseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CloseTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CloseTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Channels.Binding.CloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:01:00")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f60cb-259">전송 중 예외가 발생하기 전에 연결을 끊기 위해 제공되는 시간 간격을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-259">Gets or sets the interval of time provided for a connection to close before the transport raises an exception.</span></span></summary>
        <value><span data-ttu-id="f60cb-260">제한 시간이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다. 기본값은 1분입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-260">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-261">이 속성 값은 바인딩 팩터리에서 생성되는 채널 및 수신기에서 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-261">The value of this property is used by the channels and listeners produced by the factories of the binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f60cb-262">값이 0보다 작거나 너무 큰 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-262">The value is less than zero or too large.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="abstract member CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="binding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f60cb-263">파생 클래스에서 재정의되는 경우 현재 바인딩의 일부인 바인딩 요소를 포함하는 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-263">When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding.</span></span></summary>
        <returns><span data-ttu-id="f60cb-264">현재 바인딩 개체의 바인딩 요소를 올바른 순서로 포함하는 <see cref="T:System.Collections.Generic.ICollection`1" /> 형식의 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-264">A <see cref="T:System.Collections.Generic.ICollection`1" /> object of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements from the current binding object in the correct order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-265">요소는 <xref:System.ServiceModel.Channels.Binding> 개체에서 사용하는 내부 요소를 참조할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-265">The elements should not reference any internal elements that the <xref:System.ServiceModel.Channels.Binding> object uses.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) (parameters As BindingParameterCollection) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : System.ServiceModel.Channels.BindingParameterCollection -&gt; 'T (requires 'T : null)" Usage="binding.GetProperty parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f60cb-266">메서드에서 쿼리하고 있는 형식화된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-266">The typed object for which the method is querying.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="f60cb-267">생성되는 채널 수신기에 대한 요구 사항을 지정하는 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-267">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="f60cb-268">요청한 형식화된 개체가 있으면 바인딩 스택의 해당 계층에서 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-268">Returns a typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="f60cb-269">요청한 형식의 개체가 있으면 해당 형식의 개체 <paramref name="T" />이고, 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-269">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-270">요청된 개체의 반환을 지원하는 계층이 있으면 해당 개체가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-270">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="f60cb-271">그렇지 않으면 스택의 다음 계층에 호출을 위임합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-271">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="f60cb-272">스택의 맨 아래에 도달할 때까지 요청된 개체를 지원하는 계층이 없으면 메서드는 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-272">If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion MessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion" Usage="System.ServiceModel.Channels.Binding.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f60cb-273">바인딩을 사용하여 구성된 클라이언트 및 서비스에서 사용하는 메시지 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-273">Gets the message version used by clients and services configured with the binding.</span></span></summary>
        <value><span data-ttu-id="f60cb-274">바인딩을 사용하여 구성된 클라이언트 및 서비스에서 사용하는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-274">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by clients and services configured with the binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Channels.Binding.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f60cb-275">바인딩의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-275">Gets or sets the name of the binding.</span></span></summary>
        <value><span data-ttu-id="f60cb-276">바인딩 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-276">The name of the binding.</span></span> <span data-ttu-id="f60cb-277">기본 이름은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-277">The default name is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-278"><xref:System.ServiceModel.Channels.Binding>의 각 인스턴스에는 서비스의 메타데이터에서 바인딩 사용자 이름을 고유하게 식별하는 <xref:System.ServiceModel.Channels.Binding.Name%2A> 및 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-278">Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.</span></span>  
  
 <span data-ttu-id="f60cb-279">바인딩에 대한 이 사용자 이름은 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 속성에 의해 지정되는 프로토콜 이름 사양과는 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-279">This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property.</span></span> <span data-ttu-id="f60cb-280">예를 들어, HTTP 바인딩을 추가하려면 바인딩의 이름을 원하는 대로 지정하고 모든 체계를 "http"로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-280">If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to "http".</span></span> <span data-ttu-id="f60cb-281"><xref:System.ServiceModel.Channels.Binding.Scheme%2A>를 기반으로 하는 고유한 응용 프로그램이나 컴퓨터 디스패치가 없으므로,</span><span class="sxs-lookup"><span data-stu-id="f60cb-281">There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>.</span></span> <span data-ttu-id="f60cb-282">잘 알려진 프로토콜에 대하여 추가 처리기를 등록할 수 없는 일반적인 문제를 피할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-282">So you avoid the common problem of being unable to register additional handlers for well-known protocols.</span></span> <span data-ttu-id="f60cb-283">또한 각 버전에 서로 다른 이름을 지정하여 여러 버전의 바인딩을 함께 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-283">You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f60cb-284">값 세트가 <see langword="null" /> 또는 빈 문자열일 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-284">The value set cannot be <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.Channels.Binding.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f60cb-285">바인딩의 XML 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-285">Gets or sets the XML namespace of the binding.</span></span></summary>
        <value><span data-ttu-id="f60cb-286">바인딩의 XML 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-286">The XML namespace of the binding.</span></span> <span data-ttu-id="f60cb-287">기본값은 "http://tempuri.org/"입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-287">The default value is "http://tempuri.org/".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-288"><xref:System.ServiceModel.Channels.Binding>의 각 인스턴스에는 서비스의 메타데이터에서 바인딩 사용자 이름을 고유하게 식별하는 <xref:System.ServiceModel.Channels.Binding.Name%2A> 및 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-288">Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.</span></span>  
  
 <span data-ttu-id="f60cb-289">바인딩에 대한 이 사용자 이름은 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 속성에 의해 지정되는 프로토콜 이름 사양과는 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-289">This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property.</span></span> <span data-ttu-id="f60cb-290">예를 들어, HTTP 바인딩을 추가하려면 바인딩의 이름을 원하는 대로 지정하고 모든 체계를 "http"로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-290">If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to "http".</span></span> <span data-ttu-id="f60cb-291"><xref:System.ServiceModel.Channels.Binding.Scheme%2A>를 기반으로 하는 고유한 응용 프로그램이나 컴퓨터 디스패치가 없으므로,</span><span class="sxs-lookup"><span data-stu-id="f60cb-291">There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>.</span></span> <span data-ttu-id="f60cb-292">잘 알려진 프로토콜에 대하여 추가 처리기를 등록할 수 없는 일반적인 문제를 피할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-292">So you avoid the common problem of being unable to register additional handlers for well-known protocols.</span></span> <span data-ttu-id="f60cb-293">또한 각 버전에 서로 다른 이름을 지정하여 여러 버전의 바인딩을 함께 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-293">You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f60cb-294">값 집합이 <see langword="null" />일 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-294">The value set cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan OpenTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property OpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan OpenTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.OpenTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Channels.Binding.OpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:01:00")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f60cb-295">전송 중에 예외가 발생하기 전에 연결을 설정하기 위해 제공되는 시간 간격을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-295">Gets or sets the interval of time provided for a connection to open before the transport raises an exception.</span></span></summary>
        <value><span data-ttu-id="f60cb-296">제한 시간이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다. 기본값은 1분입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-296">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-297">이 속성 값은 바인딩 팩터리에서 생성되는 채널 및 수신기에서 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-297">The value of this property is used by the channels and listeners produced by the factories of the binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f60cb-298">값이 0보다 작거나 너무 큰 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-298">The value is less than zero or too large.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ReceiveTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Channels.Binding.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:10:00")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f60cb-299">연결이 끊어지기 전에 응용 프로그램 메시지가 수신되지 않는 비활성 상태로 유지될 수 있는 시간 간격을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-299">Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.</span></span></summary>
        <value><span data-ttu-id="f60cb-300">제한 시간이 초과되기 전에 응용 프로그램에서 메시지를 수신해야 하는 시간을 지정하는 <see cref="T:System.TimeSpan" />입니다. 기본값은 10 분입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-300">The <see cref="T:System.TimeSpan" /> that specifies how long the application has to receive a message before timing out. The default value is 10 minutes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-301">신뢰할 수 있는 세션을 사용할 경우에는 두 가지 비활성 타이머를 충족해야 연결을 유지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-301">When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive.</span></span> <span data-ttu-id="f60cb-302">이러한 두 비활성 타이머 중 하나라도 충족되지 않으면 연결이 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-302">If either of these inactivity timers goes off, then the connection is dropped.</span></span>  
  
-   <span data-ttu-id="f60cb-303">첫 번째 비활성 타이머는 <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>이며, 신뢰할 수 있는 세션에서 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-303">The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>.</span></span> <span data-ttu-id="f60cb-304">이 비활성 타이머는 시간 제한 동안 응용 프로그램 또는 인프라 메시지가 수신되지 않으면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-304">This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period.</span></span> <span data-ttu-id="f60cb-305">인프라 메시지는 응용 프로그램 데이터를 포함하는 메시지가 아니라 상태 유지 또는 승인과 같이 채널 스택의 프로토콜 중 하나에서 사용하도록 생성되는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-305">An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.</span></span>  
  
-   <span data-ttu-id="f60cb-306">두 번째 비활성 타이머는 서비스에 사용되며 바인딩의 <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> 설정을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-306">The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding.</span></span> <span data-ttu-id="f60cb-307">이 비활성 타이머는 시간 제한 동안 응용 프로그램 메시지가 수신되지 않으면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-307">This inactivity timer fires if no application messages are received within the timeout period.</span></span> <span data-ttu-id="f60cb-308">예를 들어 이 타이머는 세션에 사용되는 채널을 서버에서 닫기 전까지 클라이언트에서 적어도 하나의 메시지를 서버로 보내는 데 소비할 수 있는 최대 시간을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-308">This specifies, for example, the maximum time a client may take to send at least one message to the server before the server will close the channel used by a session.</span></span> <span data-ttu-id="f60cb-309">이 동작은 클라이언트에서 임의의 시간 동안 서버 리소스를 유지하지 못하게 합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-309">This behavior ensures that clients cannot hold on to server resources for arbitrary long periods.</span></span>  
  
 <span data-ttu-id="f60cb-310">두 가지 비활성 타이머 중 하나라도 발생하면 연결이 끊어지기 때문에 <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>을 초과한 이후에 <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>을 더 높게 설정하는 것은 아무 소용 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-310">Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect.</span></span> <span data-ttu-id="f60cb-311">이 두 가지 시간 제한의 기본값은 10분이므로 신뢰할 수 있는 세션을 사용한 때 적용되는 시간을 변경하려면 항상 두 값을 함께 늘려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-311">The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.</span></span>  
  
 <span data-ttu-id="f60cb-312">바인딩이나 채널에서 트랜잭션 흐름이 활성화된 경우 작업을 실행하는 데 지정된 제한 시간보다 더 오랜 시간이 걸릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-312">If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout.</span></span> <span data-ttu-id="f60cb-313">이 경우 제한 시간 만료로 인해 작업에 오류가 발생하고 트랜잭션이 중단됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-313">In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.</span></span>  
  
 <span data-ttu-id="f60cb-314">보안 세션에 사용 되는 경우는 <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> 바인딩에 설정 된 값에서 세션 제한 시간으로도 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-314">When security is used with sessions, the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> value set on the binding is also used as the session timeout.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f60cb-315">값이 0보다 작거나 너무 큰 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-315">The value is less than zero or too large.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public abstract string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.Channels.Binding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f60cb-316">파생 클래스에서 구현될 경우 바인딩에서 작성된 채널 및 수신기 팩터리에 사용되는 전송을 지정하는 URI 체계를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-316">When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.</span></span></summary>
        <value><span data-ttu-id="f60cb-317">현재 바인딩에서 작성된 팩터리에 의해 만들어진 채널 또는 수신기에 사용되는 URI 체계입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-317">The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-318">바인딩에 대한 이 사용자 이름은 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 속성에 의해 지정되는 프로토콜 이름 사양과는 구분됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-318">This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property.</span></span> <span data-ttu-id="f60cb-319"><xref:System.ServiceModel.Channels.Binding>의 각 인스턴스에는 서비스의 메타데이터에서 바인딩 사용자 이름을 고유하게 식별하는 <xref:System.ServiceModel.Channels.Binding.Name%2A> 및 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-319">Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.</span></span> <span data-ttu-id="f60cb-320">예를 들어, HTTP 바인딩을 추가하려면 바인딩의 이름을 원하는 대로 지정하고 모든 체계를 "http"로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-320">If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to "http".</span></span> <span data-ttu-id="f60cb-321"><xref:System.ServiceModel.Channels.Binding.Scheme%2A>를 기반으로 하는 고유한 응용 프로그램이나 컴퓨터 디스패치가 없으므로,</span><span class="sxs-lookup"><span data-stu-id="f60cb-321">There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>.</span></span> <span data-ttu-id="f60cb-322">잘 알려진 프로토콜에 대하여 추가 처리기를 등록할 수 없는 일반적인 문제를 피할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-322">So you avoid the common problem of being unable to register additional handlers for well-known protocols.</span></span> <span data-ttu-id="f60cb-323">또한 각 버전에 서로 다른 이름을 지정하여 여러 버전의 바인딩을 함께 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-323">You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SendTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Channels.Binding.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:01:00")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f60cb-324">전송 중 예외가 발생하기 전에 쓰기 작업을 완료하기 위해 제공되는 시간 간격을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-324">Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.</span></span></summary>
        <value><span data-ttu-id="f60cb-325">제한 시간이 초과되기 전에 쓰기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다. 기본값은 1분입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-325">The <see cref="T:System.TimeSpan" /> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f60cb-326">바인딩이나 채널에서 트랜잭션 흐름이 활성화된 경우 작업을 실행하는 데 지정된 제한 시간보다 더 오랜 시간이 걸릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-326">If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout.</span></span> <span data-ttu-id="f60cb-327">이 경우 제한 시간 만료로 인해 작업에 오류가 발생하고 트랜잭션이 중단됩니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-327">In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f60cb-328">값이 0보다 작거나 너무 큰 경우</span><span class="sxs-lookup"><span data-stu-id="f60cb-328">The value is less than zero or too large.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeName">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeName () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeName();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeName : unit -&gt; bool" Usage="binding.ShouldSerializeName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f60cb-329">바인딩 이름을 serialize해야 하는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-329">Returns whether the name of the binding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="f60cb-330">바인딩 이름을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-330"><see langword="true" /> if the binding name should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeNamespace">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeNamespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeNamespace();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeNamespace : unit -&gt; bool" Usage="binding.ShouldSerializeNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f60cb-331">바인딩 네임스페이스를 serialize해야 하는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-331">Returns whether the namespace of the binding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="f60cb-332">바인딩 네임스페이스를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f60cb-332"><see langword="true" /> if the binding namespace should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>