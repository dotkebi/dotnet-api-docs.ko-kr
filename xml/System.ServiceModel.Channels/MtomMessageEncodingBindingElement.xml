<Type Name="MtomMessageEncodingBindingElement" FullName="System.ServiceModel.Channels.MtomMessageEncodingBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8174cbba11d8e4e6e92ef25d802db7831d24b21c" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58551749" /></Metadata><TypeSignature Language="C#" Value="public sealed class MtomMessageEncodingBindingElement : System.ServiceModel.Channels.MessageEncodingBindingElement, System.ServiceModel.Description.IPolicyExportExtension, System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MtomMessageEncodingBindingElement extends System.ServiceModel.Channels.MessageEncodingBindingElement implements class System.ServiceModel.Description.IPolicyExportExtension, class System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MtomMessageEncodingBindingElement&#xA;Inherits MessageEncodingBindingElement&#xA;Implements IPolicyExportExtension, IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MtomMessageEncodingBindingElement sealed : System::ServiceModel::Channels::MessageEncodingBindingElement, System::ServiceModel::Description::IPolicyExportExtension, System::ServiceModel::Description::IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type MtomMessageEncodingBindingElement = class&#xA;    inherit MessageEncodingBindingElement&#xA;    interface IWsdlExportExtension&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.MessageEncodingBindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IWsdlExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="30c45-101">MTOM(Message Transmission Optimization Mechanism) 메시지에 사용되는 인코딩 및 버전 관리를 지정하는 바인딩 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-101">The binding element that specifies the encoding and versioning used for Message Transmission Optimization Mechanism (MTOM) messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-102">인코딩은 메시지를 바이트 시퀀스로 변형하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-102">Encoding is the process of transforming a message into a sequence of bytes.</span></span> <span data-ttu-id="30c45-103">디코딩은 역프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-103">Decoding is the reverse process.</span></span> <span data-ttu-id="30c45-104">Windows Communication Foundation (WCF)에 세 가지 유형의 SOAP 메시지에 대 한 인코딩을 포함 됩니다. 텍스트, 이진 및 (MTOM) Message Transmission Optimization Mechanism 합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-104">Windows Communication Foundation (WCF) includes three types of encoding for SOAP messages: Text, Binary and Message Transmission Optimization Mechanism (MTOM).</span></span>  
  
 <span data-ttu-id="30c45-105"><xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement>는 MTOM 인코딩을 사용하는 메시지에 사용되는 문자 인코딩, 메시지 버전 관리 및 기타 설정을 지정하는 바인딩 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-105">The <xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement> represents the binding element that specifies the character encoding and message versioning and other settings used for messages using a Message Transmission Optimization Mechanism (MTOM) encoding.</span></span> <span data-ttu-id="30c45-106">MTOM은 WCF 메시지의 이진 데이터를 전송하기 위한 효율적인 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-106">MTOM is an efficient technology for transmitting binary data in WCF messages.</span></span> <span data-ttu-id="30c45-107">MTOM 인코더는 효율성과 상호 운용성 간의 균형을 유지하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-107">The MTOM encoder attempts to create a balance between efficiency and interoperability.</span></span> <span data-ttu-id="30c45-108">MTOM 인코딩은 대부분의 XML을 텍스트 형식으로 전송하지만, 대량의 이진 데이터 블록의 경우는 base64 인코딩 형식으로 변환하지 않고 있는 그대로 전송하여 최적화합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-108">The MTOM encoding transmits most XML in textual form, but optimizes large blocks of binary data by transmitting them as-is, without conversion to their base64 encoded format.</span></span>  
  
 <span data-ttu-id="30c45-109">XML의 텍스트 표현을 사용 하 여 메시지를 인코딩하도록 지정 하는 바인딩 요소에 대 한 자세한 내용은 참조 하세요. <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-109">For more information about the binding element that specifies that messages are encoded using a textual representation of XML, see <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>.</span></span>  
  
 <span data-ttu-id="30c45-110">XML에 대 한.NET 이진 형식을 사용 하 여 메시지를 인코딩하도록 지정 하는 바인딩 요소에 대 한 자세한 참조 <xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-110">For more information about the binding element that specifies messages are encoded using the .NET Binary Format for XML, see <xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement>.</span></span>  
  
 <span data-ttu-id="30c45-111">사용자 지정 메시지 인코더를 구현하려면 <xref:System.ServiceModel.Channels.MessageEncodingBindingElement> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-111">To implement a custom message encoder, use the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="30c45-112"><see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MtomMessageEncodingBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MtomMessageEncodingBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30c45-113"><see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-114">사용되는 기본 <xref:System.ServiceModel.Channels.MessageVersion>은 WS-Addressing 1.0 및 SOAP1.2 버전으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-114">The default <xref:System.ServiceModel.Channels.MessageVersion> used consists of the version of WS-Addressing 1.0 and SOAP1.2.</span></span> <span data-ttu-id="30c45-115">기본 문자 인코딩은 UTF-8입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-115">The default character encoding is UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MtomMessageEncodingBindingElement (System.ServiceModel.Channels.MessageVersion messageVersion, System.Text.Encoding writeEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.MessageVersion messageVersion, class System.Text.Encoding writeEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MtomMessageEncodingBindingElement(System::ServiceModel::Channels::MessageVersion ^ messageVersion, System::Text::Encoding ^ writeEncoding);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.MtomMessageEncodingBindingElement : System.ServiceModel.Channels.MessageVersion * System.Text.Encoding -&gt; System.ServiceModel.Channels.MtomMessageEncodingBindingElement" Usage="new System.ServiceModel.Channels.MtomMessageEncodingBindingElement (messageVersion, writeEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="messageVersion" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="writeEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="messageVersion"><span data-ttu-id="30c45-116">SOAP 메시지에 사용되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-116">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the SOAP message.</span></span></param>
        <param name="writeEncoding"><span data-ttu-id="30c45-117">메시지 문자의 형식을 지정하는 데 사용되는 <see cref="T:System.Text.Encoding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-117">The <see cref="T:System.Text.Encoding" /> that is used to format the message characters.</span></span></param>
        <summary><span data-ttu-id="30c45-118">지정된 메시지 버전과 문자 인코딩을 사용하여 <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class with a specified message version and character encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-119">사용되는 기본 <xref:System.ServiceModel.Channels.MessageVersion>은 WS-Addressing 1.0 및 SOAP1.2 버전으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-119">The default <xref:System.ServiceModel.Channels.MessageVersion> used consists of the version of WS-Addressing 1.0 and SOAP1.2.</span></span> <span data-ttu-id="30c45-120">기본 문자 인코딩은 UTF-8입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-120">The default character encoding is UTF-8.</span></span> <span data-ttu-id="30c45-121">기본적으로 지원되는 문자 인코딩은 UTF-8, Unicode 및 Big Endian Unicode입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-121">The character encodings supported by default are UTF-8, Unicode, and Big Endian Unicode.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="30c45-122"><paramref name="messageVersion" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="30c45-122"><paramref name="messageVersion" /> or <paramref name="encoding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="30c45-123"><paramref name="messageVersion" />이 <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-123"><paramref name="messageVersion" /> is set to <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="mtomMessageEncodingBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="30c45-124">채널 팩터리에서 생성하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-124">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="context"><span data-ttu-id="30c45-125">채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-125">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span></span></param>
        <summary><span data-ttu-id="30c45-126">지정된 컨텍스트에 대해 지정된 형식의 채널을 만드는 채널 팩터리 스택을 클라이언트에 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-126">Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</span></span></summary>
        <returns><span data-ttu-id="30c45-127">지정된 컨텍스트에 대한 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-127">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="mtomMessageEncodingBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="30c45-128">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-128">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="30c45-129">수신기의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-129">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</span></span></param>
        <summary><span data-ttu-id="30c45-130">지정된 컨텍스트에 대해 지정된 형식의 채널을 수락하는 채널 수신기 스택을 클라이언트에 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-130">Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.</span></span></summary>
        <returns><span data-ttu-id="30c45-131">지정된 컨텍스트에 대한 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 형식의 <paramref name="TChannel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-131">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> for the specified context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="mtomMessageEncodingBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="30c45-132">채널 팩터리에서 생성하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-132">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="context"><span data-ttu-id="30c45-133">채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-133">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span></span></param>
        <summary><span data-ttu-id="30c45-134">현재 바인딩에서 지정된 형식의 채널과 컨텍스트에 대한 팩터리를 빌드할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-134">Returns a value that indicates whether the current binding can build a factory for a specified type of channel and context.</span></span></summary>
        <returns><span data-ttu-id="30c45-135">지정된 채널 팩터리 스택을 서비스에 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-135"><see langword="true" /> if the specified channel factory stack can be built on the service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="mtomMessageEncodingBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="30c45-136">채널 수신기가 수락하는 채널 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-136">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="30c45-137">수신기의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-137">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</span></span></param>
        <summary><span data-ttu-id="30c45-138">현재 바인딩에서 지정된 형식의 채널과 컨텍스트에 대한 수신기를 빌드할 수 있는지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-138">Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</span></span></summary>
        <returns><span data-ttu-id="30c45-139">지정된 채널 수신기 스택을 서비스에 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-139"><see langword="true" /> if the specified channel listener stack can be built on the service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="mtomMessageEncodingBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30c45-140">현재 개체에서 초기화되는 새로운 <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-140">Creates a new <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> object initialized from the current one.</span></span></summary>
        <returns><span data-ttu-id="30c45-141">현재 요소와 동일한 속성 값을 가지는 <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-141">A <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> object with property values equal to those of the current element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-142">이 메서드는 현재 바인딩 요소 개체 트리의 전체 복사본을 만듭니다. 이를 전체 복제라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-142">This creates a complete copy of the current binding element object tree, also called a deep clone.</span></span> <span data-ttu-id="30c45-143">이와 반대로 개체의 전체 복제는 개체와, 개체에서 직접 또는 간접 참조하는 모든 대상을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-143">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="30c45-144">이를 가리켜 전체 개체 그래프를 복사한다고 합니다. 전체 복제를 반환하면 런타임에서 여러 개의 사용자 지정 바인딩이 하나의 사용자 지정 바인딩 요소를 공유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-144">(This is called copying the entire object graph.) Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="30c45-145">전체 복제가 반환되지 않으면 런타임 동작이 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-145">If a deep clone is not returned, the run-time behavior is undefined.</span></span> <span data-ttu-id="30c45-146">반대로 개체의 단순 복제는 개체만 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-146">A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="30c45-147">개체에 다른 개체에 대한 참조가 포함된 경우 단순 복사는 참조된 개체의 복사본을 만들지 않고 대신 원본 개체에 대한 참조만 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-147">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageEncoderFactory">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.MessageEncoderFactory CreateMessageEncoderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.MessageEncoderFactory CreateMessageEncoderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CreateMessageEncoderFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateMessageEncoderFactory () As MessageEncoderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::MessageEncoderFactory ^ CreateMessageEncoderFactory();" />
      <MemberSignature Language="F#" Value="override this.CreateMessageEncoderFactory : unit -&gt; System.ServiceModel.Channels.MessageEncoderFactory" Usage="mtomMessageEncodingBindingElement.CreateMessageEncoderFactory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30c45-148">MTOM 메시지를 인코딩하는 메시지 인코더 팩터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-148">Creates a message encoder factory that encodes MTOM messages.</span></span></summary>
        <returns><span data-ttu-id="30c45-149">MTOM 메시지를 인코딩하는 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-149">The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that encodes MTOM messages.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="mtomMessageEncodingBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="30c45-150">메서드에서 쿼리하고 있는 형식화된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-150">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="30c45-151">바인딩 요소의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-151">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span></span></param>
        <summary><span data-ttu-id="30c45-152">요청한 형식화된 개체가 있으면 바인딩 요소 스택의 해당 계층에서 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-152">Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</span></span></summary>
        <returns><span data-ttu-id="30c45-153">요청한 형식의 개체가 있으면 해당 형식의 개체 <paramref name="T" />이고, 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-153">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-154">이 메서드를 사용하여 속성을 설정하거나 바인딩 요소 스택의 해당 계층에서 상태를 가져오기 위한 특정 형식의 개체를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-154">Use this to request a typed object for setting properties or getting status from the appropriate layer in the binding element stack.</span></span> <span data-ttu-id="30c45-155">요청된 개체의 반환을 지원하는 계층이 있으면 해당 개체가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-155">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="30c45-156">그렇지 않으면 스택의 다음 계층에 호출을 위임합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-156">If not, it simply delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="30c45-157">스택의 맨 아래에 도달할 때까지 요청된 개체를 지원하는 바인딩 요소 계층이 없으면 메서드는 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-157">If it gets to the bottom of the stack and no binding element layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferSize : int with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30c45-158">최대 버퍼 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-158">Gets or sets the maximum buffer size.</span></span></summary>
        <value><span data-ttu-id="30c45-159">최대 버퍼 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-159">The maximum size of the buffer.</span></span> <span data-ttu-id="30c45-160">기본값은 65536(0x10000)바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-160">The default value is 65536 (0x10000) bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-161">메시지 전송 (Optimization Mechanism) 메시지에서 Windows Communication Foundation (WCF) 여러 MIME 부분으로 구성 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-161">Message Transmission Optimization Mechanism (MTOM) messages in Windows Communication Foundation (WCF) can consist of multiple MIME parts.</span></span> <span data-ttu-id="30c45-162">우선 메시지의 infoset 부분을 포함하는 MIME 부분이 항상 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-162">The message always includes a Multipurpose Internet Mail Extensions (MIME) part that contains the infoset portion of the message.</span></span> <span data-ttu-id="30c45-163">또한 메시지에 최적화된 이진 데이터가 포함되어 있는 경우 이진 데이터를 포함하는 추가 MIME 부분이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-163">In addition, if the message contains binary data that is optimized, it may contain additional MIME parts that contain binary data.</span></span> <span data-ttu-id="30c45-164">이러한 MIME 부분을 메시지에 표시하는 순서에 대한 요구 사항은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-164">There are no requirements imposed about what order these MIME parts must appear in the message.</span></span> <span data-ttu-id="30c45-165">메시지 읽기 프로세스에서는 순서가 잘못된 경우 MIME 부분을 버퍼링해야 하며,</span><span class="sxs-lookup"><span data-stu-id="30c45-165">The message reading process sometimes must buffer MIME parts if they appear out of order.</span></span> <span data-ttu-id="30c45-166">각 부분의 관련 MIME 헤더 정보를 버퍼링해야 할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-166">The message reading process also may have to buffer relevant MIME header information in each part.</span></span> <span data-ttu-id="30c45-167">이 <xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize%2A> 할당량은 MTOM 메시지를 읽을 때 할당될 수 있는 메모리 크기를 제한하여 버퍼링 요구에 따른 과도한 메모리 사용을 방지하기 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-167">This <xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize%2A> quota is intended to cap the amount of memory that can be allocated when reading MTOM messages and so limit the excessive consumption of memory due to the buffering requirements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="30c45-168">설정 값이 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="30c45-168">The value set is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxReadPoolSize">
      <MemberSignature Language="C#" Value="public int MaxReadPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxReadPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxReadPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReadPoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxReadPoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReadPoolSize : int with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxReadPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(64)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30c45-169">들어오는 메시지를 처리하는 데 사용할 수 있도록 풀에 할당되는 최대 XML 판독기 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-169">Gets or sets the maximum number of XML readers that is allocated to a pool and is ready for use to process incoming messages.</span></span></summary>
        <value><span data-ttu-id="30c45-170">풀에서 보유할 최대 판독기 수입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-170">The maximum number of readers to be kept in the pool.</span></span> <span data-ttu-id="30c45-171">기본값은 64개입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-171">The default value is 64 readers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-172">이 값을 늘리면 메모리 사용량이 증가하지만, 판독기를 새로 만들 필요 없이 이미 만들어진 풀의 판독기를 사용할 수 있기 때문에 인코더가 갑자기 많은 메시지가 들어오는 경우에 대비할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-172">Increasing this number increases memory consumption, but prepares the encoder to deal with sudden bursts of incoming messages because it is able to use readers from the pool that are already created instead of creating new ones.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30c45-173">값이 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="30c45-173">The value is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxWritePoolSize">
      <MemberSignature Language="C#" Value="public int MaxWritePoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWritePoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxWritePoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWritePoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWritePoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWritePoolSize : int with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxWritePoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(16)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30c45-174">보내는 메시지를 처리하는 데 사용할 수 있도록 풀에 할당되는 최대 XML 작성기 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-174">Gets or sets the maximum number of XML writers that is allocated to a pool and are ready for use to process outgoing messages.</span></span></summary>
        <value><span data-ttu-id="30c45-175">풀에서 보유할 최대 작성기 수입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-175">The maximum number of writers to be kept in the pool.</span></span> <span data-ttu-id="30c45-176">기본값은 16개입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-176">The default value is 16 writers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-177">이 값을 늘리면 메모리 사용량이 증가하지만, 작성기를 새로 만들 필요 없이 풀에서 이미 만들어진 작성기를 사용할 수 있기 때문에 인코더가 갑자기 많은 메시지가 나가는 경우에 대비할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-177">Increasing this number increases memory consumption, but prepares the encoder to deal with sudden bursts of outgoing messages because it is able to use writers from the pool that are already created instead of creating new ones.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30c45-178">값이 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="30c45-178">The value is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); void set(System::ServiceModel::Channels::MessageVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30c45-179">사용되거나 예상되는 SOAP 메시지 및 WS-Addressing 버전을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-179">Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</span></span></summary>
        <value><span data-ttu-id="30c45-180">SOAP 메시지에 사용되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-180">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the SOAP message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-181">사용되는 기본 <xref:System.ServiceModel.Channels.MessageVersion>은 WS-Addressing 1.0 및 SOAP1.2 버전으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-181">The default <xref:System.ServiceModel.Channels.MessageVersion> used consists of the version of WS-Addressing 1.0 and SOAP1.2.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="30c45-182">값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="30c45-182">The value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="30c45-183"><see cref="P:System.ServiceModel.Channels.MessageVersion.None" /> 값이 허용되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="30c45-183">The value <see cref="P:System.ServiceModel.Channels.MessageVersion.None" /> is not allowed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30c45-184">이 바인딩 요소로 구성된 엔드포인트에서 처리할 수 있는 XML 메시지의 복잡성에 대한 제약 조건을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-184">Gets or sets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</span></span></summary>
        <value><span data-ttu-id="30c45-185">교환된 SOAP 메시지에 대한 복잡성 제약 조건을 지정하는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-185">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged.</span></span> <span data-ttu-id="30c45-186">이러한 제약 조건의 기본값은 다음 설명 부분에 나와 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-186">The default values for these constraints are provided in the following Remarks section.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-187">복잡성 제약 조건을 사용하면 메시지 복잡성을 이용하여 리소스를 처리하는 엔드포인트에서 정체를 일으키려고 하는 DoS(서비스 거부) 공격을 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-187">The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="30c45-188">이러한 제약 조건과 해당 기본값을 나타내는 속성은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-188">The properties that express these constraints and their default values are as follows:</span></span>  
  
-   <span data-ttu-id="30c45-189"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span><span class="sxs-lookup"><span data-stu-id="30c45-189"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span></span>  
  
-   <span data-ttu-id="30c45-190"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span><span class="sxs-lookup"><span data-stu-id="30c45-190"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span></span>  
  
-   <span data-ttu-id="30c45-191"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="30c45-191"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span></span>  
  
-   <span data-ttu-id="30c45-192"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span><span class="sxs-lookup"><span data-stu-id="30c45-192"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span></span>  
  
-   <span data-ttu-id="30c45-193"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="30c45-193"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span></span>  
  
 <span data-ttu-id="30c45-194">자세한 내용은 <xref:System.Xml.XmlDictionaryReaderQuotas>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="30c45-194">For more information, see <xref:System.Xml.XmlDictionaryReaderQuotas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMessageVersion">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMessageVersion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMessageVersion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeMessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMessageVersion () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMessageVersion();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeMessageVersion : unit -&gt; bool" Usage="mtomMessageEncodingBindingElement.ShouldSerializeMessageVersion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30c45-195">SOAP 메시지 구조 버전을 serialize해야 하는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-195">Returns whether the SOAP message structure version should be serialized.</span></span></summary>
        <returns><span data-ttu-id="30c45-196">SOAP 버전을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-196"><see langword="true" /> if the SOAP version should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="mtomMessageEncodingBindingElement.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30c45-197">SOAP 메시지 구조의 복잡성에 대해 적용된 제약 조건을 serialize해야 하는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-197">Returns whether the constraints placed on the complexity of SOAP message structure should be serialized.</span></span></summary>
        <returns><span data-ttu-id="30c45-198">SOAP 메시지 제약 조건을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-198"><see langword="true" /> if the SOAP message constraints should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWriteEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWriteEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWriteEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeWriteEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWriteEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWriteEncoding();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWriteEncoding : unit -&gt; bool" Usage="mtomMessageEncodingBindingElement.ShouldSerializeWriteEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30c45-199">메시지 문자의 형식을 지정하는 데 사용되는 <see cref="T:System.Text.Encoding" />을 serialize해야 하는지 여부를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-199">Returns whether the <see cref="T:System.Text.Encoding" /> that is used to format the message characters should be serialized.</span></span></summary>
        <returns><span data-ttu-id="30c45-200">메시지 문자의 서식 형식을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-200"><see langword="true" /> if the type of message character formatting should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext policyContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext policyContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, policyContext As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ policyContext) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="policyContext" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="30c45-201">계약 정보를 내보내는 <see cref="T:System.ServiceModel.Description.WsdlExporter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-201">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span></span></param>
        <param name="policyContext"><span data-ttu-id="30c45-202">내보낸 WSDL 요소에서 계약 설명으로의 매핑을 제공하는 <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-202">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</span></span></param>
        <summary><span data-ttu-id="30c45-203">정책 어설션이 생성되면 WSDL에 삽입하여 MTOM 인코딩을 사용 중임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-203">Inserts a policy assertion into the WSDL, when it is generated, which indicates that an MTOM encoding is being used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-204">이 정책 어설션은 이 엔드포인트에서 MTOM 최적화가 사용될 수 있음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-204">This policy assertion indicates that MTOM optimization can be used at this endpoint.</span></span> <span data-ttu-id="30c45-205">즉, 텍스트 또는 MTOM 형식의 메시지를 수락해야 함을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-205">It implies that messages either in the text or MTOM format must be accepted.</span></span> <span data-ttu-id="30c45-206">클라이언트에서는 이 정책 어설션이 구문 분석되고, MTOM 인코딩 메시지를 수락할 수 있는 기능이 활성화됩니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-206">On the client, this policy assertion is parsed and the ability to accept MTOM-encoded messages is enabled.</span></span> <span data-ttu-id="30c45-207">정책 어설션은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-207">The policy assertion is as follows.</span></span>  
  
```  
<wsoma:OptimizedMimeSerialization xmlns:wsoma="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="30c45-208"><paramref name="policyContext" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-208"><paramref name="policyContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportContract">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext) Implements IWsdlExportExtension.ExportContract" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context) = System::ServiceModel::Description::IWsdlExportExtension::ExportContract;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="30c45-209">계약 정보를 내보내는 <see cref="T:System.ServiceModel.Description.WsdlExporter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-209">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span></span></param>
        <param name="context"><span data-ttu-id="30c45-210">내보낸 WSDL 요소에서 계약 설명으로의 매핑을 제공하는 <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-210">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</span></span></param>
        <summary><span data-ttu-id="30c45-211">MTOM 관련 정보에 대한 WSDL 계약을 수정합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-211">Modifies the WSDL contract for MTOM-specific information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-212"><xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System%23ServiceModel%23Description%23IWsdlExportExtension%23ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29> 메서드는 WSDL에 SOAP 메시지 버전을 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-212">The <xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System%23ServiceModel%23Description%23IWsdlExportExtension%23ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29> method puts the SOAP message version into the WSDL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext) Implements IWsdlExportExtension.ExportEndpoint" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context) = System::ServiceModel::Description::IWsdlExportExtension::ExportEndpoint;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="30c45-213">계약 정보를 내보내는 <see cref="T:System.ServiceModel.Description.WsdlExporter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-213">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span></span></param>
        <param name="context"><span data-ttu-id="30c45-214">내보낸 WSDL 요소에서 엔드포인트 설명으로의 매핑을 제공하는 <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-214">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the endpoint description.</span></span></param>
        <summary><span data-ttu-id="30c45-215">SOAP 메시지 버전을 WSDL에 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-215">Puts the SOAP message version into the WSDL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-216">SOAP를 지원하는 모든 사용자 지정 메시지 인코딩 바인딩 요소는 SOAP 메시지 버전을 WSDL에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-216">Any custom message encoding binding element that supports SOAP is responsible for adding the SOAP message version into the WSDL.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="30c45-217"><paramref name="context" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-217"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding WriteEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding WriteEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.WriteEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ WriteEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.WriteEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30c45-218">텍스트 메시지의 문자 형식을 지정하는 데 사용되는 인코딩을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-218">Gets or sets the encoding that is used to format the characters in the text message.</span></span></summary>
        <value><span data-ttu-id="30c45-219">텍스트 메시지의 문자 형식을 지정하는 데 사용되는 <see cref="T:System.Text.Encoding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-219">The <see cref="T:System.Text.Encoding" /> that is used to format the characters in the text message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30c45-220">기본 텍스트 인코딩은 UTF-8 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-220">The default text encoding is the UTF-8 format.</span></span> <span data-ttu-id="30c45-221">또한 Unicode 및 Big Endian Unicode와 같은 인코딩을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="30c45-221">Other possible encodings include, for example, Unicode and Big Endian Unicode.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="30c45-222">값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="30c45-222">The value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="30c45-223">값이 유효한 텍스트 인코딩 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="30c45-223">The value is not valid text encoding value.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>