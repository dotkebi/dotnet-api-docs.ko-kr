<Type Name="TcpTransportBindingElement" FullName="System.ServiceModel.Channels.TcpTransportBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dca9f207b00c424cab9badf204a48d13d7b63a3" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57942675" /></Metadata><TypeSignature Language="C#" Value="public class TcpTransportBindingElement : System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpTransportBindingElement extends System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TcpTransportBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpTransportBindingElement&#xA;Inherits ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpTransportBindingElement : System::ServiceModel::Channels::ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="F#" Value="type TcpTransportBindingElement = class&#xA;    inherit ConnectionOrientedTransportBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="349fa-101">TCP 전송을 위한 바인딩 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-101">Represents the binding element for the TCP transport.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-102">폼의 Uri를 사용 하는이 전송은 "`net.tcp`://`hostname`:`port`/`path`"입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-102">This transport uses URIs of the form "`net.tcp`://`hostname`:`port`/`path`".</span></span> <span data-ttu-id="349fa-103">다른 URI 구성 요소는 선택적입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-103">Other URI components are optional.</span></span>  
  
 <span data-ttu-id="349fa-104"><xref:System.ServiceModel.Channels.TcpTransportBindingElement> 클래스는 TCP 전송 프로토콜을 구현하는 사용자 지정 바인딩을 만들기 위한 시작점입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-104">The <xref:System.ServiceModel.Channels.TcpTransportBindingElement> class is the starting point for creating a custom binding that implements the TCP transport protocol.</span></span> <span data-ttu-id="349fa-105">이 전송은 WCF 통신을 위해 최적화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-105">This transport is optimized for WCF communication.</span></span>  
  
 <span data-ttu-id="349fa-106">WCF 서비스 모델을 구현 하는 팩터리 개체를 만들려면이 클래스를 사용 합니다 <xref:System.ServiceModel.Channels.IChannelFactory> 및 <xref:System.ServiceModel.Channels.IChannelListener> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-106">The WCF service model uses this class to create factory objects that implement the <xref:System.ServiceModel.Channels.IChannelFactory> and <xref:System.ServiceModel.Channels.IChannelListener> interfaces.</span></span> <span data-ttu-id="349fa-107">그런 다음 이러한 팩터리 개체는 TCP 프로토콜을 사용하여 SOAP 메시지를 전송하는 채널을 생성하고 수락합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-107">These factory objects, in turn, create and accept the channels that transmit SOAP messages using the TCP protocol.</span></span>  
  
 <span data-ttu-id="349fa-108"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled%2A> 및 <xref:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout%2A>과 같은 속성을 설정하여 이 클래스가 생성하는 팩토리를 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-108">You configure the factories that this class creates by setting its properties, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled%2A> and <xref:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout%2A>.</span></span>  
  
 <span data-ttu-id="349fa-109">또한 기본 클래스 <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>에서 <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize%2A>, <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A>, <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize%2A>와 같은 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-109">You can also set properties on the base class <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>, such as <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize%2A>, <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A>, and <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize%2A>.</span></span> <span data-ttu-id="349fa-110">속성의 전체 목록은 <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="349fa-110">For a complete list of properties, see <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>.</span></span>  
  
 <span data-ttu-id="349fa-111">마지막으로 기본 클래스 <xref:System.ServiceModel.Channels.TransportBindingElement>에서 <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> 및 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>와 같은 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-111">Finally, you can set properties on the base class <xref:System.ServiceModel.Channels.TransportBindingElement>, such as <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> and <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>.</span></span> <span data-ttu-id="349fa-112">속성의 전체 목록은 <xref:System.ServiceModel.Channels.TransportBindingElement>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="349fa-112">For a complete list of properties, see <xref:System.ServiceModel.Channels.TransportBindingElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349fa-113">다음 예제에서는 이 클래스를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-113">The following example shows how to use this class.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="349fa-114"><see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpTransportBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="349fa-115"><see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="349fa-116">다음 예제에서는 <xref:System.ServiceModel.Channels.TcpTransportBindingElement> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-116">The following example shows how to create a new instance of the <xref:System.ServiceModel.Channels.TcpTransportBindingElement> class.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TcpTransportBindingElement (System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As TcpTransportBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TcpTransportBindingElement(System::ServiceModel::Channels::TcpTransportBindingElement ^ elementToBeCloned);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.TcpTransportBindingElement : System.ServiceModel.Channels.TcpTransportBindingElement -&gt; System.ServiceModel.Channels.TcpTransportBindingElement" Usage="new System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.TcpTransportBindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned"><span data-ttu-id="349fa-117"><see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-117">An instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span></span></param>
        <summary><span data-ttu-id="349fa-118"><see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-119">이 메서드는 바인딩 요소를 복제하는 데 사용되는 복사 생성자이며 파생 클래스가 <xref:System.ServiceModel.Channels.TcpTransportBindingElement.Clone%2A>를 구현할 수 있도록 공개됩니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-119">This method is a copy constructor used to clone the binding element, and is exposed so that derived classes can implement <xref:System.ServiceModel.Channels.TcpTransportBindingElement.Clone%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="tcpTransportBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="349fa-120">채널 팩터리의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-120">Type of channel factory.</span></span></typeparam>
        <param name="context"><span data-ttu-id="349fa-121">채널 팩터리를 만드는 데 필요한 바인딩, 동작, 계약, 기타 정보를 설명하는 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-121"><see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</span></span></param>
        <summary><span data-ttu-id="349fa-122">채널을 만드는 데 사용할 수 있는 채널 팩터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-122">Creates a channel factory that can be used to create a channel.</span></span></summary>
        <returns><span data-ttu-id="349fa-123">지정된 형식의 채널 팩터리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-123">Returns a channel factory of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-124">이 메서드는 TCP 바인딩 요소의 구성에 따라 메시지를 보내기 위한 채널 팩터리를 만드는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-124">This method can be used to create a channel factory for sending messages based on the configuration of the TCP binding element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349fa-125">다음 예제에서는 채널을 만드는 데 사용할 수 있는 채널 팩터리를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-125">The following example shows how to create a channel factory that can be used to create a channel.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="349fa-126"><paramref name="context" />가 <see langword="null" />이 될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="349fa-126"><paramref name="context" /> cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="349fa-127">잘못된 인수가 전달된 경우</span><span class="sxs-lookup"><span data-stu-id="349fa-127">An invalid argument was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="tcpTransportBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="349fa-128">채널 수신기의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-128">Type of channel listener.</span></span></typeparam>
        <param name="context"><span data-ttu-id="349fa-129">채널 팩터리를 만드는 데 필요한 바인딩, 동작, 계약, 기타 정보를 설명하는 <see cref="T:System.ServiceModel.Channels.BindingContext" /> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-129"><see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</span></span></param>
        <summary><span data-ttu-id="349fa-130">지정된 형식의 채널 수신기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-130">Creates a channel listener of the specified type.</span></span></summary>
        <returns><span data-ttu-id="349fa-131">지정된 형식의 채널 수신기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-131">Returns a channel listener of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-132">이 메서드는 TCP 바인딩 요소의 구성에 따라 메시지를 받기 위한 채널 수신기를 만드는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-132">This method can be used to create a channel listener for receiving messages based on the configuration of the TCP binding element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349fa-133">다음 예제에서는 지정된 형식의 채널 수신기를 반환하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-133">The following example shows how to return a channel listener of the specified type.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="349fa-134"><paramref name="context" />가 <see langword="null" />이 될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="349fa-134"><paramref name="context" /> cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="349fa-135">잘못된 인수가 전달된 경우</span><span class="sxs-lookup"><span data-stu-id="349fa-135">An invalid argument was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="tcpTransportBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="349fa-136">현재 바인딩 요소의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-136">Creates a copy of the current binding element.</span></span></summary>
        <returns><span data-ttu-id="349fa-137">현재 바인딩 요소의 복사본을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-137">Returns a copy of the current binding element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="349fa-138">다음 예제에서는 현재 바인딩 요소의 복사본을 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-138">The following example shows how to create a copy of the current binding element.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionPoolSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.TcpConnectionPoolSettings ConnectionPoolSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.TcpConnectionPoolSettings ConnectionPoolSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionPoolSettings As TcpConnectionPoolSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::TcpConnectionPoolSettings ^ ConnectionPoolSettings { System::ServiceModel::Channels::TcpConnectionPoolSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionPoolSettings : System.ServiceModel.Channels.TcpConnectionPoolSettings" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TcpConnectionPoolSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="349fa-139">연결 풀 설정 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-139">Gets a collection of connection pool settings.</span></span></summary>
        <value><span data-ttu-id="349fa-140">연결 풀에 관련된 다양한 속성을 포함하는 <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-140">A <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> object that contains various properties related to connection pooling.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="349fa-141">다음 예제에서는 연결 풀 설정 컬렉션을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-141">The following example shows how to get a collection of connection pool settings.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="349fa-142">현재 확장 보호 정책을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-142">Gets or sets the current extended protection policy.</span></span></summary>
        <value><span data-ttu-id="349fa-143">확장 보호 정책입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-143">The extended protection policy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-144">확장 보호 정책은 들어오는 클라이언트 연결의 유효성을 검사하기 위해 서버에서 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-144">An extended protection policy is an object used by the server to validate incoming client connections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="tcpTransportBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="349fa-145">가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-145">The object to get.</span></span></typeparam>
        <param name="context"><span data-ttu-id="349fa-146"><see cref="T:System.ServiceModel.Channels.BindingContext" /></span><span class="sxs-lookup"><span data-stu-id="349fa-146">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span></span></param>
        <summary><span data-ttu-id="349fa-147"><see cref="T:System.ServiceModel.Channels.BindingContext" />에서 지정된 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-147">Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span></span></summary>
        <returns><span data-ttu-id="349fa-148"><see cref="T:System.ServiceModel.Channels.BindingContext" />에서 지정된 개체이거나, 개체를 찾을 수 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-148">The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or <see langword="null" /> if the object is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-149">이 메서드는 기본 클래스에서 또는 해당 클래스의 상위 항목 중 하나에서 지정된 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-149">This method gets the specified object from the base class, or from one of that class's ancestors.</span></span> <span data-ttu-id="349fa-150">반환된 개체는 일반적으로 속성 컬렉션입니다(예: <xref:System.ServiceModel.Channels.ISecurityCapabilities>를 구현하는 개체).</span><span class="sxs-lookup"><span data-stu-id="349fa-150">The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349fa-151">다음 예제에서는 <xref:System.ServiceModel.Channels.BindingContext>에서 지정된 개체를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-151">The following example shows how to get a specified object from the <xref:System.ServiceModel.Channels.BindingContext>.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenBacklog">
      <MemberSignature Language="C#" Value="public int ListenBacklog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListenBacklog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenBacklog As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListenBacklog { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ListenBacklog : int with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="349fa-152">보류할 수 있는 최대 대기 중 연결 요청 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-152">Gets or sets the maximum number of queued connection requests that can be pending.</span></span></summary>
        <value><span data-ttu-id="349fa-153">보류할 수 있는 최대 대기 중 연결 요청 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-153">Returns the maximum number of queued connection requests that can be pending.</span></span> <span data-ttu-id="349fa-154">기본값은 10입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-154">The default is 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-155"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A>는 대기될 "보류 중 승인" 요청 수를 설명하는 소켓 수준 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-155"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of "pending accept" requests to be queued.</span></span> <span data-ttu-id="349fa-156">내부 소켓 큐가 최대 동시 연결 수를 초과하지 않는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-156">Ensure that the underlying socket queue is not exceeded by the maximum number of concurrent connections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349fa-157">다음 예제에서는 ListenBacklog 값을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-157">The following example shows how to get the ListenBacklog value.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="349fa-158">값은 1보다 작을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-158">The value cannot be less than one.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PortSharingEnabled">
      <MemberSignature Language="C#" Value="public bool PortSharingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PortSharingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PortSharingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PortSharingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PortSharingEnabled : bool with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="349fa-159">이 연결에서 TCP 포트 공유를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-159">Gets or sets a value that indicates whether TCP port sharing is enabled for this connection.</span></span></summary>
        <value><span data-ttu-id="349fa-160">TCP 포트 공유를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-160"><see langword="true" /> if TCP port sharing is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="349fa-161">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-162">이 설정을 사용 하 여 해당 시작 유형이 수동 또는 자동으로 변경 하 여 WCF TCP Port Sharing Service를 사용 하도록 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-162">Using this setting requires enabling the WCF TCP Port Sharing Service by changing its Startup Type to Manual or Automatic.</span></span>  
  
 <span data-ttu-id="349fa-163">TCP 수신기 및 그 시작 방법에 대 한 정보를 참조 하세요 [Net.TCP 포트 공유](~/docs/framework/wcf/feature-details/net-tcp-port-sharing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-163">For information about the TCP Listener and how to start it, see [Net.TCP Port Sharing](~/docs/framework/wcf/feature-details/net-tcp-port-sharing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349fa-164">다음 예제에서는 TCP 포트 공유를 사용하는지 여부를 나타내는 값을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-164">The following example shows how to get a value that indicates whether TCP port sharing is enabled.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="349fa-165">전송을 위한 URI 체계를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-165">Returns the URI scheme for the transport.</span></span></summary>
        <value><span data-ttu-id="349fa-166">전송을 위한 URI 체계인 "net.tcp"를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-166">Returns the URI scheme for the transport, which is "net.tcp".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-167">이 속성은 기준 주소에 대한 바인딩 유효성 검사를 위해 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-167">The property is provided for validating bindings against base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349fa-168">다음 예제에서는 전송을 위한 URI 체계를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-168">The following example shows how to get the URI scheme for the transport.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeExtendedProtectionPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeExtendedProtectionPolicy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeExtendedProtectionPolicy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeExtendedProtectionPolicy();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeExtendedProtectionPolicy : unit -&gt; bool" Usage="tcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="349fa-169">확장 보호 정책을 XAML serialize할 수 없음을 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-169">Returns an indication that the extended protection policy is not XAML serializable.</span></span></summary>
        <returns><span data-ttu-id="349fa-170"><see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-170">Returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-171">확장 보호 정책은 들어오는 클라이언트 연결의 유효성을 검사하기 위해 서버에서 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-171">An extended protection policy is an object used by the server to validate incoming client connections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeListenBacklog">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeListenBacklog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeListenBacklog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeListenBacklog () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeListenBacklog();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeListenBacklog : unit -&gt; bool" Usage="tcpTransportBindingElement.ShouldSerializeListenBacklog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="349fa-172">TCP 전송 바인딩 요소가 수신 백로그를 serialize해야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-172">Indicates whether the TCP transport binding element should serialize listen backlog.</span></span></summary>
        <returns><span data-ttu-id="349fa-173">TCP 전송 바인딩 요소가 수신 백로그를 serialize해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-173"><see langword="true" /> if the TCP transport binding element should serialize listen backlog; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TeredoEnabled">
      <MemberSignature Language="C#" Value="public bool TeredoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TeredoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property TeredoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TeredoEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TeredoEnabled : bool with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="349fa-174">Teredo(방화벽으로 보호되는 클라이언트의 주소를 지정하는 기술)의 사용 여부를 지정하는 부울을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-174">Gets or sets a Boolean that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.</span></span></summary>
        <value><span data-ttu-id="349fa-175">Teredo를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-175"><see langword="true" /> if Teredo is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="349fa-176">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-176">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349fa-177">이 속성은 내부 TCP 소켓에 대해 Teredo를 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-177">This property enables Teredo for the underlying TCP socket.</span></span> <span data-ttu-id="349fa-178">자세한 내용은 [Teredo 개요](https://go.microsoft.com/fwlink/?LinkId=96649)합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-178">For more information, see [Teredo Overview](https://go.microsoft.com/fwlink/?LinkId=96649).</span></span>  
  
 <span data-ttu-id="349fa-179">이 속성은 [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] 및 [!INCLUDE[ws2003](~/includes/ws2003-md.md)]에만 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-179">This property is applicable only on [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] and [!INCLUDE[ws2003](~/includes/ws2003-md.md)].</span></span> [!INCLUDE[wv](~/includes/wv-md.md)]<span data-ttu-id="349fa-180">에는 시스템 수준의 Teredo 구성 옵션이 있으므로 [!INCLUDE[wv](~/includes/wv-md.md)]를 실행할 경우 이 속성이 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-180">has a machine-wide configuration option for Teredo, so when running [!INCLUDE[wv](~/includes/wv-md.md)], this property is ignored.</span></span> <span data-ttu-id="349fa-181">Teredo를 사용할 경우 클라이언트와 서비스 시스템 모두에 Microsoft IPv6 스택을 설치하고 Teredo 사용에 적합하도록 구성해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-181">Teredo requires that the client and service machines both have the Microsoft IPv6 stack installed and correctly configured for Teredo usage.</span></span> <span data-ttu-id="349fa-182">Teredo 구성에 대 한 자세한 내용은 참조 하세요. [Teredo 개요](https://go.microsoft.com/fwlink/?LinkId=96649)합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-182">For more information about configuring Teredo, see [Teredo Overview](https://go.microsoft.com/fwlink/?LinkId=96649).</span></span> <span data-ttu-id="349fa-183">Microsoft IPv6 스택 설치에 대 한 자세한 내용은 참조 하세요. [Windows Server 2003 기술 센터](https://go.microsoft.com/fwlink/?LinkId=96650)합니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-183">For more information about Microsoft IPv6 stack installation, see [Windows Server 2003 Technology Centers](https://go.microsoft.com/fwlink/?LinkId=96650).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349fa-184">다음 예제에서는 내부 TCP 소켓에 대해 Teredo를 사용하도록 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="349fa-184">The following example shows how to enable Teredo for the underlying TCP socket.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>