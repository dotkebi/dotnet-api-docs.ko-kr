<Type Name="ConnectionOrientedTransportBindingElement" FullName="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd587f53a86e4842e8b6feaa87fa0781489e51fe" /><Meta Name="ms.sourcegitcommit" Value="b99ec7065534584bfab2aebde9f144bedabb075a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="58185142" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConnectionOrientedTransportBindingElement : System.ServiceModel.Channels.TransportBindingElement, System.ServiceModel.Description.IPolicyExportExtension, System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionOrientedTransportBindingElement extends System.ServiceModel.Channels.TransportBindingElement implements class System.ServiceModel.Description.IPolicyExportExtension, class System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionOrientedTransportBindingElement&#xA;Inherits TransportBindingElement&#xA;Implements IPolicyExportExtension, IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionOrientedTransportBindingElement abstract : System::ServiceModel::Channels::TransportBindingElement, System::ServiceModel::Description::IPolicyExportExtension, System::ServiceModel::Description::IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type ConnectionOrientedTransportBindingElement = class&#xA;    inherit TransportBindingElement&#xA;    interface IPolicyExportExtension&#xA;    interface IWsdlExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.TransportBindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IWsdlExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="41fb2-101">TCP 및 명명된 파이프와 같은 연결 지향 전송의 공통 속성을 사용하여 기본 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />를 보완하는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-101">An abstract class that supplements the base <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> with additional properties that are common to connection-oriented transports such as TCP and named pipes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-102">이 클래스는 전송 계층에 대한 완전한 이해를 돕기 위해 설명하며 직접 호출하는 클래스가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-102">This class is documented to give a more complete understanding of the transports hierarchy and is not expected to be directly called.</span></span> <span data-ttu-id="41fb2-103">생성자는 직접 생성 및 호출을 방지하기 위해 내부 생성자가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-103">The constructor is internal to avoid direct construction and invocation.</span></span> <span data-ttu-id="41fb2-104">이 바인딩 요소의 public 속성은 파생 클래스 <xref:System.ServiceModel.Channels.TcpTransportBindingElement> 및 <xref:System.ServiceModel.Channels.NamedPipeTransportBindingElement>에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-104">The public properties of this binding element can be called from the derived classes <xref:System.ServiceModel.Channels.TcpTransportBindingElement> and <xref:System.ServiceModel.Channels.NamedPipeTransportBindingElement>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="connectionOrientedTransportBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="41fb2-105">확인할 채널의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-105">The type of channel to check.</span></span></typeparam>
        <param name="context"><span data-ttu-id="41fb2-106">채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-106">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span></span></param>
        <summary><span data-ttu-id="41fb2-107">지정된 형식의 채널 팩터리를 생성할 수 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-107">Determines whether a channel factory of the specified type can be built.</span></span></summary>
        <returns><span data-ttu-id="41fb2-108">채널 팩터리를 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-108"><see langword="true" /> if a channel factory can be built; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-109">채널 팩터리를 만들기 전에 이 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-109">You should call this method before trying to create a channel factory.</span></span>  
  
 <span data-ttu-id="41fb2-110">`TChannel`이 <xref:System.ServiceModel.Channels.IDuplexSessionChannel>이면 이 메서드는 버퍼링 모드에서만 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-110">If `TChannel` is <xref:System.ServiceModel.Channels.IDuplexSessionChannel> this method returns `true` only when in buffered mode.</span></span> <span data-ttu-id="41fb2-111">`TChannel`이 <xref:System.ServiceModel.Channels.IRequestChannel>이면 이 메서드는 스트리밍 모드에서만 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-111">If `TChannel` is <xref:System.ServiceModel.Channels.IRequestChannel> this method returns `true` only when in streaming mode.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="41fb2-112"><paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-112"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="connectionOrientedTransportBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="41fb2-113">확인할 채널의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-113">The type of channel to check.</span></span></typeparam>
        <param name="context"><span data-ttu-id="41fb2-114">채널의 <see cref="T:System.ServiceModel.Channels.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-114">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span></span></param>
        <summary><span data-ttu-id="41fb2-115">지정된 형식의 채널 수신기를 생성할 수 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-115">Determines whether a channel listener of the specified type can be built.</span></span></summary>
        <returns><span data-ttu-id="41fb2-116">채널 수신기를 생성할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-116"><see langword="true" /> if a channel listener can be built; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-117">채널 수신기를 만들기 전에 이 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-117">You should call this method before trying to create a channel listener.</span></span>  
  
 <span data-ttu-id="41fb2-118">`TChannel`이 <xref:System.ServiceModel.Channels.IDuplexSessionChannel>이면 이 메서드는 버퍼링 모드에서만 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-118">If `TChannel` is <xref:System.ServiceModel.Channels.IDuplexSessionChannel> this method returns `true` only when in buffered mode.</span></span> <span data-ttu-id="41fb2-119">`TChannel`이 <xref:System.ServiceModel.Channels.IReplyChannel>이면 이 메서드는 스트리밍 모드에서만 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-119">If `TChannel` is <xref:System.ServiceModel.Channels.IReplyChannel> this method returns `true` only when in streaming mode.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="41fb2-120"><paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-120"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ChannelInitializationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ChannelInitializationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelInitializationTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ChannelInitializationTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ChannelInitializationTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:00:05")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:00:30")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41fb2-121">연결이 끊어지기 전에 채널이 초기화 상태를 유지할 수 있는 최대 시간을 결정하는 <see cref="T:System.TimeSpan" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-121">Gets or sets a <see cref="T:System.TimeSpan" /> that determines the maximum time a channel can be in the initialization status before being disconnected.</span></span></summary>
        <value><span data-ttu-id="41fb2-122">채널 초기화 요청을 시간 초과로 처리할 제한 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-122">A <see cref="T:System.TimeSpan" /> after which a channel initialization request times out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-123">이 속성은 TCP 연결이.NET 프레이밍 프로토콜을 사용 하 여 자신을 인증에 소요 수 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-123">This property determines how long a TCP connection can take to authenticate itself using the .NET Framing protocol.</span></span> <span data-ttu-id="41fb2-124">서버가 인증을 수행하는 데 충분한 정보를 가지려면 클라이언트가 몇 가지 초기 데이터를 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-124">A client needs to send some initial data before the server has enough information to perform authentication.</span></span> <span data-ttu-id="41fb2-125">이 시간 제한은 인증되지 않은 악의적 클라이언트가 서버에 너무 오래 연결되지 않도록 ReceiveTimeout(10분)보다 일부러 작게 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-125">This timeout is intentionally made smaller than the ReceiveTimeout (10 min) so that malicious unauthenticated clients do not keep the connections tied up to the server for long.</span></span> <span data-ttu-id="41fb2-126">기본값은 30초입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-126">The default value is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionBufferSize">
      <MemberSignature Language="C#" Value="public int ConnectionBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionBufferSize : int with get, set" Usage="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(8192)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41fb2-127">통신 중에 클라이언트나 서비스로부터 serialize된 메시지 청크를 전송할 때 사용되는 버퍼의 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-127">Gets or sets the size of the buffer used to transmit a chunk of the serialized message on the wire from the client or service.</span></span></summary>
        <value><span data-ttu-id="41fb2-128">연결 버퍼의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-128">The size of the connection buffer.</span></span> <span data-ttu-id="41fb2-129">기본값은 8192,536바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-129">The default value is 8192 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-130">평균 메시지 크기 및 교환 패턴에 따라 처리 성능을 높이기 위해 이 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-130">This value can be changed to provide better throughput based on average message sizes and exchange patterns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="41fb2-131">값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-131">The value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="connectionOrientedTransportBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="41fb2-132">속성의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-132">Type of the property.</span></span></typeparam>
        <param name="context"><span data-ttu-id="41fb2-133">바인딩 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-133">The binding context.</span></span></param>
        <summary><span data-ttu-id="41fb2-134">바인딩 스택에 속성이 있는 경우 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-134">Gets properties from the binding stack, if present.</span></span></summary>
        <returns><span data-ttu-id="41fb2-135">바인딩 스택의 <paramref name="T" /> 개체(있는 경우)입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-135">A <paramref name="T" /> object from the binding stack, if present.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-136">이 메서드는 바인딩 요소 스택을 나타내는 바인딩 컨텍스트를 입력 매개 변수로 받습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-136">This method receives a binding context as an input parameter, which represents the stack of binding elements.</span></span>  
  
 <span data-ttu-id="41fb2-137">스택에 있는 각 바인딩 요소는 조회를 직접 처리하거나 위임할 수 있으며 두 작업을 조합하여 수행할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-137">Each binding element in the stack can handle the inquiry itself, delegate the inquiry, or a combination of the two.</span></span> <span data-ttu-id="41fb2-138">각 바인딩 요소는 조회를 위임할 경우 컨텍스트를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-138">Each binding element can modify the context if it delegates the inquiry.</span></span> <span data-ttu-id="41fb2-139">전송 바인딩 요소는 조회를 직접 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-139">However, a transport binding element handles the inquiry itself.</span></span>  
  
 <span data-ttu-id="41fb2-140">이 메서드는 바인딩 요소뿐만 아니라 <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener> 및 <xref:System.ServiceModel.Channels.IChannel>과 같은 런타임 개체에 의해서도 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-140">This method is implemented by binding elements as well as by the run-time objects such as <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener>, and <xref:System.ServiceModel.Channels.IChannel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41fb2-141">URI 비교 시 서비스에 액세스하는 데 호스트 이름이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-141">Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</span></span></summary>
        <value><span data-ttu-id="41fb2-142">들어오는 요청을 엔드포인트 URI로 라우팅할 때 호스트 이름 포함 여부를 나타내는 <see cref="T:System.ServiceModel.HostNameComparisonMode" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-142">The <see cref="T:System.ServiceModel.HostNameComparisonMode" /> value that indicates whether the hostname is included when routing incoming requests to an endpoint URI.</span></span> <span data-ttu-id="41fb2-143">기본값은 비교 시 호스트 이름 및 포트 번호를 무시하는 <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-143">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname and port number in the comparison.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-144">기타 값과 값에 대한 설명은 <xref:System.ServiceModel.HostNameComparisonMode> 열거형을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="41fb2-144">See the <xref:System.ServiceModel.HostNameComparisonMode> enumeration for further values and their descriptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="41fb2-145">값이 올바른 <see cref="T:System.ServiceModel.HostNameComparisonMode" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-145">The value is not a valid <see cref="T:System.ServiceModel.HostNameComparisonMode" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferSize : int with get, set" Usage="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41fb2-146">사용할 버퍼의 최대 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-146">Gets or sets the maximum size of the buffer to use.</span></span> <span data-ttu-id="41fb2-147">스트리밍된 메시지의 경우 이 값은 버퍼링된 모드에서 읽어오는 메시지 헤더의 최대 예상 크기 이상이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-147">For streamed messages, this value should be at least the maximum possible size of the message headers, which are read in buffered mode.</span></span></summary>
        <value><span data-ttu-id="41fb2-148">메모리에서 들어오는 메시지를 버퍼링하는 데 사용되는 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-148">The maximum number of bytes that are used to buffer incoming messages in memory.</span></span> <span data-ttu-id="41fb2-149">기본값은 65,536바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-149">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-150">스트리밍된 메시지의 경우 이 속성은 메시지 헤더에만 적용되고, 버퍼링된 메시지의 경우 전체 메시지에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-150">For streamed messages this property only applies to the message headers; for buffered messages it applies to the entire message.</span></span>  
  
 <span data-ttu-id="41fb2-151">이 속성의 값은 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>보다 작거나 같고 메시지 헤더 크기보다 커야 하며, 그렇지 않으면 채널에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-151">The value of this property must be less than or equal to <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> and must be larger than the size of the headers of the message or the channel throws an exception.</span></span>  
  
 <span data-ttu-id="41fb2-152">버퍼링할 수 있는 양보다 많은 데이터를 수신할 경우 채널에서 <xref:System.ServiceModel.CommunicationException>이 throw되며, 이 예외는 <xref:System.ServiceModel.QuotaExceededException>을 내부 예외로 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-152">If you receive more data than you can buffer the channel throws a <xref:System.ServiceModel.CommunicationException>, which contains a <xref:System.ServiceModel.QuotaExceededException> as an inner exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="41fb2-153">값이 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-153">The value is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxOutputDelay">
      <MemberSignature Language="C#" Value="public TimeSpan MaxOutputDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxOutputDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxOutputDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxOutputDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MaxOutputDelay : TimeSpan with get, set" Usage="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:00:00.2")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41fb2-154">메시지 청크 또는 전체 메시지를 보내기 전에 메모리에 버퍼링된 상태로 유지할 수 있는 최대 시간 간격을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-154">Gets or sets the maximum interval of time that a chunk of a message or a full message can remain buffered in memory before being sent out.</span></span></summary>
        <value><span data-ttu-id="41fb2-155">메시지 청크 또는 전체 메시지를 보내기 전에 메모리에 버퍼링된 상태로 유지할 수 있는 최대 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다. 기본값은 2 초입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-155">A <see cref="T:System.TimeSpan" /> that specifies the maximum interval of time that a chunk of a message or a full message can remain buffered in memory before being sent out. The default value is 2 seconds.</span></span> <span data-ttu-id="41fb2-156">이 속성은 보내는 메시지의 <see cref="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching" /> 속성이 <see langword="true" />로 설정된 경우에만 유효합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-156">This property is only meaningful if the <see cref="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching" /> property of an outgoing message is set to <see langword="true" />.</span></span> <span data-ttu-id="41fb2-157">그렇지 않으면 이 값이 무시되고 메시지가 즉시 전송됩니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-157">Otherwise, this value is ignored and messages are sent immediately.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-158"><xref:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching%2A>이 `false`이면 해당 메시지에 대해 이 속성이 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-158">If <xref:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching%2A> is `false` then this property is ignored for that message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="41fb2-159">값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-159">The value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingAccepts">
      <MemberSignature Language="C#" Value="public int MaxPendingAccepts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingAccepts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingAccepts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingAccepts { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPendingAccepts : int with get, set" Usage="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41fb2-160">서비스에 들어오는 연결을 처리하기 위해 수신기에서 서비스가 대기할 수 있는 최대 채널 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-160">Gets or sets the maximum number of channels a service can have waiting on a listener for processing incoming connections to the service.</span></span></summary>
        <value><span data-ttu-id="41fb2-161">서비스가 수신기에 대기시킬 수 있는 최대 채널 수입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-161">The maximum number of channels a service can have waiting on a listener.</span></span> <span data-ttu-id="41fb2-162">기본값은 2 \* 프로세서 수입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-162">The default value is 2 \* number of processors.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-163">이 속성은 서버가 수신기에서 대기시킬 수 있는 채널 수를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-163">This property limits the number of channels that the server can have waiting on a listener.</span></span> <span data-ttu-id="41fb2-164">MaxPendingAccepts가 너무 낮으면 모든 대기 채널이 연결 서비스를 시작한 후 새 채널이 수신을 시작하기 전까지 약간의 시간 간격이 있게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-164">When MaxPendingAccepts is too low, there will be a small interval of time in which all of the waiting channels have started servicing connections, but no new channels have begun listening.</span></span> <span data-ttu-id="41fb2-165">이 간격 동안 연결이 도달할 수 있으며 이 경우 서버에서 연결 대기 중인 채널이 없기 때문에 연결이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-165">A connection can arrive during this interval and will fail because nothing is waiting for it on the server.</span></span> <span data-ttu-id="41fb2-166">이 속성은 <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections%2A> 속성을 큰 숫자로 설정하여 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-166">This property can be configured by setting the <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections%2A> property to a larger number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="41fb2-167">값이 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-167">The value is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingConnections">
      <MemberSignature Language="C#" Value="public int MaxPendingConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingConnections" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingConnections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPendingConnections : int with get, set" Usage="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41fb2-168">서비스에서 디스패치를 대기하는 최대 연결 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-168">Gets or sets the maximum number of connections awaiting dispatch on the service.</span></span></summary>
        <value><span data-ttu-id="41fb2-169">서비스에서 디스패치를 대기하는 최대 인바운드 연결 수입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-169">The maximum number of inbound connections awaiting dispatch on the service.</span></span> <span data-ttu-id="41fb2-170">기본값은 12 \* 프로세서 수입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-170">The default value is 12 \* number of processors.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-171">이 속성은 전송에서 승인하였지만 ServiceModel 디스패처에서 선택하지 않은 연결 수를 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-171">This property controls how many connections a transport has accepted but have not been picked up by the ServiceModel Dispatcher.</span></span> <span data-ttu-id="41fb2-172">이 값을 설정하려면 바인딩 요소의 `MaxConnections` 또는 바인딩의 `maxOutboundConnectionsPerEndpoint`를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-172">To set this value, use `MaxConnections` on the binding or `maxOutboundConnectionsPerEndpoint` on the binding element.</span></span>  
  
 <span data-ttu-id="41fb2-173">스택의 상위 계층에서 `AcceptDispatch`를 호출하면 디스패치 대기 중인 연결 큐에서 해당 연결이 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-173">When a higher layer in the stack calls `AcceptDispatch`, that connection is removed from the queue of connections awaiting dispatch.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="41fb2-174">값이 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-174">The value is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMaxPendingAccepts">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMaxPendingAccepts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMaxPendingAccepts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingAccepts" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMaxPendingAccepts () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMaxPendingAccepts();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeMaxPendingAccepts : unit -&gt; bool" Usage="connectionOrientedTransportBindingElement.ShouldSerializeMaxPendingAccepts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41fb2-175">연결 지향 전송 바인딩 요소가 최대 개수의 보류 중인 허용을 serialize해야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-175">Indicates whether the connection oriented transport binding element should serialize maximum pending accepts.</span></span></summary>
        <returns><span data-ttu-id="41fb2-176">연결 지향 전송 바인딩 요소가 최대 개수의 보류 중인 허용을 serialize해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-176"><see langword="true" /> if the connection oriented transport binding element should serialize maximum pending accepts; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMaxPendingConnections">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMaxPendingConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMaxPendingConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ShouldSerializeMaxPendingConnections" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMaxPendingConnections () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMaxPendingConnections();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeMaxPendingConnections : unit -&gt; bool" Usage="connectionOrientedTransportBindingElement.ShouldSerializeMaxPendingConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41fb2-177">연결 지향 전송 바인딩 요소가 최대 개수의 보류 중인 연결을 serialize해야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-177">Indicates whether the connection oriented transport binding element should serialize maximum pending connections.</span></span></summary>
        <returns><span data-ttu-id="41fb2-178">연결 지향 전송 바인딩 요소가 최대 개수의 보류 중인 연결을 serialize해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-178"><see langword="true" /> if the connection oriented transport binding element should serialize maximum pending connections; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="41fb2-179">내보내기 프로세스를 수정하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Description.MetadataExporter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-179">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span></span></param>
        <param name="context"><span data-ttu-id="41fb2-180">사용자 지정 정책 어설션을 삽입하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-180">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</span></span></param>
        <summary><span data-ttu-id="41fb2-181">바인딩에 대한 사용자 지정 정책 어설션을 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-181">Exports a custom policy assertion about bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-182">이 메서드는 WSDL 정보에 바인딩 관련 문을 특정 계약에 의해 노출 및 Windows Communication Foundation (WCF)에서 사용 되는 바인딩 스택에서이 사용자 지정 바인딩 요소의 존재 클라이언트와 통신할 수를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-182">This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by Windows Communication Foundation (WCF) to communicate to clients the existence of this custom binding element in the binding stack.</span></span>  
  
 <span data-ttu-id="41fb2-183">이 메서드는 <xref:System.ServiceModel.Description.MetadataExporter> 개체와 <xref:System.ServiceModel.Description.PolicyConversionContext> 개체라는 두 가지 매개 변수를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-183">This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects.</span></span> <span data-ttu-id="41fb2-184">다양한 범위에서 이미 내보낸 정책 어설션 컬렉션을 가져오려면 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> 및 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-184">Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes.</span></span> <span data-ttu-id="41fb2-185">그런 다음 이 메서드를 사용하여 적절한 컬렉션에 해당 정책 어설션을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-185">Then use this method to add your own policy assertions to the appropriate collection.</span></span>  
  
 <span data-ttu-id="41fb2-186"><xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> 속성은 내보낼 엔드포인트에 대한 <xref:System.ServiceModel.Description.ContractDescription>을 공개합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-186">The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported.</span></span> <span data-ttu-id="41fb2-187">이를 통해 이 메서드는 내보낸 정책 어설션의 범위를 정확하게 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-187">This allows this method to correctly scope their exported policy assertions.</span></span> <span data-ttu-id="41fb2-188">예를 들어, 코드의 보안 특성을 사용하여 보안 정책 어설션을 추가할 위치를 나타내는 동작을 <xref:System.ServiceModel.Description.ContractDescription>에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-188">For example, security attributes in code may add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.</span></span>  
  
 <span data-ttu-id="41fb2-189">사용자 지정 정책 어설션이 WSDL 정보에 연결되면 클라이언트는 <xref:System.ServiceModel.Description.IPolicyImportExtension> 인터페이스를 구현하여 사용자 지정 바인딩 어설션을 검색하고 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-189">Once custom policy assertions have been attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="41fb2-190"><paramref name="exporter" /> 또는 <paramref name="context" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-190"><paramref name="exporter" /> or <paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportContract">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext) Implements IWsdlExportExtension.ExportContract" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context) = System::ServiceModel::Description::IWsdlExportExtension::ExportContract;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="41fb2-191">계약 정보를 내보내는 <see cref="T:System.ServiceModel.Description.WsdlExporter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-191">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span></span></param>
        <param name="context"><span data-ttu-id="41fb2-192">내보낸 WSDL 요소에서 계약 설명으로의 매핑을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-192">Provides mappings from exported WSDL elements to the contract description.</span></span></param>
        <summary><span data-ttu-id="41fb2-193">계약에 대해 생성된 WSDL(웹 서비스 설명 언어)에 사용자 지정 WSDL 요소를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-193">Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext endpointContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext endpointContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportEndpoint (exporter As WsdlExporter, endpointContext As WsdlEndpointConversionContext) Implements IWsdlExportExtension.ExportEndpoint" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ endpointContext) = System::ServiceModel::Description::IWsdlExportExtension::ExportEndpoint;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endpointContext" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="41fb2-194">계약 정보를 내보내는 <see cref="T:System.ServiceModel.Description.WsdlExporter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-194">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span></span></param>
        <param name="endpointContext"><span data-ttu-id="41fb2-195">내보낸 WSDL 요소에서 엔드포인트 설명으로의 매핑을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-195">Provides mappings from exported WSDL elements to the endpoint description.</span></span></param>
        <summary><span data-ttu-id="41fb2-196">엔드포인트에 대해 생성된 WSDL(웹 서비스 설명 언어)에 사용자 지정 WSDL 요소를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-196">Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberSignature Language="F#" Value="member this.TransferMode : System.ServiceModel.TransferMode with get, set" Usage="System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41fb2-197">메시지가 연결 지향 전송을 사용하여 버퍼링되는지 아니면 스트리밍되는지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-197">Gets or sets a value that indicates whether the messages are buffered or streamed with the connection-oriented transport.</span></span></summary>
        <value><span data-ttu-id="41fb2-198">채널에서 메시지 전송에 스트리밍 모드를 사용할지 아니면 버퍼링 모드를 사용할지를 나타내는 <see cref="T:System.ServiceModel.TransferMode" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-198">A <see cref="T:System.ServiceModel.TransferMode" /> value which indicates whether a channel uses streamed or buffered modes of message transfer.</span></span> <span data-ttu-id="41fb2-199">기본값은 <see cref="F:System.ServiceModel.TransferMode.Buffered" />입니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-199">The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41fb2-200">이 속성은 요청 및 응답의 전송 모드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-200">This property determines the transfer mode for requests and responses.</span></span> <span data-ttu-id="41fb2-201">가능한 값은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="41fb2-201">Possible values include:</span></span>  
  
-   <xref:System.ServiceModel.TransferMode.Buffered>  
  
-   <xref:System.ServiceModel.TransferMode.Streamed>  
  
-   <xref:System.ServiceModel.TransferMode.StreamedRequest>  
  
-   <xref:System.ServiceModel.TransferMode.StreamedResponse>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="41fb2-202">값이 올바른 <see cref="T:System.ServiceModel.TransferMode" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="41fb2-202">The value is not a valid <see cref="T:System.ServiceModel.TransferMode" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>