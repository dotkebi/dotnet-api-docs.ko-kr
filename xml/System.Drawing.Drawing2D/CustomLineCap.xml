<Type Name="CustomLineCap" FullName="System.Drawing.Drawing2D.CustomLineCap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8747c0e15ab8b4bab7f3aa4fc6c088af2de1309" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56759015" /></Metadata><TypeSignature Language="C#" Value="public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomLineCap extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.CustomLineCap" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomLineCap&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type CustomLineCap = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9da97-101">사용자 정의 선 끝 모양을 끝 모양슐화합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-101">Encapsulates a custom user-defined line cap.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9da97-102">선 끝이 여행 및 GDI +에서 그린 선이나 곡선의 끝에 사용 됩니다 <xref:System.Drawing.Pen> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-102">Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <xref:System.Drawing.Pen> objects.</span></span> <span data-ttu-id="9da97-103">GDI +에서 몇 가지 미리 정의 된 캡 스타일을 지원 하 고 자신의 단면 스타일을 정의 하는 사용자를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-103">GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</span></span> <span data-ttu-id="9da97-104">이 클래스는 사용자 지정 단면 스타일을 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-104">This class is used to create custom cap styles.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9da97-105">다음 예제에서는 <xref:System.Drawing.Drawing2D.CustomLineCap> 클래스 사용 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-105">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap> class.</span></span> <span data-ttu-id="9da97-106">이 예제에서는 붙여넣기, Windows 폼에 코드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-106">To run this example paste, the code into a Windows Form.</span></span> <span data-ttu-id="9da97-107">폼의 처리할 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 `DrawCaps` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-107">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9da97-108">지정된 윤곽선 및 채우기를 사용하여 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-108">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="fillPath"><span data-ttu-id="9da97-109">사용자 지정 끝 모양의 채우기를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-109">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span></span></param>
        <param name="strokePath"><span data-ttu-id="9da97-110">사용자 지정 끝 모양의 윤곽선을 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-110">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span></span></param>
        <summary><span data-ttu-id="9da97-111">지정된 윤곽선 및 채우기를 사용하여 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-111">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9da97-112"><xref:System.Drawing.Drawing2D.CustomLineCap> 작업에 대해 지정 된 채우기 모드에 관계 없이 "권선" 채우기 모드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-112"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="9da97-113">합니다 `fillPath` 고 `strokePath` 동시에 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-113">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="9da97-114">하나의 매개 변수는 null 값을 전달 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-114">One parameter must be passed a null value.</span></span> <span data-ttu-id="9da97-115">모두 매개 변수는 null 값을 전달 하는 경우 `fillPath` 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-115">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="9da97-116">하는 경우 `strokePath` 됩니다 `null`, `fillPath` 음의 y를 차단 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-116">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9da97-117">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-117">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> constructor.</span></span> <span data-ttu-id="9da97-118">이 예제를 실행 하려면 Windows 형태로 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-118">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="9da97-119">폼의 처리할 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 `DrawCaps` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-119">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.LineCap -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath, baseCap)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="fillPath"><span data-ttu-id="9da97-120">사용자 지정 끝 모양의 채우기를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-120">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span></span></param>
        <param name="strokePath"><span data-ttu-id="9da97-121">사용자 지정 끝 모양의 윤곽선을 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-121">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span></span></param>
        <param name="baseCap"><span data-ttu-id="9da97-122">사용자 지정 끝 모양을 만들 선 끝 모양입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-122">The line cap from which to create the custom cap.</span></span></param>
        <summary><span data-ttu-id="9da97-123">지정된 윤곽선 및 채우기를 사용하여 지정된 기존 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형에서 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline and fill.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9da97-124"><xref:System.Drawing.Drawing2D.CustomLineCap> 작업에 대해 지정 된 채우기 모드에 관계 없이 "권선" 채우기 모드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-124"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="9da97-125">합니다 `fillPath` 고 `strokePath` 동시에 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-125">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="9da97-126">하나의 매개 변수는 null 값을 전달 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-126">One parameter must be passed a null value.</span></span> <span data-ttu-id="9da97-127">모두 매개 변수는 null 값을 전달 하는 경우 `fillPath` 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-127">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="9da97-128">하는 경우 `strokePath` 됩니다 `null`, `fillPath` 음의 y를 차단 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-128">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap, float32 baseInset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap, baseInset As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap, float baseInset);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.LineCap * single -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath, baseCap, baseInset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="baseInset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fillPath"><span data-ttu-id="9da97-129">사용자 지정 끝 모양의 채우기를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-129">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span></span></param>
        <param name="strokePath"><span data-ttu-id="9da97-130">사용자 지정 끝 모양의 윤곽선을 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-130">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span></span></param>
        <param name="baseCap"><span data-ttu-id="9da97-131">사용자 지정 끝 모양을 만들 선 끝 모양입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-131">The line cap from which to create the custom cap.</span></span></param>
        <param name="baseInset"><span data-ttu-id="9da97-132">끝 모양과 선 사이의 거리입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-132">The distance between the cap and the line.</span></span></param>
        <summary><span data-ttu-id="9da97-133">지정된 윤곽선, 채우기 및 음각을 사용하여 지정된 기존 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형에서 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-133">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline, fill, and inset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9da97-134"><xref:System.Drawing.Drawing2D.CustomLineCap> 작업에 대해 지정 된 채우기 모드에 관계 없이 "권선" 채우기 모드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-134"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="9da97-135">합니다 `fillPath` 고 `strokePath` 동시에 매개 변수를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-135">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="9da97-136">하나의 매개 변수는 null 값을 전달 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-136">One parameter must be passed a null value.</span></span> <span data-ttu-id="9da97-137">모두 매개 변수는 null 값을 전달 하는 경우 `fillPath` 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-137">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="9da97-138">하는 경우 `strokePath` 됩니다 `null`, `fillPath` 음의 y를 차단 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-138">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap BaseCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap BaseCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.BaseCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9da97-139">이 <see cref="T:System.Drawing.Drawing2D.LineCap" />의 기반이 되는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-139">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span></span></summary>
        <value><span data-ttu-id="9da97-140">이 <see cref="T:System.Drawing.Drawing2D.LineCap" />의 기반이 되는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-140">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseInset">
      <MemberSignature Language="C#" Value="public float BaseInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BaseInset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseInset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BaseInset { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.BaseInset : single with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9da97-141">끝 모양과 선 사이의 거리를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-141">Gets or sets the distance between the cap and the line.</span></span></summary>
        <value><span data-ttu-id="9da97-142">끝 모양의 시작과 선 끝 사이의 거리입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-142">The distance between the beginning of the cap and the end of the line.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="customLineCap.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9da97-143">이 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />의 정확한 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-143">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span></span></summary>
        <returns><span data-ttu-id="9da97-144">이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-144">The <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9da97-145">다음 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-145">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="9da97-146">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-146">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="9da97-147">사용 하 여 사용자 지정 선 끝 모양이 만듭니다는 <xref:System.Drawing.Drawing2D.GraphicsPath> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-147">Creates a custom line cap by using the <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="9da97-148">만듭니다는 <xref:System.Drawing.Drawing2D.CustomLineCap> 개체를 `firstCap`를 사용 하 여는 <xref:System.Drawing.Drawing2D.GraphicsPath> 방금 만든 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-148">Creates a <xref:System.Drawing.Drawing2D.CustomLineCap> object, `firstCap`,using the <xref:System.Drawing.Drawing2D.GraphicsPath> object just created.</span></span>  
  
-   <span data-ttu-id="9da97-149">복제본을 만듭니다 `firstCap` 를 사용 하 여를 <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9da97-149">Creates a clone of `firstCap` by using the <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> method.</span></span>  
  
-   <span data-ttu-id="9da97-150">설정 합니다 <xref:System.Drawing.Pen.CustomStartCap%2A> 및 <xref:System.Drawing.Pen.CustomEndCap%2A> 의 속성을 <xref:System.Drawing.Pen> 줄 및 사용자 지정 끝 모양을 화면에 그릴 펜을 사용 하 여 개체.</span><span class="sxs-lookup"><span data-stu-id="9da97-150">Sets up the <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties of the <xref:System.Drawing.Pen> object, and uses that pen to draw a line and the custom caps to the screen.</span></span>  
  
```vb  
Public Sub CloneExample(e As PaintEventArgs)  
 Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  
 New Point(5, - 5)  
 Dim capPath As New GraphicsPath()  
 ' Create a Path and add two lines to it,  
 ' forming a custom line cap.  
 capPath.AddLines(points)  
 ' Create a CustomLineCap object.  
 Dim firstCap As New CustomLineCap(Nothing, capPath)  
 ' Create a copy of firstCap.  
 Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  
 CustomLineCap)  
 ' Create a Pen object.  
 Dim pen As New Pen(Color.Black, 3F)  
 'Set up the line.  
 Dim point1 As New Point(20, 20)  
 Dim point2 As New Point(100, 100)  
 ' Set up the caps.  
 pen.CustomStartCap = firstCap  
 pen.CustomEndCap = secondCap  
 ' Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2)  
 End Sub  
```  
  
```csharp  
private void CloneExample(PaintEventArgs e)  
 {  
 // Create a Path and add two lines to it,  
 // forming a custom line cap.  
 Point[] points =  
 {  
 new Point(-5, -5),  
 new Point(0, 0),  
 new Point(5, -5)  
 };  
 GraphicsPath capPath = new GraphicsPath();  
 capPath.AddLines(points);  
 // Create a CustomLineCap object.  
 CustomLineCap firstCap = new CustomLineCap(null, capPath);  
 // Create a copy of firstCap.  
 CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  
 // Create a Pen object.  
 Pen pen = new Pen(Color.Black, 3.0f);  
 // Set up the line.  
 Point point1 = new Point(20, 20);  
 Point point2 = new Point(100, 100);  
 // Set up the caps.  
 pen.CustomStartCap = firstCap;  
 pen.CustomEndCap = secondCap;  
 // Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2);  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="customLineCap.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9da97-151">이 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-151">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9da97-152">호출 <xref:System.IDisposable.Dispose%2A> 이 사용 하는 리소스 <xref:System.Drawing.Drawing2D.CustomLineCap> 개체를 다른 용도로 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-152">Calling <xref:System.IDisposable.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.CustomLineCap> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="customLineCap.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="9da97-153">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-153"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9da97-154"><see cref="T:System.Drawing.Drawing2D.CustomLineCap" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-154">Releases the unmanaged resources used by the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CustomLineCap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CustomLineCap ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="customLineCap.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9da97-155">가비지 수집기에서 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />를 회수하기 전에 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-155">Allows an <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrokeCaps">
      <MemberSignature Language="C#" Value="public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetStrokeCaps([out] valuetype System.Drawing.Drawing2D.LineCap&amp; startCap, [out] valuetype System.Drawing.Drawing2D.LineCap&amp; endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetStrokeCaps (ByRef startCap As LineCap, ByRef endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetStrokeCaps([Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % startCap, [Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % endCap);" />
      <MemberSignature Language="F#" Value="member this.GetStrokeCaps :  *  -&gt; unit" Usage="customLineCap.GetStrokeCaps (startCap, endCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" RefType="out" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startCap"><span data-ttu-id="9da97-156">이 끝 모양 내의 선 시작 부분에 사용되는 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-156">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span></span></param>
        <param name="endCap"><span data-ttu-id="9da97-157">이 끝 모양 내의 선 끝 부분에 사용되는 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-157">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span></span></param>
        <summary><span data-ttu-id="9da97-158">이 사용자 지정 끝 모양을 구성하는 선의 시작과 끝에 사용되는 끝 모양을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-158">Gets the caps used to start and end lines that make up this custom cap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9da97-159">다음 예제에서는 <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-159">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> method.</span></span> <span data-ttu-id="9da97-160">이 예제를 실행 하려면 Windows 형태로 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-160">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="9da97-161">폼의 처리할 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 `DrawCaps` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-161">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStrokeCaps">
      <MemberSignature Language="C#" Value="public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStrokeCaps(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetStrokeCaps (startCap As LineCap, endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetStrokeCaps(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap);" />
      <MemberSignature Language="F#" Value="member this.SetStrokeCaps : System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.LineCap -&gt; unit" Usage="customLineCap.SetStrokeCaps (startCap, endCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="startCap"><span data-ttu-id="9da97-162">이 끝 모양 내의 선 시작 부분에 사용되는 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-162">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span></span></param>
        <param name="endCap"><span data-ttu-id="9da97-163">이 끝 모양 내의 선 끝 부분에 사용되는 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-163">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span></span></param>
        <summary><span data-ttu-id="9da97-164">이 사용자 지정 끝 모양을 구성하는 선의 시작과 끝에 사용되는 끝 모양을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-164">Sets the caps used to start and end lines that make up this custom cap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9da97-165">다음 예제에서는 <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-165">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> method.</span></span> <span data-ttu-id="9da97-166">이 예제를 실행 하려면 Windows 형태로 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-166">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="9da97-167">폼의 처리할 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 `DrawCaps` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-167">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property StrokeJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin StrokeJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.StrokeJoin : System.Drawing.Drawing2D.LineJoin with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9da97-168">이 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 개체를 구성하는 선의 조인 방식을 결정하는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-168">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object are joined.</span></span></summary>
        <value><span data-ttu-id="9da97-169">이 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 개체가 선을 조인할 때 사용하는 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-169">The <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object uses to join lines.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9da97-170">이 속성은 지정 된 <xref:System.Drawing.Drawing2D.LineJoin> 조인 선 및 곡선의 스트로크 경로 구성 하는 데 사용 되는 열거형 <xref:System.Drawing.Drawing2D.CustomLineCap> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-170">This property specifies a <xref:System.Drawing.Drawing2D.LineJoin> enumeration that is used to join lines and curves that make up the stroked path of this <xref:System.Drawing.Drawing2D.CustomLineCap> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthScale">
      <MemberSignature Language="C#" Value="public float WidthScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WidthScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberSignature Language="VB.NET" Value="Public Property WidthScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float WidthScale { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.WidthScale : single with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9da97-171"><see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 개체의 너비에 비례해서 이 <see cref="T:System.Drawing.Pen" /> 클래스 개체에 지정할 배율을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-171">Gets or sets the amount by which to scale this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.</span></span></summary>
        <value><span data-ttu-id="9da97-172">끝 모양에 지정할 배율입니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-172">The amount by which to scale the cap.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9da97-173">이 속성에는 사용자 지정 끝 모양의 크기를 곱하는 펜 너비의 배수로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-173">This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</span></span> <span data-ttu-id="9da97-174">예를 들어이 속성은 1, 사용자 지정 단면 너비가 10, 사용자 지정 끝 모양을 높이 5 및 3의 너비가 펜을 사용 하 여 줄이 그려집니다, cap 경우 그려지는 30 단위와 15 단위 높은 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-174">For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</span></span> <span data-ttu-id="9da97-175">3이 속성을 설정 하면 와이드 그려지는 90 단위 및 높은 45 단위 수를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9da97-175">Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>