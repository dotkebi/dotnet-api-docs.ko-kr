<Type Name="Matrix" FullName="System.Drawing.Drawing2D.Matrix">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a65e3ba88f758ba0e325ee6bbe7d6adcfc16159f" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56770782" /></Metadata><TypeSignature Language="C#" Value="public sealed class Matrix : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matrix extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matrix&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matrix sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Matrix = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="07e5c-101">기하학적 변환을 나타내는 3 x 3 상관 매트릭스를 캡슐화합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span></span> <span data-ttu-id="07e5c-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-103">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 는 3x3 유사 변형에 저장할 수 있습니다는 <xref:System.Drawing.Drawing2D.Matrix> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] you can store an affine transformation in a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="07e5c-104">나타내는 3x3 유사 변형 매트릭스의 세 번째 열은 항상 때문에 (0, 0, 1)을 생성 하는 경우 처음 두 열에 있는 6 개의 숫자만 지정를 <xref:System.Drawing.Drawing2D.Matrix> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-104">Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="07e5c-105">문이 `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` 다음 그림에 표시 된 행렬을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-105">The statement `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` constructs the matrix shown in the following figure.</span></span>  
  
 <span data-ttu-id="07e5c-106">![변환을](~/add/media/aboutgdip05-art10.gif "변환")</span><span class="sxs-lookup"><span data-stu-id="07e5c-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span></span>  
  
## <a name="composite-transformations"></a><span data-ttu-id="07e5c-107">합성 변형</span><span class="sxs-lookup"><span data-stu-id="07e5c-107">Composite Transformations</span></span>  
 <span data-ttu-id="07e5c-108">복합 변환에는 뒤에 다른 하나는 변환의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-108">A composite transformation is a sequence of transformations, one followed by the other.</span></span> <span data-ttu-id="07e5c-109">행렬 및 다음과 같은 변환을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-109">Consider the matrices and transformations in the following list:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="07e5c-110">행렬</span><span class="sxs-lookup"><span data-stu-id="07e5c-110">Matrix A</span></span>|<span data-ttu-id="07e5c-111">90도 회전</span><span class="sxs-lookup"><span data-stu-id="07e5c-111">Rotate 90 degrees</span></span>|  
|<span data-ttu-id="07e5c-112">행렬 B</span><span class="sxs-lookup"><span data-stu-id="07e5c-112">Matrix B</span></span>|<span data-ttu-id="07e5c-113">X 방향으로 2 배 확장</span><span class="sxs-lookup"><span data-stu-id="07e5c-113">Scale by a factor of 2 in the x direction</span></span>|  
|<span data-ttu-id="07e5c-114">행렬 C</span><span class="sxs-lookup"><span data-stu-id="07e5c-114">Matrix C</span></span>|<span data-ttu-id="07e5c-115">Y 방향의 3 단위</span><span class="sxs-lookup"><span data-stu-id="07e5c-115">Translate 3 units in the y direction</span></span>|  
  
 <span data-ttu-id="07e5c-116">[2 1 1]-행렬을 나타내는 점 (2, 1)-로 시작 하 고 A, B로 곱합니다, 다음 C, 점 (2, 1) 될 예정 나열 된 순서로 세 가지 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-116">If we start with the point (2, 1) - represented by the matrix [2 1 1] - and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</span></span>  
  
 <span data-ttu-id="07e5c-117">[2 1 1]ABC = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="07e5c-117">[2 1 1]ABC = [-2 5 1]</span></span>  
  
 <span data-ttu-id="07e5c-118">대신 복합 변환의 세 부분에서 세 가지 별도 행렬을 저장 하는 보다에 곱할 수 B 및 C 함께 전체 복합 변환을 저장 하는 단일 3 × 3 행렬을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-118">Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</span></span> <span data-ttu-id="07e5c-119">ABC 가정 = 4. 그런 다음, D를 곱하면 A, B, C 곱하면와 동일한 결과 제공</span><span class="sxs-lookup"><span data-stu-id="07e5c-119">Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</span></span>  
  
 <span data-ttu-id="07e5c-120">[2 1 1]D = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="07e5c-120">[2 1 1]D = [-2 5 1]</span></span>  
  
 <span data-ttu-id="07e5c-121">다음 그림에서는 A, B, C 및 D. 행렬을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-121">The following illustration shows the matrices A, B, C, and D.</span></span>  
  
 <span data-ttu-id="07e5c-122">![변환을](~/add/media/aboutgdip05-art12.gif "변환")</span><span class="sxs-lookup"><span data-stu-id="07e5c-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span></span>  
  
 <span data-ttu-id="07e5c-123">개별 변환 행렬을 곱하여 복합 변환의 매트릭스를 구성할 수는 팩트 관계 변형 시퀀스는 단일에서 저장할 수 있다는 의미 <xref:System.Drawing.Drawing2D.Matrix> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-123">The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <xref:System.Drawing.Drawing2D.Matrix> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="07e5c-124">복합 변환의 순서가 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-124">The order of a composite transformation is important.</span></span> <span data-ttu-id="07e5c-125">일반적으로 회전, 크기 조정을 차례로 다릅니다 변환으로 크기 조정, 회전, 그런 다음 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-125">In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</span></span> <span data-ttu-id="07e5c-126">마찬가지로 행렬 곱셈의 순서가 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-126">Similarly, the order of matrix multiplication is important.</span></span> <span data-ttu-id="07e5c-127">일반적으로 ABC 아닙니다 백업와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-127">In general, ABC is not the same as BAC.</span></span>  
  
 <span data-ttu-id="07e5c-128"><xref:System.Drawing.Drawing2D.Matrix> 클래스는 복합 변환을 구성 하는 여러 가지 방법을 제공: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>를 <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>를 <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>를 <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, 및 <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-128">The <xref:System.Drawing.Drawing2D.Matrix> class provides several methods for building a composite transformation: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, and <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span></span> <span data-ttu-id="07e5c-129">다음 예제에서는 먼저 30도 회전 하 고 2 y 방향의 배율을 5 개 단위 x 방향으로 변환 하는 복합 변환의 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-129">The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</span></span>  
  
 [!code-csharp[System.Drawing.CoordinateSystems#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.CoordinateSystems#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9fef7451-bddf-4c68-9350-400d1f1f25a3"><span data-ttu-id="07e5c-130">좌표계 및 변형</span><span class="sxs-lookup"><span data-stu-id="07e5c-130">Coordinate Systems and Transformations</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-131"><see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07e5c-132"><see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 항등 매트릭스로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Point[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, plgpts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::Rectangle rect, cli::array &lt;System::Drawing::Point&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.Rectangle * System.Drawing.Point[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="plgpts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="07e5c-133">변환할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-133">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="07e5c-134">사각형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이가 변환될 평행 사변형의 지점을 나타내는 세 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-134">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="07e5c-135">처음 세 모퉁이는 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-135">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="07e5c-136"><see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 지정된 사각형 및 지점의 배열에 의해 정의된 기하학적 변환으로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-137">이 메서드는 지정 된 사각형에 매핑되는 기하학적 변환을 나타내는 새 행렬을 초기화 합니다 `rect` 에서 3 개의 점으로 정의 된 평행 사변형으로 매개 변수는 `plgpts` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-137">This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="07e5c-138">사각형의 왼쪽 위 모퉁이에서 첫 번째 요소에 매핑되는 `plgpts` 배열에 오른쪽 위 모서리에서 두 번째 지점으로 매핑되고 왼쪽 아래 모서리는 세 번째 요소와 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-138">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="07e5c-139">처음 세 평행 사변형의 오른쪽 아래 지점이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-139">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.PointF[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, plgpts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::RectangleF rect, cli::array &lt;System::Drawing::PointF&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.RectangleF * System.Drawing.PointF[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="plgpts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="07e5c-140">변환할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-140">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="07e5c-141">사각형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이가 변환될 평행 사변형의 지점을 나타내는 세 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-141">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="07e5c-142">처음 세 모퉁이는 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-142">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="07e5c-143"><see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 지정된 사각형 및 지점의 배열에 의해 정의된 기하학적 변환으로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-143">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-144">이 메서드는 새 초기화 <xref:System.Drawing.Drawing2D.Matrix> 하 여 지정 된 사각형에 매핑되는 기하학적 변환을 나타내는 같은 합니다 `rect` 에서 3 개의 점으로 정의 된 평행 사변형으로 매개 변수는 `plgpts` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-144">This method initializes the new <xref:System.Drawing.Drawing2D.Matrix> such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="07e5c-145">사각형의 왼쪽 위 모퉁이에서 첫 번째 요소에 매핑되는 `plgpts` 배열에 오른쪽 위 모서리에서 두 번째 지점으로 매핑되고 왼쪽 아래 모서리는 세 번째 요소와 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-145">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="07e5c-146">처음 세 평행 사변형의 오른쪽 아래 지점이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-146">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 m11, float32 m12, float32 m21, float32 m22, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Single, m12 As Single, m21 As Single, m22 As Single, dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : single * single * single * single * single * single -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (m11, m12, m21, m22, dx, dy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Single" />
        <Parameter Name="m12" Type="System.Single" />
        <Parameter Name="m21" Type="System.Single" />
        <Parameter Name="m22" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="07e5c-147">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 첫째 행과 첫째 열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-147">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m12"><span data-ttu-id="07e5c-148">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 첫째 행과 둘째 열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-148">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m21"><span data-ttu-id="07e5c-149">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 둘째 행과 첫째 열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-149">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m22"><span data-ttu-id="07e5c-150">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 둘째 행과 둘째 열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-150">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dx"><span data-ttu-id="07e5c-151">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 셋째 행과 첫째 열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-151">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dy"><span data-ttu-id="07e5c-152">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 셋째 행과 둘째 열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-152">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="07e5c-153">지정된 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-153">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.Matrix Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::Matrix ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Drawing.Drawing2D.Matrix" Usage="matrix.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07e5c-154">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 정확한 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-154">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="07e5c-155">이 메서드가 만드는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-155">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="matrix.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07e5c-156">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-156">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-157">호출 `Dispose` 이 사용 하는 리소스 <xref:System.Drawing.Drawing2D.Matrix> 개체를 다른 용도로 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-157">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.Matrix> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public float[] Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Elements" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Elements { cli::array &lt;float&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : single[]" Usage="System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07e5c-158">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 요소를 나타내는 부동 소수점 값의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-158">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="07e5c-159">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 요소를 나타내는 부동 소수점 값의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-159">An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-160">요소 m11, m12, m21, m22, dx 및 dy는 <xref:System.Drawing.Drawing2D.Matrix> 순서로 배열 값을 기준으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-160">The elements m11, m12, m21, m22, dx, and dy of the <xref:System.Drawing.Drawing2D.Matrix> are represented by the values in the array in that order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="07e5c-161">테스트할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-161">The object to test.</span></span></param>
        <summary><span data-ttu-id="07e5c-162">지정된 개체가 <see cref="T:System.Drawing.Drawing2D.Matrix" />이고 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />와 동일한지 여부를 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-162">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="07e5c-163">이 메서드는 <paramref name="obj" />가 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />와 동일한 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />이면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-163">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Matrix ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="matrix.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07e5c-164">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-164">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07e5c-165">해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-165">Returns a hash code.</span></span></summary>
        <returns><span data-ttu-id="07e5c-166">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 대한 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-166">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07e5c-167">역변환할 수 있으면 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-167">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-168">다음 코드 예제에서는 행렬을 만듭니다 및 것을 반전 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-168">The following code example creates a matrix and inverts it:</span></span>  
  
```csharp  
Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  
 myMatrix.Invert();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07e5c-169">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 항등 매트릭스인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-169">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span></span></summary>
        <value><span data-ttu-id="07e5c-170">이 속성은 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 항등 매트릭스이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-170">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvertible">
      <MemberSignature Language="C#" Value="public bool IsInvertible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvertible" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInvertible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInvertible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvertible : bool" Usage="System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07e5c-171">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-171">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span></span></summary>
        <value><span data-ttu-id="07e5c-172">이 속성은 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-172">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-173">지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 앞에 추가하여 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-173">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="matrix.Multiply matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="07e5c-174">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-174">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <summary><span data-ttu-id="07e5c-175">지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 앞에 추가하여 <paramref name="matrix" /> 매개 변수에 지정된 매트릭스를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-175">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-176">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="07e5c-176">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Multiply (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="07e5c-177">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-177">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <param name="order"><span data-ttu-id="07e5c-178">곱할 순서를 나타내는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-178">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span></span></param>
        <summary><span data-ttu-id="07e5c-179"><paramref name="matrix" /> 매개 변수에 지정된 순서대로 <paramref name="order" /> 매개 변수에 지정된 매트릭스를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-179">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-180">지정 된 순서가 <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>이 <xref:System.Drawing.Drawing2D.Matrix> 앞에 붙은 순서로 지정 된 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-180">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in a prepended order.</span></span> <span data-ttu-id="07e5c-181">지정 된 순서가 <xref:System.Drawing.Drawing2D.MatrixOrder.Append>이 <xref:System.Drawing.Drawing2D.Matrix> 추가 된 순서 대로 지정 된 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-181">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in an appended order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07e5c-182">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-182">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-183">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-183">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="07e5c-184">세 개의 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-184">Creates three matrices.</span></span>  
  
-   <span data-ttu-id="07e5c-185">화면에 행렬 1의 콘텐츠를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-185">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="07e5c-186">행렬 2 1 매트릭스를 곱합니다 행렬 1의에서 결과 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-186">Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="07e5c-187">화면에 행렬 1의 콘텐츠를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-187">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="07e5c-188">매트릭스 1 3, 매트릭스에에서 저장 된 결과 곱하고 다시 1 행렬에 결과 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-188">Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="07e5c-189">화면에 행렬 1의 콘텐츠를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-189">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="07e5c-190">(파란색 사각형) 1 매트릭스 변환을 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-190">Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="07e5c-191">변환 사각형에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-191">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="07e5c-192">이전 사각형과 동일한 좌표를 사용 하 여 화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-192">Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="07e5c-193">표시는 빨간색 사각형 2 가로 방향으로의 비율로 배율 조정 된 후 90도 회전 하 고 y 방향에서 (번역된) 250 지점 x 방향의 및 50 포인트를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-193">Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public float OffsetX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07e5c-194">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 x 이동 값(dx 값 또는 셋째 행과 첫째 열에 있는 요소)을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-194">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="07e5c-195">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 x 이동 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-195">The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public float OffsetY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07e5c-196">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 y 이동 값(dy 값 또는 셋째 행과 둘째 열에 있는 요소)을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-196">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="07e5c-197">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 y 이동 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-197">The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="matrix.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07e5c-198">항등 매트릭스의 요소를 포함하도록 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-198">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-199">Id 행렬의 주 대각선 요소가 1입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-199">The elements on the main diagonal of the identity matrix are 1.</span></span> <span data-ttu-id="07e5c-200">항등 매트릭스의 다른 모든 요소는 0입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-200">All other elements of the identity matrix are 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07e5c-201">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-201">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-202">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-202">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="07e5c-203">크기 조정 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-203">Creates a scaling matrix.</span></span>  
  
-   <span data-ttu-id="07e5c-204">화면에 행렬 요소를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-204">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="07e5c-205">Id 행렬을 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-205">Resets the matrix to identity.</span></span>  
  
-   <span data-ttu-id="07e5c-206">화면에 요소를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-206">Lists the elements to the screen.</span></span>  
  
-   <span data-ttu-id="07e5c-207">X 축에서 및 y 축에서 40 지점 50 포인트 행렬으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-207">Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</span></span>  
  
-   <span data-ttu-id="07e5c-208">화면에 변환된 매트릭스의 요소를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-208">Lists the elements of the translated matrix to the screen.</span></span>  
  
-   <span data-ttu-id="07e5c-209">(파란색 사각형) 매트릭스 변환을 적용 하기 전에 화면을 그릴 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-209">Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="07e5c-210">변환 사각형에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-210">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="07e5c-211">변환된 된 사각형 (빨간색 사각형) 이전 사각형과 동일한 좌표를 사용 하 여 화면에 그려지는 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-211">Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="07e5c-212">빨간색 사각형 없는 (때문에 reset) 확장 되었지만 x 축 및 y 축으로 이동 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-212">Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rotate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-213">원점을 기준으로 지정된 각도만큼 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-213">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="07e5c-214">회전 각도(도)입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-214">The angle of the rotation, in degrees.</span></span></param>
        <summary><span data-ttu-id="07e5c-215">원점을 기준으로 지정된 각도만큼 이 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 앞에 시계 방향 회전을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-215">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-216">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="07e5c-216">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Rotate (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="07e5c-217">회전 각도(도)입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-217">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="order"><span data-ttu-id="07e5c-218">이 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />에 회전이 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="07e5c-219">원점(X 및 Y 좌표가 0임)을 기준으로 <paramref name="angle" /> 매개 변수에 지정된 각도만큼 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-219">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-220">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-221">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="07e5c-222">회전 변환 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-222">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="07e5c-223">행렬을 만들고 45도 회전 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-223">Creates a matrix and rotates it 45 degrees.</span></span>  
  
-   <span data-ttu-id="07e5c-224">이 매트릭스 변환을 사각형에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-224">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="07e5c-225">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-225">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="07e5c-226">빨간색 사각형을 회전 된 알 수 있습니다. 0을 둘러싼 0 화면 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-226">Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateAt">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-227">회전을 앞에 추가하여 지정된 지점을 기준으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-227">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF -&gt; unit" Usage="matrix.RotateAt (angle, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="07e5c-228">회전 각도(도)입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-228">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="07e5c-229">회전의 중심을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-229">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <summary><span data-ttu-id="07e5c-230">회전을 앞에 추가하여 <paramref name="point" /> 매개 변수에 지정된 지점을 기준으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-230">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-231">다음 코드 예제는 <xref:System.Drawing.Drawing2D.Matrix> 및 <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> 문자열 회전 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="07e5c-231">The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string.</span></span> <span data-ttu-id="07e5c-232">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-232">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="07e5c-233">폼을 만들고 다음 코드를 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-233">Create a form and paste the following code into it.</span></span> <span data-ttu-id="07e5c-234">호출 된 `DrawVerticalStringFromBottomUp` 폼의 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-234">Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.MiscExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.MiscExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.RotateAt (angle, point, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="07e5c-235">회전 각도(도)입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-235">The angle of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="07e5c-236">회전의 중심을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-236">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <param name="order"><span data-ttu-id="07e5c-237">회전이 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-237">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span></span></param>
        <summary><span data-ttu-id="07e5c-238">지정된 순서대로 지정된 지점을 기준으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-238">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-239">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-239">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-240">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-240">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="07e5c-241">회전 변환 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-241">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="07e5c-242">행렬을 만들고 지정된 된 점 기준으로 45도 회전 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-242">Creates a matrix and rotates it 45 degrees around a specified point.</span></span>  
  
-   <span data-ttu-id="07e5c-243">이 매트릭스를 적용 사각형에 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-243">Applies this matrix transform is to the rectangle.</span></span>  
  
-   <span data-ttu-id="07e5c-244">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-244">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="07e5c-245">빨간색 사각형 사각형의 왼쪽 위 모퉁이 기준으로 회전에 있는지 확인할 수 있습니다 (지정 된 회전 지점은 <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> 메서드).</span><span class="sxs-lookup"><span data-stu-id="07e5c-245">Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> method).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-246">배율 벡터를 앞에 추가하여 지정된 배율 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-246">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="07e5c-247">X축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율을 조정할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="07e5c-248">Y축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율을 조정할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-248">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="07e5c-249">배율 벡터를 앞에 추가하여 지정된 배율 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-249">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-250">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="07e5c-250">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Scale (scaleX, scaleY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="07e5c-251">X축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율을 조정할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="07e5c-252">Y축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율을 조정할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-252">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="07e5c-253">이 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />에 배율 벡터가 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-253">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="07e5c-254">지정된 순서대로 지정된 배율 벡터(<paramref name="scaleX" /> 및 <paramref name="scaleY" />)를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-254">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-255">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-255">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-256">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-256">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="07e5c-257">크기 조정 변환을 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-257">Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="07e5c-258">행렬을 만들고 x 축 및 y 축에서 2 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-258">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="07e5c-259">이 매트릭스 변환을 사각형에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-259">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="07e5c-260">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-260">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="07e5c-261">사각형 (사각형의 시작 지점)의 왼쪽 위 모서리를 포함 하 여 y 축에서 2 및 3 x 축에서의 비율로 빨간색 사각형 크기가 조정 되었는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-261">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Shear">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-262">기울이기 벡터를 앞에 추가하여 지정된 기울이기 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-262">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single -&gt; unit" Usage="matrix.Shear (shearX, shearY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="07e5c-263">가로 기울이기 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-263">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="07e5c-264">세로 기울이기 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-264">The vertical shear factor.</span></span></param>
        <summary><span data-ttu-id="07e5c-265">기울이기 변환을 앞에 추가하여 지정된 기울이기 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-265">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-266">이 메서드에 적용 된 변환 매개 변수 중 하나가 0 인 경우에 순수 기울이기입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-266">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="07e5c-267">원점에 사각형을 적용할 때 합니다 `shearY` 비율은 0, 변환 아래쪽 가장자리를 가로 방향으로 이동 `shearX` 사각형의 높이 시간.</span><span class="sxs-lookup"><span data-stu-id="07e5c-267">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="07e5c-268">경우는 `shearX` 비율은 0, 오른쪽 가장자리 세로 방향으로 이동 `shearY` 시간이 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-268">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="07e5c-269">주의 결과 예측 하기 어려운 두 매개 변수가 0이 아닌 경우 순서로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-269">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="07e5c-270">예를 들어 두 요소가 1 인 경우는 단 수 (따라서 배율이)를 한 줄으로 전체 평면이 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-270">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07e5c-271">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-271">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-272">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-272">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="07e5c-273">크기 조정 변환을 적용 하기 전에 녹색 펜을 사용 하 여 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-273">Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</span></span>  
  
-   <span data-ttu-id="07e5c-274">만듭니다는 <xref:System.Drawing.Drawing2D.Matrix> 변환 하 여 세계 좌표를 설정 하는 데 사용 된 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-274">Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="07e5c-275">빨간색 펜을 사용 하 여 다른 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-275">Draws another rectangle using a red pen.</span></span>  
  
-   <span data-ttu-id="07e5c-276">파란색 펜을 사용 하 여 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-276">Draws an ellipse using a blue pen.</span></span>  
  
 <span data-ttu-id="07e5c-277">결과는 녹색 사각형, 빨간색 평행 사변형 및 변환, 파란색 타원입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-277">The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</span></span> <span data-ttu-id="07e5c-278">(변환 하기 전에 그려진) 녹색 사각형 있음을 직접에서 제공 하는 좌표를 사용 하는 <xref:System.Drawing.Graphics.DrawRectangle%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-278">Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call.</span></span> <span data-ttu-id="07e5c-279">다른 두 그림 그리기 전에 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-279">The other two figures are transformed prior to drawing.</span></span> <span data-ttu-id="07e5c-280">사각형 (빨간색), 평행 사변형으로 변환 됩니다 및 타원 (파란색) 변환 된 평행 사변형에 맞게 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-280">The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</span></span> <span data-ttu-id="07e5c-281">사각형의 아래쪽 (기울어져) 두 번 평행 사변형을 형성 하는 사각형의 높이의 비율로 x 축에서 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-281">Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Shear (shearX, shearY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="07e5c-282">가로 기울이기 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-282">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="07e5c-283">세로 기울이기 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-283">The vertical shear factor.</span></span></param>
        <param name="order"><span data-ttu-id="07e5c-284">기울이기가 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-284">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span></span></param>
        <summary><span data-ttu-id="07e5c-285">지정된 순서대로 지정된 기울이기 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-285">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07e5c-286">이 메서드에 적용 된 변환 매개 변수 중 하나가 0 인 경우에 순수 기울이기입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-286">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="07e5c-287">원점에 사각형을 적용할 때 합니다 `shearY` 비율은 0, 변환 아래쪽 가장자리를 가로 방향으로 이동 `shearX` 사각형의 높이 시간.</span><span class="sxs-lookup"><span data-stu-id="07e5c-287">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="07e5c-288">경우는 `shearX` 비율은 0, 오른쪽 가장자리 세로 방향으로 이동 `shearY` 시간이 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-288">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="07e5c-289">주의 결과 예측 하기 어려운 두 매개 변수가 0이 아닌 경우 순서로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-289">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="07e5c-290">예를 들어 두 요소가 1 인 경우는 단 수 (따라서 배율이)를 한 줄으로 전체 평면이 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-290">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07e5c-291">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="07e5c-291">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-292">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 나타내는 기하학적 변환을 지점의 배열에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-292">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="07e5c-293">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-293">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="07e5c-294">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 나타내는 기하학적 변환을 지정된 지점의 배열에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-294">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-295">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-295">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-296">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-296">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="07e5c-297">사각형을 형성 하는 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-297">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="07e5c-298">이 지점 배열 (화면에 그립니다 (파란색 사각형) 크기 조정 변환을 적용 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-298">Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="07e5c-299">행렬을 만들고 x 축 및 y 축에서 2 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-299">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="07e5c-300">이 매트릭스 변환을 지점의 배열에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-300">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="07e5c-301">변환된 된 배열 (빨간색 사각형) 화면으로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-301">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="07e5c-302">사각형 (사각형의 시작 지점)의 왼쪽 위 모서리를 포함 하 여 y 축에서 2 및 3 x 축에서의 비율로 빨간색 사각형 크기가 조정 되었는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-302">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="07e5c-303">변환할 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-303">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="07e5c-304">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 나타내는 기하학적 변환을 지정된 지점의 배열에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-304">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-305">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="07e5c-305">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformVectors">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-306">배열의 각 벡터에 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-306">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="07e5c-307">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-307">The translation elements of this matrix (third row) are ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="07e5c-308">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-308">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="07e5c-309">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 배율과 회전 구성 요소만 지정된 지점의 배열에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-309">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-310">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-310">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-311">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-311">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="07e5c-312">사각형을 형성 하는 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-312">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="07e5c-313">이 배열 요소의 크기 조정 변환을 (파란색 사각형)를 적용 하기 전에 화면 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-313">Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="07e5c-314">행렬을 만듭니다 하 고 x 축 및 y 축에는 2 확장 하 고 양쪽 축에서 100으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-314">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="07e5c-315">화면에 행렬 요소를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-315">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="07e5c-316">이 매트릭스 변환을 지점의 배열에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-316">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="07e5c-317">변환된 된 배열 (빨간색 사각형) 화면으로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-317">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="07e5c-318">것을 볼 수는 빨간색 사각형 (사각형의 시작 지점) 사각형의 왼쪽 위 모서리를 포함 하 여 y 축에서 2 및 3 x 축에서의 비율로 크기 조정에 이동 벡터 (행렬의 마지막 두 개의 요소)은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-318">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="07e5c-319">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-319">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="07e5c-320">배열의 각 벡터에 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-320">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="07e5c-321">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-321">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-322">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="07e5c-322">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07e5c-323">이동 벡터를 앞에 추가하여 지정된 이동 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-323">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="07e5c-324">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 x 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-324">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="07e5c-325">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 y 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-325">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="07e5c-326">이동 벡터를 앞에 추가하여 지정된 이동 벡터(<paramref name="offsetX" /> 및 <paramref name="offsetY" />)를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-326">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-327">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="07e5c-327">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Translate (offsetX, offsetY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="07e5c-328">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 x 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-328">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="07e5c-329">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 y 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-329">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="order"><span data-ttu-id="07e5c-330">이 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />에 이동이 적용되는 순서(뒤나 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-330">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="07e5c-331">지정된 순서대로 지정된 이동 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-331">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07e5c-332">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-332">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="07e5c-333">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-333">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="07e5c-334">좌표 이동 변환 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-334">Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="07e5c-335">행렬을 만들고 양쪽 축에서 100으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-335">Creates a matrix and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="07e5c-336">이 매트릭스 변환을 사각형에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-336">Applies this matrix transform to the rectangle,</span></span>  
  
-   <span data-ttu-id="07e5c-337">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-337">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="07e5c-338">빨간색 사각형의 시작 부분에 있는 요소가 100 개부터 양쪽 축에서 파란색 삼각형은 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-338">Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTransformPoints">
      <MemberSignature Language="C#" Value="public void VectorTransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VectorTransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub VectorTransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VectorTransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.VectorTransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.VectorTransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="07e5c-339">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-339">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="07e5c-340">배열의 각 벡터에 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-340">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="07e5c-341">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="07e5c-341">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>