<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d76b4f131ed0fb365205bcfc0d72419e1798de9f" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56781425" /></Metadata><TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f8954-101">연결된 일련의 선과 곡선을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-101">Represents a series of connected lines and curves.</span></span> <span data-ttu-id="f8954-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-103">애플리케이션 경로 사용 하 여 도형의 윤곽선을 그리기 모양의 내부를 채우는, 클리핑 영역을 만드는를 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="f8954-104">그래픽 엔진 세계 좌표 공간에서 경로 기 하 도형의 좌표를 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="f8954-105">경로 그림 (하위 경로)을 개수에 관계 없이 구성 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="f8954-106">각 그림 하거나 연결 된 선 및 곡선 또는 도형 기본 시퀀스로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="f8954-107">그림의 시작점에는 연결 된 선 및 곡선 시퀀스의 첫 번째 지점이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="f8954-108">끝점에는 시퀀스의 마지막 지점이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="f8954-109">도형 기본의 시작과 끝은 기본 사양에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="f8954-110">연결 된 선 시퀀스로 구성 된 그림 곡선 (해당 시작 및 끝 지점 일치 수 있음) 이며 열린 형상에 명시적으로 닫지 않는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="f8954-111">그림을 사용 하 여 명시적으로 닫을 수는 <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> 메서드를 줄 끝 지점에서 시작 지점에 연결 하 여 현재 그림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="f8954-112">기 하 도형 기본으로 구성 된 경우 닫힌된 그림</span><span class="sxs-lookup"><span data-stu-id="f8954-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="f8954-113">채우기 및 클리핑의 목적을 위해 (경로 사용 하 여 렌더링 하는 경우에 예를 들어 <xref:System.Drawing.Graphics.FillPath%2A>), 열려 있는 모든 마지막 시점으로 그림의 첫 번째 요소에서 줄을 추가 하 여 그림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="f8954-114">새 그림을 경로 만들 때 또는 그림을 닫으면에 암시적으로 시작 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="f8954-115">새 그림을 명시적으로 생성 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="f8954-116">도형 기본 경로에 추가 되 면 기하학적 셰이프를 포함 하는 그림을 추가 하 고 암시적으로 새 그림을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="f8954-117">따라서에 항상 현재 그림을 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="f8954-118">선 및 곡선 경로에 추가 되 면 곡선 새 줄 및 연결 된 줄의 시퀀스를 형성 하는 곡선의 시작점을 현재 그림의 끝 지점을 연결 하는 암시적 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="f8954-119">그림에는 시작점 및 끝점 간의 선과 곡선 세그먼트를 추적 하는 방법을 설명 하는 방향을 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="f8954-120">방향 선 및 곡선 그림을 추가할지 또는 기본 기하학적 도형에서 정의 되는 순서 대로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="f8954-121">방향을은 채우기 및 클리핑에 대 한 내부 경로 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f16ec921-56cf-46d1-9741-d7316ad06b23"><span data-ttu-id="f8954-122">경로 구성 및 그리기</span><span class="sxs-lookup"><span data-stu-id="f8954-122">Constructing and Drawing Paths</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-123"><see langword="Alternate" />의 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형을 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-124"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> 값을 사용하여 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-124">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode"><span data-ttu-id="f8954-125">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />의 내부를 채우는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-125">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span></span></param>
        <summary><span data-ttu-id="f8954-126">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형을 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-126">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="f8954-127">이 <see cref="T:System.Drawing.Point" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-127">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="f8954-128"><paramref name="pts" /> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-128">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="f8954-129">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열을 사용하여 <see cref="T:System.Drawing.Point" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-129">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="f8954-130">이 <see cref="T:System.Drawing.PointF" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-130">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="f8954-131"><paramref name="pts" /> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-131">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="f8954-132">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열을 사용하여 <see cref="T:System.Drawing.PointF" /> 배열의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="f8954-133">이 <see cref="T:System.Drawing.Point" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-133">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="f8954-134"><paramref name="pts" /> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-134">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="f8954-135">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-135">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="f8954-136">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열과 지정된 <see cref="T:System.Drawing.Point" /> 열거형 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="f8954-137">이 <see cref="T:System.Drawing.PointF" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-137">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="f8954-138"><paramref name="pts" /> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-138">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="f8954-139">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-139">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="f8954-140">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열과 지정된 <see cref="T:System.Drawing.PointF" /> 열거형 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 배열의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-140">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-141">타원형 호를 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-141">Appends an elliptical arc to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="f8954-142">호가 그려지는 타원의 사각형 범위를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-142">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="f8954-143">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-143">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="f8954-144"><paramref name="startAngle" />과 호의 끝 사이의 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-144">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="f8954-145">타원형 호를 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-145">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-146">이전 선이나 곡선 그림에서 없으면 줄 부채꼴의 시작 부분에 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-146">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="f8954-147">지정 된 사각형에 의해 경계가 지정 된 타원의 경계를 따라 호 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-147">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="f8954-148">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-148">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="f8954-149">스윕 각도 만큼 시작 지점에서 시계 방향으로 측정 하 여 마찬가지로 끝점이 위치한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-149">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="f8954-150">스윕 각도 360도 미만-360도 보다 클 경우 360도 또는-360도 정확 하 게 하 여 호의 각각 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-150">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-151">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-151">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-152">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-152">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-153">호를 정의할 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-153">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="f8954-154">경로 만듭니다 `myPath`합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-154">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="f8954-155">180도 0도에서 추가 된 경로에 추가 하는 180도 타원형 호를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-155">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="f8954-156">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-156">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="f8954-157">호가 그려지는 타원의 사각형 범위를 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-157">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="f8954-158">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-158">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="f8954-159"><paramref name="startAngle" />과 호의 끝 사이의 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-159">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="f8954-160">타원형 호를 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-160">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-161">이전 선이나 곡선 그림에서 없으면 줄 부채꼴의 시작 부분에 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-161">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="f8954-162">지정 된 사각형에 의해 경계가 지정 된 타원의 경계를 따라 호 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-162">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="f8954-163">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-163">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="f8954-164">스윕 각도 만큼 시작 지점에서 시계 방향으로 측정 하 여 마찬가지로 끝점이 위치한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-164">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="f8954-165">스윕 각도 360도 미만-360도 보다 클 경우 360도 또는-360도 정확 하 게 하 여 호의 각각 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-165">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-166">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-166">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-167">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-167">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-168">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-168">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="f8954-169">호가 그려지는 타원을 정의하는 사각형 영역의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-169">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="f8954-170">호가 그려지는 타원을 정의하는 사각형 영역의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-170">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="f8954-171">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-171">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="f8954-172"><paramref name="startAngle" />과 호의 끝 사이의 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-172">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="f8954-173">타원형 호를 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-173">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-174">이전 선이나 곡선 그림에서 없으면 줄 부채꼴의 시작 부분에 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-174">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="f8954-175">지정 된 사각형에 의해 경계가 지정 된 타원의 경계를 따라 호 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-175">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="f8954-176">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-176">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="f8954-177">스윕 각도 만큼 시작 지점에서 시계 방향으로 측정 하 여 마찬가지로 끝점이 위치한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-177">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="f8954-178">스윕 각도 360도 미만-360도 보다 클 경우 360도 또는-360도 정확 하 게 하 여 호의 각각 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-178">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-179">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-179">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-180">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-180">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-181">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-181">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="f8954-182">호가 그려지는 타원을 정의하는 사각형 영역의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-182">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="f8954-183">호가 그려지는 타원을 정의하는 사각형 영역의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-183">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="f8954-184">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-184">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="f8954-185"><paramref name="startAngle" />과 호의 끝 사이의 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-185">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="f8954-186">타원형 호를 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-186">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-187">이전 선이나 곡선 그림에서 없으면 줄 부채꼴의 시작 부분에 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-187">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="f8954-188">지정 된 사각형에 의해 경계가 지정 된 타원의 경계를 따라 호 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-188">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="f8954-189">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-189">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="f8954-190">스윕 각도 만큼 시작 지점에서 시계 방향으로 측정 하 여 마찬가지로 끝점이 위치한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-190">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="f8954-191">스윕 각도 360도 미만-360도 보다 클 경우 360도 또는-360도 정확 하 게 하 여 호의 각각 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-191">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-192">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-192">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-193">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-193">Adds a cubic Bézier curve to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="f8954-194">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-194">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="f8954-195">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-195">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="f8954-196">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-196">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="f8954-197">곡선의 엔드포인트를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-197">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="f8954-198">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-198">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-199">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-199">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="f8954-200">이전 줄 또는 그림에 곡선 세그먼트가 있으면 입방 형 곡선의 시작점 까지의 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-200">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-201">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-201">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="f8954-202">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-202">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="f8954-203">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-203">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="f8954-204">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-204">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="f8954-205">곡선의 엔드포인트를 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-205">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="f8954-206">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-206">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-207">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-207">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="f8954-208">이전 줄 또는 그림에 곡선 세그먼트가 있으면 입방 형 곡선의 시작점 까지의 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-208">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-209">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-209">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="f8954-210">곡선의 시작점에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-210">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="f8954-211">곡선의 시작점에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-211">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="f8954-212">곡선의 첫째 제어점에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-212">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="f8954-213">곡선의 첫째 제어점에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-213">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="f8954-214">곡선의 둘째 제어점에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-214">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="f8954-215">곡선의 둘째 제어점에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-215">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="f8954-216">곡선의 엔드포인트에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-216">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="f8954-217">곡선의 엔드포인트에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-217">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="f8954-218">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-218">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-219">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-219">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="f8954-220">이전 줄 또는 그림에 곡선 세그먼트가 있으면 입방 형 곡선의 시작점 까지의 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-220">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-221">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-221">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-222">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-222">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-223">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-223">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-224">(50, 50) 점을 기준으로 정의 하는 3 차원 큐빅 곡선을 추가 (70, 0), (100, 120) 및 (150, 50) 경로에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-224">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="f8954-225">곡선을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-225">Closes the curve.</span></span>  
  
-   <span data-ttu-id="f8954-226">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-226">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="f8954-227">곡선의 시작점에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-227">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="f8954-228">곡선의 시작점에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-228">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="f8954-229">곡선의 첫째 제어점에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-229">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="f8954-230">곡선의 첫째 제어점에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-230">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="f8954-231">곡선의 둘째 제어점에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-231">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="f8954-232">곡선의 둘째 제어점에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-232">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="f8954-233">곡선의 엔드포인트에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-233">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="f8954-234">곡선의 엔드포인트에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-234">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="f8954-235">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-235">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-236">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-236">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="f8954-237">이전 줄 또는 그림에 곡선 세그먼트가 있으면 입방 형 곡선의 시작점 까지의 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-237">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-238">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-238">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-239">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-239">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-240">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-240">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="f8954-241">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-241">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-242">`points` 끝점의 배열 및 연결 된 곡선의 제어점 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-242">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="f8954-243">첫 번째 곡선에서 네 번째 요소에 첫 번째 요소에서 생성 되는 `points` 제어 지점으로 두 번째 및 세 번째 요소를 사용 하 여 배열 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-243">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="f8954-244">이전 곡선의 끝점 외에도 각 후속 곡선 시퀀스에는 정확히 세 개 이상의 점 해야: 시퀀스에서 다음 두 지점은 제어 지점을 이며 세 번째 추가 곡선의 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-244">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="f8954-245">이전 선이나 곡선 그림에서 없으면 줄 시퀀스의 첫 번째 입방 형 곡선의 시작점 까지의 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-245">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-246">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-246">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-247">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-247">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-248">7 개의 점이 (두 개의 연결 된 베 지 어 곡선을 나타내는)의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-248">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="f8954-249">경로 만들어 경로에 일련의 베 지 어 곡선 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-249">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="f8954-250">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-250">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-251">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-251">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="f8954-252">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-252">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-253">`points` 끝점의 배열 및 연결 된 곡선의 제어점 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-253">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="f8954-254">첫 번째 곡선에서 네 번째 요소에 첫 번째 요소에서 생성 되는 `points` 제어 지점으로 두 번째 및 세 번째 요소를 사용 하 여 배열 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-254">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="f8954-255">이전 곡선의 끝점 외에도 각 후속 곡선 시퀀스에는 정확히 세 개 이상의 점 해야: 시퀀스에서 다음 두 지점은 제어 지점을 이며 세 번째 추가 곡선의 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-255">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="f8954-256">이전 선이나 곡선 그림에서 없으면 줄 시퀀스의 첫 번째 입방 형 곡선의 시작점 까지의 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-256">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-257">예제를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-257">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-258">닫힌 곡선을 이 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-258">Adds a closed curve to this path.</span></span> <span data-ttu-id="f8954-259">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-259">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-260">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-260">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="f8954-261">닫힌 곡선을 이 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-261">Adds a closed curve to this path.</span></span> <span data-ttu-id="f8954-262">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-262">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-263">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-263">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-264">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-264">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="f8954-265">하는 경우 첫 번째 지점과 마지막 지점에는 `points` 배열 동일한 시점에 이러한 두 점을 연결 하 여 곡선 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-265">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="f8954-266">이 메서드에 대 한 압력 값을 설정할 수 없습니다 및 0.5에 해당 하는 값을 기본값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-266">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-267">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-267">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-268">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-268">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="f8954-269">닫힌 곡선을 이 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-269">Adds a closed curve to this path.</span></span> <span data-ttu-id="f8954-270">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-270">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-271">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-271">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-272">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-272">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="f8954-273">하는 경우 첫 번째 지점과 마지막 지점에는 `points` 배열 동일한 시점에 이러한 두 점을 연결 하 여 곡선 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-273">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="f8954-274">이 메서드에 대 한 압력 값을 설정할 수 없습니다 및 0.5에 해당 하는 값을 기본값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-274">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-275">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-275">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-276">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-276">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="f8954-277">지점들 사이에서 곡률을 지정하는 0에서 1 사이의 값으로, 0 값에 가까울수록 각지고 1에 가까울수록 완만합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-277">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="f8954-278">닫힌 곡선을 이 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-278">Adds a closed curve to this path.</span></span> <span data-ttu-id="f8954-279">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-279">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-280">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-280">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-281">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-281">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="f8954-282">하는 경우 첫 번째 지점과 마지막 지점에는 `points` 배열 동일한 시점에 이러한 두 점을 연결 하 여 곡선 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-282">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-283">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-283">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-284">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-284">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-285">(카디널 스플라인을 나타냄) 6 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-285">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="f8954-286">경로 만들고 (시작 지점 끝점에서 닫힘) 경로에 폐쇄형된 카디널 스플라인 곡선을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-286">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="f8954-287">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-287">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="f8954-288">0.5의 장력을 사용 해야 함을 알 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-288">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-289">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-289">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="f8954-290">지점들 사이에서 곡률을 지정하는 0에서 1 사이의 값으로, 0 값에 가까울수록 각지고 1에 가까울수록 완만합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-290">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="f8954-291">닫힌 곡선을 이 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-291">Adds a closed curve to this path.</span></span> <span data-ttu-id="f8954-292">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-292">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-293">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-293">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-294">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-294">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="f8954-295">하는 경우 첫 번째 지점과 마지막 지점에는 `points` 배열 동일한 시점에 이러한 두 점을 연결 하 여 곡선 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-295">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-296">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-296">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-297">스플라인 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-297">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="f8954-298">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-298">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-299">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-299">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="f8954-300">스플라인 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-300">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="f8954-301">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-301">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-302">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-302">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-303">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-303">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-304">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-304">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-305">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-305">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="f8954-306">스플라인 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-306">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="f8954-307">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-307">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-308">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-308">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-309">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-309">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-310">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-310">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-311">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-311">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="f8954-312">제어점 사이의 곡률을 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-312">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="f8954-313">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-313">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="f8954-314">스플라인 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-314">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-315">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-315">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-316">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-316">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-317">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-317">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-318">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-318">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="f8954-319">제어점 사이의 곡률을 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-319">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="f8954-320">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-320">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="f8954-321">스플라인 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-321">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-322">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-322">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-323">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-323">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-324">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-324">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-325">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-325">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="f8954-326">곡선의 첫째 지점으로 사용되는 <paramref name="points" /> 배열에 있는 요소의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-326">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="f8954-327">제어점 사이의 곡률을 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-327">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="f8954-328">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-328">Values greater than 1 produce unpredictable results.</span></span></param>
        <param name="tension"><span data-ttu-id="f8954-329">제어점 사이의 곡률을 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-329">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="f8954-330">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-330">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="f8954-331">스플라인 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-331">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-332">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-332">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-333">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-333">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="f8954-334">곡선은 시점에서 지정 된 배열에서 시작 하는 `offset` 매개 변수에서 지정한 지점 (세그먼트)의 수를 포함 `numberOfSegments`합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-334">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-335">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-335">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-336">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-336">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-337">(카디널 스플라인을 나타냄) 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-337">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="f8954-338">경로 만들고 지점 배열을 사용 하 여 곡선 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-338">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="f8954-339">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-339">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="f8954-340">점이 4 개를 유지 하는 배열, 개의 세그먼트에 대 한 호출의 세 번째 인수에 지정 된 수 인 <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-340">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-341">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-341">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="f8954-342">곡선의 첫째 지점으로 사용되는 <paramref name="points" /> 배열에 있는 요소의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-342">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="f8954-343">곡선을 그리는 데 사용되는 세그먼트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-343">The number of segments used to draw the curve.</span></span> <span data-ttu-id="f8954-344">세그먼트는 두 지점을 연결하는 선입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-344">A segment can be thought of as a line connecting two points.</span></span></param>
        <param name="tension"><span data-ttu-id="f8954-345">제어점 사이의 곡률을 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-345">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="f8954-346">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-346">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="f8954-347">스플라인 곡선을 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-347">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-348">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-348">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-349">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-349">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="f8954-350">배열의 지정 된 지점에서 시작 하는 곡선 `offset`, 점 (세그먼트)로 지정 된 개수를 포함 하 고 `numberOfSegments`입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-350">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-351">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-351">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-352">타원을 현재 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-352">Adds an ellipse to the current path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="f8954-353">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-353">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="f8954-354">타원을 현재 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-354">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-355">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-355">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-356">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-356">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="f8954-357">타원을 정의 하는 경계 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-357">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="f8954-358">경로 만들고 타원 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-358">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="f8954-359">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-359">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="f8954-360">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-360">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="f8954-361">타원을 현재 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-361">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-362">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-362">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-363">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-363">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-364">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-364">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="f8954-365">타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-365">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="f8954-366">타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-366">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="f8954-367">타원을 현재 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-367">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-368">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-368">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-369">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-369">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-370">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-370">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="f8954-371">타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-371">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="f8954-372">타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-372">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="f8954-373">타원을 현재 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-373">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-374">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-374">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-375">선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-375">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="f8954-376">선의 시작점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-376">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="f8954-377">선의 엔드포인트를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-377">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="f8954-378">선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-378">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-379">이 메서드는 직선 세그먼트의 끝에 지정된 된 요소에서 정의한 추가 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-379">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="f8954-380">이전 선이나 곡선의 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 직선 세그먼트를 경로에 마지막 지점 새 선 세그먼트의 첫 번째 요소를 연결할 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-380">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-381">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-381">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="f8954-382">선의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-382">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="f8954-383">선의 엔드포인트를 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-383">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="f8954-384">선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-384">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-385">이 메서드는 직선 세그먼트의 끝에 지정된 된 요소에서 정의한 추가 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-385">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="f8954-386">이전 선이나 곡선의 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 직선 세그먼트를 경로에 마지막 지점 새 선 세그먼트의 첫 번째 요소를 연결할 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-386">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-387">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-387">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="f8954-388">선의 시작점에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-388">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="f8954-389">선의 시작점에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-389">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="f8954-390">선의 엔드포인트에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-390">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="f8954-391">선의 엔드포인트에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-391">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="f8954-392">선 세그먼트를 현재 그림에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-392">Appends a line segment to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-393">이 메서드는 현재 그림의 끝에 지정 된 지점으로 정의 된 선 세그먼트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-393">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="f8954-394">이전 선이나 곡선의 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 직선 세그먼트를 경로에 마지막 지점 새 선 세그먼트의 첫 번째 요소를 연결할 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-394">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-395">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-395">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-396">코드 경로 만듭니다, 그리고 삼각형을 형성 하는 세 줄을 추가 및 화면에 다음 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-396">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="f8954-397">선의 시작점에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-397">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="f8954-398">선의 시작점에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-398">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="f8954-399">선의 엔드포인트에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-399">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="f8954-400">선의 엔드포인트에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-400">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="f8954-401">선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-401">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-402">이 메서드는 직선 세그먼트의 끝에 지정된 된 요소에서 정의한 추가 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-402">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="f8954-403">이전 선이나 곡선의 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 직선 세그먼트를 경로에 마지막 지점 새 선 세그먼트의 첫 번째 요소를 연결할 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-403">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-404">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-404">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-405">연결된 일련의 선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 끝에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-405">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-406">추가할 선 세그먼트를 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-406">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="f8954-407">연결된 일련의 선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 끝에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-407">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-408">이전 선이나 곡선 그림에서 없으면 줄 줄의 시작 지점 이전 세그먼트의 끝점에 연결할 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-408">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="f8954-409">`points` 매개 변수는 끝점의 배열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-409">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="f8954-410">처음 두 개는 첫 번째 줄을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-410">The first two specify the first line.</span></span> <span data-ttu-id="f8954-411">각 추가 연결 지점 앞 줄의 끝점 인 시작점 선 세그먼트의 끝점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-411">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-412">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-412">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-413">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-413">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-414">삼각형을 설명 하는 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-414">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="f8954-415">경로 만들어 줄 배열을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-415">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="f8954-416">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-416">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="f8954-417">첫 번째 이후의 각 줄에서는 새 지점과 시작 지점으로 이전 시점 끝점을 사용 하는 알 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-417">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-418">추가할 선 세그먼트를 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-418">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="f8954-419">연결된 일련의 선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 끝에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-419">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-420">이전 선이나 곡선 그림에서 없으면 줄 줄의 시작 지점 이전 세그먼트의 끝점에 연결할 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-420">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="f8954-421">`points` 매개 변수는 끝점의 배열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-421">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="f8954-422">처음 두 개는 첫 번째 줄을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-422">The first two specify the first line.</span></span> <span data-ttu-id="f8954-423">각 추가 연결 지점 앞 줄의 끝점 인 시작점 선 세그먼트의 끝점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-423">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-424">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-424">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath"><span data-ttu-id="f8954-425">추가할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-425">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span></span></param>
        <param name="connect"><span data-ttu-id="f8954-426">추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림의 일부인지 여부를 지정하는 부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-426">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="f8954-427"><see langword="true" />로 설정하면 추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림의 일부가 되고,</span><span class="sxs-lookup"><span data-stu-id="f8954-427">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="f8954-428"><see langword="false" />로 설정하면 추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림과 별개가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-428">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span></span></param>
        <summary><span data-ttu-id="f8954-429">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 이 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-429">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-430">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-430">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-431">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-431">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-432">오른쪽 / 왼쪽 위쪽 삼각형 및 쪽 아래로 삼각형을 다른 두 경로 하나를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-432">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="f8954-433">첫 번째와 두 번째 경로 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-433">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="f8954-434">화면에 결과 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-434">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-435">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-435">Adds the outline of a pie shape to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="f8954-436">부채꼴이 그려지는 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-436">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="f8954-437">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-437">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="f8954-438"><paramref name="startAngle" />과 부채꼴 끝 사이의 각도이며, <paramref name="startAngle" />에서 시계 방향으로 측정한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-438">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="f8954-439">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-439">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-440">원형 도형이 부분 개요 타원 및 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-440">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="f8954-441">시작 된 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정) 끝나는 `startAngle`  +  `sweepAngle`합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-441">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-442">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-442">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-443">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-443">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-444">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-444">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="f8954-445">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-445">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="f8954-446">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-446">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="f8954-447">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-447">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="f8954-448"><paramref name="startAngle" />과 부채꼴 끝 사이의 각도이며, <paramref name="startAngle" />에서 시계 방향으로 측정한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-448">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="f8954-449">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-449">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-450">원형 도형이 부분 개요 타원 및 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-450">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="f8954-451">시작 된 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정) 끝나는 `startAngle`  +  `sweepAngle`합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-451">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-452">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-452">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-453">코드는 그래픽 경로 만들고, 원형 셰이프를 추가 및 다음 화면으로 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-453">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-454">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-454">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-455">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-455">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="f8954-456">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-456">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="f8954-457">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-457">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="f8954-458">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-458">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="f8954-459"><paramref name="startAngle" />과 부채꼴 끝 사이의 각도이며, <paramref name="startAngle" />에서 시계 방향으로 측정한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-459">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="f8954-460">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-460">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-461">원형 도형이 부분 개요 타원 및 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-461">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="f8954-462">시작 된 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정) 끝나는 `startAngle`  +  `sweepAngle`합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-462">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-463">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-463">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-464">이 경로에 다각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-464">Adds a polygon to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-465">추가할 다각형을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-465">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="f8954-466">이 경로에 다각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-466">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-467">에 있는 요소는 `points` 다각형의 꼭지점을 지정 하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-467">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="f8954-468">배열의 첫 번째 지점을 마지막 점과 같이 없는 경우이 두 지점 다각형을 닫으려면 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-468">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-469">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-469">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-470">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-470">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-471">다각형을 정의 하는 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-471">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="f8954-472">경로 만들고 다각형 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-472">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="f8954-473">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-473">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="f8954-474">추가할 다각형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-474">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="f8954-475">이 경로에 다각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-475">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-476">에 있는 요소는 `points` 다각형의 꼭지점을 지정 하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-476">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="f8954-477">배열의 첫 번째 지점을 마지막 점과 같이 없는 경우이 두 지점 다각형을 닫으려면 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-477">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-478">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-478">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-479">이 경로에 사각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-479">Adds a rectangle to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="f8954-480">추가할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-480">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="f8954-481">이 경로에 사각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-481">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-482">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-482">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-483">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-483">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-484">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-484">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-485">사각형을 만들고 경로에 사각형을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-485">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="f8954-486">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-486">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="f8954-487">추가할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-487">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="f8954-488">이 경로에 사각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-488">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-489">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-489">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-490">이 경로에 일련의 사각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-490">Adds a series of rectangles to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="f8954-491">추가할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-491">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="f8954-492">이 경로에 일련의 사각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-492">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-493">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-493">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-494">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-494">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-495">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-495">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-496">사각형의 배열을 만들고 경로에 사각형을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-496">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="f8954-497">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-497">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="f8954-498">추가할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-498">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="f8954-499">이 경로에 일련의 사각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-499">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-500">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-500">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-501">이 경로에 텍스트 문자열을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-501">Adds a text string to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="f8954-502">추가할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-502">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="f8954-503">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-503">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="f8954-504">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-504">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="f8954-505">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-505">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="f8954-506">문자를 제한하는 em 정사각형 상자의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-506">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="f8954-507">텍스트가 시작되는 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-507">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="f8954-508">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-508">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="f8954-509">이 경로에 텍스트 문자열을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-509">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-510">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-510">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-511">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-511">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-512">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-512">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-513">글꼴 및 문자열 인수를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-513">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="f8954-514">경로에 문자열을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-514">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="f8954-515">화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-515">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="f8954-516">두 가지 중요 한 지적 하 합니다. 먼저는 `fontStyle` 인수는 정수로 캐스팅 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-516">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="f8954-517">합니다 <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> 방법을 사용 하려면이 따라서 둘 이상의 <xref:System.Drawing.FontStyle> 원하는 글꼴 스타일을 만들려면 멤버를 결합할 수 있습니다 (이 예에서 <xref:System.Drawing.FontStyle.Italic> 및 <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="f8954-517">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="f8954-518">둘째는 <xref:System.Drawing.Graphics.FillPath%2A> 메서드를 사용 하지 않고 <xref:System.Drawing.Graphics.DrawPath%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f8954-518">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="f8954-519">경우 <xref:System.Drawing.Graphics.FillPath%2A> 를 사용할 반면 solid 텍스트를 렌더링 하는 경우 <xref:System.Drawing.Graphics.DrawPath%2A> 는 사용 된 텍스트 수 윤곽선 스타일.</span><span class="sxs-lookup"><span data-stu-id="f8954-519">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="f8954-520">추가할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-520">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="f8954-521">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-521">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="f8954-522">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-522">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="f8954-523">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-523">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="f8954-524">문자를 제한하는 em 정사각형 상자의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-524">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="f8954-525">텍스트가 시작되는 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-525">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="f8954-526">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-526">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="f8954-527">이 경로에 텍스트 문자열을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-527">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-528">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-528">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="f8954-529">추가할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-529">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="f8954-530">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-530">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="f8954-531">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-531">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="f8954-532">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-532">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="f8954-533">문자를 제한하는 em 정사각형 상자의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-533">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="f8954-534">텍스트를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-534">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="f8954-535">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-535">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="f8954-536">이 경로에 텍스트 문자열을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-536">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-537">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-537">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="f8954-538">추가할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-538">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="f8954-539">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-539">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="f8954-540">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-540">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="f8954-541">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-541">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="f8954-542">문자를 제한하는 em 정사각형 상자의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-542">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="f8954-543">텍스트를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-543">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="f8954-544">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-544">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="f8954-545">이 경로에 텍스트 문자열을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-545">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-546">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-546">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-547">이 경로에서 모든 마커를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-547">Clears all markers from this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-548">사용 하 여는 <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> 메서드를 현재 위치에 표식을 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="f8954-549">사용 된 <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> 경로에서 기존 마커를 반복 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-549">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="f8954-550">표식 경로의 하위 그룹을 구분 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-550">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="f8954-551">두 표식 간에 하나 이상의 하위 경로 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-551">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-552">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-552">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-553">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-553">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-554">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-554">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-555">경로에 여러 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-555">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="f8954-556">경로에 마커를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-556">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="f8954-557">경로에서 모든 마커를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-557">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="f8954-558">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-558">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-559">이 경로와 정확하게 일치하는 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-559">Creates an exact copy of this path.</span></span></summary>
        <returns><span data-ttu-id="f8954-560">이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-560">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-561">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-561">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-562">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-562">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-563">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-563">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-564">경로에 여러 그림을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-564">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="f8954-565">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-565">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="f8954-566">해당 경로의 복사본을 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-566">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="f8954-567">화면에 새 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-567">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="f8954-568">호출을 <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> 으로 메서드를 캐스팅 되어야 합니다는 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-568">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-569">이 경로에 있는 열린 그림을 모두 닫고 새 그림을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-569">Closes all open figures in this path and starts a new figure.</span></span> <span data-ttu-id="f8954-570">열린 각 그림의 엔드포인트에서 시작점으로 선을 연결하면 해당 그림이 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-570">It closes each open figure by connecting a line from its endpoint to its starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-571">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-571">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-572">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-572">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-573">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-573">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-574">경로에 여러 개의 열린 그림을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-574">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="f8954-575">경로에 모든 그림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-575">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="f8954-576">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-576">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-577">현재 그림을 닫고 새 그림을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-577">Closes the current figure and starts a new figure.</span></span> <span data-ttu-id="f8954-578">연결된 일련의 선과 곡선이 현재 그림에 있으면 메서드가 엔드포인트에서 시작점으로 선을 연결하여 루프를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-578">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-579">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-579">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-580">코드를 새 경로 만들기, 그림을 시작, 그림에서 교차 하는 두 개의 선 추가 및 그림 삼각형을 종료 한 후 삼각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-580">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="f8954-581">경로 다음 화면으로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-581">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-582">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-582">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-583">호출 <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> 이 사용 하는 리소스 <xref:System.Drawing.Drawing2D.GraphicsPath> 다른 용도로 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-583">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8954-584">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-584">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></summary>
        <value><span data-ttu-id="f8954-585">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-585">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-586">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-586">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-587">이 경로에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-587">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-588">이 경로에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-588">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-589">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-589">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="f8954-590">직선으로 만들기 전에 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 변환할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-590">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <summary><span data-ttu-id="f8954-591">지정된 변환을 적용한 다음 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-591">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-592">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-592">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="f8954-593">직선으로 만들기 전에 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 변환할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-593">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <param name="flatness"><span data-ttu-id="f8954-594">곡선과 해당 곡선의 직선화 근사값 사이의 최대 허용 오류를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-594">Specifies the maximum permitted error between the curve and its flattened approximation.</span></span> <span data-ttu-id="f8954-595">기본값은 0.25입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-595">A value of 0.25 is the default.</span></span> <span data-ttu-id="f8954-596">이 값을 낮추면 근사값에서 선 세그먼트의 수가 증가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-596">Reducing the flatness value will increase the number of line segments in the approximation.</span></span></param>
        <summary><span data-ttu-id="f8954-597">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-597">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-598">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-598">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-599">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-599">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-600">그래픽 경로 및 변환 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-600">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="f8954-601">점이 4 개를 사용 하 여 경로에 곡선을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-601">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="f8954-602">Black 펜을 사용 하 여 화면에 경로 (곡선)를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-602">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="f8954-603">곡선 10 픽셀 아래로 이동 하 고이 평면화 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-603">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="f8954-604">빨간색 펜을 사용 하 여 화면에 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-604">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="f8954-605">빨간색 곡선 점을 연결 하는 줄을 결합에 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-605">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-606">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 제한하는 사각형을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-607">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 제한하는 사각형을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-607">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-608">이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-608">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-609">반환된 된 경계 사각형의 크기는 끝 캡, 펜 굵기 및 펜 각이 음 제한을 유형의 영향을 받습니다 하 고 따라서 제한 된 경로에 "느슨한 맞추기"를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-609">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="f8954-610">대략적인 공식은: 펜 굵기 초기 경계 사각형을 더하게 됩니다 및이 결과 마이터 한계 및 끝 캡을 허용 하는 추가 여백을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-610">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-611">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-611">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-612">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-612">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-613">그래픽 경로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-613">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="f8954-614">타원 (원)를 추가 하 고 화면을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-614">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="f8954-615">호출 하 여 원의 경계 사각형을 검색 <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> 화면으로 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-615">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="f8954-616">두 번째 그래픽 경로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-616">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="f8954-617">원을 추가 하 고 너비를 10에 대 한 경로 유니코드로 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-617">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="f8954-618">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-618">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="f8954-619">두 번째 원의 경계 사각형을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-619">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="f8954-620">화면에는 경계 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-620">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="f8954-621">대화 상자에서 사각형 크기를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-621">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="f8954-622">오른쪽 경계 사각형 (하기 위해 추가 줄 너비에 대 한 계정) 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-622">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="f8954-623">경계 사각형을 계산하기 전에 이 경로에 적용될 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-623">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="f8954-624">이 경로는 영구적으로 변환되는 것이 아니며, 경계 사각형을 계산하는 동안에만 이 경로에 변환이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-624">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <summary><span data-ttu-id="f8954-625">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 의해 이 경로가 변환되면 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 제한하는 사각형을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-625">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-626">이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-626">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-627">반환된 된 경계 사각형의 크기는 끝 캡, 펜 굵기 및 펜 각이 음 제한을 유형의 영향을 받습니다 하 고 따라서 제한 된 경로에 "느슨한 맞추기"를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-627">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="f8954-628">대략적인 공식은: 펜 굵기 초기 경계 사각형을 더하게 됩니다 및이 결과 마이터 한계 및 끝 캡을 허용 하는 추가 여백을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-628">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-629">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-629">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="f8954-630">경계 사각형을 계산하기 전에 이 경로에 적용될 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-630">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="f8954-631">이 경로는 영구적으로 변환되는 것이 아니며, 경계 사각형을 계산하는 동안에만 이 경로에 변환이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-631">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-632"><see cref="T:System.Drawing.Pen" />를 그릴 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-632">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <summary><span data-ttu-id="f8954-633">현재 경로가 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 의해 변환되고 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 사용하여 그려지는 경우 이 <see cref="T:System.Drawing.Pen" />를 제한하는 사각형을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-633">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-634">이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-634">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-635">반환된 된 경계 사각형의 크기는 끝 캡, 펜 굵기 및 펜 각이 음 제한을 유형의 영향을 받습니다 하 고 따라서 제한 된 경로에 "느슨한 맞추기"를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-635">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="f8954-636">대략적인 공식은: 펜 굵기 초기 경계 사각형을 더하게 됩니다 및이 결과 마이터 한계 및 끝 캡을 허용 하는 추가 여백을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-636">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-637">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-637">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-638">이 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />의 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 배열에 있는 마지막 지점을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-638">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-639">이 <see cref="T:System.Drawing.PointF" />에 있는 마지막 지점을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-639">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-640">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-640">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-641">코드 경로, 경로에 줄을 추가 만든 다음 경로에 있는 마지막 지점을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-641">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-642">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-642">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f8954-643">테스트할 위치를 지정하는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-643">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-644">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-644">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="f8954-645">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-645">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-646">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-646">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-647">이 메서드 테스트 경우 지정 된 경로 윤곽선은 지정된 된 지점에 표시 렌더링 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-647">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-648">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-648">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f8954-649">테스트할 위치를 지정하는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-649">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-650">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-650">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="f8954-651">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-651">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-652">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-652">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-653">이 메서드 테스트 경우 지정 된 경로 윤곽선은 지정된 된 지점에 표시 렌더링 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-653">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-654">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-654">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="f8954-655">테스트할 위치를 지정하는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-655">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-656">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-656">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="f8954-657">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-657">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="f8954-658">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-658">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-659">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-659">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-660">이 메서드 테스트 경우 지정 된 경로 윤곽선은 지정된 된 지점에 표시 렌더링 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-660">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="f8954-661">테스트할 점의 좌표는 전 세계 좌표에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-661">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="f8954-662">변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-662">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-663">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-663">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="f8954-664">테스트할 위치를 지정하는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-664">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-665">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-665">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="f8954-666">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-666">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="f8954-667">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-667">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-668">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-668">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-669">이 메서드 테스트 경우 지정 된 경로 윤곽선은 지정된 된 지점에 표시 렌더링 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-669">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="f8954-670">테스트할 점의 좌표는 전 세계 좌표에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-670">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="f8954-671">변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-671">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-672">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-672">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-673">테스트할 점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-673">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-674">테스트할 점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-674">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-675">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-675">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="f8954-676">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-676">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-677">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-677">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-678">이 메서드 테스트 경우 지정 된 경로 윤곽선은 지정된 된 지점에 표시 렌더링 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-678">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-679">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-679">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-680">테스트할 점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-680">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-681">테스트할 점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-681">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-682">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-682">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="f8954-683">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-683">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-684">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-684">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-685">이 메서드 테스트 경우 지정 된 경로 윤곽선은 지정된 된 지점에 표시 렌더링 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-685">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-686">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-686">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-687">테스트할 점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-687">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-688">테스트할 점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-688">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-689">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-689">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="f8954-690">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-690">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="f8954-691">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-691">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-692">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-692">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-693">이 메서드 테스트 경우 지정 된 경로 윤곽선은 지정된 된 지점에 표시 렌더링 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-693">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="f8954-694">테스트할 점의 좌표는 전 세계 좌표에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-694">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="f8954-695">변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-695">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-696">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-696">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="f8954-697">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-697">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-698">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-698">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-699">경로에 사각형을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-699">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="f8954-700">넓은 펜을 만들고 (예제에서는 명확 하 게 되도록)는 펜을 사용 하 여 경로 넓힙니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-700">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="f8954-701">요소 (100, 50)를 호출 하 여 사각형의 모서리 중 하나 (아래)에서 배치 하는 경우 테스트 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-701">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="f8954-702">결과 (이 경우, true) 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-702">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="f8954-703">즉에 지는 해당 지점 위에 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-703">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-704">테스트할 점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-704">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-705">테스트할 점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-705">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="f8954-706">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-706">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="f8954-707">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-707">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="f8954-708">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-708">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-709">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-709">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-710">이 메서드 테스트 경우 지정 된 경로 윤곽선은 지정된 된 지점에 표시 렌더링 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-710">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="f8954-711">테스트할 점의 좌표는 전 세계 좌표에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-711">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="f8954-712">변환 매트릭스를 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-712">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-713">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-713">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-714">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-714">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f8954-715">테스트할 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-715">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="f8954-716">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-716">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-717">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-717">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-718">예제를 보려면 `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-718">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f8954-719">테스트할 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-719">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="f8954-720">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-720">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-721">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-721">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-722">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-722">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="f8954-723">테스트할 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-723">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="f8954-724">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-724">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="f8954-725">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-725">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-726">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-726">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-727">테스트할 점의 좌표는 전 세계 좌표에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-727">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="f8954-728">변환 매트릭스를 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-728">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-729">예제를 보려면 `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-729">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="f8954-730">테스트할 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-730">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="f8954-731">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-731">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="f8954-732">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-732">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-733">지정된 지점이 이 개체 내에 들어 있으면 이 메서드가 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-733">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-734">테스트할 점의 좌표는 전 세계 좌표에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-734">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="f8954-735">변환 매트릭스를 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-735">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-736">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-736">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-737">테스트할 점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-737">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-738">테스트할 점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-738">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="f8954-739">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-739">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-740">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-740">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-741">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-741">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-742">테스트할 점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-742">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-743">테스트할 점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-743">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="f8954-744">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-744">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-745">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-745">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-746">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-746">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-747">테스트할 점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-747">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-748">테스트할 점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-748">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="f8954-749">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-749">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="f8954-750">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 사용하여 지정된 지점이 이 <see cref="T:System.Drawing.Graphics" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-750">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-751">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-751">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-752">테스트할 점의 좌표는 전 세계 좌표에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-752">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="f8954-753">변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-753">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-754">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-754">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-755">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-755">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-756">경로 만들고 타원을 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-756">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="f8954-757">경로 내에서 지정 된 점이 포함 되는지 여부를 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-757">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="f8954-758">대화 상자에서 결과 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-758">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f8954-759">테스트할 점의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-759">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="f8954-760">테스트할 점의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-760">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="f8954-761">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-761">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="f8954-762">지정된 지점이 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 가시 클리핑 영역에 있는 이 <see cref="T:System.Drawing.Graphics" /> 내에 들어 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-762">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="f8954-763">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-763">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-764">테스트할 점의 좌표는 전 세계 좌표에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-764">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="f8954-765">변환 매트릭스를 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-765">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-766">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-766">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8954-767">이 <see cref="T:System.Drawing.Drawing2D.PathData" />의 지점(<paramref name="points" />) 및 형식(<paramref name="types" />)의 배열을 캡슐화하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-767">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <value><span data-ttu-id="f8954-768">이 <see cref="T:System.Drawing.Drawing2D.PathData" />의 지점 및 형식에 대한 배열을 캡슐화하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-768">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8954-769">경로의 지점을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-769">Gets the points in the path.</span></span></summary>
        <value><span data-ttu-id="f8954-770">경로를 나타내는 <see cref="T:System.Drawing.PointF" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-770">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8954-771"><see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 배열의 해당 지점 종류를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-771">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span></span></summary>
        <value><span data-ttu-id="f8954-772">경로에서 해당 지점 종류를 나타내는 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-772">An array of bytes that specifies the types of the corresponding points in the path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-773">반환 된 바이트 배열을 <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> 경로 지점 형식 및 데이터 요소에 대 한 플래그를 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-773">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="f8954-774">각 지점에 대해 비트 0 ~ 2 지점의 유형을 나타내는 누른 비트 3 ~ 7 요소의 특성을 지정 하는 플래그 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-774">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="f8954-775">다음 표에서 가능한 값과 해당 의미를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-775">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="f8954-776">값</span><span class="sxs-lookup"><span data-stu-id="f8954-776">Value</span></span>|<span data-ttu-id="f8954-777">의미</span><span class="sxs-lookup"><span data-stu-id="f8954-777">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="f8954-778">0</span><span class="sxs-lookup"><span data-stu-id="f8954-778">0</span></span>|<span data-ttu-id="f8954-779">그림의 시작 지점 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-779">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="f8954-780">1</span><span class="sxs-lookup"><span data-stu-id="f8954-780">1</span></span>|<span data-ttu-id="f8954-781">지점 선의 두 끝점 중 하나 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-781">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="f8954-782">3</span><span class="sxs-lookup"><span data-stu-id="f8954-782">3</span></span>|<span data-ttu-id="f8954-783">끝점 또는 제어 지점의 입방 형 3 차원 곡선 스플라인 지점 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-783">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="f8954-784">0x7</span><span class="sxs-lookup"><span data-stu-id="f8954-784">0x7</span></span>|<span data-ttu-id="f8954-785">지점 종류를 나타내는 세 가지 하위 비트를 제외한 모든 비트를 마스크 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-785">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="f8954-786">0x20</span><span class="sxs-lookup"><span data-stu-id="f8954-786">0x20</span></span>|<span data-ttu-id="f8954-787">표식 지점 임을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-787">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="f8954-788">0x80</span><span class="sxs-lookup"><span data-stu-id="f8954-788">0x80</span></span>|<span data-ttu-id="f8954-789">지점 닫힌된 하위 경로 (그림)에서 마지막 지점 임을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-789">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8954-790"><see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 또는 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열의 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-790">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></summary>
        <value><span data-ttu-id="f8954-791"><see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 또는 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열의 요소 수를 지정하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-791">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-792"><see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 및 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열을 비우고 <see cref="T:System.Drawing.Drawing2D.FillMode" />를 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-792">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-793">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-793">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-794">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-794">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-795">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-795">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-796">여러 기본 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-796">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="f8954-797">화면에 경로 지점 배열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-797">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="f8954-798">경로를 빈 상태로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-798">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="f8954-799">(있는 경우)에 다시 points 배열을 획득 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-799">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="f8954-800">화면에 배열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-800">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="f8954-801">호출 다음에 재설정 배열 찾으면 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-801">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-802">이 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />의 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 배열에 있는 지점의 순서를 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-802">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-803">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-803">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-804">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-804">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-805">경로 만들고 여러 기본 요소 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-805">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="f8954-806">화면에 경로 지점 배열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-806">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="f8954-807">화면에 역방향된 points 배열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-807">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="f8954-808">요소의 두 번째 목록에서 첫 번째 반대 순서로 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-808">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-809">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 마커를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-809">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-810">이 메서드는 경로 부분을 구분 하는 경로에 마커를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-810">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="f8954-811">사용할 수는 <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> 경로에서 마커를 반복 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-811">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="f8954-812">표식 경로의 하위 그룹을 구분 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-812">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="f8954-813">경로에 두 표식 간에 하나 이상의 하위 경로 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-813">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-814">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-814">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-815">코드 경로 만듭니다 표식으로 구분 된 경로에 몇 가지 기본 요소를 추가 및 화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-815">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8954-816">현재 그림을 닫지 않고 새 그림을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-816">Starts a new figure without closing the current figure.</span></span> <span data-ttu-id="f8954-817">경로에 추가된 모든 후속 지점이 이 새 그림에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-817">All subsequent points added to the path are added to this new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-818">사용자는 필요할 경우 원래 지점은 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-818">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="f8954-819">원래 지점은 입방 형 3 차원 큐빅 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-819">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="f8954-820">이 메서드는 경로에 새 하위 경로 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-820">This method starts a new subpath in the path.</span></span> <span data-ttu-id="f8954-821">하위 경로 사용 하면 경로 섹션으로 구분 하 고 사용 하는 <xref:System.Drawing.Drawing2D.GraphicsPathIterator> 하위 경로 확인을 반복 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-821">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-822">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-822">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-823">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-823">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-824">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-824">Creates a path.</span></span>  
  
-   <span data-ttu-id="f8954-825">두 그림 집합을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-825">Adds two sets of figures.</span></span> <span data-ttu-id="f8954-826">첫 번째 그림 집합 두 그림에 네 명의 기본 요소를 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-826">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="f8954-827">두 번째 그림 집합을 결합 하 여 같은 네 가지 기본 형식 (제외 하 고 오프셋 인 경우 y 축) 세 가지 그림에 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-827">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="f8954-828">화면에 모든 그림을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-828">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="f8954-829">모양 수치의 두 집합 간의 차이 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-829">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="f8954-830">적용할 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-830">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="f8954-831">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 변환 매트릭스를 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-831">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-832">변환 수 크기 조정, 변환, 회전 하거나 기울일는 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-832">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-833">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-833">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-834">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-834">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-835">경로 만들고 타원을 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-835">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="f8954-836">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-836">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="f8954-837">X 축 방향의 경로 100 단위로 변환 하는 변환 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-837">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="f8954-838">화면에 변환 된 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-838">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="f8954-839">원래 타원 검정색에서 그려지는 변형 된 타원 빨간색에서 그려지는 유의 하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-839">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-840">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-840">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="f8954-841"><paramref name="srcRect" />에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-841">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="f8954-842">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</span><span class="sxs-lookup"><span data-stu-id="f8954-842">The array can contain either three or four elements.</span></span> <span data-ttu-id="f8954-843">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-843">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="f8954-844"><paramref name="destPoints" />로 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-844">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <summary><span data-ttu-id="f8954-845">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-845">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-846">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-846">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="f8954-847"><paramref name="srcRect" />에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-847">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="f8954-848">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</span><span class="sxs-lookup"><span data-stu-id="f8954-848">The array can contain either three or four elements.</span></span> <span data-ttu-id="f8954-849">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-849">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="f8954-850"><paramref name="destPoints" />로 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-850">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="f8954-851">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-851">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <summary><span data-ttu-id="f8954-852">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-852">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-853">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-853">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="f8954-854"><paramref name="srcRect" />에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-854">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="f8954-855">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</span><span class="sxs-lookup"><span data-stu-id="f8954-855">The array can contain either three or four elements.</span></span> <span data-ttu-id="f8954-856">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-856">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="f8954-857"><paramref name="destPoints" />로 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-857">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="f8954-858">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-858">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="f8954-859">이 휘기 작업에 원근 모드와 이중 선형 모드 중 어느 모드를 사용할지를 지정하는 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-859">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <summary><span data-ttu-id="f8954-860">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-860">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-861">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-861">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="f8954-862"><paramref name="srcRect" />에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-862">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="f8954-863">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</span><span class="sxs-lookup"><span data-stu-id="f8954-863">The array can contain either three or four elements.</span></span> <span data-ttu-id="f8954-864">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-864">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="f8954-865"><paramref name="destPoints" />로 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-865">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="f8954-866">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-866">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="f8954-867">이 휘기 작업에 원근 모드와 이중 선형 모드 중 어느 모드를 사용할지를 지정하는 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-867">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <param name="flatness"><span data-ttu-id="f8954-868">결과로 만들어지는 경로의 직선화 정도를 지정하는 0에서 1 사이의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-868">A value from 0 through 1 that specifies how flat the resulting path is.</span></span> <span data-ttu-id="f8954-869">자세한 내용은 <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> 메서드를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-869">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span></span></param>
        <summary><span data-ttu-id="f8954-870">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-870">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8954-871">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-871">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-872">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-872">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-873">경로 만들고 경로에 사각형을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-873">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="f8954-874">검은색으로 화면에는 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-874">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="f8954-875">개 원근 휘기의 사용 하 여 경로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-875">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="f8954-876">빨간색에서 화면으로 휜된 사각형 (경로)를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-876">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8954-877">이 경로를 지정된 펜으로 그릴 때 채워지는 영역을 둘러싸는 곡선으로 이 경로를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-877">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="f8954-878">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-878">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <summary><span data-ttu-id="f8954-879">경로에 윤곽선을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-879">Adds an additional outline to the path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-880">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 줄에서 새 윤곽선 사이의 거리를 사용 하 여 같은 너비의 합니다 <xref:System.Drawing.Pen> 에 대 한 호출에 사용 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-880">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="f8954-881">줄 사이의 공간을 채울 경우 사용 해야 합니다 <xref:System.Drawing.Graphics.FillPath%2A> 대신 다음을 <xref:System.Drawing.Graphics.DrawPath%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-881">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-882">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-882">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="f8954-883">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-883">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="f8954-884">너비를 넓히기 전에 경로에 적용할 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-884">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <summary><span data-ttu-id="f8954-885"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 윤곽선을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-885">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-886">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 줄에서 새 윤곽선 사이의 거리를 사용 하 여 같은 너비의 합니다 <xref:System.Drawing.Pen> 에 대 한 호출에 사용 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-886">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="f8954-887">줄 사이의 공간을 채울 경우 사용 해야 합니다 <xref:System.Drawing.Graphics.FillPath%2A> 대신 다음을 <xref:System.Drawing.Graphics.DrawPath%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-887">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-888">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f8954-888">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="f8954-889">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-889">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="f8954-890">너비를 넓히기 전에 경로에 적용할 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-890">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <param name="flatness"><span data-ttu-id="f8954-891">곡선에 대한 직선화 정도를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-891">A value that specifies the flatness for curves.</span></span></param>
        <summary><span data-ttu-id="f8954-892">이 경로를 지정된 펜으로 그릴 때 채워지는 영역을 둘러싸는 곡선으로 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-892">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8954-893">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 줄에서 새 윤곽선 사이의 거리를 사용 하 여 같은 너비의 합니다 <xref:System.Drawing.Pen> 에 대 한 호출에 사용 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-893">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="f8954-894">줄 사이의 공간을 채울 경우 사용 해야 합니다 <xref:System.Drawing.Graphics.FillPath%2A> 대신 다음을 <xref:System.Drawing.Graphics.DrawPath%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-894">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8954-895">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-895">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="f8954-896">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-896">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="f8954-897">경로 만들고 타원 두 경로를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-897">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="f8954-898">검은색으로 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-898">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="f8954-899">경로 확대 합니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-899">Widens the path.</span></span>  
  
-   <span data-ttu-id="f8954-900">빨간색에서 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="f8954-900">Draws the path in red.</span></span>  
  
 <span data-ttu-id="f8954-901">두 번째 렌더링을 사용 하는 알 수 있습니다 <xref:System.Drawing.Graphics.FillPath%2A> 대신 <xref:System.Drawing.Graphics.DrawPath%2A>, 있고 따라서 렌더링 된 그림 채워진 개요.</span><span class="sxs-lookup"><span data-stu-id="f8954-901">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>