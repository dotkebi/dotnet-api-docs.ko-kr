<Type Name="MemoryCache" FullName="System.Runtime.Caching.MemoryCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a9a7564632e1ddf32afdc927a309aba7d36e6a9" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56766631" /></Metadata><TypeSignature Language="C#" Value="public class MemoryCache : System.Runtime.Caching.ObjectCache, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryCache extends System.Runtime.Caching.ObjectCache implements class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.MemoryCache" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryCache&#xA;Inherits ObjectCache&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryCache : System::Runtime::Caching::ObjectCache, IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryCache = class&#xA;    inherit ObjectCache&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.ObjectCache</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="09a6d-101">메모리 내 캐시를 구현하는 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-101">Represents the type that implements an in-memory cache.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-102"><xref:System.Runtime.Caching.MemoryCache> 클래스는 추상적인 <xref:System.Runtime.Caching.ObjectCache> 클래스의 구체적인 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-102">The <xref:System.Runtime.Caching.MemoryCache> class is a concrete implementation of the abstract <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09a6d-103">합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스는 ASP.NET 비슷합니다 <xref:System.Web.Caching.Cache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-103">The <xref:System.Runtime.Caching.MemoryCache> class is similar to the ASP.NET <xref:System.Web.Caching.Cache> class.</span></span> <span data-ttu-id="09a6d-104">합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스에 여러 속성 및 ASP.NET을 사용한 경우 익숙할 수 있는 캐시에 액세스 하기 위한 메서드가 <xref:System.Web.Caching.Cache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-104">The <xref:System.Runtime.Caching.MemoryCache> class has many properties and methods for accessing the cache that will be familiar to you if you have used the ASP.NET <xref:System.Web.Caching.Cache> class.</span></span> <span data-ttu-id="09a6d-105">간의 주요 차이점은 <xref:System.Web.Caching.Cache> 및 <xref:System.Runtime.Caching.MemoryCache> 하는 클래스는를 <xref:System.Runtime.Caching.MemoryCache> 클래스에서 사용할 수 있도록 변경 되었습니다 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] ASP.NET 애플리케이션 없는 애플리케이션.</span><span class="sxs-lookup"><span data-stu-id="09a6d-105">The main differences between the <xref:System.Web.Caching.Cache> and <xref:System.Runtime.Caching.MemoryCache> classes are that the <xref:System.Runtime.Caching.MemoryCache> class has been changed to make it usable by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] applications that are not ASP.NET applications.</span></span> <span data-ttu-id="09a6d-106">예를 들어 합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스에 의존 하지 않습니다는 `System.Web` 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-106">For example, the <xref:System.Runtime.Caching.MemoryCache> class has no dependencies on the `System.Web` assembly.</span></span> <span data-ttu-id="09a6d-107">또 다른 차이점은의 여러 인스턴스를 만들 수는 <xref:System.Runtime.Caching.MemoryCache> 과 같은 동일한 애플리케이션에 사용할 수 있도록 클래스 <xref:System.AppDomain> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="09a6d-107">Another difference is that you can create multiple instances of the <xref:System.Runtime.Caching.MemoryCache> class for use in the same application and in the same <xref:System.AppDomain> instance.</span></span>  
  
 <span data-ttu-id="09a6d-108">합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스를 허용 하지 않습니다 `null` 캐시에서 값으로.</span><span class="sxs-lookup"><span data-stu-id="09a6d-108">The <xref:System.Runtime.Caching.MemoryCache> class does not allow `null` as a value in the cache.</span></span> <span data-ttu-id="09a6d-109">추가 하거나 값을 사용 하 여 캐시 엔트리를 변경 하려고 `null` 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-109">Any attempt to add or change a cache entry with a value of `null` will fail.</span></span>  
  
 <span data-ttu-id="09a6d-110">합니다 <xref:System.Runtime.Caching.MemoryCache> 형식을 구현 하지 않습니다 *캐시 지역*합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-110">The <xref:System.Runtime.Caching.MemoryCache> type does not implement *cache regions*.</span></span> <span data-ttu-id="09a6d-111">따라서 호출 하는 경우 <xref:System.Runtime.Caching.MemoryCache> 지역에 대 한 매개 변수를 포함 하는 기본 메서드를 구현 하는 메서드 매개 변수의 값을 전달 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-111">Therefore, when you call <xref:System.Runtime.Caching.MemoryCache> methods that implement base methods that contain a parameter for regions, do not pass a value for the parameter.</span></span> <span data-ttu-id="09a6d-112">모든 지역 매개 변수를 사용 하는 기본 제공 `null` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-112">The methods that use the region parameter all supply a default `null` value.</span></span> <span data-ttu-id="09a6d-113">예를 들어 합니다 <xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=nameWithType> 메서드 오버 로드에는 `regionName` 매개 변수는 기본 값인 `null`.</span><span class="sxs-lookup"><span data-stu-id="09a6d-113">For example, the <xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=nameWithType> method overload has a `regionName` parameter whose default value is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09a6d-114">다음 예제에서는 기본 메모리 캐시 인스턴스에 대 한 참조를 선언합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-114">The following example declares a reference to the default memory cache instance.</span></span> <span data-ttu-id="09a6d-115">다음을 사용 하 여 캐시 엔트리를 <xref:System.Runtime.Caching.CacheItemPolicy> 캐시 엔트리에 대 한 제거 집합과 만료 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-115">The cache entry uses a <xref:System.Runtime.Caching.CacheItemPolicy> object to provide eviction and expiration details for the cache entry.</span></span> <span data-ttu-id="09a6d-116">또한 사용 하 여를 <xref:System.Runtime.Caching.ChangeMonitor> 파일 시스템에 원본 데이터 (즉, 파일)의 상태를 모니터링 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-116">It also uses a <xref:System.Runtime.Caching.ChangeMonitor> object to monitor the state of the source data (which is a file) on the file system.</span></span>  
  
```vb  
Private Sub btnGet_Click(ByVal sender As Object, ByVal e As EventArgs)   
    Dim cache As ObjectCache = MemoryCache.[Default]   
    Dim fileContents As String = TryCast(cache("filecontents"), String)   
  
    If fileContents Is Nothing Then   
        Dim policy As New CacheItemPolicy()   
        Dim filePaths As New List(Of String)()   
        filePaths.Add("c:\cache\example.txt")   
  
        policy.ChangeMonitors.Add(New HostFileChangeMonitor(filePaths))   
  
        ' Fetch the file contents.  
        fileContents = File.ReadAllText("c:\cache\example.txt")   
  
        cache.[Set]("filecontents", fileContents, policy)   
    End If   
  
    Label1.Text = fileContents  
End Sub  
```  
  
```csharp  
private void btnGet_Click(object sender, EventArgs e)  
{  
    ObjectCache cache = MemoryCache.Default;  
    string fileContents = cache["filecontents"] as string;  
  
    if (fileContents == null)  
    {  
        CacheItemPolicy policy = new CacheItemPolicy();  
  
        List<string> filePaths = new List<string>();  
        filePaths.Add("c:\\cache\\example.txt");  
  
        policy.ChangeMonitors.Add(new   
        HostFileChangeMonitor(filePaths));  
  
        // Fetch the file contents.  
        fileContents =   
            File.ReadAllText("c:\\cache\\example.txt");  
  
        cache.Set("filecontents", fileContents, policy);  
    }  
  
    Label1.Text = fileContents;  
}  
```  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="09a6d-117">이 형식은 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-117">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
    <related type="Article" href="https://msdn.microsoft.com/library/942236f6-0138-4aaf-af71-a5ea451a1e23"><span data-ttu-id="09a6d-118">연습: ASP.NET에서 응용 프로그램 데이터 캐싱</span><span class="sxs-lookup"><span data-stu-id="09a6d-118">Walkthrough: Caching Application Data in ASP.NET</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c4b47ee0-4b82-4124-9bce-818088385e34"><span data-ttu-id="09a6d-119">.NET Framework 애플리케이션에서 캐싱</span><span class="sxs-lookup"><span data-stu-id="09a6d-119">Caching in .NET Framework Applications</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryCache (string name, System.Collections.Specialized.NameValueCollection config = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.#ctor(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, Optional config As NameValueCollection = null)" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.MemoryCache : string * System.Collections.Specialized.NameValueCollection -&gt; System.Runtime.Caching.MemoryCache" Usage="new System.Runtime.Caching.MemoryCache (name, config)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09a6d-120">구성 정보를 조회하는 데 사용할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-120">The name to use to look up configuration information.</span></span>  
  
 <span data-ttu-id="09a6d-121"><c>참고</c> 모든 이름에 대해서 구성 정보가 있어야 하는 것은 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-121"><c>Note</c> It is not required for configuration information to exist for every name.</span></span>  
  
<span data-ttu-id="09a6d-122">일치하는 구성 엔트리가 있는 경우 구성 정보를 사용하여 <see cref="T:System.Runtime.Caching.MemoryCache" /> 인스턴스를 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-122">If a matching configuration entry exists, the configuration information is used to configure the <see cref="T:System.Runtime.Caching.MemoryCache" /> instance.</span></span> <span data-ttu-id="09a6d-123">일치하는 구성 엔트리가 없는 경우에는 지정된 이름이 <see cref="P:System.Runtime.Caching.MemoryCache.Name" /> 인스턴스와 연결되어 있기 때문에 <see cref="T:System.Runtime.Caching.MemoryCache" /> 속성을 통해 이름에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-123">If a matching configuration entry does not exist, the name can be accessed through the <see cref="P:System.Runtime.Caching.MemoryCache.Name" /> property, because the specified name is associated with the <see cref="T:System.Runtime.Caching.MemoryCache" /> instance.</span></span> <span data-ttu-id="09a6d-124">메모리 캐시 구성에 대한 자세한 내용은 <see cref="T:System.Runtime.Caching.Configuration.MemoryCacheElement" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-124">For information about memory cache configuration, see <see cref="T:System.Runtime.Caching.Configuration.MemoryCacheElement" />.</span></span></param>
        <param name="config"><span data-ttu-id="09a6d-125">캐시를 구성하는 데 사용할 구성 정보의 이름/값 쌍 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-125">A collection of name/value pairs of configuration information to use for configuring the cache.</span></span></param>
        <summary><span data-ttu-id="09a6d-126"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-126">Initializes a new instance of the <see cref="T:System.Runtime.Caching.MemoryCache" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-127">경우는 <xref:System.Runtime.Caching.MemoryCache> 선택적를 사용 하 여 재정의 된 구성 항목에 대 한 검사 클래스를 초기화 `config` 생성자에 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-127">When the <xref:System.Runtime.Caching.MemoryCache> class is initialized, it checks for configuration entries that might have been overridden by using the optional `config` parameter in the constructor.</span></span> <span data-ttu-id="09a6d-128">다음 매개 변수를 전달할 수는 `config` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-128">You can pass the following parameters in the `config` parameter.</span></span> <span data-ttu-id="09a6d-129">정수로 모든 값을 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-129">All values can be passed as integers.</span></span>  
  
-   <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A>  
  
-   <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage%2A>  
  
-   <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A>  
  
 <span data-ttu-id="09a6d-130">이 생성자를 호출 하면 애플리케이션 구성 파일에서 구성 설정은 먼저 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-130">When this constructor is invoked, configuration settings are first retrieved from application configuration files.</span></span> <span data-ttu-id="09a6d-131">구성 항목이 애플리케이션 구성 파일에 존재 하는 경우에 제공 된 설정만 `config` 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-131">If no configuration entries exist in the application configuration file, only the settings provided in `config` are applied.</span></span> <span data-ttu-id="09a6d-132">에 전달 되는 경우 및 애플리케이션 구성의 구성 항목이 없으면 `config`의 정보는 `config` 구성 파일에서 읽은 정보를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-132">If the configuration entries in the application configuration exist, and if information is also passed in `config`, the information in the `config` overrides the information that is read from the configuration file.</span></span>  
  
 <span data-ttu-id="09a6d-133">캐시 인스턴스에 할당 된 이름 값은 두 가지 방법으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-133">The name value that is assigned to a cache instance is used in two ways:</span></span>  
  
-   <span data-ttu-id="09a6d-134">도움이 기록해 여러 캐시 인스턴스가 둘 이상의 인스턴스가 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="09a6d-134">To help you keep track of multiple cache instances when more than one instance exists.</span></span>  
  
-   <span data-ttu-id="09a6d-135">경우 구성에서 설정 파일을 참조 하는 <xref:System.Runtime.Caching.MemoryCache> 인스턴스 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-135">To reference settings in the configuration file when the <xref:System.Runtime.Caching.MemoryCache> instance is initialized.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="09a6d-136">캐시 인스턴스에 대 한 고유 이름을 적용 하는 방법은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-136">There is no mechanism to enforce unique names for cache instances.</span></span> <span data-ttu-id="09a6d-137">따라서 동일한 이름의 여러 캐시 인스턴스를 가질 수는 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-137">Therefore, it is possible to have multiple cache instances with the same name.</span></span>  
  
    > [!CAUTION]
    >  <span data-ttu-id="09a6d-138">만들지 <xref:System.Runtime.Caching.MemoryCache> 인스턴스가 필요한 경우를 제외 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-138">Do not create <xref:System.Runtime.Caching.MemoryCache> instances unless it is required.</span></span> <span data-ttu-id="09a6d-139">클라이언트와 웹 애플리케이션에서 캐시 인스턴스를 만드는 경우는 <xref:System.Runtime.Caching.MemoryCache> 인스턴스는 애플리케이션 수명 주기 초기에 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-139">If you create cache instances in client and Web applications, the <xref:System.Runtime.Caching.MemoryCache> instances should be created early in the application life cycle.</span></span> <span data-ttu-id="09a6d-140">애플리케이션에서 사용할 전역적으로 액세스할 수 있는 변수에 캐시 인스턴스에 대 한 참조를 저장 하는 캐시 인스턴스의 수만 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-140">You must create only the number of cache instances that will be used in your application, and store references to the cache instances in variables that can be accessed globally.</span></span> <span data-ttu-id="09a6d-141">예를 들어, ASP.NET 애플리케이션의 애플리케이션 상태에 대 한 참조를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-141">For example, in ASP.NET applications, you can store the references in application state.</span></span> <span data-ttu-id="09a6d-142">애플리케이션에 단일 캐시 인스턴스를 만들 경우 기본 캐시를 사용 하 고에서에 대 한 참조를 <xref:System.Runtime.Caching.MemoryCache.Default%2A> 속성 캐시에 액세스 해야 할 경우.</span><span class="sxs-lookup"><span data-stu-id="09a6d-142">If you create only a single cache instance in your application, use the default cache and get a reference to it from the <xref:System.Runtime.Caching.MemoryCache.Default%2A> property when you need to access the cache.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-143"><paramref name="name" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-143"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-144"><paramref name="config" /> 매개 변수의 이름 또는 값을 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-144">A name or value in the <paramref name="config" /> parameter could not be parsed.</span></span></exception>
        <exception cref="T:System.Configuration.ConfigurationException"><span data-ttu-id="09a6d-145"><paramref name="config" /> 컬렉션의 값이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-145">A value in the <paramref name="config" /> collection is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryCache (string name, System.Collections.Specialized.NameValueCollection config, bool ignoreConfigSection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Specialized.NameValueCollection config, bool ignoreConfigSection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.#ctor(System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, config As NameValueCollection, ignoreConfigSection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryCache(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config, bool ignoreConfigSection);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.MemoryCache : string * System.Collections.Specialized.NameValueCollection * bool -&gt; System.Runtime.Caching.MemoryCache" Usage="new System.Runtime.Caching.MemoryCache (name, config, ignoreConfigSection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="ignoreConfigSection" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09a6d-146">구성 정보를 조회하는 데 사용할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-146">The name to use to look up configuration information.</span></span></param>
        <param name="config"><span data-ttu-id="09a6d-147">캐시를 구성하는 데 사용할 구성 정보의 이름/값 쌍 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-147">A collection of name/value pairs of configuration information to use for configuring the cache.</span></span></param>
        <param name="ignoreConfigSection"><span data-ttu-id="09a6d-148">구성 섹션을 무시할지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-148">Indicates whether the configuration section should be ignored.</span></span></param>
        <summary><span data-ttu-id="09a6d-149"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-149">Initializes a new instance of the <see cref="T:System.Runtime.Caching.MemoryCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="memoryCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="09a6d-150">추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-150">The object to add.</span></span></param>
        <param name="policy"><span data-ttu-id="09a6d-151">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-151">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="09a6d-152">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-152">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="09a6d-153">캐시에 캐시 엔트리를 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스로 삽입하고 엔트리를 제거하는 방법에 대한 정보를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-153">Inserts a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span></span></summary>
        <returns><span data-ttu-id="09a6d-154">삽입이 성공하면 true이고, 캐시에 항목과 같은 키를 가진 엔트리가 이미 있으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-154">true if insertion succeeded, or false if there is an already an entry in the cache that has the same key as item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="09a6d-155"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 및 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버로드는 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 속성을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-155">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> and <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads do not support the <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> property.</span></span> <span data-ttu-id="09a6d-156">따라서 캐시 엔트리에 대한 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 속성을 설정하려면 대신 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드 오버로드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-156">Therefore, to set the <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> property for a cache entry, use the <xref:System.Runtime.Caching.MemoryCache.Set%2A> method overloads instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09a6d-157">캐시에 캐시 엔트리를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-157">Inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-158"><xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A> 메서드 오버 로드는 캐시 엔트리를 캐시에 삽입 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-158">The <xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A> method overloads are used to insert a cache entry into the cache.</span></span> <span data-ttu-id="09a6d-159">일치 하는 키를 사용 하 여 캐시 엔트리를 없으면 이러한 메서드는 새 항목을 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-159">If a cache entry with a matching key does not exist, these methods insert a new entry.</span></span> <span data-ttu-id="09a6d-160">일치 하는 키를 사용 하 여 캐시 엔트리를 이미 있는 경우 기존 항목을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-160">If a cache entry with a matching key already exists, they return the existing entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public override System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddOrGetExisting (item As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="override this.AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="memoryCache.AddOrGetExisting (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="09a6d-161">추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-161">The object to add.</span></span></param>
        <param name="policy"><span data-ttu-id="09a6d-162">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-162">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="09a6d-163">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-163">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="09a6d-164">지정된 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스와 캐시 엔트리를 제거하는 방법에 대한 정보를 사용하여 캐시 엔트리를 캐시에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-164">Adds a cache entry into the cache using the specified <see cref="T:System.Runtime.Caching.CacheItem" /> instance and details about how to evict the entry.</span></span></summary>
        <returns><span data-ttu-id="09a6d-165">키가 같은 캐시 엔트리가 있으면 기존 캐시 엔트리이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-165">If a cache entry with the same key exists, the existing cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-166">`item` 키와 메서드에서 사용 되는 값 매개 변수를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-166">The `item` parameter supplies the key and the value that is used by the method.</span></span> <span data-ttu-id="09a6d-167">캐시의 키와 같은 키를 사용 하 여 캐시 엔트리가 있으면 합니다 `item` 매개 변수를 메서드는 기존 항목을 반환 합니다는 <xref:System.Runtime.Caching.CacheItem> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="09a6d-167">If the cache has a cache entry with the same key as the key of the `item` parameter, the method returns the existing entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span> <span data-ttu-id="09a6d-168">메서드 키와 제공한 값을 사용 하 여 새로 만듭니다 기존의 캐시 항목이 있으면 합니다 `item` 매개 변수 및 지정 된 제거 세부 정보를 사용 하 여 `policy`입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-168">If there is no existing cache entry, the method creates a new one by using the key and value supplied by the `item` parameter, and with the eviction details specified by `policy`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="09a6d-169"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 및 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버로드는 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 속성을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-169">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> and <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads do not support the <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> property.</span></span> <span data-ttu-id="09a6d-170">따라서 캐시 엔트리에 대한 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 속성을 설정하려면 대신 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드 오버로드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-170">Therefore, to set the <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> property for a cache entry, use the <xref:System.Runtime.Caching.MemoryCache.Set%2A> method overloads instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-171"><see cref="P:System.Runtime.Caching.CacheItem.Value" /> 속성이 <see langword="null" />일 경우(이 속성은</span><span class="sxs-lookup"><span data-stu-id="09a6d-171">The <see cref="P:System.Runtime.Caching.CacheItem.Value" /> property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-172">절대 및 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체의 슬라이딩 만료 값 모두 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 및 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 필드의 기본값 이외의 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-172">Both the absolute and sliding expiration values for the <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> object are set to values other than the defaults of <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> and <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> fields.</span></span> <span data-ttu-id="09a6d-173"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스는 절대 만료와 슬라이딩(sliding) 만료의 조합을 기준으로 만료 정책을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-173">The <see cref="T:System.Runtime.Caching.MemoryCache" /> class cannot set expiration policy based on a combination of an absolute expiration and a sliding expiration.</span></span> <span data-ttu-id="09a6d-174"><see cref="T:System.Runtime.Caching.MemoryCache" /> 인스턴스를 사용하면 만료 설정을 하나만 명시적으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-174">Only one expiration setting can be explicitly set when you use the <see cref="T:System.Runtime.Caching.MemoryCache" /> instance.</span></span> <span data-ttu-id="09a6d-175">다른 만료 설정은 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 필드 또는 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 필드로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-175">The other expiration setting must be set to <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> field or <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> field.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09a6d-176"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성이 <see cref="F:System.TimeSpan.Zero" />보다 작은 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="09a6d-176">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value less than <see cref="F:System.TimeSpan.Zero" />.</span></span>  
  
<span data-ttu-id="09a6d-177">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-177">-or-</span></span> 
<span data-ttu-id="09a6d-178"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성은 1년 보다 큰 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-178">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value greater than one year.</span></span>  
  
<span data-ttu-id="09a6d-179">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-179">-or-</span></span> 
<span data-ttu-id="09a6d-180"><see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 속성은 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 열거형의 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-180">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> property is not a value of the <see cref="T:System.Runtime.Caching.CacheItemPriority" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public override object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="memoryCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-181">추가할 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-181">A unique identifier for the cache entry to add.</span></span></param>
        <param name="value"><span data-ttu-id="09a6d-182">캐시 엔트리의 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-182">The data for the cache entry.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="09a6d-183">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-183">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-184">캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-184">A named region in the cache to which a cache entry can be added.</span></span> <span data-ttu-id="09a6d-185">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-185">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-186"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-186">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-187">지정된 키와 값 및 절대 만료 값을 사용하여 캐시 엔트리를 캐시에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-187">Adds a cache entry into the cache using the specified key and a value and an absolute expiration value.</span></span></summary>
        <returns><span data-ttu-id="09a6d-188">키가 같은 캐시 엔트리가 있으면 기존 캐시 엔트리이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-188">If a cache entry with the same key exists, the existing cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-189">캐시 되지 않은 경우 캐시 엔트리를 해당 키 일치 하는 `key` 매개 변수를 새 캐시 엔트리로 만들어지면 및 <xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=nameWithType> 메서드 오버 로드를 반환 합니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-189">If the cache does not have a cache entry whose key matches the `key` parameter, a new cache entry is created, and the <xref:System.Runtime.Caching.MemoryCache.AddOrGetExisting%2A?displayProperty=nameWithType> method overload returns `null`.</span></span> <span data-ttu-id="09a6d-190">일치 하는 캐시 엔트리가 있으면 기존 항목 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-190">If a matching cache entry exists, the existing entry is returned.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="09a6d-191"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 및 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버로드는 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 속성을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-191">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> and <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads do not support the <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> property.</span></span> <span data-ttu-id="09a6d-192">따라서 캐시 엔트리에 대한 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 속성을 설정하려면 대신 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드 오버로드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-192">Therefore, to set the <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> property for a cache entry, use the <xref:System.Runtime.Caching.MemoryCache.Set%2A> method overloads instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-193"><paramref name="value" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-193"><paramref name="value" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-194"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-194"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-195">절대 및 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체의 슬라이딩 만료 값 모두 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 및 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 필드의 기본값 이외의 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-195">Both the absolute and sliding expiration values for the <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> object are set to values other than the defaults of <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> and <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> fields.</span></span> <span data-ttu-id="09a6d-196"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스는 절대 만료와 슬라이딩(sliding) 만료의 조합을 기준으로 만료 정책을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-196">The <see cref="T:System.Runtime.Caching.MemoryCache" /> class cannot set expiration policy based on a combination of an absolute expiration and a sliding expiration.</span></span> <span data-ttu-id="09a6d-197"><see cref="T:System.Runtime.Caching.MemoryCache" /> 인스턴스를 사용하면 만료 설정을 하나만 명시적으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-197">Only one expiration setting can be explicitly set when you use the <see cref="T:System.Runtime.Caching.MemoryCache" /> instance.</span></span> <span data-ttu-id="09a6d-198">다른 만료 설정은 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 또는 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-198">The other expiration setting must be set to <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> or <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /></span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09a6d-199"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성이 <see cref="F:System.TimeSpan.Zero" />보다 작은 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="09a6d-199">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value less than <see cref="F:System.TimeSpan.Zero" />.</span></span>  
  
<span data-ttu-id="09a6d-200">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-200">-or-</span></span> 
<span data-ttu-id="09a6d-201"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성은 1년 보다 큰 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-201">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value greater than one year.</span></span>  
  
<span data-ttu-id="09a6d-202">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-202">-or-</span></span> 
<span data-ttu-id="09a6d-203"><see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 속성은 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 열거형의 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-203">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> property is not a value of the <see cref="T:System.Runtime.Caching.CacheItemPriority" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public override object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="memoryCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-204">추가하거나 가져올 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-204">A unique identifier for the cache entry to add or get.</span></span></param>
        <param name="value"><span data-ttu-id="09a6d-205">캐시 엔트리의 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-205">The data for the cache entry.</span></span></param>
        <param name="policy"><span data-ttu-id="09a6d-206">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-206">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="09a6d-207">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-207">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-208">캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-208">A named region in the cache to which a cache entry can be added.</span></span> <span data-ttu-id="09a6d-209">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-209">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-210">기본적으로 <see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-210">By default, this parameter is <see langword="null" />, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-211">지정된 키와 값 및 캐시 엔트리를 제거하는 방법에 대한 지정된 정보를 사용하여 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-211">Inserts a cache entry into the cache using the specified key and value and the specified details for how it is to be evicted.</span></span></summary>
        <returns><span data-ttu-id="09a6d-212">일치하는 캐시 엔트리가 이미 있으면 캐시 엔트리이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-212">If a matching cache entry already exists, a cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="09a6d-213"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 및 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버로드는 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 속성을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-213">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> and <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads do not support the <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> property.</span></span> <span data-ttu-id="09a6d-214">따라서 캐시 엔트리에 대한 <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> 속성을 설정하려면 대신 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드 오버로드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-214">Therefore, to set the <xref:System.Runtime.Caching.CacheItemPolicy.UpdateCallback%2A> property for a cache entry, use the <xref:System.Runtime.Caching.MemoryCache.Set%2A> method overloads instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-215"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-215"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-216">절대 및 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체의 슬라이딩 만료 값 모두 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 및 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />의 기본값 이외의 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-216">Both the absolute and sliding expiration values of <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> object are set to values other than the defaults of <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> and <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />.</span></span> <span data-ttu-id="09a6d-217"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스는 절대 만료와 슬라이딩(sliding) 만료의 조합을 기준으로 만료 정책을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-217">The <see cref="T:System.Runtime.Caching.MemoryCache" /> class cannot set expiration policy based on a combination of both an absolute and a sliding expiration.</span></span> <span data-ttu-id="09a6d-218"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스를 사용하면 만료 설정을 하나만 명시적으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-218">Only one expiration setting can be explicitly set when you use the <see cref="T:System.Runtime.Caching.MemoryCache" /> class.</span></span> <span data-ttu-id="09a6d-219">다른 설정은 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 또는 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-219">The other setting must be set to <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> or <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />.</span></span>  
  
<span data-ttu-id="09a6d-220">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-220">-or-</span></span> 
<span data-ttu-id="09a6d-221"><see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체에 대해 제거 콜백 및 업데이트 콜백을 모두 지정했습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-221">Both the removal callback and the update callback have been specified for <see cref="T:System.Runtime.Caching.CacheItemPolicy" />.</span></span> <span data-ttu-id="09a6d-222"><see cref="T:System.Runtime.Caching.MemoryCache" />는 캐시 항목당 한 가지 형식의 콜백을 사용하는 것만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-222">The <see cref="T:System.Runtime.Caching.MemoryCache" /> only supports using one type of callback per cache entry.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09a6d-223"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성이 <see cref="F:System.TimeSpan.Zero" />보다 작은 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="09a6d-223">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value less than <see cref="F:System.TimeSpan.Zero" />.</span></span>  
  
<span data-ttu-id="09a6d-224">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-224">-or-</span></span> 
<span data-ttu-id="09a6d-225"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" />이 1년보다 큰 값으로 설정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-225">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> has been set to a value greater than one year.</span></span>  
  
<span data-ttu-id="09a6d-226">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-226">-or-</span></span> 
<span data-ttu-id="09a6d-227"><see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 속성은 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 열거형의 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-227">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> property is not a value of the <see cref="T:System.Runtime.Caching.CacheItemPriority" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CacheMemoryLimit">
      <MemberSignature Language="C#" Value="public long CacheMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CacheMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.CacheMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CacheMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheMemoryLimit : int64" Usage="System.Runtime.Caching.MemoryCache.CacheMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09a6d-228">캐시에서 사용할 수 있는 컴퓨터의 메모리 양을 바이트 단위로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-228">Gets the amount of memory on the computer, in bytes, that can be used by the cache.</span></span></summary>
        <value><span data-ttu-id="09a6d-229">메모리 양(메가바이트 단위)입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-229">The amount of memory in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-230">캐시의 현재 인스턴스 설정한 메모리 한계를 초과 하는 경우는 <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> 속성 캐시 구현이 캐시 항목을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-230">If the current instance of the cache exceeds the limit on memory set by the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property, the cache implementation removes cache entries.</span></span> <span data-ttu-id="09a6d-231">애플리케이션에서 각 캐시 인스턴스에 의해 지정 된 메모리의 양을 사용할 수는 <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-231">Each cache instance in the application can use the amount of memory that is specified by the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property.</span></span>  
  
 <span data-ttu-id="09a6d-232">에 대 한 설정의 <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> 애플리케이션 구성 파일에서 속성을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-232">The settings for the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property can be specified in the application configuration file.</span></span> <span data-ttu-id="09a6d-233">생성자에 전달 될 수 있습니다 또는 경우는 <xref:System.Runtime.Caching.MemoryCache> 클래스를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-233">Alternatively, they can be passed in the constructor when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.</span></span> <span data-ttu-id="09a6d-234">이 속성을 구성 하는 방법에 대 한 자세한 내용은 참조 하세요. [ &lt;namedCaches&gt; 요소 (캐시 설정)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-234">For more information about how to configure this property, see [&lt;namedCaches&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).</span></span> <span data-ttu-id="09a6d-235">값 설정 방법에 대 한 자세한 내용은 합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스를 초기화 하는, 참조는 <xref:System.Runtime.Caching.MemoryCache.%23ctor%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="09a6d-235">For more information about how to set this value when the <xref:System.Runtime.Caching.MemoryCache> class is being initialized, see the <xref:System.Runtime.Caching.MemoryCache.%23ctor%2A> method.</span></span>  
  
 <span data-ttu-id="09a6d-236"><xref:System.Runtime.Caching.MemoryCache> 즉시 적용 하지 않습니다 <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> 새 항목을 추가할 때마다는 <xref:System.Runtime.Caching.MemoryCache> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="09a6d-236"><xref:System.Runtime.Caching.MemoryCache> does not instantly enforce <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> each time a new item is added to a <xref:System.Runtime.Caching.MemoryCache> instance.</span></span> <span data-ttu-id="09a6d-237">추가 항목을 제거 하는 내부 추론 합니다 <xref:System.Runtime.Caching.MemoryCache> 점진적으로 수행 하 고 가비지 수집기에서 계정 정보를 고려 합니다. (참조 [가비지 수집](~/docs/standard/garbage-collection/index.md)) 및 현재 캐시 크기와 같은 다른 요인 및 전체 시스템 메모리가 부족 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-237">The internal heuristics which evicts extra items from the <xref:System.Runtime.Caching.MemoryCache> does it gradually and takes into account information from the garbage collector (see [Garbage Collection](~/docs/standard/garbage-collection/index.md)) and other factors such as current cache size and overall system memory pressure.</span></span> <span data-ttu-id="09a6d-238">따라서도 합니다 <xref:System.Runtime.Caching.MemoryCache> 내에서 구성 된 캐시 크기를 유지 하려고 <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> 일시적으로 매우 빠른 속도로 캐시 항목을 추가 하 여 제한을 초과 하는 것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-238">Therefore even though the <xref:System.Runtime.Caching.MemoryCache> tries to keep the cache size within the configured <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> it is possible to temporarily exceed the limit by adding cache items at a very high rate.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6bd4fbc5-55a6-4dc4-998b-cdcc7e023330"><span data-ttu-id="09a6d-239">&lt;namedCaches&gt; 요소 (캐시 설정)</span><span class="sxs-lookup"><span data-stu-id="09a6d-239">&lt;namedCaches&gt; Element (Cache Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public override bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Contains : string * string -&gt; bool" Usage="memoryCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-240">검색할 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-240">A unique identifier for the cache entry to search for.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-241">캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-241">A named region in the cache to which a cache entry was added.</span></span> <span data-ttu-id="09a6d-242">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-242">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-243"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-243">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-244">캐시 엔트리가 캐시에 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-244">Determines whether a cache entry exists in the cache.</span></span></summary>
        <returns><span data-ttu-id="09a6d-245">캐시에 키가 <paramref name="key" />와 일치하는 캐시 엔트리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-245"><see langword="true" /> if the cache contains a cache entry whose key matches <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-246"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-246"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-247"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-247"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public override System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="override this.CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="memoryCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="09a6d-248"><see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 개체에 대한 고유 캐시 엔트리 키의 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-248">An enumeration of unique cache entry keys for the <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-249">캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-249">A named region in the cache to which a cache entry can be added.</span></span> <span data-ttu-id="09a6d-250">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-250">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-251"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-251">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-252">지정된 캐시 엔트리의 변경에 대한 응답으로 이벤트를 트리거할 수 있는 <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-252">Creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span></span></summary>
        <returns><span data-ttu-id="09a6d-253">캐시의 엔트리를 모니터링하는 변경 모니터입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-253">A change monitor that monitors entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-254">합니다 <xref:System.Runtime.Caching.MemoryCache.CreateCacheEntryChangeMonitor%2A> 메서드를 만듭니다를 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="09a6d-254">The <xref:System.Runtime.Caching.MemoryCache.CreateCacheEntryChangeMonitor%2A> method creates a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> instance.</span></span> <span data-ttu-id="09a6d-255">이 특수화 된 변경 모니터에 지정 된 캐시 엔트리를 모니터링에 사용 되는 `keys` 컬렉션 항목이 변경 될 때 트리거 이벤트를 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-255">This specialized change monitor is used to monitor the cache entries that are specified in the `keys` collection and to trigger events when the entries change.</span></span>  
  
 <span data-ttu-id="09a6d-256">모니터링된 항목을 다음 이유 중 하나에 대 한 변경 된 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-256">A monitored entry is considered to have changed for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="09a6d-257">키에 대 한 호출 시 존재 하지 않습니다는 <xref:System.Runtime.Caching.MemoryCache.CreateCacheEntryChangeMonitor%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="09a6d-257">The key does not exist at the time of the call to the <xref:System.Runtime.Caching.MemoryCache.CreateCacheEntryChangeMonitor%2A> method.</span></span> <span data-ttu-id="09a6d-258">이런 경우, 결과 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 인스턴스 상태가 변경된로 즉시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-258">In that case, the resulting <xref:System.Runtime.Caching.CacheEntryChangeMonitor> instance is immediately set to a changed state.</span></span> <span data-ttu-id="09a6d-259">이 코드는 이후에 변경 알림 콜백을 바인딩할 때 콜백을 즉시 트리거되는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-259">This means that when code subsequently binds a change-notification callback, the callback is triggered immediately.</span></span>  
  
-   <span data-ttu-id="09a6d-260">연결된 된 캐시 엔트리를 캐시에서 제거 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-260">The associated cache entry was removed from the cache.</span></span> <span data-ttu-id="09a6d-261">만료 되 면 항목을 명시적으로 제거 하거나 메모리를 복구 하려면 제거 될 경우 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-261">This can occur if the entry is explicitly removed, if it expires, or if it is evicted to recover memory</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-262"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-262"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-263"><paramref name="keys" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-263"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-264"><paramref name="keys" /> 컬렉션의 항목은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-264">An item in the <paramref name="keys" /> collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Runtime.Caching.MemoryCache Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Caching.MemoryCache Default" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MemoryCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Caching::MemoryCache ^ Default { System::Runtime::Caching::MemoryCache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Runtime.Caching.MemoryCache" Usage="System.Runtime.Caching.MemoryCache.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.MemoryCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09a6d-265">기본 <see cref="T:System.Runtime.Caching.MemoryCache" /> 인스턴스에 대한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-265">Gets a reference to the default <see cref="T:System.Runtime.Caching.MemoryCache" /> instance.</span></span></summary>
        <value><span data-ttu-id="09a6d-266">캐시의 기본 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-266">The default instance of the cache.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-267">이 속성은 항상 기본 캐시 인스턴스에 대 한 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-267">This property always returns a reference to the default cache instance.</span></span> <span data-ttu-id="09a6d-268">일반적인 애플리케이션 시나리오의 경우 하나의 인스턴스만 <xref:System.Runtime.Caching.MemoryCache> 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-268">For typical application scenarios, only one instance of <xref:System.Runtime.Caching.MemoryCache> is required.</span></span>  
  
 <span data-ttu-id="09a6d-269">기본 캐시 인스턴스의 생성자가 만들어지지 않습니다, 메모리 및 기본 캐시 인스턴스에 대 한 폴링 값을 명시적으로 설정 하려면 구성을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-269">Because the default cache instance is not created by the constructor, you must use configuration to explicitly set the memory and polling values for the default cache instance.</span></span> <span data-ttu-id="09a6d-270">자세한 내용은 [ &lt;memoryCache&gt; 요소 (캐시 설정)](~/docs/framework/configure-apps/file-schema/runtime/memorycache-element-cache-settings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-270">For more information, see [&lt;memoryCache&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/memorycache-element-cache-settings.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/182a622f-f7cf-472d-9d0b-451d2fd94525"><span data-ttu-id="09a6d-271">&lt;memoryCache&gt; 요소 (캐시 설정)</span><span class="sxs-lookup"><span data-stu-id="09a6d-271">&lt;memoryCache&gt; Element (Cache Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public override System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.MemoryCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09a6d-272">캐시에서 제공하는 기능에 대한 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-272">Gets a description of the features that the cache provides.</span></span></summary>
        <value><span data-ttu-id="09a6d-273">캐시 구현의 기본 기능을 나타내는 플래그의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-273">A bitwise combination of flags that indicate the default capabilities of the cache implementation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-274">캐시 구현이 기능은 다음 값을 조합한 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-274">The capabilities of a cache implementation are a combination of the following values:</span></span>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.InMemoryProvider>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryChangeMonitors>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.AbsoluteExpirations>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.SlidingExpirations>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryUpdateCallback>  
  
-   <xref:System.Runtime.Caching.DefaultCacheCapabilities.CacheEntryRemovedCallback>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryCache.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09a6d-275"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-275">Releases all resources that are used by the current instance of the <see cref="T:System.Runtime.Caching.MemoryCache" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-276">각 <xref:System.Runtime.Caching.MemoryCache> 인스턴스에 바인딩되는 <xref:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-276">Each <xref:System.Runtime.Caching.MemoryCache> instance is bound to the <xref:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded> event.</span></span> <span data-ttu-id="09a6d-277">그러나 애플리케이션 도메인 종료 하는 동안 메모리 기반 캐시를 명시적으로 삭제 되지 경우 캐시 인스턴스를 자동으로 호출 된 <xref:System.Runtime.Caching.MemoryCache.Dispose%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="09a6d-277">However, during application-domain shutdown, if a memory-based cache has not been explicitly disposed, the cache instance will automatically call the <xref:System.Runtime.Caching.MemoryCache.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="09a6d-278">삭제 된 캐시 인스턴스를 다음 단계를 사용 하 여 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-278">The disposed cache instance is shut down using the following steps:</span></span>  
  
1.  <span data-ttu-id="09a6d-279">캐시의 상태는 캐시는 삭제 되는지 나타내기 위해 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-279">The state of the cache is set to indicate that the cache is disposed.</span></span> <span data-ttu-id="09a6d-280">공용를 호출 하려고 캐시의 상태를 변경 하는 메서드 캐싱 추가, 제거 또는 캐시 엔트리를 검색 하는 메서드, 발생할 수 있습니다 예기치 않은 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-280">Any attempt to call public caching methods that change the state of the cache, such as methods that add, remove, or retrieve cache entries, might cause unexpected behavior.</span></span> <span data-ttu-id="09a6d-281">예를 들어, 호출 하는 경우는 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드는 캐시를 삭제 한 후 작동 하지 않는 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-281">For example, if you call the <xref:System.Runtime.Caching.MemoryCache.Set%2A> method after the cache is disposed, a no-op error occurs.</span></span> <span data-ttu-id="09a6d-282">캐시에서 항목을 검색 하려는 경우는 <xref:System.Runtime.Caching.MemoryCache.Get%2A> 메서드는 항상 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-282">If you attempt to retrieve items from the cache, the <xref:System.Runtime.Caching.MemoryCache.Get%2A> method will always return `null`.</span></span>  
  
2.  <span data-ttu-id="09a6d-283">성능 카운터 정보는 더 이상 현재 캐시 인스턴스에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-283">Performance counter information is no longer raised from the current cache instance.</span></span>  
  
3.  <span data-ttu-id="09a6d-284">현재 캐시 인스턴스를 소유 하는 캐시 된 개체에 대 한 모든 참조가 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-284">All references to cached objects held by the current cache instance are released.</span></span>  
  
4.  <span data-ttu-id="09a6d-285">모든 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 인스턴스는 현재 캐시의 엔트리를 모니터링 하는 알림이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-285">Any <xref:System.Runtime.Caching.CacheEntryChangeMonitor> instances that are currently monitoring entries in the cache are notified.</span></span>  
  
5.  <span data-ttu-id="09a6d-286">이러한 모니터에 대 한 변경 알림을 제공 하는 콜백 개체 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-286">Callback objects that provide notification of changes for those monitors are called.</span></span>  
  
6.  <span data-ttu-id="09a6d-287">모든 <xref:System.Web.Caching.CacheItemRemovedCallback> 캐시의 항목을 사용 하 여 등록 된 인스턴스가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-287">Any <xref:System.Web.Caching.CacheItemRemovedCallback> instances that are registered with entries in the cache are called.</span></span> <span data-ttu-id="09a6d-288">제거를 콜백으로 전달 되는 이유가 <xref:System.Runtime.Caching.CacheEntryRemovedReason.CacheSpecificEviction>합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-288">The removal reason that is passed to the callbacks is <xref:System.Runtime.Caching.CacheEntryRemovedReason.CacheSpecificEviction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.Get : string * string -&gt; obj" Usage="memoryCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-289">가져올 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-289">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-290">캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-290">A named region in the cache to which a cache entry was added.</span></span> <span data-ttu-id="09a6d-291">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-291">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-292"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-292">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-293">캐시에서 엔트리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-293">Returns an entry from the cache.</span></span></summary>
        <returns><span data-ttu-id="09a6d-294">엔트리가 있으면 <paramref name="key" />로 식별되는 캐시 엔트리에 대한 참조이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-294">A reference to the cache entry that is identified by <paramref name="key" />, if the entry exists; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-295"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-295"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-296"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-296"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public override System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="override this.GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="memoryCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-297">가져올 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-297">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-298">캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-298">A named region in the cache to which a cache entry was added.</span></span> <span data-ttu-id="09a6d-299">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-299">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-300"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-300">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-301"><see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스로 캐시에서 지정된 엔트리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-301">Returns the specified entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span></span></summary>
        <returns><span data-ttu-id="09a6d-302">엔트리가 있으면 <paramref name="key" />로 식별되는 캐시 엔트리에 대한 참조이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-302">A reference to the cache entry identified by <paramref name="key" /> if the entry exists; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-303">캐시 엔트리의 지정 된 경우 `key` 캐시에 존재 합니다 <xref:System.Runtime.Caching.MemoryCache.GetCacheItem%2A> 로 반환을 <xref:System.Runtime.Caching.CacheItem> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="09a6d-303">If the cache entry specified by `key` exists in the cache, the <xref:System.Runtime.Caching.MemoryCache.GetCacheItem%2A> method returns it as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span> <span data-ttu-id="09a6d-304">합니다 <xref:System.Runtime.Caching.CacheItem.Key%2A> 및 <xref:System.Runtime.Caching.CacheItem.Value%2A> 의 속성을 <xref:System.Runtime.Caching.CacheItem> 인스턴스 설정이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-304">The <xref:System.Runtime.Caching.CacheItem.Key%2A> and <xref:System.Runtime.Caching.CacheItem.Value%2A> properties of the <xref:System.Runtime.Caching.CacheItem> instance will be set.</span></span> <span data-ttu-id="09a6d-305">그러나 합니다 <xref:System.Runtime.Caching.CacheItem.RegionName%2A> 속성이 `null`지역에서 구현 되지 않기 때문에 <xref:System.Runtime.Caching.MemoryCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-305">However, the <xref:System.Runtime.Caching.CacheItem.RegionName%2A> property will be `null`, because regions are not implemented in the <xref:System.Runtime.Caching.MemoryCache> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-306"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-306"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-307"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-307"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public override long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="override this.GetCount : string -&gt; int64" Usage="memoryCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="09a6d-308">캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-308">A named region in the cache to which a cache entry was added.</span></span> <span data-ttu-id="09a6d-309">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-309">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-310"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-310">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-311">캐시에 있는 총 캐시 엔트리 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-311">Returns the total number of cache entries in the cache.</span></span></summary>
        <returns><span data-ttu-id="09a6d-312">캐시의 엔트리 수입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-312">The number of entries in the cache.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-313"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-313"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="memoryCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09a6d-314">캐시 엔트리 컬렉션을 반복하는 데 사용할 수 있는 열거자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-314">Creates an enumerator that can be used to iterate through a collection of cache entries.</span></span></summary>
        <returns><span data-ttu-id="09a6d-315">캐시의 항목에 대한 액세스를 제공하는 열거자 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-315">The enumerator object that provides access to the items in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-316">반환 되는 열거자를 <xref:System.Runtime.Caching.MemoryCache.GetEnumerator%2A> 캐시의 항목에 대해 반복 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-316">The enumerator that is returned by the <xref:System.Runtime.Caching.MemoryCache.GetEnumerator%2A> method can be used to iterate over entries in the cache.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09a6d-317">에 대 한 열거자를 검색 하는 <xref:System.Runtime.Caching.MemoryCache> 인스턴스가 리소스를 많이 사용 하 고 차단 작업을 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-317">Retrieving an enumerator for a <xref:System.Runtime.Caching.MemoryCache> instance is a resource-intensive and blocking operation.</span></span> <span data-ttu-id="09a6d-318">따라서 열거자 프로덕션 애플리케이션에서 사용 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-318">Therefore, the enumerator should not be used in production applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastSize">
      <MemberSignature Language="C#" Value="public long GetLastSize (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLastSize(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetLastSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastSize (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="member this.GetLastSize : string -&gt; int64" Usage="memoryCache.GetLastSize regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="09a6d-319">영역의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-319">The name of the region.</span></span></param>
        <summary><span data-ttu-id="09a6d-320">명명된 영역의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-320">Gets the size of the named region.</span></span></summary>
        <returns><span data-ttu-id="09a6d-321">명명된 영역의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-321">The size of the named region.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="override this.GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="memoryCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="09a6d-322">반환할 캐시 엔트리의 고유 식별자 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-322">A set of unique identifiers for the cache entries to return.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-323">캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-323">A named region in the cache to which a cache entry was added.</span></span> <span data-ttu-id="09a6d-324">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-324">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-325"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-325">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-326">지정된 키에 해당하는 캐시 엔트리 집합을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-326">Returns a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="09a6d-327">지정된 키에 해당하는 캐시 엔트리 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-327">A set of cache entries that correspond to the specified keys.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-328">캐시 엔트리를 나타내는 경우는 `keys` 존재 하지 않는 해당 값을 사전에 반환된 된 개체 설정 되어 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-328">If a cache entry that is represented by the `keys` does not exist, the corresponding value for the returned object in the dictionary is set to `null`.</span></span> <span data-ttu-id="09a6d-329">따라서 반환된 된 사전에 있는 요소의 수와 동일한 항목 수를 항상에 `keys`입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-329">Therefore, the returned dictionary always has the same number of items as the number of elements in `keys`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-330"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-330"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-331"><paramref name="keys" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-331"><paramref name="keys" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-332">컬렉션의 개별 키가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-332">An individual key in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.MemoryCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-333">가져오거나 설정할 캐시 값의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-333">A unique identifier for the cache value to get or set.</span></span></param>
        <summary><span data-ttu-id="09a6d-334"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스 인스턴스의 기본 인덱서 속성을 사용하여 캐시의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-334">Gets or sets a value in the cache by using the default indexer property for an instance of the <see cref="T:System.Runtime.Caching.MemoryCache" /> class.</span></span></summary>
        <value><span data-ttu-id="09a6d-335">엔트리가 있으면 지정된 키에 대한 캐시 인스턴스의 값이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-335">The value in the cache instance for the specified key, if the entry exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-336">이 속성을 설정 하는 경우 값은 캐시에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-336">When you set this property, the value is inserted into the cache.</span></span> <span data-ttu-id="09a6d-337">캐시 엔트리에 대 한 만료 정책 설정은 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-337">The expiration policy for the cache entry is set to <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>.</span></span> <span data-ttu-id="09a6d-338">키가 일치 하는 캐시 엔트리가 이미 있으면 해당 값이 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-338">If a cache entry with a matching key already exists, its value is updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-339"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-339"><paramref name="key" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="09a6d-340">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-340">-or-</span></span> 
<span data-ttu-id="09a6d-341">삽입된 값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-341">The inserted value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.MemoryCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09a6d-342">캐시의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-342">Gets the name of the cache.</span></span></summary>
        <value><span data-ttu-id="09a6d-343">캐시의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-343">The name of the cache.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-344">합니다 <xref:System.Runtime.Caching.MemoryCache.Name%2A> 속성의 현재 인스턴스 이름을 반환 합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-344">The <xref:System.Runtime.Caching.MemoryCache.Name%2A> property returns the name of the current instance of the <xref:System.Runtime.Caching.MemoryCache> class.</span></span> <span data-ttu-id="09a6d-345">여러 캐시 인스턴스를 사용 하는 애플리케이션에서 사용할 수는 <xref:System.Runtime.Caching.MemoryCache.Name%2A> 속성 인스턴스를 구분할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-345">In an application that uses multiple cache instances, you can use the <xref:System.Runtime.Caching.MemoryCache.Name%2A> property to help distinguish instances.</span></span> <span data-ttu-id="09a6d-346">자세한 내용은 <xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="09a6d-346">For more information, see the <xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="09a6d-347">기본 메모리 기반 캐시에는 기본 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-347">The default memory-based cache returns the default name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long PhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalMemoryLimit : int64" Usage="System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09a6d-348">캐시에서 사용할 수 있는 실제 메모리의 백분율을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-348">Gets the percentage of physical memory that the cache can use.</span></span></summary>
        <value><span data-ttu-id="09a6d-349">캐시에서 사용할 수 있는 실제 메모리의 백분율입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-349">The percentage of physical memory that the cache can use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-350">합니다 <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> 속성의 단일 인스턴스에서 사용할 수 있는 총 물리적 컴퓨터 메모리의 백분율을 반환 합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-350">The <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> property returns the percentage of total physical computer memory that can be used by a single instance of the <xref:System.Runtime.Caching.MemoryCache> class.</span></span> <span data-ttu-id="09a6d-351">캐시 인스턴스의 지정된 된 한도 초과 하면 캐시 항목이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-351">If the cache instance exceeds the specified limit, cache entries are removed.</span></span>  
  
 <span data-ttu-id="09a6d-352">에 대 한 설정의 <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> 애플리케이션 구성 파일에서 속성을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-352">The settings for the <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> property can be specified in the application configuration file.</span></span> <span data-ttu-id="09a6d-353">호출자가 전달 될 수 있습니다 또는 경우는 <xref:System.Runtime.Caching.MemoryCache> 클래스를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-353">Alternatively, they can be passed by a caller when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.</span></span> <span data-ttu-id="09a6d-354">이 속성을 구성 하는 방법에 대 한 자세한 내용은 참조 하세요. [ &lt;namedCaches&gt; 요소 (캐시 설정)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-354">For more information about how to configure this property, see [&lt;namedCaches&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).</span></span> <span data-ttu-id="09a6d-355">속성을 구성 하는 방법에 대 한 자세한 때 합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스를 초기화 하는, 참조는 <xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="09a6d-355">For more information about how to configure the property when the <xref:System.Runtime.Caching.MemoryCache> class is being initialized, see the <xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6bd4fbc5-55a6-4dc4-998b-cdcc7e023330"><span data-ttu-id="09a6d-356">&lt;namedCaches&gt; 요소 (캐시 설정)</span><span class="sxs-lookup"><span data-stu-id="09a6d-356">&lt;namedCaches&gt; Element (Cache Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PollingInterval">
      <MemberSignature Language="C#" Value="public TimeSpan PollingInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PollingInterval" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.MemoryCache.PollingInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PollingInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PollingInterval { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.PollingInterval : TimeSpan" Usage="System.Runtime.Caching.MemoryCache.PollingInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09a6d-357">캐시에서 메모리 통계를 업데이트하기까지의 최대 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-357">Gets the maximum time after which the cache updates its memory statistics.</span></span></summary>
        <value><span data-ttu-id="09a6d-358">메모리 통계가 업데이트되기까지의 최대 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-358">The maximum time that can occur before memory statistics are updated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-359">에 대 한 설정의 <xref:System.Runtime.Caching.MemoryCache.PollingInterval%2A> 애플리케이션 구성 파일에서 속성을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-359">The settings for the <xref:System.Runtime.Caching.MemoryCache.PollingInterval%2A> property can be specified in the application configuration file.</span></span> <span data-ttu-id="09a6d-360">또는 전달 될 수는 경우는 <xref:System.Runtime.Caching.MemoryCache> 클래스를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-360">Alternatively they can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.</span></span> <span data-ttu-id="09a6d-361">이 속성을 구성 하는 방법에 대 한 자세한 내용은 참조 하세요. [ &lt;namedCaches&gt; 요소 (캐시 설정)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-361">For more information about how to configure this property, see [&lt;namedCaches&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).</span></span> <span data-ttu-id="09a6d-362">속성을 구성 하는 방법에 대 한 자세한 때 합니다 <xref:System.Runtime.Caching.MemoryCache> 클래스를 초기화 하는, 참조는 <xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="09a6d-362">For more information about how to configure the property when the <xref:System.Runtime.Caching.MemoryCache> class is being initialized, see the <xref:System.Runtime.Caching.MemoryCache.%23ctor%28System.String%2CSystem.Collections.Specialized.NameValueCollection%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6bd4fbc5-55a6-4dc4-998b-cdcc7e023330"><span data-ttu-id="09a6d-363">&lt;namedCaches&gt; 요소 (캐시 설정)</span><span class="sxs-lookup"><span data-stu-id="09a6d-363">&lt;namedCaches&gt; Element (Cache Settings)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09a6d-364">지정된 항목을 캐시에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-364">Removes the specified item from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.Remove : string * string -&gt; obj" Usage="memoryCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-365">제거할 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-365">A unique identifier for the cache entry to remove.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-366">캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-366">A named region in the cache to which a cache entry was added.</span></span> <span data-ttu-id="09a6d-367">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-367">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-368"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-368">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-369">캐시에서 특정 캐시 엔트리를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-369">Removes a cache entry from the cache.</span></span></summary>
        <returns><span data-ttu-id="09a6d-370">캐시에 해당 엔트리가 있으면 제거되는 캐시 엔트리이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-370">If the entry is found in the cache, the removed cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-371">지정 된 항목이 `key` 캐시에 있는 모든 관련 된 변경 모니터 항목 트리거를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-371">If the entry specified by `key` exists in the cache, removing the item triggers any associated change monitors.</span></span> <span data-ttu-id="09a6d-372">제거 된 항목 연관 된 경우는 <xref:System.Web.Caching.CacheItemUpdateCallback> 개체 또는 <xref:System.Web.Caching.CacheItemRemovedCallback> 개체를 콜백에 전달할 이유가 <xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed>합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-372">If the removed item was associated with a <xref:System.Web.Caching.CacheItemUpdateCallback> object or a <xref:System.Web.Caching.CacheItemRemovedCallback> object, the reason passed to the callback is <xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-373"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-373"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-374"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-374"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key, System.Runtime.Caching.CacheEntryRemovedReason reason, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key, valuetype System.Runtime.Caching.CacheEntryRemovedReason reason, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Remove(System.String,System.Runtime.Caching.CacheEntryRemovedReason,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String, reason As CacheEntryRemovedReason, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="override this.Remove : string * System.Runtime.Caching.CacheEntryRemovedReason * string -&gt; obj" Usage="memoryCache.Remove (key, reason, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="reason" Type="System.Runtime.Caching.CacheEntryRemovedReason" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="regionName" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-375">제거할 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-375">A unique identifier for the cache entry to remove.</span></span></param>
        <param name="reason"><span data-ttu-id="09a6d-376">항목이 제거된 이유입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-376">The reason the item was removed.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-377">캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-377">A named region in the cache to which a cache entry was added.</span></span> <span data-ttu-id="09a6d-378">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-378">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-379"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-379">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-380">이유를 사용하여 캐시에서 특정 캐시 엔트리를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-380">Removes a cache entry from the cache using the reason.</span></span></summary>
        <returns><span data-ttu-id="09a6d-381">캐시에 해당 엔트리가 있으면 제거되는 캐시 엔트리이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-381">If the entry is found in the cache, the removed cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09a6d-382">캐시에 캐시 엔트리를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-382">Inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-383">지정된 된 항목이 없으면 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-383">If the specified entry does not exist, it is created.</span></span> <span data-ttu-id="09a6d-384">지정된 된 항목이 있는 경우 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-384">If the specified entry exists, it is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public override void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="override this.Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="memoryCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="09a6d-385">삽입할 캐시 엔트리를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-385">An object that represents a cache entry to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="09a6d-386">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-386">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="09a6d-387">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-387">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="09a6d-388"><see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스를 사용하여 캐시 엔트리의 키와 값을 제공하여 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-388">Inserts a cache entry into the cache by using a <see cref="T:System.Runtime.Caching.CacheItem" /> instance to supply the key and value for the cache entry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-389">와 같은 다른 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드 오버 로드는 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드는 항상 캐시 값을 캐시에 배치, 진입점 여부에 관계 없이 이미 동일한 키가 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-389">Like other <xref:System.Runtime.Caching.MemoryCache.Set%2A> method overloads, the <xref:System.Runtime.Caching.MemoryCache.Set%2A> method always puts a cache value in the cache, regardless whether an entry already exists that has the same key.</span></span> <span data-ttu-id="09a6d-390">지정된 된 항목이 캐시에 없는 경우 새 캐시 항목이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-390">If the specified entry does not exist in the cache, a new cache entry is inserted.</span></span> <span data-ttu-id="09a6d-391">지정된 된 항목에 이미 있으면 해당 값이 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-391">If the specified entry already exists, its value is updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-392"><paramref name="item" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-392"><paramref name="item" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="09a6d-393">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-393">-or-</span></span> 
<span data-ttu-id="09a6d-394"><see cref="P:System.Runtime.Caching.CacheItem.Key" /> 속성이 <see langword="null" />일 경우(이 속성은</span><span class="sxs-lookup"><span data-stu-id="09a6d-394">The <see cref="P:System.Runtime.Caching.CacheItem.Key" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="09a6d-395">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-395">-or-</span></span> 
<span data-ttu-id="09a6d-396"><see cref="P:System.Runtime.Caching.CacheItem.Value" /> 속성이 <see langword="null" />일 경우(이 속성은</span><span class="sxs-lookup"><span data-stu-id="09a6d-396">The <see cref="P:System.Runtime.Caching.CacheItem.Value" /> property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-397">캐시 엔트리에 잘못된 인수 조합이 전달되었습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-397">An invalid combination of arguments for the cache entry was passed.</span></span> <span data-ttu-id="09a6d-398">다음 만료 정보를 캐시 항목에 대한 정책 개체에 대해 설정한 경우 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-398">This occurs if the following expiration details are set on the policy object for the cache entry:</span></span> 
<span data-ttu-id="09a6d-399">-  절대 및 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체의 슬라이딩 만료 값 모두 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 및 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 필드의 기본값 이외의 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-399">-   If both the absolute and sliding expiration values of the <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> object are set to values other than the defaults of <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> and <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> fields.</span></span> <span data-ttu-id="09a6d-400"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스는 절대 만료와 슬라이딩(sliding) 만료를 기준으로 만료 정책을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-400">The <see cref="T:System.Runtime.Caching.MemoryCache" /> class cannot set expiration policy based on both an absolute expiration and a sliding expiration.</span></span> <span data-ttu-id="09a6d-401"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스를 사용하면 만료 설정을 하나만 명시적으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-401">Only one expiration setting can be explicitly set when you use the <see cref="T:System.Runtime.Caching.MemoryCache" /> class.</span></span> <span data-ttu-id="09a6d-402">다른 설정은 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 또는 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> 속성으로 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-402">The other setting must be set to <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> or <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" /> property.</span></span>  
  
<span data-ttu-id="09a6d-403">-   <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체에 대해 제거 콜백 및 업데이트 콜백을 모두 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-403">-   If both the removal callback and the update callback are specified for <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> object.</span></span> <span data-ttu-id="09a6d-404"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스는 캐시 항목당 한 가지 형식의 콜백을 사용하는 것만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-404">The <see cref="T:System.Runtime.Caching.MemoryCache" /> class only supports using one type of callback per cache entry.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09a6d-405"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성이 <see cref="F:System.TimeSpan.Zero" />보다 작은 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="09a6d-405">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value less than <see cref="F:System.TimeSpan.Zero" />.</span></span>  
  
<span data-ttu-id="09a6d-406">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-406">-or-</span></span> 
<span data-ttu-id="09a6d-407"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성은 1년 보다 큰 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-407">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value greater than one year.</span></span>  
  
<span data-ttu-id="09a6d-408">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-408">-or-</span></span> 
<span data-ttu-id="09a6d-409"><see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" />이 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 열거형의 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="09a6d-409">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> is not a value of the <see cref="T:System.Runtime.Caching.CacheItemPriority" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public override void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="override this.Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="memoryCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-410">삽입할 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-410">A unique identifier for the cache entry to insert.</span></span></param>
        <param name="value"><span data-ttu-id="09a6d-411">캐시 엔트리의 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-411">The data for the cache entry.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="09a6d-412">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-412">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-413">캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-413">A named region in the cache to which a cache entry can be added.</span></span> <span data-ttu-id="09a6d-414">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-414">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-415"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-415">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-416">키와 값을 사용하여 캐시 엔트리를 캐시에 삽입하고 시간 기반 만료 정보를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-416">Inserts a cache entry into the cache by using a key and a value and specifies time-based expiration details.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-417">와 같은 다른 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드 오버 로드는 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드 항상 배치 캐시 값을 캐시에 관계 없이 동일한 키를 가진 항목이 이미 있는지 여부를 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-417">Like other <xref:System.Runtime.Caching.MemoryCache.Set%2A> method overloads, the <xref:System.Runtime.Caching.MemoryCache.Set%2A> method always puts a cache value in the cache, regardless whether an entry already exists with the same key.</span></span> <span data-ttu-id="09a6d-418">지정된 된 항목이 없으면 새 캐시 항목이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-418">If the specified entry does not exist, a new cache entry is inserted.</span></span> <span data-ttu-id="09a6d-419">지정된 된 항목이 있는 경우 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-419">If the specified entry exists, it is updated.</span></span>  
  
 <span data-ttu-id="09a6d-420">`absoluteExpiration` 매개 변수는 항목을 캐시에서 제거 해야 하는 경우를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-420">The `absoluteExpiration` parameter indicates when the entry should be removed from the cache.</span></span>  
  
 <span data-ttu-id="09a6d-421">항목을 제거 하면 모든 관련 된 변경 모니터를 트리거합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-421">Removing an entry triggers any associated change monitors.</span></span> <span data-ttu-id="09a6d-422">제거 된 항목 연관 된 경우는 <xref:System.Web.Caching.CacheItemUpdateCallback> 개체 또는 <xref:System.Web.Caching.CacheItemRemovedCallback> 개체에 포함 된 콜백에 전달 되는 제거에 대 한 이유는 <xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-422">If the removed item was associated with a <xref:System.Web.Caching.CacheItemUpdateCallback> object or <xref:System.Web.Caching.CacheItemRemovedCallback> object, the reason for removal that is passed to the callbacks is contained in the <xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-423"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-423"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-424"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-424"><paramref name="key" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="09a6d-425">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-425">-or-</span></span> 
 <span data-ttu-id="09a6d-426"><paramref name="Value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-426"><paramref name="Value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-427">-   캐시 엔트리에 잘못된 인수 조합이 전달되었습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-427">-   An invalid combination of arguments for the cache entry was passed.</span></span> <span data-ttu-id="09a6d-428">다음 만료 정보를 캐시 항목에 대한 정책 개체에 대해 설정한 경우 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-428">This occurs if the following expiration details are set on the policy object for the cache entry:</span></span> 
<span data-ttu-id="09a6d-429">-  절대 및 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체의 슬라이딩 만료 값 모두 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 및 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />의 기본값 이외의 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-429">-   If both the absolute and sliding expiration values on <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> object are set to values other than the defaults of <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> and <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />.</span></span> <span data-ttu-id="09a6d-430"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 절대 만료 및 슬라이딩(sliding) 만료에 따라 만료되는 항목을 지원하지 않기 때문에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-430">This occurs because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not support expiring entries based on both an absolute and a sliding expiration.</span></span> <span data-ttu-id="09a6d-431"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스를 사용하면 만료 설정을 하나만 명시적으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-431">Only one expiration setting can be explicitly set when you use the <see cref="T:System.Runtime.Caching.MemoryCache" /> class.</span></span> <span data-ttu-id="09a6d-432">다른 설정은 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 또는 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-432">The other setting must be set to <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> or <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />.</span></span>  
  
<span data-ttu-id="09a6d-433">-   <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체에 제거 콜백 및 업데이트 콜백을 모두 지정한 경우.</span><span class="sxs-lookup"><span data-stu-id="09a6d-433">-   If both the removal callback and the update callback are specified on <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> object.</span></span> <span data-ttu-id="09a6d-434"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스는 캐시 항목당 한 가지 형식의 콜백을 사용하는 것만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-434">The <see cref="T:System.Runtime.Caching.MemoryCache" /> class only supports using one type of callback per cache entry.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09a6d-435"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성이 <see cref="F:System.TimeSpan.Zero" />보다 작은 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="09a6d-435">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value less than <see cref="F:System.TimeSpan.Zero" />.</span></span>  
  
<span data-ttu-id="09a6d-436">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-436">-or-</span></span> 
<span data-ttu-id="09a6d-437"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성은 1년 보다 큰 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-437">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value greater than one year.</span></span>  
  
<span data-ttu-id="09a6d-438">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-438">-or-</span></span> 
<span data-ttu-id="09a6d-439">-  <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 속성은 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 열거형의 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-439">-   The <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> property is not a value of the <see cref="T:System.Runtime.Caching.CacheItemPriority" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public override void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="override this.Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="memoryCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09a6d-440">삽입할 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-440">A unique identifier for the cache entry to insert.</span></span></param>
        <param name="value"><span data-ttu-id="09a6d-441">캐시 엔트리의 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-441">The data for the cache entry.</span></span></param>
        <param name="policy"><span data-ttu-id="09a6d-442">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-442">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="09a6d-443">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-443">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="09a6d-444">캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-444">A named region in the cache to which a cache entry can be added.</span></span> <span data-ttu-id="09a6d-445">이 매개 변수의 값은 전달하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="09a6d-445">Do not pass a value for this parameter.</span></span> <span data-ttu-id="09a6d-446"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 영역을 구현하지 않기 때문에 이 매개 변수는 기본적으로 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-446">This parameter is <see langword="null" /> by default, because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not implement regions.</span></span></param>
        <summary><span data-ttu-id="09a6d-447">키와 값 및 제거 정보를 사용하여 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-447">Inserts a cache entry into the cache by using a key and a value and eviction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-448">와 같은 다른 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드 오버 로드는 <xref:System.Runtime.Caching.MemoryCache.Set%2A> 메서드는 항상 캐시 값을 캐시에 배치, 일치 하는 항목을 여부에 관계 없이 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-448">Like other <xref:System.Runtime.Caching.MemoryCache.Set%2A> method overloads, the <xref:System.Runtime.Caching.MemoryCache.Set%2A> method always puts a cache value in the cache, regardless whether a matching entry already exists.</span></span> <span data-ttu-id="09a6d-449">지정된 된 항목이 캐시에 없는 경우 새 캐시 항목이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-449">If the specified entry does not exist in the cache, a new cache entry is inserted.</span></span> <span data-ttu-id="09a6d-450">지정된 된 항목이 있는 경우 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-450">If the specified entry exists, it is updated.</span></span>  
  
 <span data-ttu-id="09a6d-451">항목을 제거 하면 모든 관련 된 변경 모니터를 트리거합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-451">Removing an entry triggers any associated change monitors.</span></span> <span data-ttu-id="09a6d-452">제거 된 항목 연관 된 경우는 <xref:System.Web.Caching.CacheItemUpdateCallback> 개체 또는 <xref:System.Web.Caching.CacheItemRemovedCallback> 개체에 포함 된 콜백에 전달 되는 제거에 대 한 이유는 <xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-452">If the removed item was associated with a <xref:System.Web.Caching.CacheItemUpdateCallback> object or <xref:System.Web.Caching.CacheItemRemovedCallback> object, the reason for removal that is passed to the callbacks is contained in the <xref:System.Runtime.Caching.CacheEntryRemovedReason.Removed> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09a6d-453"><paramref name="key" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-453"><paramref name="key" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="09a6d-454">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-454">-or-</span></span> 
 <span data-ttu-id="09a6d-455"><paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="09a6d-455"><paramref name="value" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="09a6d-456">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-456">-or-</span></span> 
<span data-ttu-id="09a6d-457"><see cref="P:System.Runtime.Caching.CacheItemPolicy.UpdateCallback" /> 속성의 도우미 메서드에 전달된 콜백 참조는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-457">The callback reference that was passed to the helper method in the <see cref="P:System.Runtime.Caching.CacheItemPolicy.UpdateCallback" /> property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09a6d-458">-   캐시 엔트리에 잘못된 인수 조합이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-458">-   An invalid combination of arguments for the cache entry exists.</span></span> <span data-ttu-id="09a6d-459">다음 만료 정보를 캐시 항목에 대한 정책 개체에 대해 설정한 경우 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-459">This occurs if the following expiration details are set on the policy object for the cache entry:</span></span> 
<span data-ttu-id="09a6d-460">-  절대 및 <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 개체의 슬라이딩 만료 값 모두 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 및 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />의 기본값 이외의 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-460">-   If both the absolute and sliding expiration values on <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> object are set to values other than the defaults of <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> and <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />.</span></span> <span data-ttu-id="09a6d-461"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스가 절대 만료 및 슬라이딩(sliding) 만료에 따라 만료되는 항목을 지원하지 않기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-461">This is because the <see cref="T:System.Runtime.Caching.MemoryCache" /> class does not support expiring entries based on both an absolute and a sliding expiration.</span></span> <span data-ttu-id="09a6d-462"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스를 사용하면 만료 설정을 하나만 명시적으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-462">Only one expiration setting can be explicitly set when you use the <see cref="T:System.Runtime.Caching.MemoryCache" /> class.</span></span> <span data-ttu-id="09a6d-463">다른 설정은 <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> 또는 <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />으로 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-463">The other setting must be set to <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" /> or <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />.</span></span>  
  
<span data-ttu-id="09a6d-464">-   <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> 클래스에 제거 콜백 및 업데이트 콜백을 모두 지정한 경우.</span><span class="sxs-lookup"><span data-stu-id="09a6d-464">-   If both the removal callback and the update callback are specified on <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> class.</span></span> <span data-ttu-id="09a6d-465"><see cref="T:System.Runtime.Caching.MemoryCache" /> 클래스는 캐시 항목당 한 가지 형식의 콜백을 사용하는 것만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-465">The <see cref="T:System.Runtime.Caching.MemoryCache" /> class only supports using one type of callback per cache entry.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09a6d-466"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성이 <see cref="F:System.TimeSpan.Zero" />보다 작은 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="09a6d-466">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value less than <see cref="F:System.TimeSpan.Zero" />.</span></span>  
  
<span data-ttu-id="09a6d-467">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-467">-or-</span></span> 
<span data-ttu-id="09a6d-468"><see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> 속성은 1년 보다 큰 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-468">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" /> property is set to a value greater than one year.</span></span>  
  
<span data-ttu-id="09a6d-469">또는</span><span class="sxs-lookup"><span data-stu-id="09a6d-469">-or-</span></span> 
<span data-ttu-id="09a6d-470"><see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> 속성은 <see cref="T:System.Runtime.Caching.CacheItemPriority" /> 열거형의 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-470">The <see cref="P:System.Runtime.Caching.CacheItemPolicy.Priority" /> property is not a value of the <see cref="T:System.Runtime.Caching.CacheItemPriority" /> enumeration.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09a6d-471"><paramref name="regionName" />이 <see langword="null" />가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-471"><paramref name="regionName" /> is not <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09a6d-472">제네릭 컬렉션을 반복할 수 있도록 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-472">Provides support for iteration over a generic collection.</span></span></summary>
        <returns><span data-ttu-id="09a6d-473">캐시의 엔트리에 대한 액세스를 제공하는 열거자 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-473">The enumerator object that provides access to the entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-474">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="09a6d-474">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="09a6d-475">사용할 수 있습니다 경우에만 <xref:System.Runtime.Caching.MemoryCache> 캐스팅 된는 <xref:System.Collections.IEnumerable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-475">It can be used only when a <xref:System.Runtime.Caching.MemoryCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="09a6d-476">캐시 항목의 제네릭 컬렉션을 반복 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-476">You can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public long Trim (int percent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Trim(int32 percent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.MemoryCache.Trim(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (percent As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Trim(int percent);" />
      <MemberSignature Language="F#" Value="member this.Trim : int -&gt; int64" Usage="memoryCache.Trim percent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percent"><span data-ttu-id="09a6d-477">제거할 총 캐시 엔트리의 백분율입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-477">The percentage of total cache entries to remove.</span></span></param>
        <summary><span data-ttu-id="09a6d-478">캐시 개체에서 지정된 백분율의 캐시 엔트리를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-478">Removes a specified percentage of cache entries from the cache object.</span></span></summary>
        <returns><span data-ttu-id="09a6d-479">캐시에서 제거되는 엔트리의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-479">The number of entries removed from the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09a6d-480"><xref:System.Runtime.Caching.MemoryCache.Trim%2A> 속성을 절대 또는 상대 만료 초과한 항목을 먼저 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-480">The <xref:System.Runtime.Caching.MemoryCache.Trim%2A> property first removes entries that have exceeded either an absolute or sliding expiration.</span></span> <span data-ttu-id="09a6d-481">제거 되는 항목의 제거 이유 전달 될에 등록 된 모든 콜백을 <xref:System.Web.Caching.CacheItemRemovedReason.Expired>합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-481">Any callbacks that are registered for items that are removed will be passed a removed reason of <xref:System.Web.Caching.CacheItemRemovedReason.Expired>.</span></span>  
  
 <span data-ttu-id="09a6d-482">만료 된 항목을 제거 trim 비율에 도달 하기 위해 충분 하지 않으면 추가 항목이 요청된 trim 백분율에 도달할 때까지 가장 최근에 사용한 (LRU) 알고리즘을 기반으로 캐시에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-482">If removing expired entries is insufficient to reach the specified trim percentage, additional entries will be removed from the cache based on a least-recently used (LRU) algorithm until the requested trim percentage is reached.</span></span> <span data-ttu-id="09a6d-483">이러한 방식으로 제거 된 항목에 대 한 등록 된 모든 콜백을 제거 이유가 전달 됩니다 <xref:System.Runtime.Caching.CacheEntryRemovedReason.Evicted>합니다.</span><span class="sxs-lookup"><span data-stu-id="09a6d-483">Any callbacks that are registered for items that are removed this way will be passed a remove reason of <xref:System.Runtime.Caching.CacheEntryRemovedReason.Evicted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>