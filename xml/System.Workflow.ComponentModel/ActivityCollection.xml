<Type Name="ActivityCollection" FullName="System.Workflow.ComponentModel.ActivityCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccefe405631c51ea578e08a42eaaa5f1d300436c" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55347827" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActivityCollection : System.Collections.Generic.List&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActivityCollection extends System.Collections.Generic.List`1&lt;class System.Workflow.ComponentModel.Activity&gt; implements class System.Collections.Generic.ICollection`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.Generic.IList`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.ActivityCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivityCollection&#xA;Inherits List(Of Activity)&#xA;Implements ICollection(Of Activity), IEnumerable(Of Activity), IList(Of Activity)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityCollection sealed : System::Collections::Generic::List&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;" />
  <TypeSignature Language="F#" Value="type ActivityCollection = class&#xA;    inherit List&lt;Activity&gt;&#xA;    interface IList&lt;Activity&gt;&#xA;    interface ICollection&lt;Activity&gt;&#xA;    interface seq&lt;Activity&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.List&lt;System.Workflow.ComponentModel.Activity&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Workflow.ComponentModel.Activity</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCollectionMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="43048-101"><see cref="T:System.Collections.ICollection" /> 형식의 강력한 형식 <see cref="T:System.Workflow.ComponentModel.Activity" />을 모델링합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-101">Models a strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="43048-102">이 클래스는 <xref:System.Workflow.ComponentModel.CompositeActivity>의 자식 활동 목록을 나타내는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-102">This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43048-103"><xref:System.Collections.Generic.IList%601>가 아닌 <xref:System.Collections.Generic.List%601>에서 파생된 메서드만 호출합니다. 예를 들어, <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> 대신 <xref:System.Collections.Generic.List%601.AddRange%2A>를 사용하여 동작을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-103">Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>.</span></span> <span data-ttu-id="43048-104"><xref:System.Collections.Generic.List%601>에서 파생된 메서드를 호출하면 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-104">Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43048-105">다음 예제에서는 모든 자식 활동을 포함하는 복합 활동 클래스의 멤버인 <xref:System.Workflow.ComponentModel.ActivityCollection>의 액세스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="43048-105">The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities.</span></span> <span data-ttu-id="43048-106">이 코드 예제는 Throw SDK 샘플의 일부로, ThrowWorkFlow.cs 파일에서 가져왔습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-106">This code example is part of the Using Throw SDK Sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="43048-107">자세한 내용은 [ThrowActivity 활동을 사용 하 여](https://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1)입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-107">For more information, see [Using the ThrowActivity Activity](https://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityCollection (System.Workflow.ComponentModel.Activity owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityCollection(System::Workflow::ComponentModel::Activity ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.ActivityCollection : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.ActivityCollection" Usage="new System.Workflow.ComponentModel.ActivityCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="43048-108">이 인스턴스를 소유한 것으로 지정된 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-108">The <see cref="T:System.Workflow.ComponentModel.Activity" /> designated as owning this instance.</span></span></param>
        <summary><span data-ttu-id="43048-109">소유자 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />를 초기화하여 <see cref="T:System.Workflow.ComponentModel.Activity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-109">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> class, initializing an owner <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-110">예</span><span class="sxs-lookup"><span data-stu-id="43048-110">Example</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43048-111"><paramref name="owner" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-111"><paramref name="owner" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="43048-112"><paramref name="owner" />가 <see cref="T:System.Workflow.ComponentModel.Activity" />에 종속되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="43048-112"><paramref name="owner" /> is not a descendent of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="activityCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="43048-113"><see cref="T:System.Workflow.ComponentModel.Activity" />에 추가할 <see cref="T:System.Collections.ICollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-113">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be added to the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="43048-114"><see cref="T:System.Workflow.ComponentModel.Activity" />에 <see cref="T:System.Collections.ICollection" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-114">Adds the <see cref="T:System.Workflow.ComponentModel.Activity" /> to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43048-115">다음 예제에서는 모든 자식 활동을 포함하는 복합 활동 클래스의 멤버인 <xref:System.Workflow.ComponentModel.ActivityCollection>의 액세스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="43048-115">The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities.</span></span> <span data-ttu-id="43048-116">이 예제는 <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>의 사용을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="43048-116">This example illustrates the use of <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>.</span></span> <span data-ttu-id="43048-117">이 코드 예제는 ThrowWorkflow.cs 파일에 있는 Throw SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-117">This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="43048-118">자세한 내용은 [ThrowActivity 활동을 사용 하 여](https://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1)입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-118">For more information, see [Using the ThrowActivity Activity](https://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="activityCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43048-119"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 모든 <see cref="T:System.Collections.ICollection" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-119">Removes every <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.Contains : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="activityCollection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="43048-120">멤버 자격이 테스트되는 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-120">The <see cref="T:System.Workflow.ComponentModel.Activity" /> being tested for membership.</span></span></param>
        <summary><span data-ttu-id="43048-121"><see cref="T:System.Workflow.ComponentModel.Activity" />의 <see cref="T:System.Collections.ICollection" /> 멤버 자격에 대한 테스트를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-121">Provides a test for membership of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="43048-122"><see langword="true" />가 <see cref="T:System.Workflow.ComponentModel.Activity" />에 속해 있으면 <see cref="T:System.Collections.ICollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-122"><see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Activity" /> belongs to the <see cref="T:System.Collections.ICollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-123">이 <xref:System.Collections.ICollection>은 형식이 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-123">This <xref:System.Collections.ICollection> is type-safe.</span></span> <span data-ttu-id="43048-124">항목이 <xref:System.Workflow.ComponentModel.Activity> 형식이 아니면 런타임 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-124">A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.ComponentModel.ActivityCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43048-125"><see cref="T:System.Collections.ICollection" />의 멤버 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-125">Gets the number of members of the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="43048-126"><see cref="T:System.Collections.ICollection" />의 멤버 수입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-126">The number of members of the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerator`1&lt;class System.Workflow.ComponentModel.Activity&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;" Usage="activityCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43048-127"><see cref="T:System.Collections.ICollection" />에 대한 열거형 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-127">Implements an enumeration interface to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="43048-128"><see cref="T:System.Collections.ReadOnlyCollectionBase" /> 인스턴스에서 반복할 수 있는 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-128">An enumerator that can iterate through the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-129">열거자에서는 컬렉션의 데이터를 읽기만 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-129">Enumerators only enable reading the data in the collection.</span></span> <span data-ttu-id="43048-130">열거자를 사용하여 내부 컬렉션을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-130">You cannot use enumerators to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="43048-131">처음에는 열거자가 컬렉션의 첫 번째 요소 앞에 위치합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-131">To begin, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="43048-132"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-132"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="43048-133">여기에서 <xref:System.Collections.IEnumerator.Current%2A>를 호출하면 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-133">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.</span></span> <span data-ttu-id="43048-134">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-134">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="43048-135"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-135"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="43048-136"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-136"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="43048-137">컬렉션의 끝이 전달된 후 열거자는 컬렉션의 마지막 요소 뒤에 배치되고 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출하면 `false`가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-137">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="43048-138"><xref:System.Collections.IEnumerator.MoveNext%2A>에 대한 마지막 호출에서 `false`가 반환된 경우 <xref:System.Collections.IEnumerator.Current%2A>를 호출하면 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-138">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="43048-139">`Current`를 컬렉션의 첫째 요소에 다시 설정하려면 `Reset`을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-139">To set `Current` to the first element of the collection again, you can call `Reset` followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="43048-140">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="43048-141">요소를 추가, 수정 또는 삭제하는 등 컬렉션을 변경하면 열거자가 무효로 되어 이를 다시 유효화할 수 없으며 다음에 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 `Reset`을 호출할 때 <xref:System.InvalidOperationException>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-141">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> .</span></span> <span data-ttu-id="43048-142"><xref:System.Collections.IEnumerator.MoveNext%2A> 및 <xref:System.Collections.IEnumerator.Current%2A> 사이에 컬렉션이 수정되면 열거자가 이미 무효로 되었어도 <xref:System.Collections.IEnumerator.Current%2A>는 컬렉션이 설정된 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-142">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="43048-143">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="43048-143">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="43048-144">컬렉션이 동기화된 경우에도 다른 스레드에서 컬렉션을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-144">Even when a collection is synchronized, other threads could still modify the collection.</span></span> <span data-ttu-id="43048-145">이렇게 하면 열거자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-145">This causes the enumerator to raise an exception.</span></span> <span data-ttu-id="43048-146">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-146">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Activity) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : System.Workflow.ComponentModel.Activity -&gt; int" Usage="activityCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="43048-147">인덱스를 가져올 활동입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-147">The activity for which to acquire the index.</span></span></param>
        <summary><span data-ttu-id="43048-148"><see cref="T:System.Workflow.ComponentModel.Activity" />의 <see cref="T:System.Collections.ICollection" /> 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-148">Gets the index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="43048-149"><see cref="T:System.Workflow.ComponentModel.Activity" />에 있는 <see cref="T:System.Collections.ICollection" />의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-149">The index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="43048-150">그렇지 않으면 -1입니다(<see cref="T:System.Workflow.ComponentModel.Activity" />가 <see cref="T:System.Collections.ICollection" />에 없는 경우).</span><span class="sxs-lookup"><span data-stu-id="43048-150">Otherwise -1 (if <see cref="T:System.Workflow.ComponentModel.Activity" /> is not in the <see cref="T:System.Collections.ICollection" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-151">이 컬렉션은 형식이 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-151">This collection is type-safe.</span></span> <span data-ttu-id="43048-152">항목이 <xref:System.Workflow.ComponentModel.Activity> 형식이 아니면 런타임 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-152">A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.Insert : int * System.Workflow.ComponentModel.Activity -&gt; unit" Usage="activityCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43048-153">항목을 삽입할 컬렉션의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-153">Zero-based index of the collection at which to insert the item.</span></span></param>
        <param name="item"><span data-ttu-id="43048-154">컬렉션에 삽입할 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-154">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be inserted into the collection.</span></span></param>
        <summary><span data-ttu-id="43048-155"><see cref="T:System.Collections.ICollection" />의 인덱스에 항목을 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-155">Inserts the item at the index in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-156">이 <xref:System.Collections.ICollection>은 형식이 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-156">This <xref:System.Collections.ICollection> is type safe.</span></span> <span data-ttu-id="43048-157">항목이 <xref:System.Workflow.ComponentModel.Activity> 형식이 아니면 런타임 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-157">A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43048-158"><see cref="T:System.Workflow.ComponentModel.Activity" />의 <see cref="T:System.Collections.ICollection" /> 항목을 이름이나 인덱스별로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-158">Gets an item <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ default[int] { System::Workflow::ComponentModel::Activity ^ get(int index); void set(int index, System::Workflow::ComponentModel::Activity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Workflow.ComponentModel.Activity with get, set" Usage="System.Workflow.ComponentModel.ActivityCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43048-159"><see cref="T:System.Collections.ICollection" />의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-159">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="43048-160">인덱스를 기반으로 <see cref="T:System.Collections.ICollection" />의 활동을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-160">Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</span></span></summary>
        <value><span data-ttu-id="43048-161"><see cref="T:System.Collections.ICollection" />의 해당 인덱스가 호출에 지정된 <see cref="T:System.Collections.ICollection" />의 멤버 활동입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-161">A member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="43048-162"><paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="43048-162"><paramref name="index" /> is not a valid index in <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="43048-163">속성이 설정되어 있으며 <see cref="T:System.Collections.IList" />가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-163">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="43048-164"><see cref="T:System.Object" />가 아닌 <see cref="T:System.Workflow.ComponentModel.Activity" />로 설정하려고 시도한 경우</span><span class="sxs-lookup"><span data-stu-id="43048-164">An attempt to set to an <see cref="T:System.Object" /> that is not an <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ default[System::String ^] { System::Workflow::ComponentModel::Activity ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Workflow.ComponentModel.Activity" Usage="System.Workflow.ComponentModel.ActivityCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="43048-165"><see cref="T:System.Collections.ICollection" />의 활동에 대한 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-165">Unique identifier for activity in the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="43048-166">고유 키인 문자열을 기반으로 <see cref="T:System.Collections.ICollection" />의 활동을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-166">Gets the activity in the <see cref="T:System.Collections.ICollection" /> based on the string which is a unique key.</span></span></summary>
        <value><span data-ttu-id="43048-167"><see cref="T:System.Workflow.ComponentModel.Activity" />의 멤버 <see cref="T:System.Collections.ICollection" />입니다. 호출에 지정된 <see cref="T:System.Collections.ICollection" />의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-167">A member <see cref="T:System.Workflow.ComponentModel.Activity" /> of the <see cref="T:System.Collections.ICollection" />; the key in the <see cref="T:System.Collections.ICollection" /> which was specified in the call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-168"><xref:System.Workflow.ComponentModel.Activity>에 지정된 키를 가진 <xref:System.Collections.ICollection>가 없는 경우 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-168">If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ListChanged As EventHandler(Of ActivityCollectionChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^&gt; ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; " Usage="member this.ListChanged : System.EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43048-169">이 <see cref="T:System.Collections.ICollection" />의 콘텐츠를 변경할 때마다 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-169">Raised whenever a change is made to the contents of this <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-170">이 컨텍스트에서 멤버를 추가하거나 제거하면 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-170">In this context, adding or removing members raises the event.</span></span> <span data-ttu-id="43048-171">멤버를 수정하는 경우에는 이 이벤트가 발생하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-171">Modifying a member does not raise this event.</span></span>  
  
 <span data-ttu-id="43048-172"><xref:System.Workflow.ComponentModel.ActivityCollection> 대리자를 만드는 경우 이벤트를 처리할 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-172">When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="43048-173">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-173">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="43048-174">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-174">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="43048-175">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-175">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.Remove : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="activityCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="43048-176"><see cref="T:System.Collections.ICollection" />에서 제거할 활동입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-176">The activity to remove from the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="43048-177">호출에 지정된 활동을 <see cref="T:System.Collections.ICollection" />에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-177">Removes the activity specified in the call from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="43048-178">작업이 성공적으로 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-178"><see langword="true" /> if the operation succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-179">이 <xref:System.Collections.ICollection>은 형식이 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-179">This <xref:System.Collections.ICollection> is type safe.</span></span> <span data-ttu-id="43048-180">항목이 <xref:System.Workflow.ComponentModel.Activity> 형식이 아니면 런타임 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-180">A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveAt : int -&gt; unit" Usage="activityCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43048-181">컬렉션에서 활동을 제거할 인덱스(0부터 시작) 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-181">Position in a zero-based index to remove the activity from the collection.</span></span></param>
        <summary><span data-ttu-id="43048-182"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 지정된 <see cref="T:System.Collections.ICollection" />의 <paramref name="index" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-182">Removes the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> at the specified <paramref name="index" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-183">인덱스가 유효하지 않으면(범위를 벗어난 경우) 런타임 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-183">A run-time exception occurs if the index is not valid (out of range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.Add (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Add(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As Activity) Implements ICollection(Of Activity).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="43048-184"><see cref="T:System.Object" />에 추가할 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-184">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="43048-185"><see cref="T:System.Collections.IList" />(<see cref="T:System.Collections.IList" />의 끝)에 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-185">Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-186"><xref:System.Object>의 형식이 <xref:System.Workflow.ComponentModel.Activity>가 아닌 경우 오류 메시지 "Error_InvalidListItem"과 함께 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-186">Raises an exception with the error message "Error_InvalidListItem" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of Activity).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear() = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43048-187"><see cref="T:System.Collections.IList" />에서 모든 활동을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="43048-187">Clears all activities from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-188">이 작업이 완료된 후 <xref:System.Collections.CollectionBase.Count%2A> 속성은 0이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-188">The <xref:System.Collections.CollectionBase.Count%2A> property is zero after this operation is finished.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Activity&gt;.Contains (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Contains(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Activity) As Boolean Implements ICollection(Of Activity).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="43048-189"><see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-189">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="43048-190"><see cref="T:System.Object" />가 컬렉션의 멤버인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-190">Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</span></span></summary>
        <returns><span data-ttu-id="43048-191">컬렉션에 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-191"><see langword="true" /> if value is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-192"><xref:System.Object>의 형식이 <xref:System.Workflow.ComponentModel.Activity>가 아닌 경우 오류 메시지 "Error_InvalidListItem"과 함께 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-192">Raises an exception with the error message "Error_InvalidListItem" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.CopyTo (System.Workflow.ComponentModel.Activity[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo(class System.Workflow.ComponentModel.Activity[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Activity(), arrayIndex As Integer) Implements ICollection(Of Activity).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo(cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Workflow.ComponentModel.Activity[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="43048-193">복사 작업의 대상이 되는 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-193">The <see cref="T:System.Array" /> which is the target of the copy operation.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="43048-194">복사가 시작되는 <see cref="T:System.Collections.ICollection" /> 내의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-194">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</span></span></param>
        <summary><span data-ttu-id="43048-195">특정 <see cref="T:System.Collections.ICollection" /> 인덱스부터 시작하여 <see cref="T:System.Array" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-195">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43048-196"><paramref name="array" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-196"><paramref name="array" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="43048-197"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="43048-197"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="43048-198"><paramref name="array" />가 다차원 배열인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-198"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="43048-199"><paramref name="index" />가 <paramref name="array" />의 길이보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="43048-199"><paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.</span></span>  
  
<span data-ttu-id="43048-200">소스 <see cref="T:System.Collections.ICollection" />의 요소 수가 대상 배열의 <paramref name="index" />부터 끝까지 사용 가능한 공간보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="43048-200">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination array.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="43048-201"><see cref="T:System.Workflow.ComponentModel.Activity" /> 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="43048-201">The type <see cref="T:System.Workflow.ComponentModel.Activity" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection(Of Activity).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity&gt;::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43048-202"><see cref="T:System.Collections.Generic.ICollection`1" />에 포함된 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-202">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <value><span data-ttu-id="43048-203"><see cref="T:System.Collections.Generic.ICollection`1" />에 포함된 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-203">The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of Activity).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43048-204"><see cref="T:System.Collections.IList" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-204">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="43048-205"><see langword="true" />가 읽기 전용이면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-205"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-206">읽기 전용 컬렉션에서는 컬렉션을 만든 다음에 요소를 추가, 제거 또는 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-206">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Activity&gt;.Remove (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Remove(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As Activity) As Boolean Implements ICollection(Of Activity).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="43048-207"><see cref="T:System.Collections.Generic.ICollection`1" />에서 제거할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-207">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="43048-208"><see cref="T:System.Collections.Generic.ICollection`1" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-208">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="43048-209"><see langword="true" />이 <paramref name="item" />에서 제거되면 <see cref="T:System.Collections.Generic.ICollection`1" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-209"><see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="43048-210">이 메서드는 <see langword="false" />이 원래 <paramref name="item" />에 없는 경우에도 <see cref="T:System.Collections.Generic.ICollection`1" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-210">This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-211">개체의 동일성을 결정하는 방법에 따라 다양한 구현이 가능합니다. 예를 들어 <xref:System.Collections.Generic.List%601>은 <xref:System.Collections.Generic.Comparer%601.Default%2A>를 사용하는 반면 <xref:System.Collections.Generic.Dictionary%602>의 경우에는 사용자가 키를 비교하는 데 사용할 <xref:System.Collections.Generic.IComparer%601> 구현을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-211">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="43048-212">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="43048-212">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="43048-213">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-213">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="43048-214">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-214">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="43048-215"><see langword="ICollection" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-215">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt; IEnumerable&lt;Activity&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Workflow.ComponentModel.Activity&gt; System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable&lt;System#Workflow#ComponentModel#Activity&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Activity) Implements IEnumerable(Of Activity).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43048-216">컬렉션을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-216">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="43048-217">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-217">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-218">합니다 `foreach` C# 언어의 (`for each` c + +에서는 `For Each` Visual Basic에서) 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="43048-218">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="43048-219">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-219">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="43048-220">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-220">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="43048-221">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-221">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="43048-222">이 위치에서 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>는 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-222">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="43048-223">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-223">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="43048-224"><xref:System.Collections.Generic.IEnumerator%601.Current%2A>는 <xref:System.Collections.IEnumerator.MoveNext%2A>가 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-224"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="43048-225"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-225"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="43048-226"><xref:System.Collections.IEnumerator.MoveNext%2A>에서 컬렉션의 끝을 지나면 컬렉션의 마지막 요소 뒤에 열거자가 위치하게 되고, <xref:System.Collections.IEnumerator.MoveNext%2A>에서 false를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-226">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false.</span></span> <span data-ttu-id="43048-227">열거자가 이 위치에 있으면 <xref:System.Collections.IEnumerator.MoveNext%2A>에 대한 이후의 호출에서도 false를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-227">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false.</span></span> <span data-ttu-id="43048-228"><xref:System.Collections.IEnumerator.MoveNext%2A>에 대한 마지막 호출에서 false가 반환된 경우 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>는 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-228">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="43048-229"><xref:System.Collections.Generic.IEnumerator%601.Current%2A>를 컬렉션의 첫 번째 요소로 다시 설정할 수 없으므로 대신 새 열거자 인스턴스를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-229">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="43048-230">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-230">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="43048-231">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-231">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="43048-232">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="43048-232">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="43048-233">열거 동안 스레드 보안을 보장하려면 전체 열거 동안 컬렉션을 잠그면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-233">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="43048-234">여러 스레드에서 컬렉션에 액세스하여 읽고 쓸 수 있도록 허용하려면 사용자 지정 동기화를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-234">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="43048-235"><xref:System.Collections.Generic> 네임스페이스에서 컬렉션의 기본 구현은 동기화되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-235">Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;Activity&gt;.IndexOf (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#IndexOf(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Activity) As Integer Implements IList(Of Activity).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="43048-236"><see cref="T:System.Collections.IList" />에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-236">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="43048-237"><see cref="T:System.Collections.IList" />에서 특정 항목의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-237">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="43048-238">목록에 있으면 <paramref name="item" />의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-238">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-239">목록에 개체가 여러 번 나타나면 `IndexOf` 메서드는 항상 발견한 첫 번째 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-239">If an object occurs multiple times in the list, the `IndexOf` method always returns the first instance found.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;Activity&gt;.Insert (int index, System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert(int32 index, class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Activity) Implements IList(Of Activity).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert(int index, System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43048-240">삽입의 0부터 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-240">The zero-based position of the insertion.</span></span></param>
        <param name="item"><span data-ttu-id="43048-241">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-241">The object to insert.</span></span> <span data-ttu-id="43048-242"><see cref="T:System.Workflow.ComponentModel.Activity" /> 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-242">It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="43048-243"><see cref="T:System.Object" />의 지정된 0부터 시작하는 인덱스에 <see cref="T:System.Collections.IList" />를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-243">Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-244"><xref:System.Object>를 <xref:System.Workflow.ComponentModel.Activity>로 캐스팅할 수 없는 경우 사용자 지정 <xref:System.Exception>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-244">If the <xref:System.Object> cannot be cast to an <xref:System.Workflow.ComponentModel.Activity>, a custom <xref:System.Exception> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Activity System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Activity Implements IList(Of Activity).Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Workflow::ComponentModel::Activity ^ System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity&gt;::Item[int] { System::Workflow::ComponentModel::Activity ^ get(int index); void set(int index, System::Workflow::ComponentModel::Activity ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43048-245">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-245">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="43048-246">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-246">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="43048-247">지정된 인덱스의 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-247">The <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-248">이 속성은 myCollection[index] 구문을 사용하여 컬렉션의 특정 요소에 액세스하는 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-248">This property provides the ability to access a specific element in the collection by using the following syntax: myCollection[index].</span></span>  
  
 <span data-ttu-id="43048-249">C# 언어에서는 `this` 속성을 구현하는 대신 `Item` 키워드를 사용하여 인덱서를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-249">The C# language uses the `this` keyword to define the indexers instead of implementing the `Item` property.</span></span> <span data-ttu-id="43048-250">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 `Item`을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-250">Visual Basic implements `Item` as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="43048-251"><paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="43048-251"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="43048-252"><see langword="ICollection" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-252">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;Activity&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of Activity).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43048-253">제거할 항목의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-253">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="43048-254">지정한 인덱스에서 <see cref="T:System.Collections.IList" /> 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-254">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-255">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="43048-255">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="43048-256">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-256">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="43048-257">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-257">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="43048-258"><paramref name="index" />가 <see cref="T:System.Collections.IList" />의 유효한 인덱스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="43048-258"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="43048-259"><see langword="ICollection" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-259">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="43048-260">복사 작업의 대상이 되는 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-260">The <see cref="T:System.Array" /> which is the target of the copy operation.</span></span></param>
        <param name="index"><span data-ttu-id="43048-261">복사가 시작되는 <see cref="T:System.Collections.ICollection" /> 내의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-261">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</span></span></param>
        <summary><span data-ttu-id="43048-262">특정 <see cref="T:System.Collections.ICollection" /> 인덱스부터 시작하여 <see cref="T:System.Array" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-262">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43048-263"><see cref="T:System.Collections.Generic.ICollection`1" />에 대한 액세스가 동기화되었는지의 여부, 즉 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-263">Gets a value that indicates whether access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is thread-safe.</span></span></summary>
        <value><span data-ttu-id="43048-264"><see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.Generic.ICollection`1" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-264"><see langword="true" /> if access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is, thread-safe; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-265"><xref:System.Collections.ICollection.SyncRoot%2A>는 <xref:System.Collections.Generic.ICollection%601>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-265"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="43048-266"><xref:System.Collections?displayProperty=nameWithType> 네임스페이스에 있는 대부분의 컬렉션 클래스는 내부 컬렉션에 동기화된 래퍼를 제공하는 `Synchronized` 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-266">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="43048-267">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-267">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="43048-268">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-268">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="43048-269">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-269">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43048-270"><see cref="T:System.Collections.Generic.ICollection`1" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-270">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <value><span data-ttu-id="43048-271"><see cref="T:System.Collections.Generic.ICollection`1" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-271">An object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-272">내부 저장소를 공개적으로 사용할 수 없는 컬렉션의 경우 예상된 구현에서는 현재 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-272">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="43048-273">다른 컬렉션을 래핑하는 컬렉션의 경우 현재 인스턴스에 대한 포인터로는 충분하지 않을 수 있으므로 해당 컬렉션은 내부 컬렉션의 <xref:System.Collections.ICollection.SyncRoot%2A> 속성을 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-273">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="43048-274"><xref:System.Collections?displayProperty=nameWithType> 네임스페이스에 있는 대부분의 컬렉션 클래스는 내부 컬렉션에 동기화된 래퍼를 제공하는 `Synchronized` 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-274">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="43048-275">그러나 파생 클래스는 <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> 속성을 사용하여 컬렉션의 동기화된 고유 버전을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-275">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property.</span></span> <span data-ttu-id="43048-276">동기화하는 코드는 컬렉션에 직접 작업을 수행하지 않고 컬렉션의 <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> 속성에 대해 작업을 수행해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-276">The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property of the collection, not directly on the collection.</span></span> <span data-ttu-id="43048-277">이렇게 하면 다른 개체에서 파생되는 컬렉션에 대해 적절한 작업이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-277">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="43048-278">특히 컬렉션 인스턴스를 동시에 수정할 수 있는 다른 스레드와 적절한 동기화가 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="43048-278">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43048-279">내부 <see cref="T:System.Collections.IEnumerator" /> 인스턴스를 반복하는 <see cref="T:System.Collections.IList" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-279">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the underlying <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="43048-280">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-280">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-281"><xref:System.Collections.IEnumerator>에서는 컬렉션의 데이터를 읽기만 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-281">An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection.</span></span> <span data-ttu-id="43048-282"><xref:System.Collections.IEnumerator>를 사용하여 내부 컬렉션을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-282">You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="43048-283"><see cref="T:System.Object" />에 추가할 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-283">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="43048-284"><see cref="T:System.Collections.IList" />(<see cref="T:System.Collections.IList" />의 끝)에 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-284">Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="43048-285">방금 추가된 <see cref="T:System.Object" />의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-285">The zero-based index of the <see cref="T:System.Object" /> that was just added.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43048-286"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 모든 <see cref="T:System.Collections.ICollection" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-286">Removes all <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="43048-287"><see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-287">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="43048-288"><see cref="T:System.Object" />가 컬렉션의 멤버인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-288">Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</span></span></summary>
        <returns><span data-ttu-id="43048-289"><see langword="true" />가 컬렉션에 있으면 <paramref name="value" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-289"><see langword="true" /> if <paramref name="value" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="43048-290">인덱싱할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-290">The <see cref="T:System.Object" /> to be indexed.</span></span></param>
        <summary><span data-ttu-id="43048-291">내부 활동 컬렉션에서 <see cref="T:System.Object" />의 인덱스(0부터 시작)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-291">Gets the zero-based index of the <see cref="T:System.Object" /> in the underlying activities collection.</span></span></summary>
        <returns><span data-ttu-id="43048-292">기본 작업 컬렉션에서 <paramref name="value" />의 인덱스(0부터 시작)이거나, 컬렉션에 없으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-292">The zero-based index of the <paramref name="value" /> in the underlying activities collection or -1 if not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="43048-293"><paramref name="value" />의 형식이 <see cref="T:System.Workflow.ComponentModel.Activity" />가 아니며 예외 개체에 "Error_InvalidListItem" 오류 메시지가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="43048-293">The <paramref name="value" /> is not of type <see cref="T:System.Workflow.ComponentModel.Activity" /> and the exception object contains "Error_InvalidListItem" error message.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43048-294">삽입의 0부터 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-294">The zero-based position of the insertion.</span></span></param>
        <param name="value"><span data-ttu-id="43048-295">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-295">The object to insert.</span></span> <span data-ttu-id="43048-296"><see cref="T:System.Workflow.ComponentModel.Activity" /> 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-296">It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="43048-297"><see cref="T:System.Object" />의 지정된 0부터 시작하는 인덱스에 <see cref="T:System.Collections.IList" />를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-297">Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43048-298"><see cref="T:System.Collections.IList" />의 크기가 고정되어 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-298">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="43048-299"><see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-299"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-300">크기가 고정된 컬렉션에서는 컬렉션을 만든 다음에 요소를 추가하거나 제거할 수 없지만 기존 요소는 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="43048-300">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43048-301"><see cref="T:System.Collections.Generic.ICollection`1" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="43048-301">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="43048-302"><see langword="true" />가 읽기 전용이면 <see cref="T:System.Collections.Generic.ICollection`1" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-302"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43048-303"><see cref="T:System.Collections.ICollection" />의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-303">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="43048-304">인덱스를 기반으로 <see cref="T:System.Collections.ICollection" />의 활동을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-304">Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</span></span></summary>
        <value><span data-ttu-id="43048-305"><see cref="T:System.Object" />의 멤버 활동 합니다 <see cref="T:System.Collections.ICollection" />, 해당 인덱스가 <see cref="T:System.Collections.ICollection" /> 호출에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-305">An <see cref="T:System.Object" />, a member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="43048-306"><see cref="T:System.Object" />에서 제거할 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="43048-306">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="43048-307"><see cref="T:System.Collections.IList" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-307">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43048-308">제거된 요소의 다음 요소가 위로 이동하여 빈 지점을 차지합니다.</span><span class="sxs-lookup"><span data-stu-id="43048-308">The elements that follow the removed element move up to occupy the vacated spot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="43048-309"><see cref="T:System.Collections.IList" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-309">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="43048-310"><see cref="T:System.Collections.IList" />가 고정 크기인 경우</span><span class="sxs-lookup"><span data-stu-id="43048-310"><see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>