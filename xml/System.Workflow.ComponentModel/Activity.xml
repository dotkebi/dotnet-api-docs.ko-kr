<Type Name="Activity" FullName="System.Workflow.ComponentModel.Activity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ab7de1edb0b000c299985952e69ca5c6bc1e4a9" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58552893" /></Metadata><TypeSignature Language="C#" Value="public class Activity : System.Workflow.ComponentModel.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Activity extends System.Workflow.ComponentModel.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="VB.NET" Value="Public Class Activity&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activity : System::Workflow::ComponentModel::DependencyObject" />
  <TypeSignature Language="F#" Value="type Activity = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.TypeCodeDomSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Component")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.Activity), "Design.Resources.Activity.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.ActivityValidator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Serialization.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Workflow.ComponentModel.Design.ActivitySet", System.ComponentModel.ToolboxItemFilterType.Allow)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("Microsoft.Workflow.VSDesigner", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8fa97-101">워크플로의 기본 문서 블록을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-101">Represents the fundamental building block of workflows.</span></span> <span data-ttu-id="8fa97-102"><see cref="T:System.Workflow.ComponentModel.Activity" />는 모든 활동의 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-102"><see cref="T:System.Workflow.ComponentModel.Activity" /> is the base class for all activities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="8fa97-103"><xref:System.Workflow.ComponentModel.Activity>는 워크플로의 기본 문서 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-103">An <xref:System.Workflow.ComponentModel.Activity> is the fundamental building block of workflows.</span></span> <span data-ttu-id="8fa97-104"><xref:System.Workflow.ComponentModel.Activity>는 클래스처럼 속성 및 이벤트 집합을 정의하며 활동의 런타임 동작을 정의하는 실행 논리도 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-104">An <xref:System.Workflow.ComponentModel.Activity> defines a set of properties and events, such as any class, along with execution logic that defines the activity's run-time behavior.</span></span> <span data-ttu-id="8fa97-105">추가 구성 요소 집합을 <xref:System.Workflow.ComponentModel.Activity>와 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-105">A set of additional components can be associated with an <xref:System.Workflow.ComponentModel.Activity>.</span></span> <span data-ttu-id="8fa97-106">여기에는 유효성 검사기, 코드 생성기, 사용자 지정 serializer 및 디자이너가 포함되지만 이에만 제한되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-106">These include, but are not limited to a validator, a code generator, custom serializers, and a designer.</span></span>  
  
 <span data-ttu-id="8fa97-107">모든 활동은 <xref:System.Workflow.ComponentModel.Activity> 기본 클래스에 정의된 일반 속성 집합을 공유합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-107">All activities share a common set of properties defined on the <xref:System.Workflow.ComponentModel.Activity> base class.</span></span>  <span data-ttu-id="8fa97-108">각 <xref:System.Workflow.ComponentModel.Activity>는 이 클래스를 확장하여 요구 사항에 따라 고유의 추가 속성을 선언할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-108">Each <xref:System.Workflow.ComponentModel.Activity> can declare its own additional properties according to its requirements by extending this class.</span></span>  <span data-ttu-id="8fa97-109"><xref:System.Workflow.ComponentModel.Activity>는 <xref:System.Workflow.ComponentModel.DependencyObject>에서 파생되므로 속성을 표준 CLR 속성과 종속성 속성으로 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-109">Because <xref:System.Workflow.ComponentModel.Activity> derives from <xref:System.Workflow.ComponentModel.DependencyObject>, properties can be defined as standard CLR properties and as dependency properties.</span></span>  
  
 <span data-ttu-id="8fa97-110"><xref:System.Workflow.ComponentModel.Activity>의 실행 논리는 <xref:System.Workflow.ComponentModel.Activity>와 워크플로 런타임 간의 계약을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-110">The execution logic of an <xref:System.Workflow.ComponentModel.Activity> fulfills a contract that exists between any <xref:System.Workflow.ComponentModel.Activity> and the workflow runtime.</span></span> <span data-ttu-id="8fa97-111"><xref:System.Workflow.ComponentModel.Activity>를 사용하는 워크플로 개발자가 동작 방식을 알 수 있도록 기능과 관련해서 모든 <xref:System.Workflow.ComponentModel.Activity>의 실행 논리를 문서화해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-111">You must document the execution logic of any <xref:System.Workflow.ComponentModel.Activity> in a functional sense, so that a workflow developer who uses the <xref:System.Workflow.ComponentModel.Activity> knows how it behaves.</span></span> <span data-ttu-id="8fa97-112">실행 논리는 워크플로 런타임과 <xref:System.Workflow.ComponentModel.Activity> 간에 존재하는 계약의 일부이므로 실행 논리 자체는 워크플로에 활동을 포함하는 워크플로 개발자에게 표시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-112">The execution logic itself is hidden from the workflow developer who includes the activity in a workflow, because the execution logic is part of a contract that exists strictly between the workflow runtime and the <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa97-113">이 예제에서는 전자 메일을 보내는 것을 목적으로 하는 활동을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-113">This example defines an activity whose purpose is to send an email.</span></span> <span data-ttu-id="8fa97-114">활동은 구현 시 종속성 속성을 사용하는 하나의 `Subject` 속성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-114">The activity defines one property, `Subject`, that uses a dependency property in its implementation.</span></span> <span data-ttu-id="8fa97-115">다른 속성도 유사한 방식으로 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-115">Other properties can be defined in a similar way.</span></span> <span data-ttu-id="8fa97-116">`Execute` 메서드가 전자 메일 보내기에 대한 논리를 제공하도록 재정의되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-116">The `Execute` method is overridden to provide the logic for sending the email.</span></span> <span data-ttu-id="8fa97-117">전체 예제를 참조 하세요. 합니다 [전자 메일 보내기 활동 샘플](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-117">For a complete example, see the [Send Email Activity Sample](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669).</span></span>  
  
```csharp  
public class SendEmail : Activity  
{  
    public static readonly DependencyProperty SubjectProperty =  
        DependencyProperty.Register("Subject", typeof(string), typeof(SendEmail));  
  
    public string Subject  
    {  
        get { return base.GetValue(SubjectProperty) as string; }  
        set { base.SetValue(SubjectProperty, value); }  
    }  
  
    // Define other properties...  
  
    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  
    {  
        // Logic to send the email goes here...  
        return ActivityExecutionStatus.Closed;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fa97-118"><see cref="T:System.Workflow.ComponentModel.Activity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-118">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Activity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fa97-119"><see cref="T:System.Workflow.ComponentModel.Activity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-119">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa97-120">다음 코드에서는 활동을 만들어 복합 활동에 자식으로 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-120">The following code shows how to create activities and add them as children to a composite activity.</span></span>  
  
 <span data-ttu-id="8fa97-121">이 코드 예제는 ThrowWorkFlow.cs 파일에 있는 Throw SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-121">This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file.</span></span> <span data-ttu-id="8fa97-122">자세한 내용은 [Throw 샘플](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-122">For more information, see [Throw Sample](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Activity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Activity : string -&gt; System.Workflow.ComponentModel.Activity" Usage="new System.Workflow.ComponentModel.Activity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8fa97-123">이 인스턴스와 연결할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-123">The name to associate with this instance.</span></span> <span data-ttu-id="8fa97-124">이 이름은 워크플로 프로젝트에 사용되는 프로그래밍 언어의 변수 명명 규칙을 따라야 하며 워크플로에서 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-124">The name must conform to the variable naming conventions for the programming language that is being used in the Workflow project, and must be unique in the workflow.</span></span></param>
        <summary><span data-ttu-id="8fa97-125"><see cref="T:System.Workflow.ComponentModel.Activity" />을 초기화하는 동안 <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-125">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> class, while initializing the <see cref="P:System.Workflow.ComponentModel.Activity.Name" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-126"><paramref name="name" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-126"><paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ActivityContextGuidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ActivityContextGuidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ActivityContextGuidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActivityContextGuidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ActivityContextGuidProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActivityContextGuidProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-127"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />와 연결된 <see cref="T:System.Guid" />의 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />를 나타내는 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-127">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that represents the <see cref="T:System.Guid" /> of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that is associated with the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus&#xA;override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="activity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="8fa97-128">취소할 인스턴스를 포함하는 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-128">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the instance to cancel.</span></span></param>
        <summary><span data-ttu-id="8fa97-129">현재 실행 중인 활동의 실행을 취소하기 위해 워크플로 런타임에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-129">Called by the workflow runtime to cancel execution of an activity that is currently executing.</span></span></summary>
        <returns><span data-ttu-id="8fa97-130">활동이 Canceling 상태로 남아 있을지, Closed 상태로 전환될지 결정하는 작업 끝의 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-130">The status at the end of the operation that determines whether the activity remains in the canceling state or transitions to the closed state.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceling">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Canceling;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Canceling" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Canceling" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Canceling As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Canceling;" />
      <MemberSignature Language="F#" Value="member this.Canceling : EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " Usage="member this.Canceling : System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-131">활동 실행이 취소될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-131">Occurs when the activity execution is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-132">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-132">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8fa97-133">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-133">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8fa97-134">또한 <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-134">The <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8fa97-135">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-135">This is the preferred technique for handling the event in a derived class.</span></span>  <span data-ttu-id="8fa97-136">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [사용 이벤트](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-136">For more information about handling events, see [Consuming Events](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fa97-137">파생 클래스에서 <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" />을 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-137">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> in a derived class, make sure to call the base class <see cref="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CancelingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CancelingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CancelingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CancelingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CancelingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable CancelingEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Activity.CancelingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-138"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-138">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-139">해당하는 종속성 속성을 확인하여 이 형식의 각 public 속성 및 이벤트에 간접적으로 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-139">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="8fa97-140">이 종속성 속성은 이름이 `XProperty` 또는 `XEvent`인 공용 정적 필드입니다. 여기서 X는 해당 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-140">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Workflow.ComponentModel.Activity" Usage="activity.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fa97-141"><see cref="T:System.Workflow.ComponentModel.Activity" />의 전체 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-141">Creates a deep copy of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <returns><span data-ttu-id="8fa97-142"><see cref="T:System.Workflow.ComponentModel.Activity" />의 전체 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-142">A deep copy of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-143"><xref:System.IO.MemoryStream>을 사용하여 활동을 복사하고 특정 <xref:System.IO.MemoryStream>에서 deserialize하여 새 활동을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-143">Uses a <xref:System.IO.MemoryStream> to copy the activity and creates a new activity by deserializing from that particular <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Closed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " Usage="member this.Closed : System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-144"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 실행을 완료했을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-144">Occurs when an <see cref="T:System.Workflow.ComponentModel.Activity" /> has completed execution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-145">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-145">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8fa97-146">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-146">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8fa97-147">또한 <xref:System.Workflow.ComponentModel.Activity.Closed> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-147">The <xref:System.Workflow.ComponentModel.Activity.Closed> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8fa97-148">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-148">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fa97-149">파생 클래스에서 <see cref="E:System.Workflow.ComponentModel.Activity.Closed" />을 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-149">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> in a derived class, make sure to call the base class <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClosedEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Activity.ClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-150"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.ComponentModel.Activity.Closed" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-150">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-151">해당하는 종속성 속성을 확인하여 이 형식의 각 public 속성 및 이벤트에 간접적으로 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-151">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="8fa97-152">이 종속성 속성은 이름이 `XProperty` 또는 `XEvent`인 공용 정적 필드입니다. 여기서 X는 해당 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-152">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compensating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Compensating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Compensating" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Compensating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Compensating As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Compensating;" />
      <MemberSignature Language="F#" Value="member this.Compensating : EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " Usage="member this.Compensating : System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-153"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 보정 메서드를 실행할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-153">Occurs when running a compensation method on the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-154">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-154">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8fa97-155">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-155">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8fa97-156">또한 <xref:System.Workflow.ComponentModel.Activity.Compensating> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-156">The <xref:System.Workflow.ComponentModel.Activity.Compensating> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8fa97-157">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-157">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fa97-158">파생 클래스에서 <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" />을 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-158">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> in a derived class, make sure to call the base class <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CompensatingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CompensatingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CompensatingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CompensatingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CompensatingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable CompensatingEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Activity.CompensatingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-159"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-159">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-160">해당하는 종속성 속성을 확인하여 이 형식의 각 public 속성 및 이벤트에 간접적으로 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-160">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="8fa97-161">이 종속성 속성은 이름이 `XProperty` 또는 `XEvent`인 공용 정적 필드입니다. 여기서 X는 해당 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-161">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Workflow.ComponentModel.Activity.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.ComponentModel.Design.MultilineStringEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-162"><see cref="T:System.Workflow.ComponentModel.Activity" />에 대한 사용자 정의 설명을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-162">Gets or sets the user-defined description of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <value><span data-ttu-id="8fa97-163"><see cref="T:System.Workflow.ComponentModel.Activity" />에 대한 텍스트 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-163">The text description of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-164">이 속성은 메타 속성이므로 런타임에 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-164">This property is a meta property, which means it cannot be changed at runtime.</span></span> <span data-ttu-id="8fa97-165">메타 속성은 런타임에 속성 인스턴스가 만들어진 후 변경되지 않으므로 디자인 타임에 속성을 리터럴 값으로 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-165">Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Workflow.ComponentModel.Activity.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-166">실행 및 유효성 검사에 이 인스턴스를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-166">Gets or sets a value that indicates whether this instance is enabled for execution and validation.</span></span></summary>
        <value><span data-ttu-id="8fa97-167">실행 및 유효성 검사에 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-167"><see langword="true" /> if enabled for execution and validation; <see langword="false" /> otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-168">`false`이면 모든 자식 활동에 대해서도 이 값이 `false`인 것처럼 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-168">If `false`, all child activities are treated as if this value is `false` for them also.</span></span>  
  
 <span data-ttu-id="8fa97-169">이 속성은 메타 속성이므로 런타임에 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-169">This property is a meta property, which means it cannot be changed at runtime.</span></span> <span data-ttu-id="8fa97-170">메타 속성은 런타임에 속성 인스턴스가 만들어진 후 변경되지 않으므로 디자인 타임에 속성을 리터럴 값으로 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-170">Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus&#xA;override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="activity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="8fa97-171">이 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 및 실행과 연결할 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-171">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> to associate with this <see cref="T:System.Workflow.ComponentModel.Activity" /> and execution.</span></span></param>
        <summary><span data-ttu-id="8fa97-172">활동을 실행하기 위해 워크플로 런타임에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-172">Called by the workflow runtime to execute an activity.</span></span></summary>
        <returns><span data-ttu-id="8fa97-173">활동이 Executing 상태로 남아 있을지, Closed 상태로 전환될지 결정하는 실행 작업의 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-173">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of the run task, which determines whether the activity remains in the executing state, or transitions to the closed state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-174"><xref:System.Workflow.ComponentModel.ActivityExecutionContext>는 현재 실행 중인 활동과 워크플로에 대한 정보를 가져오는 데 사용되며, 런타임 환경에서 서비스를 가져오는 데에도 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-174">The <xref:System.Workflow.ComponentModel.ActivityExecutionContext> is used to get information about the currently running activity and workflow, and is also used to obtain services from the runtime environment.</span></span>  
  
 <span data-ttu-id="8fa97-175">동기적으로 실행되며, 활동이 완료되거나 중간 상태에 도달하면 호출자에게 제어가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-175">The running occurs synchronously, returning control to the caller when the activity is completed or reaches an intermediate state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa97-176">다음 코드 예제에서는 `Execute` 메서드를 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-176">The following code example shows an implementation of the `Execute` method.</span></span> <span data-ttu-id="8fa97-177">이 예제에서는 Outlook 전자 메일 메시지가 생성 되 고 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-177">In this example, an Outlook email message is constructed and sent.</span></span> <span data-ttu-id="8fa97-178">이 예제는 Outlook Workflow Wizard SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-178">This example is from the Outlook Workflow Wizard SDK sample.</span></span> <span data-ttu-id="8fa97-179">자세한 내용은 [Outlook Workflow Wizard 샘플](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-179">For more information, see [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).</span></span>  
  
 [!code-csharp[WF_Samples#98](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#98)]
 [!code-vb[WF_Samples#98](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#98)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Executing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Executing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Executing" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Executing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Executing As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Executing;" />
      <MemberSignature Language="F#" Value="member this.Executing : EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " Usage="member this.Executing : System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-180"><see cref="T:System.Workflow.ComponentModel.Activity" />가 실행될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-180">Occurs when the <see cref="T:System.Workflow.ComponentModel.Activity" /> is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-181">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-181">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8fa97-182">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-182">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8fa97-183">또한 <xref:System.Workflow.ComponentModel.Activity.Executing> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-183">The <xref:System.Workflow.ComponentModel.Activity.Executing> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8fa97-184">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-184">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fa97-185">파생 클래스에서 <see cref="E:System.Workflow.ComponentModel.Activity.Executing" />을 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-185">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> in a derived class, make sure to call the base class <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ExecutingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ExecutingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExecutingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ExecutingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExecutingEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Activity.ExecutingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-186">활동이 실행될 때 발생하는 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.ComponentModel.Activity.Executing" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-186">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> event, which occurs when the activity is executed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-187">해당하는 종속성 속성을 확인하여 이 형식의 각 public 속성 및 이벤트에 간접적으로 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-187">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="8fa97-188">이 종속성 속성은 이름이 `XProperty` 또는 `XEvent`인 공용 정적 필드입니다. 여기서 X는 해당 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-188">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionResult">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityExecutionResult ExecutionResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.ComponentModel.ActivityExecutionResult ExecutionResult" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionResult As ActivityExecutionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::ActivityExecutionResult ExecutionResult { System::Workflow::ComponentModel::ActivityExecutionResult get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionResult : System.Workflow.ComponentModel.ActivityExecutionResult" Usage="System.Workflow.ComponentModel.Activity.ExecutionResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-189">이 인스턴스를 실행하려는 마지막 시도의 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-189">Gets the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> of the last attempt to run this instance.</span></span></summary>
        <value><span data-ttu-id="8fa97-190">이 인스턴스를 실행하려는 마지막 시도의 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-190">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" /> of the last attempt to run this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-191">이 속성은 워크플로 인스턴스가 실행 중일 때만 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-191">This property is only useful when a workflow instance is running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStatus">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityExecutionStatus ExecutionStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus ExecutionStatus" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionStatus As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::ActivityExecutionStatus ExecutionStatus { System::Workflow::ComponentModel::ActivityExecutionStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionStatus : System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="System.Workflow.ComponentModel.Activity.ExecutionStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-192">이 인스턴스의 현재 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-192">Gets the current <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of this instance.</span></span></summary>
        <value><span data-ttu-id="8fa97-193">이 인스턴스의 현재 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-193">The current <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-194">이 속성은 워크플로 인스턴스가 실행 중일 때만 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-194">This property is only useful when a workflow instance is running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Faulting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Faulting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; Faulting" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.Faulting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Faulting As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ Faulting;" />
      <MemberSignature Language="F#" Value="member this.Faulting : EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " Usage="member this.Faulting : System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-195">인스턴스를 실행하는 동안 예외가 발생하면 이 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-195">Occurs when an exception is raised during the running of the instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-196">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [사용 이벤트](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-196">For more information about handling events, see [Consuming Events](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable FaultingEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Activity.FaultingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-197"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 나타내는 <see cref="E:System.Workflow.ComponentModel.Activity.Faulting" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-197">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that represents the <see cref="E:System.Workflow.ComponentModel.Activity.Faulting" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-198">해당하는 종속성 속성을 확인하여 이 형식의 각 public 속성 및 이벤트에 간접적으로 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-198">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="8fa97-199">이 종속성 속성은 이름이 `XProperty` 또는 `XEvent`인 공용 정적 필드입니다. 여기서 X는 해당 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-199">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActivityByName">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fa97-200">워크플로 내에 있는 이 인스턴스의 루트 활동에서 실행 중인 모든 활동 집합 중 이름이 요청된 <see cref="T:System.Workflow.ComponentModel.Activity" />의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-200">Returns the instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities running under the root activity of this instance that is within the workflow.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-201">사용자 지정 활동의 생성자 내에서 `GetActivityByName`을 호출하는 기능은 지원되지 않으며 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-201">Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActivityByName">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetActivityByName(string activityQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActivityByName (activityQualifiedName As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetActivityByName(System::String ^ activityQualifiedName);" />
      <MemberSignature Language="F#" Value="member this.GetActivityByName : string -&gt; System.Workflow.ComponentModel.Activity" Usage="activity.GetActivityByName activityQualifiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityQualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activityQualifiedName"><span data-ttu-id="8fa97-202">검색할 <see cref="T:System.Workflow.ComponentModel.Activity" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-202">The name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to search for.</span></span></param>
        <summary><span data-ttu-id="8fa97-203">워크플로 내에 있는 이 인스턴스의 루트 활동에서 실행 중인 모든 활동 집합 중 이름이 요청된 <see cref="T:System.Workflow.ComponentModel.Activity" />의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-203">Returns the instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities running under the root activity of this instance, which is within the workflow.</span></span></summary>
        <returns><span data-ttu-id="8fa97-204">워크플로 내에 있는 이 인스턴스의 루트 활동에서 실행 중인 모든 활동 집합에서 이름이 요청된 <see cref="T:System.Workflow.ComponentModel.Activity" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-204">The instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities running under the root activity of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-205">사용자 지정 활동의 생성자 내에서 `GetActivityByName`을 호출하는 기능은 지원되지 않으며 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-205">Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-206"><paramref name="activityQualifiedID" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-206"><paramref name="activityQualifiedID" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityByName">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName, bool withinThisActivityOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetActivityByName(string activityQualifiedName, bool withinThisActivityOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActivityByName (activityQualifiedName As String, withinThisActivityOnly As Boolean) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetActivityByName(System::String ^ activityQualifiedName, bool withinThisActivityOnly);" />
      <MemberSignature Language="F#" Value="member this.GetActivityByName : string * bool -&gt; System.Workflow.ComponentModel.Activity" Usage="activity.GetActivityByName (activityQualifiedName, withinThisActivityOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityQualifiedName" Type="System.String" />
        <Parameter Name="withinThisActivityOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="activityQualifiedName"><span data-ttu-id="8fa97-207">검색할 <see cref="T:System.Workflow.ComponentModel.Activity" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-207">The name of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to search for.</span></span></param>
        <param name="withinThisActivityOnly"><span data-ttu-id="8fa97-208">검색을 이 인스턴스에 포함된 활동으로 제한할지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-208">The value that indicates whether to limit the search to activities contained within this instance.</span></span></param>
        <summary><span data-ttu-id="8fa97-209">두 번째 매개 변수가 <see langword="false" />이면 이 인스턴스의 루트 <see cref="T:System.Workflow.ComponentModel.Activity" />에 있는 모든 활동 집합에서, 두 번째 매개 변수가 <see langword="true" />이면 현재 <see cref="T:System.Workflow.ComponentModel.Activity" />에 있는 모든 활동 집합에서 이름이 요청된 <see cref="T:System.Workflow.ComponentModel.Activity" />의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-209">Returns the instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities under the root the <see cref="T:System.Workflow.ComponentModel.Activity" /> of this instance if the second parameter is <see langword="false" /> and under the current <see cref="T:System.Workflow.ComponentModel.Activity" /> if the second parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="8fa97-210">두 번째 매개 변수가 <see langword="false" />이면 이 인스턴스의 루트 <see cref="T:System.Workflow.ComponentModel.Activity" />에 있는 모든 활동 집합에서, 두 번째 매개 변수가 <see langword="true" />이면 현재 <see cref="T:System.Workflow.ComponentModel.Activity" />에 있는 모든 활동 집합에서 이름이 요청된 <see cref="T:System.Workflow.ComponentModel.Activity" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-210">The instance of the <see cref="T:System.Workflow.ComponentModel.Activity" /> whose name is requested from the set of all activities under the root the <see cref="T:System.Workflow.ComponentModel.Activity" /> of this instance if the second parameter is <see langword="false" /> and under the current <see cref="T:System.Workflow.ComponentModel.Activity" /> if the second parameter is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-211">두 번째 매개 변수가 `false`이면 이 인스턴스의 루트 <xref:System.Workflow.ComponentModel.Activity>에 있는 모든 활동 집합에서, 두 번째 매개 변수가 `true`이면 현재 <xref:System.Workflow.ComponentModel.Activity>에 있는 모든 활동 집합에서 이름이 요청된 <xref:System.Workflow.ComponentModel.Activity>의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-211">Returns the instance of the <xref:System.Workflow.ComponentModel.Activity> whose name is requested from the set of all activities under the root the <xref:System.Workflow.ComponentModel.Activity> of this instance if the second parameter is `false` and under the current <xref:System.Workflow.ComponentModel.Activity> if the second parameter is `true`.</span></span>  
  
 <span data-ttu-id="8fa97-212">사용자 지정 활동의 생성자 내에서 `GetActivityByName`을 호출하는 기능은 지원되지 않으며 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-212">Calling `GetActivityByName` from within the constructor of a custom activity is not supported and can have unexpected results.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-213"><paramref name="activityQualifiedID" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-213"><paramref name="activityQualifiedID" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="abstract member HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus&#xA;override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="activity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="8fa97-214">이 인스턴스에 대한 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-214">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</span></span></param>
        <param name="exception"><span data-ttu-id="8fa97-215">이 오류를 발생시킨 <see cref="T:System.Exception" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-215">The <see cref="T:System.Exception" /> that caused this fault.</span></span></param>
        <summary><span data-ttu-id="8fa97-216">이 인스턴스의 실행 컨텍스트 내에서 예외가 발생할 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-216">Called when an exception is raised within the context of the execution of this instance.</span></span></summary>
        <returns><span data-ttu-id="8fa97-217">이 인스턴스를 취소할 때 발생하는 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-217">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-218">기본 메서드는 <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> 메서드를 호출하려고 하고 이 시도 결과를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-218">The default method tries to call the <xref:System.Workflow.ComponentModel.Activity.Cancel%2A> method and returns the result of this attempt.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-219"><paramref name="executionContext" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-219"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>

<span data-ttu-id="8fa97-220">또는</span><span class="sxs-lookup"><span data-stu-id="8fa97-220">-or-</span></span>

<span data-ttu-id="8fa97-221"><paramref name="exception" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-221"><paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : IServiceProvider -&gt; unit&#xA;override this.Initialize : IServiceProvider -&gt; unit" Usage="activity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8fa97-222">초기화 서비스를 제공하는 <see cref="T:System.IServiceProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-222">The <see cref="T:System.IServiceProvider" /> that provides the initialization service.</span></span></param>
        <summary><span data-ttu-id="8fa97-223">새 워크플로 인스턴스를 생성하는 동안 활동을 초기화하기 위해 워크플로 런타임에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-223">Called by the workflow runtime to initialize an activity during the construction of a new workflow instance.</span></span> <span data-ttu-id="8fa97-224">이 메서드는 동적 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />를 생성하는 동안 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-224">This method is called during the construction of a dynamic <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-225"><paramref name="provider" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-225"><paramref name="provider" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fa97-226"><see cref="T:System.EventHandler" /> 또는 <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />를 구독하고 해당 대리자를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-226">Subscribes an <see cref="T:System.EventHandler" /> or an <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> and invokes that delegate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal void Invoke&lt;T&gt; (EventHandler&lt;T&gt; handler, T e) where T : EventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Invoke&lt;(class System.EventArgs) T&gt;(class System.EventHandler`1&lt;!!T&gt; handler, !!T e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Invoke(Of T As EventArgs) (handler As EventHandler(Of T), e As T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : EventArgs void Invoke(EventHandler&lt;T&gt; ^ handler, T e);" />
      <MemberSignature Language="F#" Value="member this.Invoke : EventHandler&lt;'T (requires 'T :&gt; EventArgs)&gt; * 'T -&gt; unit (requires 'T :&gt; EventArgs)" Usage="activity.Invoke (handler, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.EventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler&lt;T&gt;" />
        <Parameter Name="e" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="8fa97-227">지정된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-227">The specified type.</span></span></typeparam>
        <param name="handler"><span data-ttu-id="8fa97-228">호출할 <see cref="T:System.EventHandler" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-228">The <see cref="T:System.EventHandler" /> to be invoked.</span></span></param>
        <param name="e"><span data-ttu-id="8fa97-229">이 이벤트와 연결할 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-229">The <see cref="T:System.EventArgs" /> to associate with this event</span></span></param>
        <summary><span data-ttu-id="8fa97-230"><see cref="T:System.EventHandler" />를 구독하고 해당 대리자를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-230">Subscribes an <see cref="T:System.EventHandler" /> and invokes that delegate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal void Invoke&lt;T&gt; (System.Workflow.ComponentModel.IActivityEventListener&lt;T&gt; eventListener, T e) where T : EventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Invoke&lt;(class System.EventArgs) T&gt;(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;!!T&gt; eventListener, !!T e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Invoke(Of T As EventArgs) (eventListener As IActivityEventListener(Of T), e As T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : EventArgs void Invoke(System::Workflow::ComponentModel::IActivityEventListener&lt;T&gt; ^ eventListener, T e);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Workflow.ComponentModel.IActivityEventListener&lt;'T (requires 'T :&gt; EventArgs)&gt; * 'T -&gt; unit (requires 'T :&gt; EventArgs)" Usage="activity.Invoke (eventListener, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.EventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;T&gt;" />
        <Parameter Name="e" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="8fa97-231">지정된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-231">The specified type.</span></span></typeparam>
        <param name="eventListener"><span data-ttu-id="8fa97-232">호출할 <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-232">The <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> to be invoked.</span></span></param>
        <param name="e"><span data-ttu-id="8fa97-233">이 이벤트와 연결할 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-233">The <see cref="T:System.EventArgs" /> to associate with this event</span></span></param>
        <summary><span data-ttu-id="8fa97-234"><see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />를 구독하고 해당 대리자를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-234">Subscribes an <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> and invokes that delegate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamicActivity">
      <MemberSignature Language="C#" Value="public bool IsDynamicActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamicActivity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDynamicActivity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDynamicActivity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamicActivity : bool" Usage="System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-235">활동이 워크플로 인스턴스의 기본 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 내에서 실행 중인지 여부에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-235">Gets information about whether the activity is executing within the default <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the workflow instance.</span></span></summary>
        <value><span data-ttu-id="8fa97-236">활동이 워크플로 인스턴스의 기본 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 내에서 실행 중이면 <see langword="false" />를 반환하고, 그렇지 않으면 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-236">Returns <see langword="false" /> if the activity is executing within the default <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the workflow instance, otherwise returns <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fa97-237"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 <see cref="T:System.IO.Stream" />의 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-237">Loads an instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Activity Load(class System.IO.Stream stream, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Activity ^ Load(System::IO::Stream ^ stream, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="System.Workflow.ComponentModel.Activity.Load (stream, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8fa97-238">로드할 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-238">The <see cref="T:System.IO.Stream" /> from which to load.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="8fa97-239">deserialize된 <see cref="T:System.Workflow.ComponentModel.Activity" />의 컨텍스트를 소유하는 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-239">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that owns the context for the deserialized <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="8fa97-240"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 <see cref="T:System.IO.Stream" />의 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-240">Loads an instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="8fa97-241"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 로드한 <see cref="T:System.IO.Stream" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-241">An instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-242"><paramref name="stream" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-242"><paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity, System.Runtime.Serialization.IFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Activity Load(class System.IO.Stream stream, class System.Workflow.ComponentModel.Activity outerActivity, class System.Runtime.Serialization.IFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Activity ^ Load(System::IO::Stream ^ stream, System::Workflow::ComponentModel::Activity ^ outerActivity, System::Runtime::Serialization::IFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream * System.Workflow.ComponentModel.Activity * System.Runtime.Serialization.IFormatter -&gt; System.Workflow.ComponentModel.Activity" Usage="System.Workflow.ComponentModel.Activity.Load (stream, outerActivity, formatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="formatter" Type="System.Runtime.Serialization.IFormatter" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8fa97-243">로드 작업의 대상 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-243">The target <see cref="T:System.IO.Stream" /> of the load operation.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="8fa97-244">deserialize된 <see cref="T:System.Workflow.ComponentModel.Activity" />의 컨텍스트를 소유하는 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-244">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that owns the context for the deserialized <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="formatter"><span data-ttu-id="8fa97-245"><see cref="T:System.Runtime.Serialization.IFormatter" />에서 읽는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-245">The <see cref="T:System.Runtime.Serialization.IFormatter" /> used to read from the <see cref="T:System.IO.Stream" />.</span></span></param>
        <summary><span data-ttu-id="8fa97-246">deserialization에 대한 사용자 지정 <see cref="T:System.Workflow.ComponentModel.Activity" />를 사용하여 <see cref="T:System.IO.Stream" />에서 <see cref="T:System.Runtime.Serialization.IFormatter" />의 인스턴스를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-246">Loads an instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" /> using the custom <see cref="T:System.Runtime.Serialization.IFormatter" /> for deserialization.</span></span></summary>
        <returns><span data-ttu-id="8fa97-247"><see cref="T:System.Workflow.ComponentModel.Activity" />에서 로드한 <see cref="T:System.IO.Stream" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-247">An instance of an <see cref="T:System.Workflow.ComponentModel.Activity" /> from a <see cref="T:System.IO.Stream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-248"><paramref name="stream" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-248"><paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>

<span data-ttu-id="8fa97-249">또는</span><span class="sxs-lookup"><span data-stu-id="8fa97-249">-or-</span></span>

<span data-ttu-id="8fa97-250"><paramref name="formatter" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-250"><paramref name="formatter" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.ComponentModel.Activity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-251">이 인스턴스의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-251">Gets or sets the name of this instance.</span></span> <span data-ttu-id="8fa97-252">이 이름은 워크플로 프로젝트에 사용되는 프로그래밍 언어의 변수 명명 규칙을 따라야 합니다</span><span class="sxs-lookup"><span data-stu-id="8fa97-252">This name must conform to the variable naming convention of the programming language that is being used in the Workflow project.</span></span></summary>
        <value><span data-ttu-id="8fa97-253">이 인스턴스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-253">The name of this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-254">이 속성의 기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-254">Default value for this is the empty string.</span></span>  
  
 <span data-ttu-id="8fa97-255">이 속성은 메타 속성이므로 런타임에 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-255">This property is a meta property, which means it cannot be changed at runtime.</span></span> <span data-ttu-id="8fa97-256">메타 속성은 런타임에 속성 인스턴스가 만들어진 후 변경되지 않으므로 디자인 타임에 속성을 리터럴 값으로 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-256">Meta properties do not change after a property instance is created at runtime, so the property must be set to a literal value at design time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fa97-257">다음 코드에서는 활동을 만들어 복합 활동에 자식으로 추가하고 <xref:System.Workflow.ComponentModel.Activity.Name%2A> 값을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-257">The following code shows how to create activities and add them as children to a composite activity and set the value for <xref:System.Workflow.ComponentModel.Activity.Name%2A>.</span></span>  
  
 <span data-ttu-id="8fa97-258">이 코드 예제는 ThrowWorkFlow.cs 파일에 있는 Throw SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-258">This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file.</span></span> <span data-ttu-id="8fa97-259">자세한 내용은 [Throw 샘플](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-259">For more information, see [Throw Sample](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExecutionContextLoad">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivityExecutionContextLoad (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivityExecutionContextLoad(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivityExecutionContextLoad (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivityExecutionContextLoad(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityExecutionContextLoad : IServiceProvider -&gt; unit&#xA;override this.OnActivityExecutionContextLoad : IServiceProvider -&gt; unit" Usage="activity.OnActivityExecutionContextLoad provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8fa97-260">이 서비스를 제공하는 <see cref="T:System.IServiceProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-260">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="8fa97-261"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />가 로드될 때마다 워크플로 런타임에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-261">Called by the workflow runtime whenever an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is loaded.</span></span> <span data-ttu-id="8fa97-262">예를 들어 이 메서드는 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />를 만드는 동안 호출될 뿐 아니라, 워크플로 인스턴스가 영구 저장소에서 로드될 때 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />가 다시 구체화되면 항상 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-262">For example, this method is called during the creation of an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> as well as every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is reincarnated when a workflow instance is loaded from persistent storage.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExecutionContextUnload">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivityExecutionContextUnload (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivityExecutionContextUnload(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivityExecutionContextUnload (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivityExecutionContextUnload(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityExecutionContextUnload : IServiceProvider -&gt; unit&#xA;override this.OnActivityExecutionContextUnload : IServiceProvider -&gt; unit" Usage="activity.OnActivityExecutionContextUnload provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8fa97-263">이 서비스를 제공하는 <see cref="T:System.IServiceProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-263">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="8fa97-264"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />가 언로드될 때마다 워크플로 런타임에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-264">Called by the workflow runtime whenever an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is unloaded.</span></span> <span data-ttu-id="8fa97-265">예를 들어, 이 메서드는 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />를 완료하는 동안 및 워크플로 인스턴스가 유지되는 경우 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />를 언로드할 때마다 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-265">For example, this method is called during completion of an <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> as well as every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> is unloaded when a workflow instance is persisted.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : IServiceProvider -&gt; unit&#xA;override this.OnClosed : IServiceProvider -&gt; unit" Usage="activity.OnClosed provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8fa97-266">이 서비스를 제공하는 <see cref="T:System.IServiceProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-266">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="8fa97-267">활동이 Closed 상태로 전환되는 과정의 일부로 워크플로 런타임에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-267">Called by the workflow runtime as part of the activity's transition to the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-268">이 메서드는 실행 중에 사용된 리소스를 정리할 수 있는 기회를 활동에 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-268">This method provides the activity with an opportunity to clean up resources utilized during its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.CompositeActivity Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.CompositeActivity Parent" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As CompositeActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::CompositeActivity ^ Parent { System::Workflow::ComponentModel::CompositeActivity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Workflow.ComponentModel.CompositeActivity" Usage="System.Workflow.ComponentModel.Activity.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.CompositeActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-269">이 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />이 들어 있는 <see cref="T:System.Workflow.ComponentModel.Activity" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-269">Gets the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> that contains this <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <value><span data-ttu-id="8fa97-270">이 <see cref="T:System.Workflow.ComponentModel.Activity" />의 부모인 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-270">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that is a parent to this <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-271">Null 참조를 반환 합니다 (`Nothing` Visual Basic에서) 하는 경우 <xref:System.Workflow.ComponentModel.Activity> 가 워크플로 또는 루트 <xref:System.Workflow.ComponentModel.Activity>입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-271">Returns a null reference(`Nothing` in Visual Basic) if <xref:System.Workflow.ComponentModel.Activity> is a workflow or a root <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifiedName">
      <MemberSignature Language="C#" Value="public string QualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QualifiedName : string" Usage="System.Workflow.ComponentModel.Activity.QualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-272">활동의 정규화된 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-272">Gets the qualified name of the activity.</span></span> <span data-ttu-id="8fa97-273">정규화된 활동 이름은 워크플로 인스턴스에서 항상 고유합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-273">Qualified activity names are always unique in a workflow instance.</span></span></summary>
        <value><span data-ttu-id="8fa97-274">인스턴스의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-274">The qualified name of the instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-275">정규화된 이름은 이 인스턴스를 포함하는 사용자 지정 활동의 이름이 앞에 추가된 이 인스턴스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-275">The qualified name is the name of this instance with the name of the custom activity that contains this instance appended to the front.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="protected internal void RaiseEvent (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaiseEvent(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaiseEvent (dependencyEvent As DependencyProperty, sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaiseEvent(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent, System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseEvent : System.Workflow.ComponentModel.DependencyProperty * obj * EventArgs -&gt; unit" Usage="activity.RaiseEvent (dependencyEvent, sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="dependencyEvent"><span data-ttu-id="8fa97-276">이 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />와 연결된 <see cref="F:System.Reflection.MemberTypes.Event" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-276">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated with this <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <param name="sender"><span data-ttu-id="8fa97-277"><see cref="T:System.Object" />의 <see cref="F:System.Reflection.MemberTypes.Event" /> 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-277">The <see cref="T:System.Object" /> source of the <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <param name="e"><span data-ttu-id="8fa97-278"><see cref="T:System.EventArgs" />와 연결된 <see cref="F:System.Reflection.MemberTypes.Event" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-278">The <see cref="T:System.EventArgs" /> associated with the <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <summary><span data-ttu-id="8fa97-279">지정된 종속성 속성과 연결된 <see cref="F:System.Reflection.MemberTypes.Event" />를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-279">Raises an <see cref="F:System.Reflection.MemberTypes.Event" /> associated with the specified dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa97-280">다음 코드에서는 이 메서드를 호출하여 <xref:System.Workflow.ComponentModel.DependencyProperty>로 정의된 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-280">The following code invokes this method to raise an event that is defined as a <xref:System.Workflow.ComponentModel.DependencyProperty>.</span></span>  
  
 <span data-ttu-id="8fa97-281">이 코드 예제에서는 전자 메일 작업 보내기 샘플의 일부 이며 SendEmailActivity.cs 파일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-281">This code example is part of the Send Email Activity sample and is from the SendEmailActivity.cs file.</span></span> <span data-ttu-id="8fa97-282">자세한 내용은 참조 하세요. [전자 메일 보내기 활동 샘플](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</span><span class="sxs-lookup"><span data-stu-id="8fa97-282">For more information, see [Send Email Activity Sample](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669)</span></span>  
  
 [!code-csharp[WF_Samples#233](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#233)]
 [!code-vb[WF_Samples#233](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#233)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseGenericEvent&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal void RaiseGenericEvent&lt;T&gt; (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, T e) where T : EventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaiseGenericEvent&lt;(class System.EventArgs) T&gt;(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, !!T e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaiseGenericEvent(Of T As EventArgs) (dependencyEvent As DependencyProperty, sender As Object, e As T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : EventArgs void RaiseGenericEvent(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent, System::Object ^ sender, T e);" />
      <MemberSignature Language="F#" Value="member this.RaiseGenericEvent : System.Workflow.ComponentModel.DependencyProperty * obj * 'T -&gt; unit (requires 'T :&gt; EventArgs)" Usage="activity.RaiseGenericEvent (dependencyEvent, sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.EventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="8fa97-283">지정된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-283">The specified type.</span></span></typeparam>
        <param name="dependencyEvent"><span data-ttu-id="8fa97-284">이 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />와 연결된 <see cref="F:System.Reflection.MemberTypes.Event" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-284">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> associated with this <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <param name="sender"><span data-ttu-id="8fa97-285">이벤트의 <see cref="T:System.Object" /> 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-285">The <see cref="T:System.Object" /> source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="8fa97-286"><see cref="T:System.EventArgs" />와 연결된 <see cref="F:System.Reflection.MemberTypes.Event" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-286">The <see cref="T:System.EventArgs" /> associated with the <see cref="F:System.Reflection.MemberTypes.Event" />.</span></span></param>
        <summary><span data-ttu-id="8fa97-287">참조된 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />와 연결된 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-287">Raises the event associated with the referenced <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForStatusChange">
      <MemberSignature Language="C#" Value="public void RegisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; activityStatusChangeListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForStatusChange(class System.Workflow.ComponentModel.DependencyProperty dependencyProp, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; activityStatusChangeListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForStatusChange (dependencyProp As DependencyProperty, activityStatusChangeListener As IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForStatusChange(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProp, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ activityStatusChangeListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForStatusChange : System.Workflow.ComponentModel.DependencyProperty * System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; -&gt; unit" Usage="activity.RegisterForStatusChange (dependencyProp, activityStatusChangeListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProp" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="activityStatusChangeListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencyProp"><span data-ttu-id="8fa97-288">등록할 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-288">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to register.</span></span></param>
        <param name="activityStatusChangeListener"><span data-ttu-id="8fa97-289">이 등록에 대한 이벤트 수신기 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-289">The object that implements the Event Listener interface for this registration.</span></span></param>
        <summary><span data-ttu-id="8fa97-290">상태 변경 이벤트에 대해 지정된 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-290">Registers the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the status change event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8fa97-291"><paramref name="dependencyProp" />가 다음 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-291"><paramref name="dependencyProp" /> is not one of the following:</span></span> 
-   <see cref="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fa97-292"><see cref="T:System.Workflow.ComponentModel.Activity" />의 복사본을 <see cref="T:System.IO.Stream" />에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-292">Saves a copy of the <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.IO.Stream" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="activity.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8fa97-293"><see cref="T:System.IO.Stream" />을 저장할 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-293">The <see cref="T:System.IO.Stream" /> to which to save the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="8fa97-294">지속성을 위해 <see cref="T:System.Workflow.ComponentModel.Activity" />를 <see cref="T:System.IO.Stream" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-294">Writes the <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.IO.Stream" /> for persistence.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-295"><paramref name="stream" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-295"><paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, System.Runtime.Serialization.IFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, class System.Runtime.Serialization.IFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::Runtime::Serialization::IFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream * System.Runtime.Serialization.IFormatter -&gt; unit" Usage="activity.Save (stream, formatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="formatter" Type="System.Runtime.Serialization.IFormatter" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8fa97-296">저장 작업의 대상 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-296">The target <see cref="T:System.IO.Stream" /> of the save operation.</span></span></param>
        <param name="formatter"><span data-ttu-id="8fa97-297">serialization에 대한 이진 또는 사용자 지정 <see cref="T:System.Runtime.Serialization.IFormatter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-297">The binary or custom <see cref="T:System.Runtime.Serialization.IFormatter" /> for the serialization.</span></span></param>
        <summary><span data-ttu-id="8fa97-298">serialization에 제공된 사용자 지정 <see cref="T:System.Workflow.ComponentModel.Activity" />를 사용하여 지속성을 위해 <see cref="T:System.IO.Stream" />를 <see cref="T:System.Runtime.Serialization.IFormatter" />에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-298">Writes the <see cref="T:System.Workflow.ComponentModel.Activity" /> to a <see cref="T:System.IO.Stream" /> for persistence using the custom <see cref="T:System.Runtime.Serialization.IFormatter" /> provided for serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-299">SOAP 포맷터는 Windows Workflow Foundation에서 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-299">Soap formatters are not supported by Windows Workflow Foundation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-300"><paramref name="stream" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-300"><paramref name="stream" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>

<span data-ttu-id="8fa97-301">또는</span><span class="sxs-lookup"><span data-stu-id="8fa97-301">-or-</span></span> 
<span data-ttu-id="8fa97-302"><paramref name="formatter" />가 null 참조(<see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-302"><paramref name="formatter" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8fa97-303">이 인스턴스가 디자인 모드인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-303">This instance is in design mode.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StatusChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; StatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; StatusChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatusChanged As EventHandler(Of ActivityExecutionStatusChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ StatusChanged;" />
      <MemberSignature Language="F#" Value="member this.StatusChanged : EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " Usage="member this.StatusChanged : System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-304">실행 중인 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />의 <see cref="T:System.Workflow.ComponentModel.Activity" />가 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-304">Occurs when the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> of a running <see cref="T:System.Workflow.ComponentModel.Activity" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-305">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-305">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8fa97-306">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-306">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8fa97-307">또한 <xref:System.Workflow.ComponentModel.Activity.StatusChanged> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-307">The <xref:System.Workflow.ComponentModel.Activity.StatusChanged> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8fa97-308">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-308">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8fa97-309">활동(활동 A)이 다른 활동(활동 B)의 `StatusChanged` 이벤트를 구독하면 연결된 `Activity`의 <xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> 속성은 구독되는 활동(활동 B)을 참조하고 연결된 `Sender` 개체는 구독하는 활동(활동 A)의 실행 컨텍스트를 참조합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-309">When an activity (Activity A) subscribes to a different activity's (Activity B) `StatusChanged` event, the `Activity` property of the associated <xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> refers to the activity subscribed to (Activity B), and the associated `Sender` object refers to the execution context of the subscribing activity (Activity A).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fa97-310">파생 클래스에서 <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" />을 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-310">When overriding <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> in a derived class, make sure to call the base class <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="StatusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty StatusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty StatusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StatusChangedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ StatusChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StatusChangedEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Activity.StatusChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-311"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-311">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-312">해당하는 종속성 속성을 확인하여 이 형식의 각 public 속성 및 이벤트에 간접적으로 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-312">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="8fa97-313">이 종속성 속성은 이름이 `XProperty` 또는 `XEvent`인 공용 정적 필드입니다. 여기서 X는 해당 속성을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-313">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="activity.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fa97-314">이 인스턴스를 나타내는 문자열을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-314">Provides a string that represents this instance.</span></span></summary>
        <returns><span data-ttu-id="8fa97-315">이 인스턴스가</span><span class="sxs-lookup"><span data-stu-id="8fa97-315">This instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-316">반환되는 문자열은 이 인스턴스 형식의 <xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A> 및 <xref:System.Type.FullName%2A> 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-316">The string returned is a combination of the <xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A> and the <xref:System.Type.FullName%2A> of the type of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrackData">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fa97-317">런타임 추적 인프라에 보류 중인 추적 정보를 알립니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-317">Informs the run-time tracking infrastructure of pending tracking information.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrackData">
      <MemberSignature Language="C#" Value="protected void TrackData (object userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackData(object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackData (userData As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackData(System::Object ^ userData);" />
      <MemberSignature Language="F#" Value="member this.TrackData : obj -&gt; unit" Usage="activity.TrackData userData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userData"><span data-ttu-id="8fa97-318">추적 정보를 포함하는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-318"><see cref="T:System.Object" /> that contains the tracking information.</span></span></param>
        <summary><span data-ttu-id="8fa97-319">런타임 추적 인프라에 보류 중인 추적 정보를 알립니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-319">Informs the run-time tracking infrastructure of pending tracking information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fa97-320">다음 예제에서는 `TrackData` 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-320">The following example shows a call to the `TrackData` method.</span></span> <span data-ttu-id="8fa97-321">이 예제는 Termination Tracking Service SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-321">This example is from the Termination Tracking Service SDK sample.</span></span> <span data-ttu-id="8fa97-322">자세한 내용은 [종료 추적 서비스 샘플](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-322">For more information, see [Termination Tracking Service Sample](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).</span></span>  
  
 [!code-csharp[WF_Samples#118](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#118)]
 [!code-vb[WF_Samples#118](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#118)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-323"><paramref name="userData" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-323"><paramref name="userData" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrackData">
      <MemberSignature Language="C#" Value="protected void TrackData (string userDataKey, object userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackData(string userDataKey, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackData (userDataKey As String, userData As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackData(System::String ^ userDataKey, System::Object ^ userData);" />
      <MemberSignature Language="F#" Value="member this.TrackData : string * obj -&gt; unit" Usage="activity.TrackData (userDataKey, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userDataKey" Type="System.String" />
        <Parameter Name="userData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userDataKey"><span data-ttu-id="8fa97-324">변경된 사용자 데이터에 대한 키입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-324">The key to the user data that has changed.</span></span></param>
        <param name="userData"><span data-ttu-id="8fa97-325">추적 정보를 포함하는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-325"><see cref="T:System.Object" /> that contains the tracking information.</span></span></param>
        <summary><span data-ttu-id="8fa97-326">런타임 추적 인프라에 보류 중인 추적 정보를 알립니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-326">Informs the run-time tracking infrastructure of pending tracking information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8fa97-327"><paramref name="userData" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-327"><paramref name="userData" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Uninitialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Uninitialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Uninitialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Uninitialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Uninitialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member Uninitialize : IServiceProvider -&gt; unit&#xA;override this.Uninitialize : IServiceProvider -&gt; unit" Usage="activity.Uninitialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8fa97-328">이 서비스를 제공하는 <see cref="T:System.IServiceProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-328">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="8fa97-329">파생 클래스에서 재정의되는 경우 서비스 공급자에 의한 활동의 초기화 해제를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-329">When overridden in a derived class, provides un-initialization by a service provider for the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fa97-330">이 메서드는 초기화 중에 할당된 리소스를 정리할 수 있는 기회를 활동에 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-330">This method provides the activity with an opportunity to clean up resources allocated during initialization.</span></span>  
  
 <span data-ttu-id="8fa97-331"><xref:System.Workflow.ComponentModel.Activity.Uninitialize%2A>는 활동 인스턴스가 더 이상 실행되지 않는 경우에 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-331"><xref:System.Workflow.ComponentModel.Activity.Uninitialize%2A> is called when an activity instance is guaranteed not to perform any more execution.</span></span> <span data-ttu-id="8fa97-332"><xref:System.Workflow.ComponentModel.ICompensatableActivity>를 구현하지 않는 활동의 경우 활동이 닫힌 직후 또는 활동이 실행되지 않는 경우 워크플로가 완료될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-332">For activities that do not implement <xref:System.Workflow.ComponentModel.ICompensatableActivity>, this occurs immediately after the activity closes, or, if the activity never executed, at workflow completion.</span></span> <span data-ttu-id="8fa97-333"><xref:System.Workflow.ComponentModel.ICompensatableActivity> 활동의 경우 보정 후나 워크플로 완료 시 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-333">For <xref:System.Workflow.ComponentModel.ICompensatableActivity> activities, this occurs either after compensation or at workflow completion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForStatusChange">
      <MemberSignature Language="C#" Value="public void UnregisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; activityStatusChangeListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForStatusChange(class System.Workflow.ComponentModel.DependencyProperty dependencyProp, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; activityStatusChangeListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForStatusChange (dependencyProp As DependencyProperty, activityStatusChangeListener As IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForStatusChange(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProp, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt; ^ activityStatusChangeListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForStatusChange : System.Workflow.ComponentModel.DependencyProperty * System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt; -&gt; unit" Usage="activity.UnregisterForStatusChange (dependencyProp, activityStatusChangeListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProp" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="activityStatusChangeListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencyProp"><span data-ttu-id="8fa97-334">등록 취소할 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-334">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> to un-register.</span></span></param>
        <param name="activityStatusChangeListener"><span data-ttu-id="8fa97-335">이 등록에 대한 이벤트 수신기 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-335">The object that implements the Event Listener interface for this registration.</span></span></param>
        <summary><span data-ttu-id="8fa97-336">상태 변경 이벤트에 대해 지정된 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />를 등록 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-336">Un-registers the specified <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the status change event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8fa97-337"><paramref name="dependencyProp" />가 다음 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8fa97-337"><paramref name="dependencyProp" /> is not one of the following:</span></span> 
-   <see cref="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />  
  
-   <see cref="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" /></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowInstanceId">
      <MemberSignature Language="C#" Value="protected Guid WorkflowInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid WorkflowInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WorkflowInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Guid WorkflowInstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowInstanceId : Guid" Usage="System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fa97-338">인스턴스와 연결된 <see cref="T:System.Guid" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-338">Gets the <see cref="T:System.Guid" /> associated with the instance.</span></span></summary>
        <value><span data-ttu-id="8fa97-339">인스턴스와 연결된 <see cref="T:System.Guid" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8fa97-339">The <see cref="T:System.Guid" /> associated with the instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>