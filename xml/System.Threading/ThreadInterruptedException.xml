<Type Name="ThreadInterruptedException" FullName="System.Threading.ThreadInterruptedException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0df43b35c8a04c9d8d899f5d6f895158b1533754" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58712728" /></Metadata><TypeSignature Language="C#" Value="public class ThreadInterruptedException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ThreadInterruptedException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadInterruptedException" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadInterruptedException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadInterruptedException : SystemException" />
  <TypeSignature Language="F#" Value="type ThreadInterruptedException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0a84a-101"><see cref="T:System.Threading.Thread" />가 대기 상태에서 중단되었을 때 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-101">The exception that is thrown when a <see cref="T:System.Threading.Thread" /> is interrupted while it is in a waiting state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a84a-102">하나 이상의 있는 스레드를 만든 후 <xref:System.Threading.ThreadState> 삭제 될 때까지 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-102">After a thread is created, it is in one or more <xref:System.Threading.ThreadState> states until it is destroyed.</span></span> <span data-ttu-id="0a84a-103">호출 <xref:System.Threading.Thread.Interrupt%2A> 의 스레드 표시 되는 경우는 <xref:System.Threading.ThreadState.WaitSleepJoin> 상태 발생을 <xref:System.Threading.ThreadInterruptedException> 대상 스레드에서 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-103">Calling <xref:System.Threading.Thread.Interrupt%2A> when a thread is in the <xref:System.Threading.ThreadState.WaitSleepJoin> state will cause a <xref:System.Threading.ThreadInterruptedException> to be thrown in the target thread.</span></span> <span data-ttu-id="0a84a-104">스레드에 없는 경우를 <xref:System.Threading.ThreadState.WaitSleepJoin> 상태 스레드의 해당 상태가 될 때까지 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-104">If the thread is not in the <xref:System.Threading.ThreadState.WaitSleepJoin> state, the exception is not thrown until the thread enters that state.</span></span> <span data-ttu-id="0a84a-105">스레드가 차단되지 않으면 중단 없이 완료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-105">If the thread never blocks, it could complete without ever being interrupted.</span></span>  
  
 <span data-ttu-id="0a84a-106"><xref:System.Threading.ThreadInterruptedException> 값 0x80131519 HRESULT COR_E_THREADINTERRUPTED를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-106"><xref:System.Threading.ThreadInterruptedException> uses the HRESULT COR_E_THREADINTERRUPTED, which has the value 0x80131519.</span></span>  
  
 <span data-ttu-id="0a84a-107">인스턴스의 초기 속성 값의 목록을 <xref:System.Threading.ThreadInterruptedException>, 참조는 <xref:System.Threading.ThreadInterruptedException.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-107">For a list of initial property values for an instance of <xref:System.Threading.ThreadInterruptedException>, see the <xref:System.Threading.ThreadInterruptedException.%23ctor%2A> constructors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a84a-108">다음 코드 예제에서는 중단 되 고 이어서 차단 하는 경우 실행 중인 스레드의 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-108">The following code example shows the behavior of a running thread when it is interrupted and subsequently gets blocked.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Interrupt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Interrupt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Interrupt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.ThreadState" />
    <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md"><span data-ttu-id="0a84a-109">스레드 일시 중지 및 다시 시작</span><span class="sxs-lookup"><span data-stu-id="0a84a-109">Pausing and Resuming Threads</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a84a-110"><see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-110">Initializes a new instance of the <see cref="T:System.Threading.ThreadInterruptedException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadInterruptedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadInterruptedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadInterruptedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a84a-111">기본 속성을 사용하여 <see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-111">Initializes a new instance of the <see cref="T:System.Threading.ThreadInterruptedException" /> class with default properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a84a-112">다음 표에서는 <xref:System.Threading.ThreadInterruptedException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-112">The following table shows the initial property values for an instance of <xref:System.Threading.ThreadInterruptedException>.</span></span>  
  
|<span data-ttu-id="0a84a-113">속성</span><span class="sxs-lookup"><span data-stu-id="0a84a-113">Property</span></span>|<span data-ttu-id="0a84a-114">값</span><span class="sxs-lookup"><span data-stu-id="0a84a-114">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0a84a-115">`null`.</span><span class="sxs-lookup"><span data-stu-id="0a84a-115">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0a84a-116">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-116">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md"><span data-ttu-id="0a84a-117">스레드 일시 중지 및 중단</span><span class="sxs-lookup"><span data-stu-id="0a84a-117">Pausing and interrupting threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadInterruptedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadInterruptedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadInterruptedException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadInterruptedException : string -&gt; System.Threading.ThreadInterruptedException" Usage="new System.Threading.ThreadInterruptedException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0a84a-118">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-118">The error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="0a84a-119">지정된 오류 메시지를 사용하여 <see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-119">Initializes a new instance of the <see cref="T:System.Threading.ThreadInterruptedException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a84a-120">다음 표에서는 <xref:System.Threading.ThreadInterruptedException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-120">The following table shows the initial property values for an instance of <xref:System.Threading.ThreadInterruptedException>.</span></span>  
  
|<span data-ttu-id="0a84a-121">속성</span><span class="sxs-lookup"><span data-stu-id="0a84a-121">Property</span></span>|<span data-ttu-id="0a84a-122">값</span><span class="sxs-lookup"><span data-stu-id="0a84a-122">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0a84a-123">`null`.</span><span class="sxs-lookup"><span data-stu-id="0a84a-123">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0a84a-124">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-124">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md"><span data-ttu-id="0a84a-125">스레드 일시 중지 및 다시 시작</span><span class="sxs-lookup"><span data-stu-id="0a84a-125">Pausing and Resuming Threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ThreadInterruptedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ThreadInterruptedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadInterruptedException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.ThreadInterruptedException" Usage="new System.Threading.ThreadInterruptedException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0a84a-126">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-126">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="0a84a-127">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-127">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="0a84a-128">serialize된 데이터를 사용하여 <see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-128">Initializes a new instance of the <see cref="T:System.Threading.ThreadInterruptedException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a84a-129">deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-129">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="0a84a-130">자세한 내용은 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-130">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md"><span data-ttu-id="0a84a-131">스레드 일시 중지 및 다시 시작</span><span class="sxs-lookup"><span data-stu-id="0a84a-131">Pausing and Resuming Threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadInterruptedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadInterruptedException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadInterruptedException : string * Exception -&gt; System.Threading.ThreadInterruptedException" Usage="new System.Threading.ThreadInterruptedException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0a84a-132">예외에 대한 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-132">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="0a84a-133">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-133">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="0a84a-134"><paramref name="innerException" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-134">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="0a84a-135">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Threading.ThreadInterruptedException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-135">Initializes a new instance of the <see cref="T:System.Threading.ThreadInterruptedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a84a-136">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-136">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="0a84a-137"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-137">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="0a84a-138">다음 표에서는 <xref:System.Threading.ThreadInterruptedException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-138">The following table shows the initial property values for an instance of <xref:System.Threading.ThreadInterruptedException>.</span></span>  
  
|<span data-ttu-id="0a84a-139">속성</span><span class="sxs-lookup"><span data-stu-id="0a84a-139">Property</span></span>|<span data-ttu-id="0a84a-140">값</span><span class="sxs-lookup"><span data-stu-id="0a84a-140">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0a84a-141">내부 예외 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-141">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0a84a-142">오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0a84a-142">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md"><span data-ttu-id="0a84a-143">스레드 일시 중지 및 다시 시작</span><span class="sxs-lookup"><span data-stu-id="0a84a-143">Pausing and Resuming Threads</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>