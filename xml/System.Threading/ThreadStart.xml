<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6f88d5dc637ec875f9d95c1fa682f7edcc0f3d1" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48665881" /></Metadata><TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="F#" Value="type ThreadStart = delegate of unit -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary><span data-ttu-id="6e6c3-101"><see cref="T:System.Threading.Thread" />에서 실행되는 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-101">Represents the method that executes on a <see cref="T:System.Threading.Thread" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e6c3-102">스레드에서 실행 되는 메서드는 나타내는 관리 되는 스레드를 만들면를 <xref:System.Threading.ThreadStart> 대리자 또는 <xref:System.Threading.ParameterizedThreadStart> 에 전달 되는 대리자는 <xref:System.Threading.Thread.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-102">When a managed thread is created, the method that executes on the thread is represented by a <xref:System.Threading.ThreadStart> delegate or a <xref:System.Threading.ParameterizedThreadStart> delegate that is passed to the <xref:System.Threading.Thread.%23ctor%2A> constructor.</span></span> <span data-ttu-id="6e6c3-103">스레드가 실행 될 때까지 시작 하지는 <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-103">The thread does not begin executing until the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method is called.</span></span> <span data-ttu-id="6e6c3-104">나타내는 메서드의 첫 번째 줄에서 실행을 시작 합니다 <xref:System.Threading.ThreadStart> 또는 <xref:System.Threading.ParameterizedThreadStart> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-104">Execution begins at the first line of the method represented by the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e6c3-105">Visual Basic 및 C# 사용자를 생략할 수는 <xref:System.Threading.ThreadStart> 또는 <xref:System.Threading.ParameterizedThreadStart> 스레드를 만드는 경우 대리자 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-105">Visual Basic and C# users can omit the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate constructor when creating a thread.</span></span> <span data-ttu-id="6e6c3-106">Visual Basic에서 사용 하 여는 `AddressOf` 메서드를 전달 하는 경우 연산자는 <xref:System.Threading.Thread.%23ctor%2A> 생성자; 예를 들어 `Dim t As New Thread(AddressOf ThreadProc)`합니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-106">In Visual Basic, use the `AddressOf` operator when passing your method to the <xref:System.Threading.Thread.%23ctor%2A> constructor; for example, `Dim t As New Thread(AddressOf ThreadProc)`.</span></span> <span data-ttu-id="6e6c3-107">C#에서 스레드 프로시저의 이름을 지정 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-107">In C#, simply specify the name of the thread procedure.</span></span> <span data-ttu-id="6e6c3-108">컴파일러는 올바른 대리자 생성자를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-108">The compiler selects the correct delegate constructor.</span></span>  
>  
>  <span data-ttu-id="6e6c3-109">C + +의.NET Framework 2.0부터, 만들기를 <xref:System.Threading.ThreadStart> 정적 메서드 매개 변수가 하나만 필요한 대리자: 콜백 메서드, 클래스 이름으로 정규화 된 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-109">For C++, starting with .NET Framework 2.0, creating a <xref:System.Threading.ThreadStart> delegate for a static method requires only one parameter: the address of the callback method, qualified by the class name.</span></span> <span data-ttu-id="6e6c3-110">이전 버전에서는 두 개의 매개 변수가 필요 했습니다 정적 메서드에 대 한 대리자를 만드는 경우: 0 (null) 및 메서드 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-110">In earlier versions two parameters were required when creating a delegate for a static method: zero (null) and the method address.</span></span> <span data-ttu-id="6e6c3-111">인스턴스 메서드에 대 한 모든 버전에 두 매개 변수가 필요 합니다: 인스턴스 변수 및 메서드 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-111">For an instance method, all versions require two parameters: the instance variable and the method address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e6c3-112">다음 코드 예제에는 만들기 및 사용에 대 한 구문을 보여 줍니다는 <xref:System.Threading.ThreadStart> 인스턴스 메서드를 사용 하 여 및 정적 메서드로 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-112">The following code example shows the syntax for creating and using a <xref:System.Threading.ThreadStart> delegate with an instance method and with a static method.</span></span>  
  
 <span data-ttu-id="6e6c3-113">만드는 방법을 보여 주는 다른 간단한 예제는 <xref:System.Threading.ThreadStart> 대리자를 참조 하세요는 <xref:System.Threading.Thread.Start?displayProperty=nameWithType> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-113">For another simple example that demonstrates how to create a <xref:System.Threading.ThreadStart> delegate, see the <xref:System.Threading.Thread.Start?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="6e6c3-114">스레드 만들기에 대 한 자세한 내용은 참조 하세요. [스레드 만들기 및 시작 시 데이터 전달](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6e6c3-114">For more information about thread creation, see [Creating Threads and Passing Data at Start Time](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).</span></span>  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
    <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md"><span data-ttu-id="6e6c3-115">스레드 만들기 및 시작할 때 데이터 전달</span><span class="sxs-lookup"><span data-stu-id="6e6c3-115">Creating threads and passing data at start time</span></span></related>
  </Docs>
</Type>