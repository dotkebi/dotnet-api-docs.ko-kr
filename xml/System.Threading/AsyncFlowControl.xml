<Type Name="AsyncFlowControl" FullName="System.Threading.AsyncFlowControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b75d9ab98e304fa43077060a9ab9f8febbaafa86" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58721769" /></Metadata><TypeSignature Language="C#" Value="public struct AsyncFlowControl : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AsyncFlowControl extends System.ValueType implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.AsyncFlowControl" />
  <TypeSignature Language="VB.NET" Value="Public Structure AsyncFlowControl&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public value class AsyncFlowControl : IDisposable" />
  <TypeSignature Language="F#" Value="type AsyncFlowControl = struct&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2c2c6-101">마이그레이션 복원 기능 또는 스레드 간 실행 컨텍스트 흐름에 대한 복원 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-101">Provides the functionality to restore the migration, or flow, of the execution context between threads.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-102">실행 컨텍스트 논리 스레드에 대 한 모든 실행 관련 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-102">An execution context contains all execution-related information for a logical thread.</span></span> <span data-ttu-id="2c2c6-103">다른 스레드에 실행 컨텍스트 흐름을 사용 하 여 방지할 수는 <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> 반환 하는 메서드는 <xref:System.Threading.AsyncFlowControl> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-103">The flow of the execution context to other threads can be prevented by using the <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> method, which returns an <xref:System.Threading.AsyncFlowControl> structure.</span></span> <span data-ttu-id="2c2c6-104">합니다 <xref:System.Threading.AsyncFlowControl.Undo%2A> 메서드의 반환된 된 <xref:System.Threading.AsyncFlowControl> 흐름 제거를 취소 하려면 구조를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-104">The <xref:System.Threading.AsyncFlowControl.Undo%2A> method of the returned <xref:System.Threading.AsyncFlowControl> structure can be used to undo the flow suppression.</span></span> <span data-ttu-id="2c2c6-105"><xref:System.Threading.AsyncFlowControl> 구조를 만든 동일한 스레드에서 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-105">The <xref:System.Threading.AsyncFlowControl> structure must be used on the same thread on which it was created.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="asyncFlowControl.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2c6-106"><see cref="T:System.Threading.AsyncFlowControl" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-106">Releases all resources used by the current instance of the <see cref="T:System.Threading.AsyncFlowControl" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-107">`Dispose` 사용을 마치면 <xref:System.Threading.AsyncFlowControl>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-107">Call `Dispose` when you are finished using the <xref:System.Threading.AsyncFlowControl>.</span></span> <span data-ttu-id="2c2c6-108">`Dispose` 메서드를 사용하면 <xref:System.Threading.AsyncFlowControl>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-108">The `Dispose` method leaves the <xref:System.Threading.AsyncFlowControl> in an unusable state.</span></span> <span data-ttu-id="2c2c6-109">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Threading.AsyncFlowControl> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Threading.AsyncFlowControl> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-109">After calling `Dispose`, you must release all references to the <xref:System.Threading.AsyncFlowControl> so the garbage collector can reclaim the memory that the <xref:System.Threading.AsyncFlowControl> was occupying.</span></span>  
  
 <span data-ttu-id="2c2c6-110">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-110">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c2c6-111">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Threading.AsyncFlowControl>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-111">Always call `Dispose` before you release your last reference to the <xref:System.Threading.AsyncFlowControl>.</span></span> <span data-ttu-id="2c2c6-112">이렇게 하지 않으면 가비지 컬렉션이 <xref:System.Threading.AsyncFlowControl> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-112">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.AsyncFlowControl> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2c2c6-113"><see cref="T:System.Threading.AsyncFlowControl" /> 구조체가 만들어진 스레드에서 사용되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="2c2c6-113">The <see cref="T:System.Threading.AsyncFlowControl" /> structure is not used on the thread where it was created.</span></span>  
  
<span data-ttu-id="2c2c6-114">또는</span><span class="sxs-lookup"><span data-stu-id="2c2c6-114">-or-</span></span> 
<span data-ttu-id="2c2c6-115"><see cref="T:System.Threading.AsyncFlowControl" /> 구조체가 <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> 또는 <see cref="M:System.Threading.AsyncFlowControl.Undo" /> 호출에 이미 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="2c2c6-115">The <see cref="T:System.Threading.AsyncFlowControl" /> structure has already been used to call <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> or <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="2c2c6-116">관리되지 않는 리소스 정리</span><span class="sxs-lookup"><span data-stu-id="2c2c6-116">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2c2c6-117">두 인스턴스가 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-117">Determines whether two instances are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="asyncFlowControl.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2c2c6-118">현재 구조체와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-118">An object to compare with the current structure.</span></span></param>
        <summary><span data-ttu-id="2c2c6-119">지정한 개체가 현재 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체와 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-119">Determines whether the specified object is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></summary>
        <returns><span data-ttu-id="2c2c6-120"><paramref name="obj" />가 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체이고 현재 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-120"><see langword="true" /> if <paramref name="obj" /> is an <see cref="T:System.Threading.AsyncFlowControl" /> structure and is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.AsyncFlowControl obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Threading.AsyncFlowControl obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Threading::AsyncFlowControl obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.AsyncFlowControl -&gt; bool" Usage="asyncFlowControl.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2c2c6-121">현재 구조체와 비교할 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-121">An <see cref="T:System.Threading.AsyncFlowControl" /> structure to compare with the current structure.</span></span></param>
        <summary><span data-ttu-id="2c2c6-122">지정한 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체가 현재 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체와 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-122">Determines whether the specified <see cref="T:System.Threading.AsyncFlowControl" /> structure is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></summary>
        <returns><span data-ttu-id="2c2c6-123"><paramref name="obj" />가 현재 <see cref="T:System.Threading.AsyncFlowControl" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-123"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="asyncFlowControl.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2c6-124">현재 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체의 해시 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-124">Gets a hash code for the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></summary>
        <returns><span data-ttu-id="2c2c6-125">현재 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-125">A hash code for the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.AsyncFlowControl a, valuetype System.Threading.AsyncFlowControl b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As AsyncFlowControl, b As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::AsyncFlowControl a, System::Threading::AsyncFlowControl b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.AsyncFlowControl * System.Threading.AsyncFlowControl -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Threading.AsyncFlowControl" />
        <Parameter Name="b" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="2c2c6-126"><see cref="T:System.Threading.AsyncFlowControl" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-126">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></param>
        <param name="b"><span data-ttu-id="2c2c6-127"><see cref="T:System.Threading.AsyncFlowControl" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-127">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></param>
        <summary><span data-ttu-id="2c2c6-128">두 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체가 동일한지 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-128">Compares two <see cref="T:System.Threading.AsyncFlowControl" /> structures to determine whether they are equal.</span></span></summary>
        <returns><span data-ttu-id="2c2c6-129">두 구조체가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-129"><see langword="true" /> if the two structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="2c2c6-130">이 연산자에 대 한 해당 메서드는 <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-130">The equivalent method for this operator is <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.AsyncFlowControl a, valuetype System.Threading.AsyncFlowControl b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As AsyncFlowControl, b As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::AsyncFlowControl a, System::Threading::AsyncFlowControl b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.AsyncFlowControl * System.Threading.AsyncFlowControl -&gt; bool" Usage="System.Threading.AsyncFlowControl.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Threading.AsyncFlowControl" />
        <Parameter Name="b" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="2c2c6-131"><see cref="T:System.Threading.AsyncFlowControl" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-131">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></param>
        <param name="b"><span data-ttu-id="2c2c6-132"><see cref="T:System.Threading.AsyncFlowControl" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-132">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span></span></param>
        <summary><span data-ttu-id="2c2c6-133">두 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체가 동일하지 않은지 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-133">Compares two <see cref="T:System.Threading.AsyncFlowControl" /> structures to determine whether they are not equal.</span></span></summary>
        <returns><span data-ttu-id="2c2c6-134">두 구조체가 개체가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-134"><see langword="true" /> if the structures are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="2c2c6-135">이 연산자에 대 한 해당 메서드는 <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-135">The equivalent method for this operator is <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2c6-136"><see cref="T:System.Threading.AsyncFlowControl" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-136">Releases all resources used by the <see cref="T:System.Threading.AsyncFlowControl" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="2c2c6-137">이 메서드를 호출 합니다 <xref:System.Threading.AsyncFlowControl.Undo> 관련 된 복원 방법 <xref:System.Threading.ExecutionContext> 를 이전 상태로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-137">This method calls the <xref:System.Threading.AsyncFlowControl.Undo> method to restore the associated <xref:System.Threading.ExecutionContext> to its previous state.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="asyncFlowControl.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c2c6-138">스레드 간 실행 컨텍스트의 흐름을 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-138">Restores the flow of the execution context between threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c2c6-139">합니다 <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Threading.AsyncFlowControl> 흐름을 복원 하는 데 사용 되는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-139">The <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> method returns an <xref:System.Threading.AsyncFlowControl> structure that is used to restore the flow.</span></span>  
  
 <span data-ttu-id="2c2c6-140">합니다 <xref:System.Threading.AsyncFlowControl.Undo%2A> 에서만 메서드를 호출 해야 합니다 <xref:System.Threading.AsyncFlowControl> 관련 하 여 반환 되는 구조체 <xref:System.Threading.ExecutionContext.SuppressFlow%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2c2c6-140">The <xref:System.Threading.AsyncFlowControl.Undo%2A> method must be called only on the <xref:System.Threading.AsyncFlowControl> structure returned by its associated <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2c2c6-141"><see cref="T:System.Threading.AsyncFlowControl" /> 구조체가 만들어진 스레드에서 사용되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="2c2c6-141">The <see cref="T:System.Threading.AsyncFlowControl" /> structure is not used on the thread where it was created.</span></span>  
  
<span data-ttu-id="2c2c6-142">또는</span><span class="sxs-lookup"><span data-stu-id="2c2c6-142">-or-</span></span> 
<span data-ttu-id="2c2c6-143"><see cref="T:System.Threading.AsyncFlowControl" /> 구조체가 <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> 또는 <see cref="M:System.Threading.AsyncFlowControl.Undo" /> 호출에 이미 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="2c2c6-143">The <see cref="T:System.Threading.AsyncFlowControl" /> structure has already been used to call <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> or <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>