<Type Name="CountdownEvent" FullName="System.Threading.CountdownEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e280a96dad9470ccd85f0ff6149773d9eb3ef1fc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58693348" /></Metadata><TypeSignature Language="C#" Value="public class CountdownEvent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CountdownEvent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CountdownEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class CountdownEvent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CountdownEvent : IDisposable" />
  <TypeSignature Language="F#" Value="type CountdownEvent = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Initial Count={InitialCount}, Current Count={CurrentCount}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="626ba-101">수가 0에 도달하는 경우 신호를 받는 동기화 기본 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-101">Represents a synchronization primitive that is signaled when its count reaches zero.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Examples  
  
 <span data-ttu-id="626ba-102">다음 예제에서는 사용 하는 방법을 보여 줍니다는 `CountdownEvent`:</span><span class="sxs-lookup"><span data-stu-id="626ba-102">The following example shows how to use a `CountdownEvent`:</span></span>  
  
 [!code-csharp[System.Threading.CountdownEvent#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.countdownevent/cs/countdownevent.cs#01)]
 [!code-vb[System.Threading.CountdownEvent#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.countdownevent/vb/countdownevent.vb#01)]  
  
          ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="626ba-103">모든 public 및 protected 멤버만 <see cref="T:System.Threading.CountdownEvent" /> 는 스레드로부터 안전 하 고 제외 여러 스레드에서 동시에 사용할 수 있습니다 <see cref="M:System.Threading.CountdownEvent.Dispose" />는 때만 사용 해야 다른 모든 작업에는 <see cref="T:System.Threading.CountdownEvent" /> 를 완료 및 <see cref="M:System.Threading.CountdownEvent.Reset" />,입니다만 사용 해야 이벤트에 액세스 하는 다른 스레드가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-103">All public and protected members of <see cref="T:System.Threading.CountdownEvent" /> are thread-safe and may be used concurrently from multiple threads, with the exception of <see cref="M:System.Threading.CountdownEvent.Dispose" />, which must only be used when all other operations on the <see cref="T:System.Threading.CountdownEvent" /> have completed, and <see cref="M:System.Threading.CountdownEvent.Reset" />, which should only be used when no other threads are accessing the event.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/countdownevent.md"><span data-ttu-id="626ba-104">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-104">CountdownEvent</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CountdownEvent (int initialCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CountdownEvent(int initialCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.CountdownEvent : int -&gt; System.Threading.CountdownEvent" Usage="new System.Threading.CountdownEvent initialCount" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="626ba-105"><see cref="T:System.Threading.CountdownEvent" />를 설정하는 데 처음 필요한 신호의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-105">The number of signals initially required to set the <see cref="T:System.Threading.CountdownEvent" />.</span></span></param>
        <summary><span data-ttu-id="626ba-106">지정된 수를 사용하여 <see cref="T:System.Threading.CountdownEvent" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-106">Initializes a new instance of <see cref="T:System.Threading.CountdownEvent" /> class with the specified count.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-107">경우 `initialCount` 0 인 이벤트 신호를 받은 상태에서 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-107">If `initialCount` is 0, the event is created in a signaled state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-108"><paramref name="initialCount" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-108"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-109">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-109">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCount">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="626ba-110"><see cref="T:System.Threading.CountdownEvent" />의 현재 수를 1씩 늘립니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-110">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-111">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-111">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCount">
      <MemberSignature Language="C#" Value="public void AddCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.AddCount" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCount();" />
      <MemberSignature Language="F#" Value="member this.AddCount : unit -&gt; unit" Usage="countdownEvent.AddCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="626ba-112"><see cref="T:System.Threading.CountdownEvent" />의 현재 수를 1씩 늘립니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-112">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count by one.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-113">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-113">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="626ba-114">현재 인스턴스가 이미 설정되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-114">The current instance is already set.</span></span>  
  
<span data-ttu-id="626ba-115">또는</span><span class="sxs-lookup"><span data-stu-id="626ba-115">-or-</span></span> 
 <span data-ttu-id="626ba-116"><see cref="P:System.Threading.CountdownEvent.CurrentCount" />가 <see cref="F:System.Int32.MaxValue" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-116"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-117">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-117">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddCount">
      <MemberSignature Language="C#" Value="public void AddCount (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCount(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.AddCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCount (signalCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCount(int signalCount);" />
      <MemberSignature Language="F#" Value="member this.AddCount : int -&gt; unit" Usage="countdownEvent.AddCount signalCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="626ba-118"><see cref="P:System.Threading.CountdownEvent.CurrentCount" />를 늘릴 값입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-118">The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></param>
        <summary><span data-ttu-id="626ba-119"><see cref="T:System.Threading.CountdownEvent" />의 현재 수를 지정된 값만큼 늘립니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-119">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count by a specified value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-120">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-120">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-121"><paramref name="signalCount" />가 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-121"><paramref name="signalCount" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="626ba-122">현재 인스턴스가 이미 설정되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-122">The current instance is already set.</span></span>  
  
<span data-ttu-id="626ba-123">또는</span><span class="sxs-lookup"><span data-stu-id="626ba-123">-or-</span></span> 
 <span data-ttu-id="626ba-124">개수가 <paramref name="signalCount." /> 만큼 증가된 후에 <see cref="P:System.Threading.CountdownEvent.CurrentCount" />가 <see cref="F:System.Int32.MaxValue" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-124"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" /> after count is incremented by <paramref name="signalCount." /></span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-125">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-125">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCount">
      <MemberSignature Language="C#" Value="public int CurrentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.CurrentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCount : int" Usage="System.Threading.CountdownEvent.CurrentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="626ba-126">이벤트를 설정하는 데 필요한 남아 있는 신호의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-126">Gets the number of remaining signals required to set the event.</span></span></summary>
        <value><span data-ttu-id="626ba-127">이벤트를 설정하는 데 필요한 남아 있는 신호의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-127">The number of remaining signals required to set the event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="626ba-128"><see cref="T:System.Threading.CountdownEvent" /> 클래스의 현재 인스턴스에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-128">Releases resources used by the current instance of the <see cref="T:System.Threading.CountdownEvent" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-129">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-129">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="countdownEvent.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="626ba-130"><see cref="T:System.Threading.CountdownEvent" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-130">Releases all resources used by the current instance of the <see cref="T:System.Threading.CountdownEvent" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-131">`Dispose` 사용을 마치면 <xref:System.Threading.CountdownEvent>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-131">Call `Dispose` when you are finished using the <xref:System.Threading.CountdownEvent>.</span></span> <span data-ttu-id="626ba-132">`Dispose` 메서드를 사용하면 <xref:System.Threading.CountdownEvent>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-132">The `Dispose` method leaves the <xref:System.Threading.CountdownEvent> in an unusable state.</span></span> <span data-ttu-id="626ba-133">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Threading.CountdownEvent> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Threading.CountdownEvent> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-133">After calling `Dispose`, you must release all references to the <xref:System.Threading.CountdownEvent> so the garbage collector can reclaim the memory that the <xref:System.Threading.CountdownEvent> was occupying.</span></span>  
  
 <span data-ttu-id="626ba-134">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="626ba-135">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Threading.CountdownEvent>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="626ba-135">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CountdownEvent>.</span></span> <span data-ttu-id="626ba-136">이렇게 하지 않으면 가비지 컬렉션이 <xref:System.Threading.CountdownEvent> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-136">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CountdownEvent> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-137">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-137">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="countdownEvent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="626ba-138">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 true이고, 관리되지 않는 리소스만 해제하려면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-138">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="626ba-139"><see cref="T:System.Threading.CountdownEvent" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-139">Releases the unmanaged resources used by the <see cref="T:System.Threading.CountdownEvent" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-140">대부분의 멤버와 달리 <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> 스레드로부터 안전한 아니며이 인스턴스의 다른 멤버와 동시에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-140">Unlike most of the members of <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialCount">
      <MemberSignature Language="C#" Value="public int InitialCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InitialCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.InitialCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InitialCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialCount : int" Usage="System.Threading.CountdownEvent.InitialCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="626ba-141">이벤트를 설정하는 데 처음으로 필요한 신호의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-141">Gets the numbers of signals initially required to set the event.</span></span></summary>
        <value><span data-ttu-id="626ba-142">이벤트를 설정하는 데 처음으로 필요한 신호의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-142">The number of signals initially required to set the event.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-143">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-143">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSet">
      <MemberSignature Language="C#" Value="public bool IsSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSet" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.IsSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSet { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSet : bool" Usage="System.Threading.CountdownEvent.IsSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="626ba-144"><see cref="T:System.Threading.CountdownEvent" /> 개체의 현재 개수가 0에 도달했는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-144">Indicates whether the <see cref="T:System.Threading.CountdownEvent" /> object's current count has reached zero.</span></span></summary>
        <value><span data-ttu-id="626ba-145">현재 개수가 0이면 <see langword="true" />이고, 0이 아니면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-145"><see langword="true" /> if the current count is zero; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-146"><xref:System.Threading.CountdownEvent> 카운트다운이 0에 도달 했을 때 이벤트를 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-146">The <xref:System.Threading.CountdownEvent> does not raise an event when the countdown has reached zero.</span></span> <span data-ttu-id="626ba-147">대신 합니다 <xref:System.Threading.CountdownEvent.CurrentCount%2A> 속성은 0, 및 <xref:System.Threading.CountdownEvent.IsSet%2A> 속성과 같은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-147">Instead, the <xref:System.Threading.CountdownEvent.CurrentCount%2A> property equals zero, and the <xref:System.Threading.CountdownEvent.IsSet%2A> property equals `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reset">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="626ba-148"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> 값을 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-148">Resets the <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> value.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-149">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-149">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="countdownEvent.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="626ba-150"><see cref="P:System.Threading.CountdownEvent.CurrentCount" />를 <see cref="P:System.Threading.CountdownEvent.InitialCount" />의 값으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-150">Resets the <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> to the value of <see cref="P:System.Threading.CountdownEvent.InitialCount" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-151">멤버 대부분이 달리 <xref:System.Threading.CountdownEvent>, 재설정 스레드로부터 안전한 아니며이 인스턴스의 다른 멤버와 동시에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-151">Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-152">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-152">The current instance has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Reset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(int count);" />
      <MemberSignature Language="F#" Value="member this.Reset : int -&gt; unit" Usage="countdownEvent.Reset count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="626ba-153"><see cref="T:System.Threading.CountdownEvent" />를 설정하는 데 필요한 신호의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-153">The number of signals required to set the <see cref="T:System.Threading.CountdownEvent" />.</span></span></param>
        <summary><span data-ttu-id="626ba-154"><see cref="P:System.Threading.CountdownEvent.InitialCount" /> 속성을 지정된 값으로 재설정합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-154">Resets the <see cref="P:System.Threading.CountdownEvent.InitialCount" /> property to a specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-155">이 메서드를 다시 설정 <xref:System.Threading.CountdownEvent.InitialCount%2A> 현재 인스턴스에 대 한 속성의 모든 후속 액세스에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-155">This method resets <xref:System.Threading.CountdownEvent.InitialCount%2A> for all subsequent accesses of the property on the current instance.</span></span> <span data-ttu-id="626ba-156">멤버 대부분이 달리 <xref:System.Threading.CountdownEvent>, 재설정 스레드로부터 안전한 아니며이 인스턴스의 다른 멤버와 동시에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-156">Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-157">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-157">The current instance has alread been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-158"><paramref name="count" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-158"><paramref name="count" /> is less than 0.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-159">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-159">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Signal">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="626ba-160"><see cref="T:System.Threading.CountdownEvent" />의 값을 줄이면서 신호를 <see cref="P:System.Threading.CountdownEvent.CurrentCount" />에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-160">Registers a signal with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Signal">
      <MemberSignature Language="C#" Value="public bool Signal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Signal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Signal" />
      <MemberSignature Language="VB.NET" Value="Public Function Signal () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Signal();" />
      <MemberSignature Language="F#" Value="member this.Signal : unit -&gt; bool" Usage="countdownEvent.Signal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="626ba-161"><see cref="T:System.Threading.CountdownEvent" />의 값을 줄이면서 신호를 <see cref="P:System.Threading.CountdownEvent.CurrentCount" />에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-161">Registers a signal with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
        <returns><span data-ttu-id="626ba-162">신호로 인해 수가 0에 도달하고 이벤트가 설정되었으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-162">true if the signal caused the count to reach zero and the event was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-163">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-163">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="626ba-164">현재 인스턴스가 이미 설정되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-164">The current instance is already set.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-165">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-165">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Signal">
      <MemberSignature Language="C#" Value="public bool Signal (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Signal(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Signal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Signal (signalCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Signal(int signalCount);" />
      <MemberSignature Language="F#" Value="member this.Signal : int -&gt; bool" Usage="countdownEvent.Signal signalCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="626ba-166">등록할 신호의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-166">The number of signals to register.</span></span></param>
        <summary><span data-ttu-id="626ba-167">지정된 양만큼 <see cref="T:System.Threading.CountdownEvent" /> 값을 줄이면서 여러 신호를 <see cref="P:System.Threading.CountdownEvent.CurrentCount" />에 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-167">Registers multiple signals with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by the specified amount.</span></span></summary>
        <returns><span data-ttu-id="626ba-168">신호로 인해 수가 0에 도달하고 이벤트가 설정되었으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-168">true if the signals caused the count to reach zero and the event was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-169">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-169">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-170"><paramref name="signalCount" />가 1보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-170"><paramref name="signalCount" /> is less than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="626ba-171">현재 인스턴스가 이미 설정되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-171">The current instance is already set.</span></span> <span data-ttu-id="626ba-172">-또는- <paramref name="signalCount" />가 <see cref="P:System.Threading.CountdownEvent.CurrentCount" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-172">-or- Or <paramref name="signalCount" /> is greater than <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-173">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-173">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAddCount">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="626ba-174"><see cref="P:System.Threading.CountdownEvent.CurrentCount" />를 증가하려고 시도했습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-174">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-175">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-175">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAddCount">
      <MemberSignature Language="C#" Value="public bool TryAddCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAddCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.TryAddCount" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddCount () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAddCount();" />
      <MemberSignature Language="F#" Value="member this.TryAddCount : unit -&gt; bool" Usage="countdownEvent.TryAddCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="626ba-176">하나씩 <see cref="P:System.Threading.CountdownEvent.CurrentCount" />를 증가하려고 시도했습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-176">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by one.</span></span></summary>
        <returns><span data-ttu-id="626ba-177">늘렸으면 true이고 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-177">true if the increment succeeded; otherwise, false.</span></span> <span data-ttu-id="626ba-178"><see cref="P:System.Threading.CountdownEvent.CurrentCount" />가 이미 0이면 이 메서드에서 false를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-178">If <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is already at zero, this method will return false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-179">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-179">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="626ba-180"><see cref="P:System.Threading.CountdownEvent.CurrentCount" />가 <see cref="F:System.Int32.MaxValue" />와 같은 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-180"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-181">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-181">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAddCount">
      <MemberSignature Language="C#" Value="public bool TryAddCount (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAddCount(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddCount (signalCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAddCount(int signalCount);" />
      <MemberSignature Language="F#" Value="member this.TryAddCount : int -&gt; bool" Usage="countdownEvent.TryAddCount signalCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="626ba-182"><see cref="P:System.Threading.CountdownEvent.CurrentCount" />를 늘릴 값입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-182">The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></param>
        <summary><span data-ttu-id="626ba-183">지정된 값만큼 <see cref="P:System.Threading.CountdownEvent.CurrentCount" />를 증가하려고 시도했습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-183">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by a specified value.</span></span></summary>
        <returns><span data-ttu-id="626ba-184">늘렸으면 true이고 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-184">true if the increment succeeded; otherwise, false.</span></span> <span data-ttu-id="626ba-185"><see cref="P:System.Threading.CountdownEvent.CurrentCount" />가 이미 0이면 false를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-185">If <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is already at zero this will return false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-186">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-186">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-187"><paramref name="signalCount" />가 0보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-187"><paramref name="signalCount" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="626ba-188"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> + <paramref name="signalCount" />가 <see cref="F:System.Int32.MaxValue" />보다 크거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-188"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> + <paramref name="signalCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="626ba-189"><see cref="T:System.Threading.CountdownEvent" />가 설정될 때까지 현재 스레드를 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-189">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-190">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-190">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait();" />
      <MemberSignature Language="F#" Value="member this.Wait : unit -&gt; unit" Usage="countdownEvent.Wait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="626ba-191"><see cref="T:System.Threading.CountdownEvent" />가 설정될 때까지 현재 스레드를 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-191">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-192">현재 인스턴스가 될 때까지 무기한이 메서드 블록의 호출자는 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-192">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="626ba-193">이벤트는 현재 설정 상태의 경우 호출자에 게 즉시 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-193">The caller will return immediately if the event is currently in a set state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-194">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-194">The current instance has already been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-195">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-195">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : int -&gt; bool" Usage="countdownEvent.Wait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="626ba-196">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-196">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="626ba-197">부호 있는 32비트 정수로 시간 제한을 측정하여 <see cref="T:System.Threading.CountdownEvent" />가 설정될 때까지 현재 스레드를 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-197">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a 32-bit signed integer to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="626ba-198"><see cref="T:System.Threading.CountdownEvent" />이 설정되었으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-198">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-199">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-199">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-200"><paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-200"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-201">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-201">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : System.Threading.CancellationToken -&gt; unit" Usage="countdownEvent.Wait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="626ba-202">확인할 <see cref="T:System.Threading.CancellationToken" />입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-202">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="626ba-203"><see cref="T:System.Threading.CountdownEvent" />을 확인하면서 <see cref="T:System.Threading.CancellationToken" />가 설정될 때까지 현재 스레드를 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-203">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-204">현재 인스턴스가 될 때까지 무기한이 메서드 블록의 호출자는 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-204">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="626ba-205">이벤트는 현재 설정 상태의 경우 호출자에 게 즉시 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-205">The caller will return immediately if the event is currently in a set state.</span></span> <span data-ttu-id="626ba-206">경우는 <xref:System.Threading.CancellationToken> 관찰 된 대기 작업 중 취소 되는 <xref:System.OperationCanceledException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-206">If the <xref:System.Threading.CancellationToken> being observed is canceled during the wait operation, an <xref:System.OperationCanceledException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="626ba-207"><paramref name="cancellationToken" />이 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-207"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-208">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-208">The current instance has already been disposed.</span></span> <span data-ttu-id="626ba-209">-또는- <paramref name="cancellationToken" />을 만든 <see cref="T:System.Threading.CancellationTokenSource" />가 이미 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-209">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-210">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-210">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan -&gt; bool" Usage="countdownEvent.Wait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="626ba-211">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-211">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="626ba-212"><see cref="T:System.Threading.CountdownEvent" />으로 시간 제한을 측정하여 <see cref="T:System.TimeSpan" />가 설정될 때까지 현재 스레드를 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-212">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="626ba-213"><see cref="T:System.Threading.CountdownEvent" />이 설정되었으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-213">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-214">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-214">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-215"><paramref name="timeout" />이 무기한 시간 제한을 나타내는 -1밀리초 이외의 음수이거나 시간 제한이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="626ba-215"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-216">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-216">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : int * System.Threading.CancellationToken -&gt; bool" Usage="countdownEvent.Wait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="626ba-217">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-217">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="626ba-218">확인할 <see cref="T:System.Threading.CancellationToken" />입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-218">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="626ba-219"><see cref="T:System.Threading.CountdownEvent" />을 확인하면서 부호 있는 32비트 정수로 시간 제한을 측정하여 <see cref="T:System.Threading.CancellationToken" />가 설정될 때까지 현재 스레드를 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-219">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a 32-bit signed integer to measure the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="626ba-220"><see cref="T:System.Threading.CountdownEvent" />이 설정되었으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-220">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="626ba-221"><paramref name="cancellationToken" />이 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-221"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-222">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-222">The current instance has already been disposed.</span></span> <span data-ttu-id="626ba-223">-또는- <paramref name="cancellationToken" />을 만든 <see cref="T:System.Threading.CancellationTokenSource" />가 이미 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-223">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-224"><paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-224"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-225">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-225">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="countdownEvent.Wait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="626ba-226">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-226">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="626ba-227">확인할 <see cref="T:System.Threading.CancellationToken" />입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-227">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="626ba-228"><see cref="T:System.Threading.CountdownEvent" />을 확인하면서 <see cref="T:System.TimeSpan" />으로 시간 제한을 측정하여 <see cref="T:System.Threading.CancellationToken" />가 설정될 때까지 현재 스레드를 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-228">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="626ba-229"><see cref="T:System.Threading.CountdownEvent" />이 설정되었으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-229">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="626ba-230"><paramref name="cancellationToken" />이 취소되었습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-230"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-231">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-231">The current instance has already been disposed.</span></span> <span data-ttu-id="626ba-232">-또는- <paramref name="cancellationToken" />을 만든 <see cref="T:System.Threading.CancellationTokenSource" />가 이미 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-232">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="626ba-233"><paramref name="timeout" />이 무기한 시간 제한을 나타내는 -1밀리초 이외의 음수이거나 시간 제한이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="626ba-233"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-234">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-234">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WaitHandle : System.Threading.WaitHandle" Usage="System.Threading.CountdownEvent.WaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="626ba-235">이벤트가 설정될 때까지 대기하는 데 사용되는 <see cref="T:System.Threading.WaitHandle" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-235">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for the event to be set.</span></span></summary>
        <value><span data-ttu-id="626ba-236">이벤트가 설정될 때까지 대기하는 데 사용되는 <see cref="T:System.Threading.WaitHandle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-236">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for the event to be set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="626ba-237"><xref:System.Threading.CountdownEvent.WaitHandle%2A> 통합 된 WaitHandle에 의존 하는 코드 베이스를 사용 하 여 필요할 경우에 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-237"><xref:System.Threading.CountdownEvent.WaitHandle%2A> should only be used if it's needed for integration with code bases that rely on having a WaitHandle.</span></span> <span data-ttu-id="626ba-238">필요한을 대기 하는 경우는 <xref:System.Threading.CountdownEvent> 를 설정할 수는 <xref:System.Threading.CountdownEvent.Wait%2A> 메서드를 기본 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="626ba-238">If all that's needed is to wait for the <xref:System.Threading.CountdownEvent> to be set, the <xref:System.Threading.CountdownEvent.Wait%2A> method should be preferred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="626ba-239">현재 인스턴스가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="626ba-239">The current instance has already been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="626ba-240">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="626ba-240">CountdownEvent</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>