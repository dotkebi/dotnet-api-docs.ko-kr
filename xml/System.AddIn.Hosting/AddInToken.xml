<Type Name="AddInToken" FullName="System.AddIn.Hosting.AddInToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d182568f293ed04fac4f3f8017d6ea60fc1bbd1f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55325961" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInToken : System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AddInToken extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInToken" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInToken&#xA;Implements IEnumerable(Of QualificationDataItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInToken sealed : System::Collections::Generic::IEnumerable&lt;System::AddIn::Hosting::QualificationDataItem&gt;" />
  <TypeSignature Language="F#" Value="type AddInToken = class&#xA;    interface seq&lt;QualificationDataItem&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1680a-101">활성화할 수 있는 추가 기능을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-101">Represents an add-in that can be activated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-102"><xref:System.AddIn.Hosting.AddInToken> 는 추가 기능 및 연결된 된 파이프라인 세그먼트를 활성화할 수 있는 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-102">An <xref:System.AddIn.Hosting.AddInToken> object represents an add-in, and its associated pipeline segments, that can be activated.</span></span> <span data-ttu-id="1680a-103">이름, 어셈블리 이름, 설명, 게시자 및 버전의 추가-나타내는 토큰에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-103">The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.</span></span>  
  
 <span data-ttu-id="1680a-104">사용 된 <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=nameWithType> 컬렉션 해당 파이프라인이 일치 지정된 된 호스트 뷰와 추가 기능을 나타내는 토큰을 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-104">Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=nameWithType> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view.</span></span> <span data-ttu-id="1680a-105">사용 된 <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=nameWithType> 메서드를 지정된 된 호스트 뷰와 일치 하는 지정 된 추가 기능에 대 한 모든 파이프라인을 나타내는 토큰의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-105">Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=nameWithType> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.</span></span>  
  
 <span data-ttu-id="1680a-106">추가 기능을 활성화 하려면를 원하는의 추가 기능을 나타내는 토큰을 전달 합니다 <xref:System.AddIn.Hosting.AddInToken.Activate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1680a-106">To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method.</span></span> <span data-ttu-id="1680a-107">이 메서드는 추가 기능의 호스트 뷰를 나타내는 형식의 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-107">This method returns an instance of the type that represents the host view of the add-in.</span></span>  
  
 <span data-ttu-id="1680a-108"><xref:System.AddIn.Hosting.AddInToken.Activate%2A> 메서드에 몇 가지 오버 로드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-108">The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads.</span></span> <span data-ttu-id="1680a-109">해당 매개 변수 중 하나로 애플리케이션 도메인의 이름이 필요 하지 않은 오버 로드를 사용 하면 추가 기능에 대 한 새 애플리케이션 도메인을 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-109">When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.</span></span>  
  
 <span data-ttu-id="1680a-110">LINQ (Language-Integrated Query) 확장 메서드를 사용 하 여 쿼리를 수행 하는 <xref:System.AddIn.Hosting.AddInToken>, 토큰의 컬렉션으로 처리 <xref:System.AddIn.Hosting.QualificationDataItem> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-110">You can use Language-Integrated Query (LINQ) extension methods to perform queries on an <xref:System.AddIn.Hosting.AddInToken>, treating the token as a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-111">이 섹션에서는 두 가지 예제를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-111">This section contains two examples.</span></span> <span data-ttu-id="1680a-112">첫 번째 예제는 추가 기능 활성화를 사용 하 여 선택 된 된 `ChooseAddIn` 메서드를 두 번째 예제에 나와 있는 `ChooseAddIn` 메서드.</span><span class="sxs-lookup"><span data-stu-id="1680a-112">The first example activates an add-in that has been selected by using the `ChooseAddIn` method, and the second example shows the `ChooseAddIn` method.</span></span>  
  
 <span data-ttu-id="1680a-113">**예제 1**</span><span class="sxs-lookup"><span data-stu-id="1680a-113">**Example 1**</span></span>  
  
 <span data-ttu-id="1680a-114">다음 예제에서는 토큰을 사용 하 여 추가 기능을 활성화 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-114">The following example shows how to activate an add-in with a token.</span></span>  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 <span data-ttu-id="1680a-115">**예제 2**</span><span class="sxs-lookup"><span data-stu-id="1680a-115">**Example 2**</span></span>  
  
 <span data-ttu-id="1680a-116">다음 예제에서는 사용자 지정 `ChooseAddIn` 열거 하는 메서드는 <xref:System.AddIn.Hosting.AddInToken> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-116">The following example shows the custom `ChooseAddIn` method, which enumerates an <xref:System.AddIn.Hosting.AddInToken> collection.</span></span> <span data-ttu-id="1680a-117">사용자가 해당 추가 기능을 활성화 하려면이 컬렉션에서 토큰을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-117">The user selects a token from this collection to activate the corresponding add-in.</span></span>  
  
 [!code-csharp[AddInP3Host#13](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#13)]
 [!code-vb[AddInP3Host#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="1680a-118">추가 기능 및 확장성</span><span class="sxs-lookup"><span data-stu-id="1680a-118">Add-Ins and Extensibility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Activate&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1680a-119">추가 기능을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-119">Activates an add-in.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInEnvironment environment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInEnvironment environment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (environment As AddInEnvironment) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInEnvironment ^ environment);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInEnvironment -&gt; 'T" Usage="addInToken.Activate environment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="environment" Type="System.AddIn.Hosting.AddInEnvironment" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1680a-120">추가 기능의 호스트 뷰를 나타내는 인터페이스 또는 추상 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-120">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="environment"><span data-ttu-id="1680a-121">원래 추가 기능을 포함하는 애플리케이션 도메인 및 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-121">The application domain and process that contains the original add-in.</span></span></param>
        <summary><span data-ttu-id="1680a-122">특정 추가 기능을 다른 추가 기능의 환경에서 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-122">Activates an add-in in the environment of another add-in.</span></span></summary>
        <returns><span data-ttu-id="1680a-123">추가 기능의 호스트 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-123">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-124">이 메서드 오버 로드는 추가 기능으로 동일한 애플리케이션 도메인 및 프로세스에 있는 추가 기능의 활성화 `environment` 가져온 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-124">This method overload activates the add-in in the same application domain and process as the add-in from which `environment` was obtained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-125">다음 예제에서는 하나의 추가 기능에 지정된 된 보안 수준 사용 하 여 자동으로 생성 된 애플리케이션 도메인에서 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-125">The following example activates one add-in in an automatically generated application domain with a specified security level.</span></span> <span data-ttu-id="1680a-126">다음 두 번째 추가에 동일한 애플리케이션 도메인 및 프로세스를 처음 사용 하 여 첫 번째에 있는 추가 기능이 활성화 <xref:System.AddIn.Hosting.AddInEnvironment> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-126">It then activates a second add-in in the same application domain and process as the first by using the first add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.</span></span>  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="1680a-127">추가 기능 및 확장성</span><span class="sxs-lookup"><span data-stu-id="1680a-127">Add-Ins and Extensibility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate trustLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1680a-128">추가 기능의 호스트 뷰를 나타내는 인터페이스 또는 추상 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-128">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="trustLevel"><span data-ttu-id="1680a-129">신뢰 수준을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-129">One of the enumeration values that specifies the trust level.</span></span></param>
        <summary><span data-ttu-id="1680a-130">새 애플리케이션 도메인에서 지정된 신뢰 수준으로 추가 기능을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-130">Activates an add-in with a specified trust level in a new application domain.</span></span></summary>
        <returns><span data-ttu-id="1680a-131">추가 기능의 호스트 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-131">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-132">이 메서드 오버 로드는 추가 기능에 자동으로 생성 된 애플리케이션 도메인에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-132">This method overload loads the add-in into an automatically generated application domain.</span></span> <span data-ttu-id="1680a-133">사용 하 여 새 애플리케이션 도메인의 이름을 지정 하려는 경우는 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-133">If you want to specify a name for the new application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload.</span></span>  
  
 <span data-ttu-id="1680a-134">이 메서드는 추가 기능 어셈블리의 위치를 애플리케이션 도메인에 대 한 기본 디렉터리를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-134">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="1680a-135">또한 구성 파일 [addinassemblyname].dll.config 및 경우를 찾습니다 발견, 새 애플리케이션 도메인의 구성 파일로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-135">It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-136">다음 예제에서는의 추가 기능을 활성화 하는 방법 지정된 된 보안 수준 사용 하 여 자동으로 생성 된 애플리케이션 도메인에서 선택한 토큰으로 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-136">The following example shows how to activate an add-in, identified by the chosen token, in an automatically generated application domain with a specified security level.</span></span>  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="1680a-137">추가 기능 및 확장성</span><span class="sxs-lookup"><span data-stu-id="1680a-137">Add-Ins and Extensibility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (AppDomain target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AppDomain target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (target As AppDomain) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(AppDomain ^ target);" />
      <MemberSignature Language="F#" Value="member this.Activate : AppDomain -&gt; 'T" Usage="addInToken.Activate target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1680a-138">추가 기능의 호스트 뷰를 나타내는 인터페이스 또는 추상 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-138">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="target"><span data-ttu-id="1680a-139">추가 기능을 활성화해야 하는 애플리케이션 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-139">The application domain that the add-in should be activated in.</span></span></param>
        <summary><span data-ttu-id="1680a-140">기존 애플리케이션 도메인에서 추가 기능을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-140">Activates an add-in in an existing application domain.</span></span></summary>
        <returns><span data-ttu-id="1680a-141">추가 기능의 호스트 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-141">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-142">자동으로 생성 된 애플리케이션 도메인에서 추가 기능을 활성화 하려면 사용 합니다 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> 지정된 된 보안 수준 사용 하 여 새 애플리케이션 도메인을 생성 하는 오버 로드 또는 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> 애플리케이션 도메인의 친숙 한 이름을 포함 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-142">To activate an add-in in an automatically generated application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload to generate a new application domain with a specified security level or the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload to include a friendly name for the application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-143">다음 예제에서는 다른 추가 기능에서 사용 되는 애플리케이션 도메인에서 추가 기능을 활성화 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-143">The following example activates an add-in in an application domain that is being used by another add-in.</span></span> <span data-ttu-id="1680a-144">첫 번째 추가 기능에 대 한 코드에 제공 되는 <xref:System.AddIn.Hosting.AddInToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-144">The code for the first add-in is provided in the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1680a-145">Full Trust 권한이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-145">Full-trust permission is demanded.</span></span> <span data-ttu-id="1680a-146">호출 체인에 있는 호출자에게 충분한 사용 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="1680a-146">A caller in the call chain does not have sufficient permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.Security.PermissionSet permissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.Security.PermissionSet permissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (permissions As PermissionSet) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::Security::PermissionSet ^ permissions);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate permissions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="permissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1680a-147">추가 기능의 호스트 뷰를 나타내는 인터페이스 또는 추상 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-147">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="permissions"><span data-ttu-id="1680a-148">추가 기능에 대해 부여된 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-148">The permissions granted for the add-in.</span></span></param>
        <summary><span data-ttu-id="1680a-149">새 애플리케이션 도메인에서 지정된 권한 집합으로 추가 기능을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-149">Activates an add-in with a specified permission set in a new application domain.</span></span></summary>
        <returns><span data-ttu-id="1680a-150">추가 기능의 호스트 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-150">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-151">이 메서드 오버 로드는 추가 기능에 자동으로 생성 된 애플리케이션 도메인에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-151">This method overload loads the add-in into an automatically generated application domain.</span></span> <span data-ttu-id="1680a-152">추가 기능 어셈블리의 위치를 애플리케이션 도메인에 대 한 기본 디렉터리를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-152">It sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="1680a-153">또한 구성 파일을 찾고 `[addinassemblyname].dll.config` 집합 발견 하는 경우 새 애플리케이션 도메인에 대 한 구성 파일을 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-153">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1680a-154"><paramref name="permissions" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="1680a-154"><paramref name="permissions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, valuetype System.AddIn.Hosting.AddInSecurityLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (process As AddInProcess, level As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::AddIn::Hosting::AddInSecurityLevel level);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate (process, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="level" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1680a-155">추가 기능의 호스트 뷰를 나타내는 인터페이스 또는 추상 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-155">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="process"><span data-ttu-id="1680a-156">추가 기능을 활성화하는 외부 프로세스.</span><span class="sxs-lookup"><span data-stu-id="1680a-156">The external process in which to activate the add-in.</span></span></param>
        <param name="level"><span data-ttu-id="1680a-157">신뢰 수준을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-157">One of the enumeration values that specifies the trust level.</span></span></param>
        <summary><span data-ttu-id="1680a-158">새 애플리케이션 도메인의 외부 프로세스에서 지정된 신뢰 수준으로 추가 기능을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-158">Activates an add-in in an external process, in a new application domain, and with a specified trust level.</span></span></summary>
        <returns><span data-ttu-id="1680a-159">추가 기능의 호스트 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-159">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-160">이 메서드는 추가 기능 어셈블리의 위치를 애플리케이션 도메인에 대 한 기본 디렉터리를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-160">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="1680a-161">또한 구성 파일을 찾고 `[addinassemblyname].dll.config` 집합 발견 하는 경우 새 애플리케이션 도메인에 대 한 구성 파일을 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-161">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-162">다음 예제에서는 새 프로세스를 만들고 추가 기능을 완전 신뢰 보안 수준 사용 하 여 해당 프로세스에서 활성화 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-162">The following example creates a new process and activates an add-in in that process with a full trust security level.</span></span>  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1680a-163">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-163">full trust for the immediate caller.</span></span> <span data-ttu-id="1680a-164">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-164">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate (process, permissionSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1680a-165">추가 기능의 호스트 뷰를 나타내는 인터페이스 또는 추상 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-165">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="process"><span data-ttu-id="1680a-166">추가 기능을 활성화하는 외부 프로세스.</span><span class="sxs-lookup"><span data-stu-id="1680a-166">The external process in which to activate the add-in.</span></span></param>
        <param name="permissionSet"><span data-ttu-id="1680a-167">추가 기능에 대해 부여된 필요한 권한 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-167">The required permission set granted for the add-in.</span></span></param>
        <summary><span data-ttu-id="1680a-168">새 애플리케이션 도메인의 외부 프로세스에서 지정된 권한 집합으로 추가 기능을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-168">Activates an add-in in an external process, in a new application domain, and with a specified permission set.</span></span></summary>
        <returns><span data-ttu-id="1680a-169">추가 기능의 호스트 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-169">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-170">이 메서드는 추가 기능 어셈블리의 위치를 애플리케이션 도메인에 대 한 기본 디렉터리를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-170">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="1680a-171">또한 구성 파일을 찾고 `[addinassemblyname].dll.config` 집합 발견 하는 경우 새 애플리케이션 도메인에 대 한 구성 파일을 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-171">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1680a-172">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-172">full trust for the immediate caller.</span></span> <span data-ttu-id="1680a-173">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-173">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel, appDomainName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel, System::String ^ appDomainName);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel * string -&gt; 'T" Usage="addInToken.Activate (trustLevel, appDomainName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
        <Parameter Name="appDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1680a-174">추가 기능의 호스트 뷰를 나타내는 인터페이스 또는 추상 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-174">The interface or abstract base type that represents the host view of the add-in.</span></span></typeparam>
        <param name="trustLevel"><span data-ttu-id="1680a-175">신뢰 수준을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-175">One of the enumeration values that specifies the trust level.</span></span></param>
        <param name="appDomainName"><span data-ttu-id="1680a-176">새 애플리케이션 도메인에 할당할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-176">The friendly name to assign to the new application domain.</span></span></param>
        <summary><span data-ttu-id="1680a-177">새 애플리케이션 도메인에서 지정된 이름 및 신뢰 수준으로 추가 기능을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-177">Activates an add-in in a new application domain with a specified name and trust level.</span></span></summary>
        <returns><span data-ttu-id="1680a-178">추가 기능의 호스트 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-178">The host view of the add-in.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-179">사용 하 여 애플리케이션 도메인 이름을 지정 해야 하는 경우는 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-179">If you do not need to specify an application domain name, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload.</span></span>  
  
 <span data-ttu-id="1680a-180">이 메서드는 추가 기능 어셈블리의 위치를 애플리케이션 도메인에 대 한 기본 디렉터리를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-180">This method sets the base directory for the application domain to be the location of the add-in assembly.</span></span> <span data-ttu-id="1680a-181">또한 구성 파일을 찾고 `[addinassemblyname].dll.config` 집합 발견 하는 경우 새 애플리케이션 도메인에 대 한 구성 파일을 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-181">It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInFullName">
      <MemberSignature Language="C#" Value="public string AddInFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddInFullName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddInFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInFullName : string" Usage="System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1680a-182">추가 기능의 네임스페이스 및 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-182">Gets the namespace and type of the add-in.</span></span></summary>
        <value><span data-ttu-id="1680a-183">추가 기능의 형식이며, 해당 네임스페이스에 따라 정규화됩니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-183">The type of the add-in, fully qualified by its namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-184">이 속성에서 반환 되는 추가 기능의 전체 이름을 가져옵니다는 <xref:System.Type.FullName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-184">This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1680a-185">이 값은 항상 인스턴스에서 사용할 수는 <xref:System.AddIn.Hosting.AddInToken> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-185">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-186">다음 예제에서는 값을 표시 합니다 <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>를 <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, 및 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 속성을 콘솔.</span><span class="sxs-lookup"><span data-stu-id="1680a-186">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="1680a-187">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AddIn.Hosting.AddInToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-187">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.AssemblyName AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyName ^ AssemblyName { System::Reflection::AssemblyName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : System.Reflection.AssemblyName" Usage="System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1680a-188">추가 기능이 들어 있는 어셈블리의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-188">Gets the name of the assembly that contains the add-in.</span></span></summary>
        <value><span data-ttu-id="1680a-189">어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-189">The name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-190">이 속성에서 반환 되는에서 추가 기능을 포함 하는 어셈블리의 표시 이름을 가져옵니다는 <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-190">This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1680a-191">이 값은 항상 인스턴스에서 사용할 수는 <xref:System.AddIn.Hosting.AddInToken> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-191">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-192">다음 예제에서는 값을 표시 합니다 <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>를 <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, 및 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 속성을 콘솔.</span><span class="sxs-lookup"><span data-stu-id="1680a-192">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="1680a-193">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AddIn.Hosting.AddInToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-193">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.AddIn.Hosting.AddInToken.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1680a-194">추가 기능의 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-194">Gets the description of the add-in.</span></span></summary>
        <value><span data-ttu-id="1680a-195">추가 기능의 설명이거나, <see cref="T:System.AddIn.AddInAttribute" /> 특성에 설명이 지정되어 있지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-195">A description of the add-in, or <see langword="null" /> if the description is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-196">이 속성에 지정 된 대로 추가 기능에 대 한 설명을 가져옵니다는 <xref:System.AddIn.AddInAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-196">This property obtains the description of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-197">다음 예제에서는 값을 표시 합니다 <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>를 <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, 및 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 속성을 콘솔.</span><span class="sxs-lookup"><span data-stu-id="1680a-197">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="1680a-198">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AddIn.Hosting.AddInToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-198">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDirectConnect">
      <MemberSignature Language="C#" Value="public static bool EnableDirectConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableDirectConnect" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableDirectConnect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableDirectConnect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDirectConnect : bool with get, set" Usage="System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1680a-199">조건이 허용되는 경우 추가 기능을 호스트에 직접 연결할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-199">Gets or sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.</span></span></summary>
        <value><span data-ttu-id="1680a-200">추가 기능을 호스트에 직접 연결하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-200"><see langword="true" /> if the add-in should be directly connected to the host; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1680a-201">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-202">다음 조건에 직접 연결을 수행 하려면 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-202">The following conditions must exist for the direct connection to occur:</span></span>  
  
-   <span data-ttu-id="1680a-203">이 속성으로 설정 되어 있어야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-203">This property must be set to `true`.</span></span>  
  
-   <span data-ttu-id="1680a-204">추가 기능에서 호스트와 동일한 애플리케이션 도메인 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-204">The add-in must be in the same application domain as the host.</span></span>  
  
-   <span data-ttu-id="1680a-205">추가 기능 뷰 및 추가 기능의 호스트 뷰는 동일한 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-205">The add-in view and the host view of the add-in must be the same type.</span></span>  
  
-   <span data-ttu-id="1680a-206">파이프라인의 모든 세그먼트를 사용할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-206">All the segments of the pipeline must be available.</span></span>  
  
 <span data-ttu-id="1680a-207">직접 연결이 설정 되 면 추가 기능 쪽 어댑터와 호스트 쪽 어댑터는 인스턴스화되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-207">When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="addInToken.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1680a-208">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-208">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="1680a-209">지정된 개체가 현재 인스턴스와 같은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-209">Determines whether a specified object is equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="1680a-210">지정된 개체와 현재 인스턴스가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-210"><see langword="true" /> if the specified object and the current instance are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of QualificationDataItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::AddIn::Hosting::QualificationDataItem&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;" Usage="addInToken.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1680a-211">이 토큰에 연결된 파이프라인 세그먼트의 정규화 데이터에 대한 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-211">Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</span></span></summary>
        <returns><span data-ttu-id="1680a-212">현재 토큰에 연결된 파이프라인 세그먼트의 정규화 데이터를 반복하는 데 사용할 수 있는 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-212">An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-213">예를 들어 정규화 데이터 항목의 컬렉션인 것 처럼 토큰을 처리 하려면이 메서드를 사용을 `foreach` 문 (`For Each` Visual Basic에서는 `for each` Visual c + +에서).</span><span class="sxs-lookup"><span data-stu-id="1680a-213">Use this method to treat a token as if it were a collection of qualification data items, for example, in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span>  
  
 <span data-ttu-id="1680a-214">현재 토큰에 연결 된 파이프라인 세그먼트의 정규화 데이터 항목을 반복 하이 메서드에서 반환 되는 열거자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-214">Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token.</span></span> <span data-ttu-id="1680a-215">정규화 데이터의 각 항목은는 <xref:System.AddIn.Hosting.QualificationDataItem> 파이프라인 세그먼트를 식별 하 고 이름/값 쌍을 포함 하는 구조는 <xref:System.AddIn.Pipeline.QualificationDataAttribute> 해당 세그먼트에 적용 된 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-215">Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1680a-216">추가 기능 모델의 추가 기능 호스트 뷰에 적용 되는 정규화 데이터를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-216">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="1680a-217">결과적으로, 정규화 데이터를 찾을 수 없습니다를 열거 하는 경우 모든 항목을 갖는 <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> 속성은 <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-217">As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1680a-218">사용할 수 있습니다는 <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> 사전의 파이프라인 세그먼트의 정규화 데이터를 포함 하는 중첩된 된 집합을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-218">Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-219">다음 예제에서는 각 연결 된 파이프라인 세그먼트에 대 한 정규화 데이터를 나열 <xref:System.AddIn.Hosting.AddInToken> 에서 토큰의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-219">The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens.</span></span>  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="addInToken.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1680a-220">토큰에 대한 해시 함수 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-220">Serves as a hash function for a token.</span></span></summary>
        <returns><span data-ttu-id="1680a-221">현재 토큰의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-221">A hash code for the current token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.AddIn.Hosting.AddInToken.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1680a-222">추가 기능의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-222">Gets the name of the add-in.</span></span></summary>
        <value><span data-ttu-id="1680a-223">추가 기능의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-223">The name of the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-224">이 속성에 지정 된 대로 추가-의 이름을 가져옵니다는 <xref:System.AddIn.AddInAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-224">This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span> <span data-ttu-id="1680a-225">이 값은 항상 인스턴스에서 사용할 수는 <xref:System.AddIn.Hosting.AddInToken> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-225">This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-226">다음 예제에서는 값을 표시 합니다 <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>를 <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, 및 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 속성을 콘솔.</span><span class="sxs-lookup"><span data-stu-id="1680a-226">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="1680a-227">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AddIn.Hosting.AddInToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-227">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publisher">
      <MemberSignature Language="C#" Value="public string Publisher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Publisher" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Publisher As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Publisher { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Publisher : string" Usage="System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1680a-228">추가 기능의 게시자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-228">Gets the publisher of the add-in.</span></span></summary>
        <value><span data-ttu-id="1680a-229">추가 기능의 게시자이거나, 게시자가 <see cref="T:System.AddIn.AddInAttribute" /> 특성에 지정되지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-229">The publisher of the add-in, or <see langword="null" /> if the publisher is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-230">이 속성에 지정 되어 있는 추가 기능의 게시자를 가져옵니다는 <xref:System.AddIn.AddInAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-230">This property obtains the publisher of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-231">다음 예제에서는 값을 표시 합니다 <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>를 <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, 및 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 속성을 콘솔.</span><span class="sxs-lookup"><span data-stu-id="1680a-231">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="1680a-232">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AddIn.Hosting.AddInToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-232">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QualificationData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;string,string&gt;&gt; QualificationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;valuetype System.AddIn.Hosting.AddInSegmentType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&gt; QualificationData" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QualificationData As IDictionary(Of AddInSegmentType, IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ QualificationData { System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QualificationData : System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType, System.Collections.Generic.IDictionary&lt;string, string&gt;&gt;" Usage="System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1680a-233">현재 토큰에 연결된 파이프라인 세그먼트에 대한 데이터의 사전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-233">Gets a dictionary of data about the segments in the pipeline associated with the current token.</span></span></summary>
        <value><span data-ttu-id="1680a-234">해당 키가 파이프라인 세그먼트이고 해당 값은 각 세그먼트에 대한 정규화 데이터를 나타내는 이름/값 쌍인 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-234">A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-235">이 속성을 사용 하 여 사용 하 여 세그먼트를 파이프라인에 적용 된 데이터를 가져오는 <xref:System.AddIn.Pipeline.QualificationDataAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-235">Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute.</span></span> <span data-ttu-id="1680a-236">이 데이터를 식별 하는 파이프라인을 구성 하는 형식을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-236">You can use this data to identify and work with the types that compose your pipelines.</span></span>  
  
 <span data-ttu-id="1680a-237">이 사전의 사전을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-237">This property returns a dictionary of dictionaries.</span></span> <span data-ttu-id="1680a-238">최상위 사전에는 항상 6 개의 키가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-238">The top dictionary always has six keys.</span></span> <span data-ttu-id="1680a-239">각 키는 <xref:System.AddIn.Hosting.AddInSegmentType> 파이프라인 세그먼트에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-239">Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline.</span></span> <span data-ttu-id="1680a-240">각 값은 제네릭 <xref:System.Collections.Generic.IDictionary%602> 세그먼트의 정규화 데이터를 포함 하는 문자열 키가 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-240">Each value is a generic <xref:System.Collections.Generic.IDictionary%602> of strings with string keys that contains the segment's qualification data.</span></span>  
  
 <span data-ttu-id="1680a-241">키 및 이러한 내부 사전의 값은 이름 및 값을 지정 합니다 <xref:System.AddIn.Pipeline.QualificationDataAttribute> 세그먼트에 대 한 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-241">The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments.</span></span> <span data-ttu-id="1680a-242">정규화 데이터가 없으면 세그먼트에 적용 된 경우 해당 사전이 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-242">If no qualification data has been applied to a segment, its dictionary is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1680a-243">추가 기능 모델의 추가 기능 호스트 뷰에 적용 되는 정규화 데이터를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-243">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="1680a-244">결과적으로 사전에 <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType> 항상 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-244">As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType> is always empty.</span></span>  
  
 <span data-ttu-id="1680a-245">또는 열거 하 여 정규화 데이터를 가져올 수 있습니다는 <xref:System.AddIn.Hosting.AddInToken> 컬렉션인 것 처럼 <xref:System.AddIn.Hosting.QualificationDataItem> 구조를 사용 하는 `foreach` 문 (`For Each` Visual Basic에서는 `for each` Visual c + +에서).</span><span class="sxs-lookup"><span data-stu-id="1680a-245">Alternatively, you can obtain qualification data by enumerating an <xref:System.AddIn.Hosting.AddInToken> as if it were a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures, using a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span> <span data-ttu-id="1680a-246">제공 하는 예제를 참조 합니다 <xref:System.AddIn.Hosting.QualificationDataItem> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-246">See the example provided for the <xref:System.AddIn.Hosting.QualificationDataItem> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-247">다음 예제에서는 추가 기능의 정규화 데이터를 검사 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-247">The following example shows how to examine an add-in's qualification data.</span></span>  
  
 [!code-csharp[AddInP3Host#11](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#11)]
 [!code-vb[AddInP3Host#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1680a-248">이 토큰에 연결된 파이프라인 세그먼트의 정규화 데이터에 대한 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-248">Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</span></span></summary>
        <returns><span data-ttu-id="1680a-249">현재 토큰에 연결된 파이프라인 세그먼트의 정규화 데이터를 반복하는 데 사용할 수 있는 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-249">An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-250">이 방법을 사용 하 여 토큰의 예를 들어 정규화 데이터 항목의 컬렉션인 마찬가지로 취급 해야는 `foreach` 문 (`For Each` Visual Basic에서는 `for each` Visual c + +에서).</span><span class="sxs-lookup"><span data-stu-id="1680a-250">This method allows a token to be treated like a collection of qualification data items, for example in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).</span></span>  
  
 <span data-ttu-id="1680a-251">현재 토큰에 연결 된 파이프라인 세그먼트의 정규화 데이터 항목을 반복 하이 메서드에서 반환 되는 열거자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-251">Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token.</span></span> <span data-ttu-id="1680a-252">정규화 데이터의 각 항목은는 <xref:System.AddIn.Hosting.QualificationDataItem> 파이프라인 세그먼트를 식별 하 고 이름/값 쌍을 포함 하는 구조는 <xref:System.AddIn.Pipeline.QualificationDataAttribute> 해당 세그먼트에 적용 된 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-252">Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1680a-253">추가 기능 모델의 추가 기능 호스트 뷰에 적용 되는 정규화 데이터를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-253">The add-in model does not use qualification data that is applied to the host view of the add-in.</span></span> <span data-ttu-id="1680a-254">결과적으로, 정규화 데이터를 찾을 수 없습니다를 열거 하는 경우 모든 항목을 갖는 <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> 속성은 <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-254">As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1680a-255">사용할 수 있습니다는 <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> 파이프라인 세그먼트의 정규화 데이터를 포함 하는 사전의 중첩된 된 집합을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-255">Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries containing the qualification data of the pipeline segments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="addInToken.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1680a-256">토큰을 나타내는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-256">Returns a string that represents the token.</span></span></summary>
        <returns><span data-ttu-id="1680a-257">토큰을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-257">A string that represents the token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.AddIn.Hosting.AddInToken.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1680a-258"><see cref="T:System.AddIn.AddInAttribute" /> 특성에 지정된 추가 기능의 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-258">Gets the version of the add-in, as specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></summary>
        <value><span data-ttu-id="1680a-259">추가 기능의 버전이거나, <see cref="T:System.AddIn.AddInAttribute" /> 특성에 버전 번호가 지정되어 있지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-259">The version of the add-in, or <see langword="null" /> if the version number is not specified in the <see cref="T:System.AddIn.AddInAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1680a-260">버전 번호는 자유 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="1680a-260">The version number is a free-form string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1680a-261">다음 예제에서는 값을 표시 합니다 <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>를 <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, 및 <xref:System.AddIn.Hosting.AddInToken.Version%2A> 속성을 콘솔.</span><span class="sxs-lookup"><span data-stu-id="1680a-261">The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console.</span></span> <span data-ttu-id="1680a-262">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AddIn.Hosting.AddInToken> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1680a-262">This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.</span></span>  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>