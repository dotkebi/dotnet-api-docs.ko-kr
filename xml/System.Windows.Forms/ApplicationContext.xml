<Type Name="ApplicationContext" FullName="System.Windows.Forms.ApplicationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6708b70678ae4ba315e2f1c61465f9785f3c84ca" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56372189" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ApplicationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationContext : IDisposable" />
  <TypeSignature Language="F#" Value="type ApplicationContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="74ca6-101">응용 프로그램 스레드에 대한 컨텍스트 정보를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-101">Specifies the contextual information about an application thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-102">사용할 수는 <xref:System.Windows.Forms.ApplicationContext> 클래스에서 종료 하는 메시지 루프를 발생 시키는 상황을 다시 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-102">You can use the <xref:System.Windows.Forms.ApplicationContext> class to redefine the circumstances that cause a message loop to exit.</span></span> <span data-ttu-id="74ca6-103">기본적으로 <xref:System.Windows.Forms.ApplicationContext> 를 수신 하는 <xref:System.Windows.Forms.Form.Closed> 애플리케이션에서 이벤트의 주 <xref:System.Windows.Forms.Form>, 다음 스레드의 메시지 루프를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-103">By default, the <xref:System.Windows.Forms.ApplicationContext> listens to the <xref:System.Windows.Forms.Form.Closed> event on the application's main <xref:System.Windows.Forms.Form>, then exits the thread's message loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74ca6-104">다음 코드 예제에서는 두 개의 폼을 표시 하 고 두 형태 모두 닫을 때 애플리케이션을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-104">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="74ca6-105">애플리케이션 시작 및 종료, 경우에 각 폼의 위치가 기억 됩니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-105">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="74ca6-106">이 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ApplicationContext>, 함께 `Application.Run(context)` 애플리케이션을 시작 하는 경우 여러 개의 폼을 표시할 메서드.</span><span class="sxs-lookup"><span data-stu-id="74ca6-106">This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.</span></span>  
  
 <span data-ttu-id="74ca6-107">클래스 `MyApplicationContext` 에서 상속 <xref:System.Windows.Forms.ApplicationContext> 각 폼 닫혀 있고 둘 경우 현재 스레드를 종료 하는 시기를 추적 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-107">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="74ca6-108">클래스는 사용자에 대 한 각 폼의 위치를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-108">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="74ca6-109">폼 위치 데이터 라는 파일에 저장 됩니다 `Appdata.txt` 기준 위치에 만든 <xref:System.Windows.Forms.Application.UserAppDataPath%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-109">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span>  
  
 <span data-ttu-id="74ca6-110">합니다 `Main` 메서드 호출 `Application.Run(context)` 지정 된 애플리케이션을 시작 하는 <xref:System.Windows.Forms.ApplicationContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-110">The `Main` method calls `Application.Run(context)` to start the application, given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 [!code-cpp[Application#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#1)]
 [!code-csharp[Application#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#1)]
 [!code-vb[Application#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74ca6-111"><see cref="T:System.Windows.Forms.ApplicationContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74ca6-112">컨텍스트를 사용하지 않고 <see cref="T:System.Windows.Forms.ApplicationContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with no context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext (System.Windows.Forms.Form mainForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form mainForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mainForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext(System::Windows::Forms::Form ^ mainForm);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ApplicationContext : System.Windows.Forms.Form -&gt; System.Windows.Forms.ApplicationContext" Usage="new System.Windows.Forms.ApplicationContext mainForm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mainForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="mainForm"><span data-ttu-id="74ca6-113">컨텍스트에 사용할 응용 프로그램의 주 <see cref="T:System.Windows.Forms.Form" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-113">The main <see cref="T:System.Windows.Forms.Form" /> of the application to use for context.</span></span></param>
        <summary><span data-ttu-id="74ca6-114">지정된 <see cref="T:System.Windows.Forms.ApplicationContext" />를 사용하여 <see cref="T:System.Windows.Forms.Form" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with the specified <see cref="T:System.Windows.Forms.Form" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-115">하는 경우 <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> 은 재정의 되지 않으면 스레드의 메시지 루프 종료 될 때 <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-115">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74ca6-116"><see cref="T:System.Windows.Forms.ApplicationContext" />에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-116">Releases the resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="applicationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74ca6-117"><see cref="T:System.Windows.Forms.ApplicationContext" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-117">Releases all resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-118"><xref:System.Windows.Forms.ApplicationContext.Dispose> 사용을 마치면 <xref:System.Windows.Forms.ApplicationContext>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-118">Call <xref:System.Windows.Forms.ApplicationContext.Dispose> when you are finished using the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="74ca6-119"><xref:System.Windows.Forms.ApplicationContext.Dispose> 메서드를 사용하면 <xref:System.Windows.Forms.ApplicationContext>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-119">The <xref:System.Windows.Forms.ApplicationContext.Dispose> method leaves the <xref:System.Windows.Forms.ApplicationContext> in an unusable state.</span></span> <span data-ttu-id="74ca6-120">호출한 후 <xref:System.Windows.Forms.ApplicationContext.Dispose>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Windows.Forms.ApplicationContext> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Windows.Forms.ApplicationContext> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-120">After calling <xref:System.Windows.Forms.ApplicationContext.Dispose>, you must release all references to the <xref:System.Windows.Forms.ApplicationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.ApplicationContext> was occupying.</span></span> <span data-ttu-id="74ca6-121">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-121">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74ca6-122"><xref:System.Windows.Forms.ApplicationContext.Dispose>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Windows.Forms.ApplicationContext>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="74ca6-122">Always call <xref:System.Windows.Forms.ApplicationContext.Dispose> before you release your last reference to the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="74ca6-123">이렇게 하지 않으면 가비지 수집기가 <xref:System.Windows.Forms.ApplicationContext> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-123">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.ApplicationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="applicationContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="74ca6-124">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-124"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="74ca6-125"><see cref="T:System.Windows.Forms.ApplicationContext" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-125">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-126">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="74ca6-126">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="74ca6-127">`Dispose()` 보호 된 호출 <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-127">`Dispose()` invokes the protected <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="74ca6-128"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-128"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="74ca6-129">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Windows.Forms.ApplicationContext> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-129">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ApplicationContext> references.</span></span> <span data-ttu-id="74ca6-130">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-130">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="74ca6-131">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-131">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="74ca6-132"><see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span><span class="sxs-lookup"><span data-stu-id="74ca6-132">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="74ca6-133">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-133">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="74ca6-134">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-134">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ExitThread">
      <MemberSignature Language="C#" Value="public void ExitThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExitThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExitThread();" />
      <MemberSignature Language="F#" Value="member this.ExitThread : unit -&gt; unit" Usage="applicationContext.ExitThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74ca6-135">스레드의 메시지 루프를 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-135">Terminates the message loop of the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-136">이 메서드는 <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-136">This method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74ca6-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> 및 <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> 스레드가 종료 되기를 원인 실제로 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="74ca6-138">이러한 메서드를 발생 시킬 합니다 <xref:System.Windows.Forms.Application.ThreadExit> 는 이벤트를 <xref:System.Windows.Forms.Application> 개체에서 수신 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-138">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="74ca6-139"><xref:System.Windows.Forms.Application> 개체에는 다음 스레드가 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-139">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74ca6-140">다음 코드 예제는 예제에서 발췌를 <xref:System.Windows.Forms.ApplicationContext> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-140">The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="74ca6-141">이 예에서는 열려 있는 폼을 추적 하 고 모든 폼을 닫은 경우 현재 스레드를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-141">This example keeps track of open forms and exits the current thread when all forms are closed.</span></span> <span data-ttu-id="74ca6-142">합니다 `OnFormClosed` 메서드는 이벤트 처리기는 <xref:System.Windows.Forms.Form.Closed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-142">The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event.</span></span> <span data-ttu-id="74ca6-143">열려 있는 폼 수가 0 인 경우 다음 현재 스레드가 종료 될 호출 하 여는 <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="74ca6-143">When the number of open forms is equal to 0, then current thread is exited by calling the <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> method.</span></span> <span data-ttu-id="74ca6-144">폼의 수를 증가 시켜 추적는 `formCount` 양식에 표시 되 면 변수 및 감소는 폼이 닫힌 경우.</span><span class="sxs-lookup"><span data-stu-id="74ca6-144">The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.</span></span>  
  
 <span data-ttu-id="74ca6-145">간 결함을 위해 일부 코드가 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="74ca6-146">참조 <xref:System.Windows.Forms.ApplicationContext> 전체 코드 샘플에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-146">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#3)]
 [!code-csharp[Application#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#3)]
 [!code-vb[Application#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitThreadCore">
      <MemberSignature Language="C#" Value="protected virtual void ExitThreadCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExitThreadCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExitThreadCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExitThreadCore();" />
      <MemberSignature Language="F#" Value="abstract member ExitThreadCore : unit -&gt; unit&#xA;override this.ExitThreadCore : unit -&gt; unit" Usage="applicationContext.ExitThreadCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74ca6-147">스레드의 메시지 루프를 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-147">Terminates the message loop of the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-148">이 메서드는 <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-148">This method is called from <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74ca6-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> 및 <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> 스레드가 종료 되기를 원인 실제로 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="74ca6-150">이러한 메서드를 발생 시킬 합니다 <xref:System.Windows.Forms.Application.ThreadExit> 는 이벤트를 <xref:System.Windows.Forms.Application> 개체에서 수신 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-150">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="74ca6-151"><xref:System.Windows.Forms.Application> 개체에는 다음 스레드가 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-151">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ApplicationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="applicationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74ca6-152">가비지 수집에 의해 응용 프로그램 컨텍스트가 회수되기 전에 리소스를 해제하고 다른 정리 작업을 수행하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-152">Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-153">이 메서드를 재정의 <xref:System.Object.Finalize%2A?displayProperty=nameWithType> 를 호출 하 여 리소스를 정리 및 `Dispose(false)`합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-153">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="74ca6-154">`Dispose(Boolean)`를 재정의하여 정리 작업을 사용자 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-154">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="74ca6-155">애플리케이션 코드는이 메서드를 호출 하지 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기에 의해 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지를 수집 하는 동안 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="74ca6-155">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="74ca6-156">자세한 내용은 [Finalize 메서드 및 소멸자](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))를 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-156">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberSignature Language="VB.NET" Value="Public Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainForm : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74ca6-157">컨텍스트로 사용할 <see cref="T:System.Windows.Forms.Form" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-157">Gets or sets the <see cref="T:System.Windows.Forms.Form" /> to use as context.</span></span></summary>
        <value><span data-ttu-id="74ca6-158">컨텍스트로 사용할 <see cref="T:System.Windows.Forms.Form" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-158">The <see cref="T:System.Windows.Forms.Form" /> to use as context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-159">이 속성에는 기본 결정 <xref:System.Windows.Forms.Form> 이 컨텍스트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-159">This property determines the main <xref:System.Windows.Forms.Form> for this context.</span></span> <span data-ttu-id="74ca6-160">이 속성은 언제 든 지 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-160">This property can change at any time.</span></span> <span data-ttu-id="74ca6-161">경우 <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> 은 재정의 되지 않으면 스레드의 메시지 루프 종료 시기는 `mainForm` 매개 변수를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-161">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when the `mainForm` parameter closes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMainFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnMainFormClosed (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMainFormClosed(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMainFormClosed (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMainFormClosed(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMainFormClosed : obj * EventArgs -&gt; unit&#xA;override this.OnMainFormClosed : obj * EventArgs -&gt; unit" Usage="applicationContext.OnMainFormClosed (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="74ca6-162">이벤트를 발생시킨 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-162">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="74ca6-163">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-163">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="74ca6-164"><see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" /> 이벤트를 발생시키는 <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" />를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-164">Calls <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, which raises the <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-165">이 메서드의 기본 구현을 호출 <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-165">The default implementation of this method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ApplicationContext.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74ca6-166">컨트롤에 대한 데이터가 들어 있는 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-166">Gets or sets an object that contains data about the control.</span></span></summary>
        <value><span data-ttu-id="74ca6-167">컨트롤에 대한 데이터가 포함된 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-167">An <see cref="T:System.Object" /> that contains data about the control.</span></span> <span data-ttu-id="74ca6-168">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-168">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74ca6-169">파생 된 형식은 <xref:System.Object> 클래스는이 속성에 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-169">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="74ca6-170">경우는 <xref:System.Windows.Forms.ApplicationContext.Tag%2A> Windows Forms 디자이너를 통해 속성을 설정 하면 텍스트에만 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-170">If the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="74ca6-171">일반적인 용도 <xref:System.Windows.Forms.ApplicationContext.Tag%2A> 속성 컨트롤과 밀접 하 게 연결 된 데이터를 저장 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-171">A common use for the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="74ca6-172">예를 들어, 고객에 대 한 정보를 표시 하는 컨트롤에 있는 경우 저장할 수 있습니다는 <xref:System.Data.DataSet> 제어 하는 고객의 주문 기록이 포함 된 <xref:System.Windows.Forms.ApplicationContext.Tag%2A> 속성 데이터를 신속 하 게 액세스할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-172">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadExit">
      <MemberSignature Language="C#" Value="public event EventHandler ThreadExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ApplicationContext.ThreadExit" />
      <MemberSignature Language="VB.NET" Value="Public Event ThreadExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ThreadExit;" />
      <MemberSignature Language="F#" Value="member this.ThreadExit : EventHandler " Usage="member this.ThreadExit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74ca6-173"><see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />를 호출하여 스레드의 메시지 루프를 종료할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-173">Occurs when the message loop of the thread should be terminated, by calling <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74ca6-174">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-174">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="74ca6-175">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ApplicationContext.ThreadExit> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-175">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span> <span data-ttu-id="74ca6-176">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-176">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="74ca6-177">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-177">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="74ca6-178">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ApplicationContext> 라는 `ApplicationContext1`합니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-178">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`.</span></span> <span data-ttu-id="74ca6-179">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.ApplicationContext.ThreadExit> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="74ca6-179">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#75)]
 [!code-vb[System.Windows.Forms.EventExamples#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>