<Type Name="DataGridViewCellCollection" FullName="System.Windows.Forms.DataGridViewCellCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="600f1a2eb8523341b21e59f2e86846bdd94f9c39" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57944924" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewCellCollection : System.Windows.Forms.BaseCollection, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellCollection extends System.Windows.Forms.BaseCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellCollection&#xA;Inherits BaseCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellCollection : System::Windows::Forms::BaseCollection, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type DataGridViewCellCollection = class&#xA;    inherit BaseCollection&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.BaseCollection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="47f09-101"><see cref="T:System.Windows.Forms.DataGridViewRow" />의 셀 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-101">Represents a collection of cells in a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-102"><xref:System.Windows.Forms.DataGridViewCellCollection> 개체에서 검색 되는 <xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-102"><xref:System.Windows.Forms.DataGridViewCellCollection> objects are retrieved by the <xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
    <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellCollection (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.#ctor(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellCollection(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewCellCollection : System.Windows.Forms.DataGridViewRow -&gt; System.Windows.Forms.DataGridViewCellCollection" Usage="new System.Windows.Forms.DataGridViewCellCollection dataGridViewRow" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow"><span data-ttu-id="47f09-103">컬렉션을 소유하는 <see cref="T:System.Windows.Forms.DataGridViewRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-103">The <see cref="T:System.Windows.Forms.DataGridViewRow" /> that owns the collection.</span></span></param>
        <summary><span data-ttu-id="47f09-104"><see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-104">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.DataGridViewCell dataGridViewCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.DataGridViewCell dataGridViewCell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.Add(System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::DataGridViewCell ^ dataGridViewCell);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.DataGridViewCell -&gt; int&#xA;override this.Add : System.Windows.Forms.DataGridViewCell -&gt; int" Usage="dataGridViewCellCollection.Add dataGridViewCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCell"><span data-ttu-id="47f09-105">컬렉션에 추가할 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-105">A <see cref="T:System.Windows.Forms.DataGridViewCell" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="47f09-106">셀을 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-106">Adds a cell to the collection.</span></span></summary>
        <returns><span data-ttu-id="47f09-107">새 요소를 삽입할 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-107">The position in which to insert the new element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-108">이 메서드를 사용 하 여 채우기는 <xref:System.Windows.Forms.DataGridViewRow> 셀 행을 추가 하기 전에 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-108">Use this method to populate a <xref:System.Windows.Forms.DataGridViewRow> with cells before you add the row to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="47f09-109">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-109">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-110">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-110">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span>  
  
<span data-ttu-id="47f09-111">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-111">-or-</span></span> 
 <span data-ttu-id="47f09-112"><paramref name="dataGridViewCell" />이 이미 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-112"><paramref name="dataGridViewCell" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (params System.Windows.Forms.DataGridViewCell[] dataGridViewCells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.DataGridViewCell[] dataGridViewCells) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.AddRange(System.Windows.Forms.DataGridViewCell[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (ParamArray dataGridViewCells As DataGridViewCell())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(... cli::array &lt;System::Windows::Forms::DataGridViewCell ^&gt; ^ dataGridViewCells);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.DataGridViewCell[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.DataGridViewCell[] -&gt; unit" Usage="dataGridViewCellCollection.AddRange dataGridViewCells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCells" Type="System.Windows.Forms.DataGridViewCell[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataGridViewCells"><span data-ttu-id="47f09-113">컬렉션에 추가할 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-113">The array of <see cref="T:System.Windows.Forms.DataGridViewCell" /> objects to add to the collection.</span></span></param>
        <summary><span data-ttu-id="47f09-114">셀 배열을 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-114">Adds an array of cells to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-115">이 메서드를 사용 하 여 채우기는 <xref:System.Windows.Forms.DataGridViewRow> 셀 행을 추가 하기 전에 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-115">Use this method to populate a <xref:System.Windows.Forms.DataGridViewRow> with cells before you add the row to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="47f09-116">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-116">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47f09-117"><paramref name="dataGridViewCells" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-117"><paramref name="dataGridViewCells" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-118">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-118">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span>  
  
<span data-ttu-id="47f09-119">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-119">-or-</span></span> 
<span data-ttu-id="47f09-120"><paramref name="dataGridViewCells" />의 값 중 하나 이상이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-120">At least one value in <paramref name="dataGridViewCells" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="47f09-121">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-121">-or-</span></span> 
<span data-ttu-id="47f09-122"><paramref name="dataGridViewCells" />의 셀 중 하나 이상이 이미 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-122">At least one cell in <paramref name="dataGridViewCells" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span>  
  
<span data-ttu-id="47f09-123">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-123">-or-</span></span> 
<span data-ttu-id="47f09-124"><paramref name="dataGridViewCells" />의 값 중 두 개 이상이 같은 <see cref="T:System.Windows.Forms.DataGridViewCell" />에 대한 참조인 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-124">At least two values in <paramref name="dataGridViewCells" /> are references to the same <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="dataGridViewCellCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47f09-125">컬렉션에서 셀을 모두 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-125">Clears all cells from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-126">사용 하 여 행을 포함 하는 추가 하기 전에 컬렉션을 변경 하려면이 메서드는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-126">Use this method to alter the collection before you add the containing row to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="47f09-127">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-127">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-128">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-128">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridViewCellCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47f09-129">컬렉션이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-129">Occurs when the collection is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47f09-130">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-130">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="47f09-131">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridViewCellCollection.CollectionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-131">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridViewCellCollection.CollectionChanged> event.</span></span> <span data-ttu-id="47f09-132">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-132">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="47f09-133">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-133">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="47f09-134">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridViewCellCollection> 라는 `DataGridViewCellCollection1`합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-134">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridViewCellCollection> named `DataGridViewCellCollection1`.</span></span> <span data-ttu-id="47f09-135">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridViewCellCollection.CollectionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-135">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridViewCellCollection.CollectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#371](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#371)]
 [!code-vb[System.Windows.Forms.EventExamples#371](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#371)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Windows.Forms.DataGridViewCell dataGridViewCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Forms.DataGridViewCell dataGridViewCell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.Contains(System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::Forms::DataGridViewCell ^ dataGridViewCell);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Windows.Forms.DataGridViewCell -&gt; bool&#xA;override this.Contains : System.Windows.Forms.DataGridViewCell -&gt; bool" Usage="dataGridViewCellCollection.Contains dataGridViewCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCell"><span data-ttu-id="47f09-136">컬렉션에서 찾을 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-136">A <see cref="T:System.Windows.Forms.DataGridViewCell" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="47f09-137">지정된 셀이 컬렉션에 들어 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-137">Determines whether the specified cell is contained in the collection.</span></span></summary>
        <returns><span data-ttu-id="47f09-138"><paramref name="dataGridViewCell" />이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-138"><see langword="true" /> if <paramref name="dataGridViewCell" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Forms.DataGridViewCell[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Forms.DataGridViewCell[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataGridViewCell(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Forms::DataGridViewCell ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Windows.Forms.DataGridViewCell[] * int -&gt; unit" Usage="dataGridViewCellCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Forms.DataGridViewCell[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="47f09-139">내용을 복사할 대상 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-139">The destination array to which the contents will be copied.</span></span></param>
        <param name="index"><span data-ttu-id="47f09-140">복사가 시작될 <paramref name="array" /> 내 요소의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-140">The index of the element in <paramref name="array" /> at which to start copying.</span></span></param>
        <summary><span data-ttu-id="47f09-141">배열 내의 지정된 위치에서 배열로 셀의 전체 컬렉션을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-141">Copies the entire collection of cells into an array at a specified location within the array.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.DataGridViewCell dataGridViewCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.DataGridViewCell dataGridViewCell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.IndexOf(System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::DataGridViewCell ^ dataGridViewCell);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.DataGridViewCell -&gt; int" Usage="dataGridViewCellCollection.IndexOf dataGridViewCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCell"><span data-ttu-id="47f09-142">컬렉션에서 찾을 셀입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-142">The cell to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="47f09-143">지정된 셀의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-143">Returns the index of the specified cell.</span></span></summary>
        <returns><span data-ttu-id="47f09-144"><paramref name="dataGridViewCell" /> 매개 변수가 컬렉션에 있으면 이 항목 값의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-144">The zero-based index of the value of <paramref name="dataGridViewCell" /> parameter, if it is found in the collection; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.Forms.DataGridViewCell dataGridViewCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Forms.DataGridViewCell dataGridViewCell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Forms::DataGridViewCell ^ dataGridViewCell);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Forms.DataGridViewCell -&gt; unit&#xA;override this.Insert : int * System.Windows.Forms.DataGridViewCell -&gt; unit" Usage="dataGridViewCellCollection.Insert (index, dataGridViewCell)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="dataGridViewCell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47f09-145"><paramref name="dataGridViewCell" />을 배치할 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-145">The zero-based index at which to place <paramref name="dataGridViewCell" />.</span></span></param>
        <param name="dataGridViewCell"><span data-ttu-id="47f09-146">삽입할 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-146">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> to insert.</span></span></param>
        <summary><span data-ttu-id="47f09-147">지정된 인덱스의 컬렉션에 셀을 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-147">Inserts a cell into the collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-148">사용 하 여 행을 포함 하는 추가 하기 전에 컬렉션을 변경 하려면이 메서드는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-148">Use this method to alter the collection before you add the containing row to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="47f09-149">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-149">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-150">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-150">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span>  
  
<span data-ttu-id="47f09-151">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-151">-or-</span></span> 
 <span data-ttu-id="47f09-152"><paramref name="dataGridViewCell" />이 이미 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-152"><paramref name="dataGridViewCell" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47f09-153">지정한 위치에 있는 항목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-153">Gets or sets the item at the provided location.</span></span> <span data-ttu-id="47f09-154">C#에서 이 속성은 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> 클래스의 인덱서입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-154">In C#, this property is the indexer for the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[int] { System::Windows::Forms::DataGridViewCell ^ get(int index); void set(int index, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridViewCellCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47f09-155">가져오거나 설정할 셀의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-155">The zero-based index of the cell to get or set.</span></span></param>
        <summary><span data-ttu-id="47f09-156">지정된 인덱스 위치의 셀을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-156">Gets or sets the cell at the provided index location.</span></span> <span data-ttu-id="47f09-157">C#에서 이 속성은 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> 클래스의 인덱서입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-157">In C#, this property is the indexer for the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> class.</span></span></summary>
        <value><span data-ttu-id="47f09-158">지정된 인덱스에 저장된 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-158">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> stored at the given index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47f09-159">이 속성을 설정할 때 지정된 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-159">The specified value when setting this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-160">이 속성을 설정할 때 지정된 셀이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-160">The specified cell when setting this property already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span>  
  
<span data-ttu-id="47f09-161">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-161">-or-</span></span> 
<span data-ttu-id="47f09-162">이 속성을 설정할 때 지정된 셀이 이미 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-162">The specified cell when setting this property already belongs to a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47f09-163"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-163"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="47f09-164">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-164">-or-</span></span> 
 <span data-ttu-id="47f09-165"><paramref name="index" />가 컬렉션의 셀 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-165"><paramref name="index" /> is equal to or greater than the number of cells in the collection.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[System::String ^] { System::Windows::Forms::DataGridViewCell ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridViewCellCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="47f09-166">셀을 가져오거나 설정할 열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-166">The name of the column in which to get or set the cell.</span></span></param>
        <summary><span data-ttu-id="47f09-167">지정된 이름의 열에 있는 셀을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-167">Gets or sets the cell in the column with the provided name.</span></span> <span data-ttu-id="47f09-168">C#에서 이 속성은 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> 클래스의 인덱서입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-168">In C#, this property is the indexer for the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> class.</span></span></summary>
        <value><span data-ttu-id="47f09-169">지정된 이름의 열에 저장된 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-169">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> stored in the column with the given name.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47f09-170"><paramref name="columnName" />과 일치하는 이름의 열이 컨트롤에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-170"><paramref name="columnName" /> does not match the name of any columns in the control.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47f09-171">이 속성을 설정할 때 지정된 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-171">The specified value when setting this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-172">이 속성을 설정할 때 지정된 셀이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-172">The specified cell when setting this property already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span>  
  
<span data-ttu-id="47f09-173">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-173">-or-</span></span> 
<span data-ttu-id="47f09-174">이 속성을 설정할 때 지정된 셀이 이미 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-174">The specified cell when setting this property already belongs to a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Windows.Forms.DataGridViewCellCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47f09-175"><see cref="T:System.Collections.ArrayList" /> 개체가 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-175">Gets an <see cref="T:System.Collections.ArrayList" /> containing <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> objects.</span></span></summary>
        <value><span data-ttu-id="47f09-176"><see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="47f09-176"><see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnCollectionChanged (e As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="dataGridViewCellCollection.OnCollectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="47f09-177">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-177">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="47f09-178"><see cref="E:System.Windows.Forms.DataGridViewCellCollection.CollectionChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-178">Raises the <see cref="E:System.Windows.Forms.DataGridViewCellCollection.CollectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-179">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-179">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="47f09-180">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-180">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="47f09-181">또한 <xref:System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-181">The <xref:System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="47f09-182">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-182">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="47f09-183">파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-183">When overriding <see cref="M:System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.DataGridViewCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.DataGridViewCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.Remove(System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (cell As DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::DataGridViewCell ^ cell);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.DataGridViewCell -&gt; unit&#xA;override this.Remove : System.Windows.Forms.DataGridViewCell -&gt; unit" Usage="dataGridViewCellCollection.Remove cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="cell"><span data-ttu-id="47f09-184">컬렉션에서 제거할 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-184">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="47f09-185">컬렉션에서 지정한 셀을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-185">Removes the specified cell from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-186">사용 하 여 행을 포함 하는 추가 하기 전에 컬렉션을 변경 하려면이 메서드는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-186">Use this method to alter the collection before you add the containing row to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="47f09-187">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-187">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-188">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-188">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47f09-189"><paramref name="cell" />을 컬렉션에서 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-189"><paramref name="cell" /> could not be found in the collection.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="dataGridViewCellCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47f09-190">제거할 <see cref="T:System.Windows.Forms.DataGridViewCell" />의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-190">The zero-based index of the <see cref="T:System.Windows.Forms.DataGridViewCell" /> to be removed.</span></span></param>
        <summary><span data-ttu-id="47f09-191">지정한 인덱스에서 해당 셀을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-191">Removes the cell at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-192">사용 하 여 행을 포함 하는 추가 하기 전에 컬렉션을 변경 하려면이 메서드는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-192">Use this method to alter the collection before you add the containing row to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="47f09-193">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-193">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-194">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-194">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="47f09-195">컬렉션에서 복사한 요소의 대상인 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-195">The one-dimensional array that is the destination of the elements copied from the collection.</span></span> <span data-ttu-id="47f09-196">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-196">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="47f09-197">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-197">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="47f09-198">컬렉션의 요소를 지정한 배열의 지정한 인덱스에서 시작하는 위치에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-198">Copies the elements of the collection to the specified array, starting at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-199">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-200"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-200">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47f09-201"><paramref name="array" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-201"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47f09-202"><paramref name="index" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-202"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47f09-203"><paramref name="array" />가 다차원 배열인 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-203"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="47f09-204">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-204">-or-</span></span> 
<span data-ttu-id="47f09-205"><see cref="T:System.Windows.Forms.DataGridViewCellCollection" />의 요소 수가 <paramref name="index" />부터 <paramref name="array" /> 끝까지의 사용 가능한 공간보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-205">The number of elements in the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="47f09-206"><see cref="T:System.Windows.Forms.DataGridViewCellCollection" />이 <paramref name="array" /> 형식으로 자동 캐스팅되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-206">The <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> cannot be cast automatically to the type of <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47f09-207">컬렉션에 포함된 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-207">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="47f09-208"><see cref="T:System.Windows.Forms.DataGridViewCellCollection" />의 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-208">The number of elements in the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-209">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-210"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-210">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47f09-211">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-211">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="47f09-212">모든 경우에 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-212"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-213">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-214"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-214">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47f09-215">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-215">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="47f09-216"><see cref="T:System.Windows.Forms.DataGridViewCellCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-216">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-217">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-217">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-218"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-218">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47f09-219">컬렉션을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-219">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="47f09-220">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-220">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-221">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-221">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-222"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IEnumerable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-222">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47f09-223">컬렉션에 추가할 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-223">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="47f09-224">컬렉션에 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-224">Adds an item to the collection.</span></span></summary>
        <returns><span data-ttu-id="47f09-225">새 요소가 삽입된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-225">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-226">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-226">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 <span data-ttu-id="47f09-227">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-227">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-228"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-228">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="47f09-229"><paramref name="value" />가 <see cref="T:System.Windows.Forms.DataGridViewCell" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-229"><paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-230">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-230">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span>  
  
<span data-ttu-id="47f09-231">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-231">-or-</span></span> 
 <span data-ttu-id="47f09-232"><paramref name="value" />가 이미 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 속해 있는 셀을 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-232"><paramref name="value" /> represents a cell that already belongs to a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47f09-233">컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-233">Clears the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-234">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-234">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 <span data-ttu-id="47f09-235">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-235">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-236"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-236">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-237">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-237">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47f09-238"><see cref="T:System.Windows.Forms.DataGridViewCellCollection" />에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-238">The object to locate in the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />.</span></span></param>
        <summary><span data-ttu-id="47f09-239">컬렉션에 지정된 값이 들어 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-239">Determines whether the collection contains the specified value.</span></span></summary>
        <returns><span data-ttu-id="47f09-240"><paramref name="value" />가 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />에 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-240"><see langword="true" /> if the <paramref name="value" /> is found in the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-241">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-242"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-242">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47f09-243"><see cref="T:System.Windows.Forms.DataGridViewCellCollection" />에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-243">The object to locate in the <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />.</span></span></param>
        <summary><span data-ttu-id="47f09-244">컬렉션에서 특정 항목의 인덱스를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-244">Determines the index of a specific item in a collection.</span></span></summary>
        <returns><span data-ttu-id="47f09-245">목록에 값이 있으면 해당 값의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-245">The index of value if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-246">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-246">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-247"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-247">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47f09-248">값을 삽입할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-248">The zero-based index at which value should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="47f09-249"><see cref="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />에 삽입할 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-249">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> to insert into the <see cref="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="47f09-250">지정된 위치의 컬렉션에 항목을 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-250">Inserts an item into the collection at the specified position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-251">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-251">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 <span data-ttu-id="47f09-252">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-252">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-253"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-253">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="47f09-254"><paramref name="value" />가 <see cref="T:System.Windows.Forms.DataGridViewCell" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-254"><paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-255">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-255">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span>  
  
<span data-ttu-id="47f09-256">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-256">-or-</span></span> 
 <span data-ttu-id="47f09-257"><paramref name="dataGridViewCell" />이 이미 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-257"><paramref name="dataGridViewCell" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47f09-258">컬렉션의 크기가 고정되어 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-258">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="47f09-259">모든 경우에 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-259"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-260">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-260">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-261"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-261">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47f09-262">컬렉션의 크기가 고정되어 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-262">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="47f09-263">모든 경우에 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-263"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-264">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-265"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-265">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47f09-266">가져오거나 설정할 항목의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-266">The index of the item to get or set.</span></span></param>
        <summary><span data-ttu-id="47f09-267">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-267">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="47f09-268">지정된 인덱스의 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-268">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-269">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-270"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-270">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="47f09-271">이 속성을 설정할 때 지정된 값이 <see cref="T:System.Windows.Forms.DataGridViewCell" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-271">The specified value when setting this property is not a <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47f09-272">이 속성을 설정할 때 지정된 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-272">The specified value when setting this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-273">이 속성을 설정할 때 지정된 셀이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-273">The specified cell when setting this property already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span>  
  
<span data-ttu-id="47f09-274">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-274">-or-</span></span> 
<span data-ttu-id="47f09-275">이 속성을 설정할 때 지정된 셀이 이미 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-275">The specified cell when setting this property already belongs to a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47f09-276"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-276"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="47f09-277">또는</span><span class="sxs-lookup"><span data-stu-id="47f09-277">-or-</span></span> 
 <span data-ttu-id="47f09-278"><paramref name="index" />가 컬렉션의 셀 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-278"><paramref name="index" /> is equal to or greater than the number of cells in the collection.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="47f09-279">컬렉션에서 제거할 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-279">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="47f09-280">컬렉션에서 첫 번째로 나타나는 특정 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-280">Removes the first occurrence of a specific object from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-281">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-281">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 <span data-ttu-id="47f09-282">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-283"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-283">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="47f09-284"><paramref name="value" />가 <see cref="T:System.Windows.Forms.DataGridViewCell" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-284"><paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-285">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-285">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47f09-286"><paramref name="cell" />을 컬렉션에서 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-286"><paramref name="cell" /> could not be found in the collection.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="47f09-287"><see cref="T:System.Windows.Forms.DataGridViewCell" />을 제거할 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-287">The position at which to remove the <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span></span></param>
        <summary><span data-ttu-id="47f09-288">지정된 인덱스의 <see cref="T:System.Windows.Forms.DataGridViewCell" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-288">Removes the <see cref="T:System.Windows.Forms.DataGridViewCell" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f09-289">컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-289">Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.</span></span>  
  
 <span data-ttu-id="47f09-290">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47f09-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47f09-291"><xref:System.Windows.Forms.DataGridViewCellCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f09-291">It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="47f09-292">이 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />을 소유하는 행이 이미 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="47f09-292">The row that owns this <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> already belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>