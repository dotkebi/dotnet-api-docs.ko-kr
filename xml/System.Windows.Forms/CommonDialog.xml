<Type Name="CommonDialog" FullName="System.Windows.Forms.CommonDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="708aceab46bdc904ee30d16baf231d1011d520a7" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56381817" /></Metadata><TypeSignature Language="C#" Value="public abstract class CommonDialog : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonDialog extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonDialog&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonDialog abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CommonDialog = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="71e75-101">화면에 대화 상자를 표시하는 데 사용되는 기본 클래스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-101">Specifies the base class used for displaying dialog boxes on the screen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-102">상속 된 클래스를 구현 하는 데 필요한 <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> 를 호출 하 여 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> 특정 일반적인 대화 상자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-102">Inherited classes are required to implement <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> by invoking <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to create a specific common dialog box.</span></span> <span data-ttu-id="71e75-103">상속 된 클래스에서 선택적으로 재정의할 수 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 특정 대화 상자 후크 기능을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-103">Inherited classes can optionally override <xref:System.Windows.Forms.CommonDialog.HookProc%2A> to implement specific dialog box hook functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71e75-104">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.ColorDialog> 구현의 <xref:System.Windows.Forms.CommonDialog> 및 만들고 대화 상자를 보여 주는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-104">The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of <xref:System.Windows.Forms.CommonDialog> and illustrates creating and showing a dialog box.</span></span> <span data-ttu-id="71e75-105">이 예제에서는 메서드에 있는 기존 양식 내에서 호출 되는 한 <xref:System.Windows.Forms.TextBox> 및 <xref:System.Windows.Forms.Button> 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-105">This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.</span></span>  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommonDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71e75-106"><see cref="T:System.Windows.Forms.CommonDialog" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.CommonDialog" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CommonDialog.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71e75-107">일반 대화 상자의 도움말 단추를 클릭하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-107">Occurs when the user clicks the Help button on a common dialog box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-108">이벤트를 처리 하는 방법에 대 한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-108">For information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71e75-109">다음 코드 예제에서는 초기화 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ColorDialog> 개체 설정을 합니다 <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-109">The following code example demonstrates initializing a <xref:System.Windows.Forms.ColorDialog> object setting the <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> properties.</span></span> <span data-ttu-id="71e75-110"><xref:System.Windows.Forms.ColorDialog> 개체는 사용자 지정 색을 설정 하려면 사용자를 허용 하지 않지만 전체 집합이 기본 색을 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-110">The <xref:System.Windows.Forms.ColorDialog> object does not allow the user to set a custom color, but it allows the full set of basic colors to be displayed.</span></span> <span data-ttu-id="71e75-111">설정 하 여는 <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> 이하의 256 색을 사용 하 여 시스템에서 다른 색과 혼합 된 색을 표시 하면 속성을 false로 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-111">By setting the <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> property to false, it allows the display of colors that are combinations of other colors on systems with 256 or less colors.</span></span> <span data-ttu-id="71e75-112">또한이 예제에서는 설정 된 <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> 속성 및 처리를 <xref:System.Windows.Forms.CommonDialog.HelpRequest> 대화 상자에 대 한 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-112">The example also shows setting the <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> property and handling a <xref:System.Windows.Forms.CommonDialog.HelpRequest> event for a dialog box.</span></span> <span data-ttu-id="71e75-113">예제를 실행 하려면 호출을 폼에 다음 코드를 붙여 합니다 `InitializeColorDialog` 폼의 생성자 또는 `Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="71e75-113">To run the example, paste the following code in a form and call the `InitializeColorDialog` method in the form's constructor or `Load` method.</span></span> <span data-ttu-id="71e75-114">이 예제에서는 `Click` 단추의 이벤트의 예제에서 정의한 이벤트 처리기에 연결 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-114">This example requires that the `Click` event of the button is connected to the event handler defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HookProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="abstract member HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint&#xA;override this.HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="commonDialog.HookProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd"><span data-ttu-id="71e75-115">대화 상자 창에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-115">The handle to the dialog box window.</span></span></param>
        <param name="msg"><span data-ttu-id="71e75-116">받는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-116">The message being received.</span></span></param>
        <param name="wparam"><span data-ttu-id="71e75-117">메시지에 대한 추가 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-117">Additional information about the message.</span></span></param>
        <param name="lparam"><span data-ttu-id="71e75-118">메시지에 대한 추가 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-118">Additional information about the message.</span></span></param>
        <summary><span data-ttu-id="71e75-119">일반 대화 상자에 특정 기능을 추가하도록 재정의된 일반 대화 상자의 후크 프로시저를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-119">Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</span></span></summary>
        <returns><span data-ttu-id="71e75-120">기본 대화 상자 프로시저가 메시지를 처리하면 0 값이고 메시지를 무시하면 0이 아닌 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-120">A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-121">후크 프로시저는 함수는 애플리케이션에 도달 하기 전에 이벤트를 가로챌 수 있습니다 하는 메커니즘입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-121">A hook procedure is a mechanism by which a function can intercept events before they reach an application.</span></span> <span data-ttu-id="71e75-122">재정의 하는 경우는 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 에 대 한 메서드는 <xref:System.Windows.Forms.CommonDialog> 클래스 운영 체제의 운영 체제 메시지 창에 게시 하는 함수 재정의 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-122">When you override the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method for a <xref:System.Windows.Forms.CommonDialog> class, the operating system invokes your override of the function to post operating system messages to the window.</span></span>  
  
 <span data-ttu-id="71e75-123">기본적으로 후크 프로시저 화면 WM_INITDIALOG 메시지에 대 한 응답에서 대화 상자를 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-123">By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71e75-124">이 메서드는 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 를 방지 하기 위해 신뢰할 수 없는 코드에서 호출할 필요 하면 즉각적인 호출자만 할 <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> 권한.</span><span class="sxs-lookup"><span data-stu-id="71e75-124">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to prevent it from being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="71e75-125">코드는 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있는, 경우에 대 한 사용자 입력을 전달 하지 마십시오 <xref:System.Runtime.InteropServices.Marshal> 유효성 검사 없이 메서드 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-125">If your code can be called from partially trusted code, do not pass user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation.</span></span> <span data-ttu-id="71e75-126">사용 하 여 중요 한 제한 사항에 대해서는 `LinkDemand` 멤버 참조 [Demand 합니다. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-126">For important limitations on using the `LinkDemand` member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span>  
  
 <span data-ttu-id="71e75-127">이 속성에도 사용 합니다 <xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType> 보안 특성;이 멤버를 재정의 하 파생된 클래스에 있어야 합니다 `CustomPermission` 권한.</span><span class="sxs-lookup"><span data-stu-id="71e75-127">This property also uses the <xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType> security attribute; to override this member, the derived class must have the `CustomPermission` permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71e75-128">다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="71e75-128">The following code example demonstrates how to override the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method.</span></span> <span data-ttu-id="71e75-129">상속 된 클래스의 예제에서는 구성 된 <xref:System.Windows.Forms.CommonDialog> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-129">The example consists of a class that inherits the <xref:System.Windows.Forms.CommonDialog> class.</span></span> <span data-ttu-id="71e75-130">클래스의 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 재정의 예제 메서드의 평가 `msg` 특정 Windows 메시지에 대 한 상수 값에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-130">In the class's <xref:System.Windows.Forms.CommonDialog.HookProc%2A> override, the example evaluates the method's `msg` parameter against constant values for particular Windows messages.</span></span> <span data-ttu-id="71e75-131">경우는 `msg` 매개 변수가 지정된 된 상수와 같으면 예제에 전달 된 Windows 메시지를 식별 하는 추적 출력을 작성 합니다 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="71e75-131">If the `msg` parameter equals the specified constant, the example writes trace output identifying the Windows message that was passed to the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method.</span></span> <span data-ttu-id="71e75-132">이 예에서는 가정 하는 클래스를는 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 메서드를 상속을 선언 합니다 <xref:System.Windows.Forms.CommonDialog> 클래스.</span><span class="sxs-lookup"><span data-stu-id="71e75-132">This example assumes that the class in which the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method is declared inherits the <xref:System.Windows.Forms.CommonDialog> class.</span></span>  
  
 [!code-cpp[HookProc Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HookProc Example/CPP/fontdialogoverride.cpp#1)]
 [!code-csharp[HookProc Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HookProc Example/CS/fontdialogoverride.cs#1)]
 [!code-vb[HookProc Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HookProc Example/VB/fontdialogoverride.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="71e75-133">비관리 코드를 호출할 즉각적인 호출자가입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-133">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="71e75-134">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="71e75-134">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="71e75-135">상속 하는 클래스는 일반 대화 상자에 특정 기능을 추가 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-135">Inheriting classes can override this method to add specific functionality to a common dialog box.</span></span> <span data-ttu-id="71e75-136">재정의 하는 경우 <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="71e75-136">When overriding <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpRequest (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpRequest(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpRequest (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpRequest(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpRequest : EventArgs -&gt; unit&#xA;override this.OnHelpRequest : EventArgs -&gt; unit" Usage="commonDialog.OnHelpRequest e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="71e75-137">이벤트 데이터를 제공하는 <see cref="T:System.Windows.Forms.HelpEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-137">An <see cref="T:System.Windows.Forms.HelpEventArgs" /> that provides the event data.</span></span></param>
        <summary><span data-ttu-id="71e75-138"><see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-138">Raises the <see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-139">이 메서드는 도움말 단추를 클릭할 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-139">This method is invoked when the Help button is clicked.</span></span> <span data-ttu-id="71e75-140">상속 하는 클래스는 이벤트를 처리 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-140">Inheriting classes can override this method to handle the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerWndProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr OwnerWndProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int OwnerWndProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OwnerWndProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr OwnerWndProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="abstract member OwnerWndProc : nativeint * int * nativeint * nativeint -&gt; nativeint&#xA;override this.OwnerWndProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="commonDialog.OwnerWndProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd"><span data-ttu-id="71e75-141">보낼 메시지의 창 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-141">The window handle of the message to send.</span></span></param>
        <param name="msg"><span data-ttu-id="71e75-142">보낼 Win32 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-142">The Win32 message to send.</span></span></param>
        <param name="wparam"><span data-ttu-id="71e75-143">메시지와 함께 보낼 <paramref name="wparam" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-143">The <paramref name="wparam" /> to send with the message.</span></span></param>
        <param name="lparam"><span data-ttu-id="71e75-144">메시지와 함께 보낼 <paramref name="lparam" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-144">The <paramref name="lparam" /> to send with the message.</span></span></param>
        <summary><span data-ttu-id="71e75-145">일반 대화 상자에 특정 기능을 추가하도록 재정의된 소유자 창 프로시저를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-145">Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.</span></span></summary>
        <returns><span data-ttu-id="71e75-146">메시지 처리의 결과로, 보낸 메시지에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-146">The result of the message processing, which is dependent on the message sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-147">일반 대화 상자의 소유자 창에 메시지를 보낼 때이 제어가 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-147">Control is transferred here when messages are sent to the owner window of the common dialog box.</span></span> <span data-ttu-id="71e75-148">상속 하는 클래스는 일반 대화 상자에 특정 기능을 추가 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-148">Inheriting classes can override this method to add specific functionality to a common dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="71e75-149">비관리 코드를 호출할 즉각적인 호출자가입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-149">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="71e75-150">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="71e75-150">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public abstract void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="commonDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71e75-151">파생 클래스에서 재정의되면 일반 대화 상자의 속성을 기본값으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-151">When overridden in a derived class, resets the properties of a common dialog box to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="71e75-152">이 메서드를 호출 하는 관리 되지 않는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-152">for unmanaged code to call this method.</span></span> <span data-ttu-id="71e75-153">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="71e75-153">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="71e75-154">클래스를 상속 하면 해당 속성을 다시 설정 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-154">Inheriting classes can override this method to reset their properties.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected abstract bool RunDialog (IntPtr hwndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool RunDialog(native int hwndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function RunDialog (hwndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool RunDialog(IntPtr hwndOwner);" />
      <MemberSignature Language="F#" Value="abstract member RunDialog : nativeint -&gt; bool" Usage="commonDialog.RunDialog hwndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwndOwner"><span data-ttu-id="71e75-155">일반 대화 상자에 대한 소유자 창의 창 핸들을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-155">A value that represents the window handle of the owner window for the common dialog box.</span></span></param>
        <summary><span data-ttu-id="71e75-156">파생 클래스에서 재정의된 경우 일반 대화 상자를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-156">When overridden in a derived class, specifies a common dialog box.</span></span></summary>
        <returns><span data-ttu-id="71e75-157">대화 상자가 성공적으로 실행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-157"><see langword="true" /> if the dialog box was successfully run; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-158">이 메서드는 사용자의 일반 대화 상자를 호출할 때 호출 됩니다 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, 및의 상속 된 클래스에서 재정의 해야 합니다 <xref:System.Windows.Forms.CommonDialog> 특정 일반 대화 상자를 구현 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-158">This method is invoked when the user of a common dialog box calls <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, and it must be overridden by inherited classes of <xref:System.Windows.Forms.CommonDialog> to implement a specific common dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="71e75-159">이 메서드를 호출 하는 관리 되지 않는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-159">for unmanaged code to call this method.</span></span> <span data-ttu-id="71e75-160">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="71e75-160">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.CommonDialog.ShowDialog" />
        <altmember cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71e75-161">일반 대화 상자를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-161">Runs a common dialog box.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; System.Windows.Forms.DialogResult" Usage="commonDialog.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71e75-162">기본 소유자로 일반 대화 상자를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-162">Runs a common dialog box with a default owner.</span></span></summary>
        <returns><span data-ttu-id="71e75-163">사용자가 대화 상자에서 [확인]을 클릭하면 <see cref="F:System.Windows.Forms.DialogResult.OK" />이고, 그렇지 않으면 <see cref="F:System.Windows.Forms.DialogResult.Cancel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-163"><see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks OK in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-164">이 메서드는 <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-164">This method implements <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71e75-165">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.ColorDialog> 구현의 <xref:System.Windows.Forms.CommonDialog> 및 만들고 대화 상자를 보여 주는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-165">The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of <xref:System.Windows.Forms.CommonDialog> and illustrates creating and showing a dialog box.</span></span> <span data-ttu-id="71e75-166">이 예제에서는 메서드에 있는 기존 양식 내에서 호출 되는 한 <xref:System.Windows.Forms.TextBox> 및 <xref:System.Windows.Forms.Button> 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-166">This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.</span></span>  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="71e75-167">인쇄 하는 <see cref="T:System.Windows.Forms.PrintDialog" />합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-167">to print from a <see cref="T:System.Windows.Forms.PrintDialog" />.</span></span> <span data-ttu-id="71e75-168">연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span><span class="sxs-lookup"><span data-stu-id="71e75-168">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="71e75-169">이 메서드를 호출 하 여 안전한 하위 창에서.</span><span class="sxs-lookup"><span data-stu-id="71e75-169">for safe subwindows to call this method.</span></span> <span data-ttu-id="71e75-170">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="71e75-170">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
        <altmember cref="T:System.Windows.Forms.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : System.Windows.Forms.IWin32Window -&gt; System.Windows.Forms.DialogResult" Usage="commonDialog.ShowDialog owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="71e75-171">모달 대화 상자를 소유할 최상위 창을 나타내는 <see cref="T:System.Windows.Forms.IWin32Window" />을(를) 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-171">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span></span></param>
        <summary><span data-ttu-id="71e75-172">지정된 소유자로 일반 대화 상자를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-172">Runs a common dialog box with the specified owner.</span></span></summary>
        <returns><span data-ttu-id="71e75-173">사용자가 대화 상자에서 **확인**을 클릭하면 <see cref="F:System.Windows.Forms.DialogResult.OK" />이고, 그렇지 않으면 <see cref="F:System.Windows.Forms.DialogResult.Cancel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-173"><see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks **OK** in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-174">이 버전의는 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> 메서드를 사용 하면 특정 형식 또는 표시 되는 대화 상자를 소유 하는 컨트롤을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-174">This version of the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method allows you to specify a specific form or control that will own the dialog box that is shown.</span></span> <span data-ttu-id="71e75-175">매개 변수가 없는이 메서드의 버전을 사용 하면 대화 상자가 표시 되 고 애플리케이션의 현재 활성 창에서 자동으로 소유 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-175">If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="71e75-176">인쇄 하는 <see cref="T:System.Windows.Forms.PrintDialog" />합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-176">to print from a <see cref="T:System.Windows.Forms.PrintDialog" />.</span></span> <span data-ttu-id="71e75-177">연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span><span class="sxs-lookup"><span data-stu-id="71e75-177">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="71e75-178">이 메서드를 호출 하 여 안전한 하위 창에서.</span><span class="sxs-lookup"><span data-stu-id="71e75-178">for safe subwindows to call this method.</span></span> <span data-ttu-id="71e75-179">연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="71e75-179">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CommonDialog.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.CommonDialog.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71e75-180">컨트롤에 대한 데이터가 들어 있는 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-180">Gets or sets an object that contains data about the control.</span></span></summary>
        <value><span data-ttu-id="71e75-181"><see cref="T:System.Windows.Forms.CommonDialog" />에 대한 데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-181">The object that contains data about the <see cref="T:System.Windows.Forms.CommonDialog" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71e75-182">이 속성을 사용 하 여 컨트롤에 대 한 임의의 정보를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="71e75-182">Use this property to store arbitrary information about the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>