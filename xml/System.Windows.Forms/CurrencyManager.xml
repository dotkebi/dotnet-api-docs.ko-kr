<Type Name="CurrencyManager" FullName="System.Windows.Forms.CurrencyManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f03783a5b916963541b9e896c90a98d618b29bed" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57935278" /></Metadata><TypeSignature Language="C#" Value="public class CurrencyManager : System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CurrencyManager extends System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CurrencyManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CurrencyManager&#xA;Inherits BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CurrencyManager : System::Windows::Forms::BindingManagerBase" />
  <TypeSignature Language="F#" Value="type CurrencyManager = class&#xA;    inherit BindingManagerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.BindingManagerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8067d-101"><see cref="T:System.Windows.Forms.Binding" /> 개체의 목록을 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-101">Manages a list of <see cref="T:System.Windows.Forms.Binding" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-102">합니다 <xref:System.Windows.Forms.CurrencyManager> 에서 파생 되는 <xref:System.Windows.Forms.BindingManagerBase> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-102">The <xref:System.Windows.Forms.CurrencyManager> derives from the <xref:System.Windows.Forms.BindingManagerBase> class.</span></span> <span data-ttu-id="8067d-103">사용 합니다 <xref:System.Windows.Forms.BindingContext> 중 하나를 반환 하는 <xref:System.Windows.Forms.CurrencyManager> 또는 <xref:System.Windows.Forms.PropertyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-103">Use the <xref:System.Windows.Forms.BindingContext> to return either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="8067d-104">반환 되는 실제 개체 데이터 소스에 따라 다르며 데이터 멤버에 전달 합니다 <xref:System.Windows.Forms.BindingContext.Item%2A> 의 속성을 <xref:System.Windows.Forms.BindingContext>.</span><span class="sxs-lookup"><span data-stu-id="8067d-104">The actual object returned depends on the data source and data member passed to the <xref:System.Windows.Forms.BindingContext.Item%2A> property of the <xref:System.Windows.Forms.BindingContext>.</span></span> <span data-ttu-id="8067d-105">데이터 원본 개체 (개체 목록) 하는 대신 단일 속성만 반환할 수 있는 경우이 됩니다는 <xref:System.Windows.Forms.PropertyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-105">If the data source is an object that can return only a single property (instead of a list of objects), the type will be a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="8067d-106">예를 들어 지정 하는 경우는 <xref:System.Windows.Forms.TextBox> 데이터 원본으로는 <xref:System.Windows.Forms.PropertyManager> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-106">For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> will be returned.</span></span> <span data-ttu-id="8067d-107">반면에 데이터 원본 개체인 구현 하는 경우는 <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, 또는 <xref:System.ComponentModel.IBindingList> 인터페이스는 <xref:System.Windows.Forms.CurrencyManager> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-107">If, on the other hand, the data source is an object that implements the <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, or <xref:System.ComponentModel.IBindingList> interface, a <xref:System.Windows.Forms.CurrencyManager> will be returned.</span></span>  
  
 <span data-ttu-id="8067d-108"><xref:System.Windows.Forms.BindingManagerBase.Current%2A> 속성 내부 목록의 현재 항목을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-108">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property returns the current item in the underlying list.</span></span> <span data-ttu-id="8067d-109">현재 항목을 변경 하려면 설정의 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성을 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-109">To change the current item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to a new value.</span></span> <span data-ttu-id="8067d-110">값 0 보다 커야 하며 값 보다 작아야 합니다 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-110">The value must be greater than 0 and must be less than the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="8067d-111">기본 데이터 원본 구현 하는 경우는 <xref:System.ComponentModel.IBindingList> 인터페이스 및 <xref:System.ComponentModel.IBindingList.AllowNew%2A> 속성이로 설정 되어 `true`를 사용할 수는 <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8067d-111">If the underlying data source implements the <xref:System.ComponentModel.IBindingList> interface, and the <xref:System.ComponentModel.IBindingList.AllowNew%2A> property is set to `true`, you can use the <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-112">다음 코드 예제에서는 바인딩을 <xref:System.Windows.Forms.TextBox> 컨트롤의 열에 <xref:System.Data.DataTable>, 가져옵니다는 <xref:System.Windows.Forms.CurrencyManager> 바인딩에 대 해당 위치를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-112">The following code example binds a <xref:System.Windows.Forms.TextBox> control to a column in a <xref:System.Data.DataTable>, gets the <xref:System.Windows.Forms.CurrencyManager> for the binding, and sets its position.</span></span>  
  
 [!code-cpp[Classic CurrencyManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.Binding" />
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public override void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddNew();" />
      <MemberSignature Language="F#" Value="override this.AddNew : unit -&gt; unit" Usage="currencyManager.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-113">내부 목록에 새 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-113">Adds a new item to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-114">이 메서드는 데이터 원본 구현 하는 경우에 지원 합니다 <xref:System.ComponentModel.IBindingList> 인터페이스와 데이터 소스 행을 추가할 수 있습니다 (<xref:System.ComponentModel.IBindingList.AllowNew%2A> 는 `true`).</span><span class="sxs-lookup"><span data-stu-id="8067d-114">This method is supported only if the data source implements the <xref:System.ComponentModel.IBindingList> interface and the data source allows adding rows (<xref:System.ComponentModel.IBindingList.AllowNew%2A> is `true`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8067d-115">이 속성은 복합 바인딩된 컨트롤을 같은 허용 하도록 설계 된는 <xref:System.Windows.Forms.DataGrid> 컨트롤 목록에 새 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-115">This property was designed to allow complex-bound controls, such as the <xref:System.Windows.Forms.DataGrid> control, to add new items to list.</span></span>  
  
 <span data-ttu-id="8067d-116">통합 하는 고유한 컨트롤을 만드는 경우에이 속성을 일반적으로 사용 된 <xref:System.Windows.Forms.CurrencyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-116">You typically use this property only if you are creating your own control that incorporates the <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="8067d-117">데이터 원본이 있을 경우 항목을 추가 하려면이 고, 그렇지를 <xref:System.Data.DataView>를 사용 합니다 <xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType> 메서드의 <xref:System.Data.DataView> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8067d-117">Otherwise, to add items if the data source is a <xref:System.Data.DataView>, use the <xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType> method of the <xref:System.Data.DataView> class.</span></span> <span data-ttu-id="8067d-118">데이터 원본이 있으면를 <xref:System.Data.DataTable>를 사용 하 여는 <xref:System.Data.DataTable.NewRow%2A> 메서드 행을 추가 하 고는 <xref:System.Data.DataRowCollection>.</span><span class="sxs-lookup"><span data-stu-id="8067d-118">If the data source is a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTable.NewRow%2A> method and add the row to the <xref:System.Data.DataRowCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-119">다음 코드 예제는 새 항목을 사용 하 여 목록에 추가 된 <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8067d-119">The following code example adds a new item to the list with the <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> method.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8067d-120">내부 데이터 소스에서 <see cref="T:System.ComponentModel.IBindingList" />를 구현하지 않거나, 사용자가 읽기 전용 또는 고정 크기 <see cref="T:System.Data.DataView" />에 행을 추가하려고 하여 데이터 소스에서 예외를 throw한 경우</span><span class="sxs-lookup"><span data-stu-id="8067d-120">The underlying data source does not implement <see cref="T:System.ComponentModel.IBindingList" />, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <see cref="T:System.Data.DataView" />.</span></span></exception>
        <altmember cref="P:System.ComponentModel.IBindingList.AllowNew" />
        <altmember cref="M:System.Data.DataView.AddNew" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public override void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="override this.CancelCurrentEdit : unit -&gt; unit" Usage="currencyManager.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-121">현재 편집 작업을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-121">Cancels the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-122">이 메서드는 데이터 원본에서 포함 된 개체를 구현 하는 경우에 지원 합니다 <xref:System.ComponentModel.IEditableObject> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-122">This method is supported only if the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="8067d-123">데이터 원본 내에 포함 된 개체를 구현 하지 않는 경우는 <xref:System.ComponentModel.IEditableObject> 인터페이스는 데이터 변경 내용이 삭제 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-123">If the objects contained within the data source do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8067d-124">이 속성은 같은 복잡 한 데이터 바인딩된 컨트롤에서 사용할 설계 되었습니다는 <xref:System.Windows.Forms.DataGrid> 컨트롤 편집을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-124">This property was designed to be used by complex data-bound controls, such as the <xref:System.Windows.Forms.DataGrid> control, to cancel edits.</span></span> <span data-ttu-id="8067d-125">예를 들어 사용자가 누르면 ESC 키를 합니다 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> 메서드를 호출 합니다 <xref:System.Windows.Forms.CurrencyManager> 에 대 한는 <xref:System.Windows.Forms.DataGrid>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-125">For example, when the user presses the ESC key, the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method is called on the <xref:System.Windows.Forms.CurrencyManager> for the <xref:System.Windows.Forms.DataGrid>.</span></span> <span data-ttu-id="8067d-126">이 동일한 기능을 필요로 하는 컨트롤을 만들 경우를 제외에이 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-126">Unless you are creating a control that requires this same functionality, you should not use this method.</span></span> <span data-ttu-id="8067d-127">대신 합니다 <xref:System.Data.DataRowView.CancelEdit%2A> 메서드는 <xref:System.Data.DataRowView> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-127">Instead, use the <xref:System.Data.DataRowView.CancelEdit%2A> method of the <xref:System.Data.DataRowView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-128">다음 코드 예제에서는 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> ESC 키를 누를 때.</span><span class="sxs-lookup"><span data-stu-id="8067d-128">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> when the user presses the ESC key.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="CheckEmpty">
      <MemberSignature Language="C#" Value="protected void CheckEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.CheckEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckEmpty();" />
      <MemberSignature Language="F#" Value="member this.CheckEmpty : unit -&gt; unit" Usage="currencyManager.CheckEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-129">목록이 없거나 비어 있는 경우 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-129">Throws an exception if there is no list, or the list is empty.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="8067d-130">목록이 없거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8067d-130">There is no list, or the list is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.CurrencyManager.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-131">목록의 항목 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-131">Gets the number of items in the list.</span></span></summary>
        <value><span data-ttu-id="8067d-132">목록의 항목 수입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-132">The number of items in the list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-133">목록의 끝에 도달한 경우 결정할 count 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-133">Use the count property to determine when the end of a list has been reached.</span></span> <span data-ttu-id="8067d-134">때문에 합니다 <xref:System.Windows.Forms.CurrencyManager> 는 0부터 시작 항목 목록의 끝 배열이 항상 유지 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 1을 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-134">Because the <xref:System.Windows.Forms.CurrencyManager> maintains a 0-based array of items, the end of the list is always <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-135">다음 코드 예제에서는 최종 항목에 의해 결정 될 때까지 목록을 반복는 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 속성에 도달 했습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-135">The following code example iterates through the list until the final item, determined by the <xref:System.Windows.Forms.CurrencyManager.Count%2A> property, is reached.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public override object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.CurrencyManager.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-136">목록의 현재 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-136">Gets the current item in the list.</span></span></summary>
        <value><span data-ttu-id="8067d-137"><see cref="T:System.Object" /> 형식의 목록 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-137">A list item of type <see cref="T:System.Object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-138">현재 항목을 사용 하려면 해당 데이터 형식을 올바르게 캐스팅 하기 위해 알아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-138">In order to get the current item, you must know its data type in order to cast it correctly.</span></span> <span data-ttu-id="8067d-139">예를 들어 데이터 원본이 <xref:System.Data.DataView> 또는 <xref:System.Data.DataTable>는 현재 항목을 캐스팅 해야 합니다는 <xref:System.Data.DataRowView> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-139">For example, if the data source is a <xref:System.Data.DataView> or <xref:System.Data.DataTable>, you must cast the current item as a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-140">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.CurrencyManager.Current%2A> 속성을 인쇄는 `ContactName` 목록의 현재 항목에 대 한 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-140">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.Current%2A> property to print the `ContactName` field for the current item in the list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public override void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="override this.EndCurrentEdit : unit -&gt; unit" Usage="currencyManager.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-141">지금 하고 있는 편집 작업을 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-141">Ends the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-142">이 메서드는 데이터 원본에서 포함 된 개체를 구현 하는 경우에 지원 합니다 <xref:System.ComponentModel.IEditableObject> 또는 <xref:System.ComponentModel.ICancelAddNew> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-142">This method is supported only if the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> or <xref:System.ComponentModel.ICancelAddNew> interfaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8067d-143">이 속성은 같은 복잡 한 데이터 바인딩된 컨트롤에서 사용할 설계 되었습니다는 <xref:System.Windows.Forms.DataGridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-143">This property was designed to be used by complex data-bound controls, such as the <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="8067d-144">이 동일한 기능을 필요로 하는 컨트롤을 만들 경우를 제외에이 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-144">Unless you are creating a control that requires this same functionality, you should not use this method.</span></span> <span data-ttu-id="8067d-145">대신 경우 데이터 소스를 <xref:System.Data.DataView> 또는 <xref:System.Data.DataTable>를 사용 하 여를 <xref:System.Data.DataRowView.EndEdit%2A> 메서드의 <xref:System.Data.DataRowView> 클래스.</span><span class="sxs-lookup"><span data-stu-id="8067d-145">Instead, if the data source is either a <xref:System.Data.DataView> or <xref:System.Data.DataTable>, use the <xref:System.Data.DataRowView.EndEdit%2A> method of the <xref:System.Data.DataRowView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-146">다음 코드 예제에서는 <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-146">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A> method.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="T:System.ComponentModel.ICancelAddNew" />
      </Docs>
    </Member>
    <Member MemberName="finalType">
      <MemberSignature Language="C#" Value="protected Type finalType;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type finalType" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.CurrencyManager.finalType" />
      <MemberSignature Language="VB.NET" Value="Protected finalType As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ finalType;" />
      <MemberSignature Language="F#" Value="val mutable finalType : Type" Usage="System.Windows.Forms.CurrencyManager.finalType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-147">목록의 데이터 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-147">Specifies the data type of the list.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" />
      <MemberSignature Language="F#" Value="override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="currencyManager.GetItemProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-148">기본 목록의 속성 설명자 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-148">Gets the property descriptor collection for the underlying list.</span></span></summary>
        <returns><span data-ttu-id="8067d-149">목록에 대한 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-149">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-150">합니다 <xref:System.ComponentModel.PropertyDescriptorCollection> 에 대 한는 <xref:System.Windows.Forms.CurrencyManager> 목록에서 열을 지정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-150">The <xref:System.ComponentModel.PropertyDescriptorCollection> for the <xref:System.Windows.Forms.CurrencyManager> is used to specify a column in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-151">다음 코드 예제에서는 <xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A> 반환할 메서드를 <xref:System.ComponentModel.PropertyDescriptorCollection> 에 대 한는 <xref:System.Windows.Forms.BindingManagerBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-151">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="8067d-152">이 예제에서는 다음 출력을 <xref:System.ComponentModel.MemberDescriptor.Name%2A> 및 <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 각 <xref:System.ComponentModel.PropertyDescriptor> 컬렉션에서.</span><span class="sxs-lookup"><span data-stu-id="8067d-152">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal override string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="override this.GetListName : System.Collections.ArrayList -&gt; string" Usage="currencyManager.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="8067d-153">데이터 소스에서 찾을 속성의 <see cref="T:System.Collections.ArrayList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-153">An <see cref="T:System.Collections.ArrayList" /> of properties to be found in the data source.</span></span></param>
        <summary><span data-ttu-id="8067d-154">지정한 바인딩된 속성 집합을 사용하여 바인딩에 대한 데이터를 제공하는 목록 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-154">Gets the name of the list supplying the data for the binding using the specified set of bound properties.</span></span></summary>
        <returns><span data-ttu-id="8067d-155">해당 속성을 찾은 경우 바인딩에 대한 데이터를 제공하는 목록 이름이 들어 있는 <see cref="T:System.String" />이고, 그렇지 않으면 <see cref="F:System.String.Empty" /> 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-155">If successful, a <see cref="T:System.String" /> containing name of the list supplying the data for the binding; otherwise, an <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-156">에 대 한 합니다 <xref:System.Windows.Forms.CurrencyManager.GetListName%2A> 찾기가 성공 하려면 메서드 기본 목록 형식 이어야 합니다 <xref:System.ComponentModel.ITypedList>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-156">For the <xref:System.Windows.Forms.CurrencyManager.GetListName%2A> method to be successful, the underlying list must be of type <xref:System.ComponentModel.ITypedList>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      </Docs>
    </Member>
    <Member MemberName="ItemChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemChangedEventHandler ItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemChangedEventHandler ItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChanged As ItemChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemChangedEventHandler ^ ItemChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemChanged : System.Windows.Forms.ItemChangedEventHandler " Usage="member this.ItemChanged : System.Windows.Forms.ItemChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-157">현재 항목이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-157">Occurs when the current item has been altered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-158">합니다 <xref:System.Windows.Forms.CurrencyManager.ItemChanged> 호출할 때 이벤트가 발생 하는 합니다 <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> 또는 <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8067d-158">The <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event will occur when the user calls the <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> or <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> method.</span></span>  
  
 <span data-ttu-id="8067d-159"><xref:System.Windows.Forms.CurrencyManager.ItemChanged> 만 항목 자체가 변경 된 경우 몇 가지 방식으로 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-159">The <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event occurs only when the item itself has been changed in some manner.</span></span> <span data-ttu-id="8067d-160">예를 들어 10에서 42 항목의 값을 변경 하는 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-160">For example, if the value of an item is changed from 10 to 42, the event will occur.</span></span> <span data-ttu-id="8067d-161">이 혼동 하지는 <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 새 항목에는 항목이 변경 되었지만 여기서는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-161">This should not be confused with the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event where the item has been changed to a new item.</span></span>  
  
 <span data-ttu-id="8067d-162">기본 데이터가 변경 된 경우에 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-162">The event will also occur if the underlying data changes.</span></span> <span data-ttu-id="8067d-163">예를 들어의 값을 변경 하는 경우는 <xref:System.Data.DataRowView>, <xref:System.Windows.Forms.CurrencyManager.ItemChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-163">For example, if you change the value of a <xref:System.Data.DataRowView>, the <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event will occur.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8067d-164">사용 하는 고유한 컨트롤을 만들려는 경우는 <xref:System.Windows.Forms.CurrencyManager>를 사용 해야 합니다 <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> 대신는 <xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="8067d-164">If you are creating your own control that uses the <xref:System.Windows.Forms.CurrencyManager>, you should use the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> instead of the <xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8067d-165">합니다 <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A> 의 속성을 <xref:System.ComponentModel.ListChangedEventArgs> 발생 하는 작업의 형식을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-165">The <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A> property of the <xref:System.ComponentModel.ListChangedEventArgs> enables you to determine the type of action that has occurred.</span></span>  
  
 <span data-ttu-id="8067d-166">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8067d-166">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-167">다음 코드 예제에 대 한 이벤트 처리기를 추가 합니다 <xref:System.Windows.Forms.CurrencyManager.ItemChanged> 고 <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-167">The following code example adds event handlers for the <xref:System.Windows.Forms.CurrencyManager.ItemChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.CurrencyManager.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-168">이 <see cref="T:System.Windows.Forms.CurrencyManager" />의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-168">Gets the list for this <see cref="T:System.Windows.Forms.CurrencyManager" />.</span></span></summary>
        <value><span data-ttu-id="8067d-169">목록이 들어 있는 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-169">An <see cref="T:System.Collections.IList" /> that contains the list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-170">반환 된 개체를 <xref:System.Windows.Forms.CurrencyManager.List%2A> 속성을 구현 하는 형식으로 캐스팅 될 수는 <xref:System.Collections.IList> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-170">The object returned by the <xref:System.Windows.Forms.CurrencyManager.List%2A> property can be cast to any type that implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="8067d-171">이 일반적으로 사용할 기본 목록의 형식을 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-171">This will be commonly used when you know the type of the underlying list.</span></span> <span data-ttu-id="8067d-172">예를 들어 하는 데이터 바인딩된을 <xref:System.Data.DataSet>, 기본 목록이 <xref:System.Data.DataView> (구현 하는 <xref:System.Collections.IList>).</span><span class="sxs-lookup"><span data-stu-id="8067d-172">For example, if you are data-bound to a <xref:System.Data.DataSet>, the underlying list is a <xref:System.Data.DataView> (which implements <xref:System.Collections.IList>).</span></span> <span data-ttu-id="8067d-173">(이 전체 목록은 아님) 인터페이스를 구현 하는 다른 클래스를 포함 <xref:System.Array>, <xref:System.Collections.ArrayList>, 및 <xref:System.Collections.CollectionBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-173">Other classes that implement the interface (this is not a complete list) include <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="8067d-174">사용법을 <xref:System.Windows.Forms.CurrencyManager.List%2A> 속성이 구현 하는 클래스에 종속는 <xref:System.Collections.IList> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-174">How you use the <xref:System.Windows.Forms.CurrencyManager.List%2A> property depends on the class that implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="8067d-175">예를 들어 사용할 수 있습니다는 <xref:System.Windows.Forms.CurrencyManager.List%2A> 속성 목록의 이름을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-175">For example, you can use the <xref:System.Windows.Forms.CurrencyManager.List%2A> property to determine the name of the list.</span></span> <span data-ttu-id="8067d-176">데이터 원본 구현 합니다 <xref:System.ComponentModel.ITypedList> 인터페이스를 사용할 수는 <xref:System.ComponentModel.ITypedList.GetListName%2A> 현재 테이블의 이름을 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-176">If the data source implements the <xref:System.ComponentModel.ITypedList> interface, you can use the <xref:System.ComponentModel.ITypedList.GetListName%2A> method to return the name of the current table.</span></span> <span data-ttu-id="8067d-177">이 C# 코드를 아래에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-177">This is shown in the C# code below:</span></span>  
  
```csharp  
private void PrintCurrentListName(DataGrid myDataGrid){   
   CurrencyManager myCM = (CurrencyManager)   
   BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];   
   IList myList = myCM.List;   
   ITypedList thisList = (ITypedList) myList;   
   Console.WriteLine(thisList.GetListName(null));   
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="8067d-178">다음 코드 예제에서는 레코드 집합 편집 하지만 새로 추가할 수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-178">The following code example allows users to edit a set of records, but not add any new ones.</span></span> <span data-ttu-id="8067d-179">에 <xref:System.Windows.Forms.DataGrid.Navigate> 의 이벤트를 <xref:System.Windows.Forms.DataGrid> 컨트롤은 <xref:System.Collections.IList> 반환한를 <xref:System.Windows.Forms.CurrencyManager.List%2A> 속성으로 캐스팅 됩니다를 <xref:System.Data.DataView> 변수.</span><span class="sxs-lookup"><span data-stu-id="8067d-179">In the <xref:System.Windows.Forms.DataGrid.Navigate> event of a <xref:System.Windows.Forms.DataGrid> control, the <xref:System.Collections.IList> returned by the <xref:System.Windows.Forms.CurrencyManager.List%2A> property is cast to a <xref:System.Data.DataView> variable.</span></span> <span data-ttu-id="8067d-180"><xref:System.Data.DataView.AllowNew%2A>의 <xref:System.Data.DataView> 속성이 `false`로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="8067d-180">The <xref:System.Data.DataView.AllowNew%2A> property of the <xref:System.Data.DataView> is set to `false`.</span></span>  
  
 [!code-cpp[CurrencyManager.List Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CurrencyManager.List Example/CPP/list.cpp#1)]
 [!code-csharp[CurrencyManager.List Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CurrencyManager.List Example/CS/list.cs#1)]
 [!code-vb[CurrencyManager.List Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CurrencyManager.List Example/VB/list.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-181">목록 또는 목록의 항목이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-181">Occurs when the list changes or an item in the list changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-182">합니다 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 이벤트에 의해 throw 되는 <xref:System.Windows.Forms.CurrencyManager> 항목에 변경 될 때와 같은 메서드를 사용 하 여 클래스 <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>를 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>, 및 <xref:System.Windows.Forms.CurrencyManager.Refresh%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-182">The <xref:System.Windows.Forms.CurrencyManager.ListChanged> event is thrown by the <xref:System.Windows.Forms.CurrencyManager> class when changes to an item are made using methods such as <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.Refresh%2A>.</span></span> <span data-ttu-id="8067d-183">이 이벤트는 데이터 원본을 편집 하는 경우 직접 구현 하는 경우에 발생할 수 있습니다는 <xref:System.ComponentModel.IBindingListView> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-183">This event can also occur when the data source is edited directly if it implements the <xref:System.ComponentModel.IBindingListView> interface.</span></span>  
  
 <span data-ttu-id="8067d-184">연결 된 `OnListChanged` 메서드는이 클래스에서 private 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-184">The associated `OnListChanged` method is a private method in this class.</span></span>  
  
 <span data-ttu-id="8067d-185">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8067d-185">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-186">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-186">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8067d-187">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-187">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="8067d-188">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-188">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8067d-189">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-189">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8067d-190">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.CurrencyManager> 라는 `CurrencyManager1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-190">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`.</span></span> <span data-ttu-id="8067d-191">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-191">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#192](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#192)]
 [!code-vb[System.Windows.Forms.EventExamples#192](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#192)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="listposition">
      <MemberSignature Language="C#" Value="protected int listposition;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 listposition" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.CurrencyManager.listposition" />
      <MemberSignature Language="VB.NET" Value="Protected listposition As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int listposition;" />
      <MemberSignature Language="F#" Value="val mutable listposition : int" Usage="System.Windows.Forms.CurrencyManager.listposition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-192">목록에 있는 <see cref="T:System.Windows.Forms.CurrencyManager" />의 현재 위치를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-192">Specifies the current position of the <see cref="T:System.Windows.Forms.CurrencyManager" /> in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-193">경우의 값을 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 속성이 0 보다 큰를 <xref:System.Windows.Forms.CurrencyManager.listposition> 필드는 0 사이의 숫자 및 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 1을 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-193">If the value of the <xref:System.Windows.Forms.CurrencyManager.Count%2A> property is greater than 0, the <xref:System.Windows.Forms.CurrencyManager.listposition> field is a number between 0 and <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus 1.</span></span> <span data-ttu-id="8067d-194">하는 경우 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 가 0 이면 <xref:System.Windows.Forms.CurrencyManager.listposition> 가-1입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-194">If <xref:System.Windows.Forms.CurrencyManager.Count%2A> is 0, <xref:System.Windows.Forms.CurrencyManager.listposition> is -1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
      </Docs>
    </Member>
    <Member MemberName="MetaDataChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MetaDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MetaDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MetaDataChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MetaDataChanged;" />
      <MemberSignature Language="F#" Value="member this.MetaDataChanged : EventHandler " Usage="member this.MetaDataChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-195"><see cref="P:System.Windows.Forms.CurrencyManager.List" />의 메타데이터가 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-195">Occurs when the metadata of the <see cref="P:System.Windows.Forms.CurrencyManager.List" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-196">메타 데이터를 <xref:System.Windows.Forms.CurrencyManager.List%2A> 의 기본 스키마로 구성 됩니다 <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-196">The metadata of the <xref:System.Windows.Forms.CurrencyManager.List%2A> consists of the schema of the underlying <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8067d-197"><xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> 해당 스키마가 변경 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-197">The <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event is raised when that schema has changed.</span></span> <span data-ttu-id="8067d-198">예를 들어,를 <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> 이벤트는 때를 <xref:System.Data.DataColumn> 프로그래밍 방식으로 추가할를 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-198">For example, the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event is raised when a <xref:System.Data.DataColumn> is programmatically added to a <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8067d-199">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="8067d-199">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-200">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-200">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8067d-201">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-201">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event.</span></span> <span data-ttu-id="8067d-202">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-202">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8067d-203">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-203">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8067d-204">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.CurrencyManager> 라는 `CurrencyManager1`합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-204">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`.</span></span> <span data-ttu-id="8067d-205">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-205">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#193](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#193)]
 [!code-vb[System.Windows.Forms.EventExamples#193](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#193)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="currencyManager.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8067d-206">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-206">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8067d-207"><see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-207">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="currencyManager.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8067d-208">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-208">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8067d-209"><see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-209">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Windows.Forms.ItemChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Windows.Forms.ItemChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChanged (e As ItemChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChanged(System::Windows::Forms::ItemChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChanged : System.Windows.Forms.ItemChangedEventArgs -&gt; unit&#xA;override this.OnItemChanged : System.Windows.Forms.ItemChangedEventArgs -&gt; unit" Usage="currencyManager.OnItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8067d-210">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.ItemChangedEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-210">An <see cref="T:System.Windows.Forms.ItemChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8067d-211"><see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-211">Raises the <see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-212">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-212">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8067d-213">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-213">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8067d-214">또한 <xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-214">The <xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8067d-215">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-215">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8067d-216">재정의 하는 경우 <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-216">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMetaDataChanged">
      <MemberSignature Language="C#" Value="protected internal void OnMetaDataChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnMetaDataChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnMetaDataChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnMetaDataChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnMetaDataChanged : EventArgs -&gt; unit" Usage="currencyManager.OnMetaDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8067d-217">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-217">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8067d-218"><see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-218">Raises the <see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-219">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-219">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8067d-220">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-220">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8067d-221">또한 <xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-221">The <xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8067d-222">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-222">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8067d-223">재정의 하는 경우 <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-223">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="currencyManager.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8067d-224">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-224">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8067d-225"><see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-225">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-226">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-226">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8067d-227">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-227">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8067d-228">또한 <xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-228">The <xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8067d-229">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-229">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8067d-230">재정의 하는 경우 <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-230">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.CurrencyManager.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8067d-231">목록 내에서의 위치를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-231">Gets or sets the position you are at within the list.</span></span></summary>
        <value><span data-ttu-id="8067d-232">0과 <see cref="P:System.Windows.Forms.CurrencyManager.Count" />에서 1을 뺀 값 사이의 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-232">A number between 0 and <see cref="P:System.Windows.Forms.CurrencyManager.Count" /> minus 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-233">중요 한 속성을 <xref:System.Windows.Forms.CurrencyManager> 클래스는 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-233">An important property of the <xref:System.Windows.Forms.CurrencyManager> class is the <xref:System.Windows.Forms.CurrencyManager.Position%2A> property.</span></span> <span data-ttu-id="8067d-234">항목의 목록에서 전체 목록에서 하나의 항목을 볼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-234">In a list of items, you can view only one item out of the entire list.</span></span> <span data-ttu-id="8067d-235">표시 되는 항목을 확인 하려면 설정 합니다 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 를 0 (목록의 시작 부분) 사이의 숫자로 및 <xref:System.Windows.Forms.CurrencyManager.Count%2A> (목록의 끝) 1을 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-235">To determine which item is viewed, set the <xref:System.Windows.Forms.CurrencyManager.Position%2A> to a number between 0 (the beginning of the list) and <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus 1 (the end of the list).</span></span>  
  
 <span data-ttu-id="8067d-236">따라서 합니다 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 동일 하 게 바인딩된 모든 컨트롤의 목록에서 통화를 결정 <xref:System.Windows.Forms.CurrencyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-236">Therefore, the <xref:System.Windows.Forms.CurrencyManager.Position%2A> determines the currency, or place in the list, of all controls bound to the same <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="8067d-237">예를 들어, "FirstName" 및 "LastName" 이라는 두 개의 열으로 구성 된 목록을 한다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-237">For example, imagine a list consisting of two columns called "FirstName" and "LastName".</span></span> <span data-ttu-id="8067d-238">두 <xref:System.Windows.Forms.TextBox> 같은 목록에 바인딩된 컨트롤 하 고 첫 번째 컨트롤의 첫 번째 열에 바인딩된 두 번째 컨트롤 두 번째 열에 바인딩되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-238">Two <xref:System.Windows.Forms.TextBox> controls are bound to the same list; the first control is bound to the first column, and the second control is bound to the second column.</span></span> <span data-ttu-id="8067d-239">경우는 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 일반 <xref:System.Windows.Forms.CurrencyManager> 설정 된 세 번째 위치에 두 컨트롤 목록에서 해당 위치에 대 한 적절 한 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-239">When the <xref:System.Windows.Forms.CurrencyManager.Position%2A> of the common <xref:System.Windows.Forms.CurrencyManager> is set to the third position, both controls display the appropriate values for that position in the list.</span></span> <span data-ttu-id="8067d-240">즉, 세 위치에 있는 항목으로 구성 된 경우 첫 번째 이름 "John" 및 "Smith" 성 "John" 및 "Smith" 바인딩된 컨트롤 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-240">In other words, if the item at position three consists of the first name "John" and the last name "Smith", the bound controls will display "John" and "Smith".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-241">다음 코드 예제에서 사용 된 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 목록 탐색을 허용 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-241">The following code examples use the <xref:System.Windows.Forms.CurrencyManager.Position%2A> property to allow navigation through a list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Position Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Position Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Position Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="currencyManager.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-242">데이터 바인딩된 목록을 강제로 다시 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-242">Forces a repopulation of the data-bound list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-243">사용 하 여는 <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> 데이터 원본 변경 될 때 알림을 지원 하지 않는 경우 메서드 (예를 들어 있으면는 <xref:System.Array>).</span><span class="sxs-lookup"><span data-stu-id="8067d-243">Use the <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> method when the data source does not support notification when it is changed (for example, if it is an <xref:System.Array>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-244">다음 코드 예제에서는 배열을 만들고에 바인딩하는 <xref:System.Windows.Forms.TextBox> 컨트롤과 다음 값을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-244">The following code example creates an array and binds it to a <xref:System.Windows.Forms.TextBox> control, and then changes one value.</span></span> <span data-ttu-id="8067d-245"><xref:System.Windows.Forms.CurrencyManager.Refresh%2A> 표시 되는 값을 업데이트 하려면 메서드를 호출할 수는 <xref:System.Windows.Forms.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-245">The <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> method can be called to update the value displayed by the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public override void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveAt : int -&gt; unit" Usage="currencyManager.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8067d-246">목록에서 제거할 항목의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-246">The index of the item to remove from the list.</span></span></param>
        <summary><span data-ttu-id="8067d-247">지정한 인덱스에서 해당 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-247">Removes the item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-248"><xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> 메서드는 같은 복잡 한 제어를 허용 하도록 설계 된는 <xref:System.Windows.Forms.DataGrid> 컨트롤 목록에서 항목을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-248">The <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> method was designed to allow complex controls, such as the <xref:System.Windows.Forms.DataGrid> control, to remove items from the list.</span></span> <span data-ttu-id="8067d-249">실제로 항목을 제거 하려면이 메서드를 사용 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-249">You should not use this method to actually remove items.</span></span> <span data-ttu-id="8067d-250">대신 합니다 <xref:System.Data.DataView.Delete%2A> 메서드를 <xref:System.Data.DataView> 항목을 삭제 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-250">Instead, use the <xref:System.Data.DataView.Delete%2A> method of the <xref:System.Data.DataView> class to delete items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-251">다음 코드 예제에서는 <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> 목록에서 위치 0에 있는 항목을 제거 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-251">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> method to remove the item at position 0 in the list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="8067d-252">지정된 <paramref name="index" />에 행이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="8067d-252">There is no row at the specified <paramref name="index" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.AddNew" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public override void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResumeBinding();" />
      <MemberSignature Language="F#" Value="override this.ResumeBinding : unit -&gt; unit" Usage="currencyManager.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-253">데이터 바인딩을 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-253">Resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-254"><xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 및 <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> 단순 데이터 바인딩 시나리오에서 임시 일시 중단 및 다시 시작을 허용 하는 두 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-254"><xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of in a simple data binding scenario.</span></span> <span data-ttu-id="8067d-255">사용자 유효성 검사를 수행 하기 전에 데이터 필드에 몇 가지 편집을 만들 수 있어야 하는 경우에 일반적으로 데이터 바인딩을 일시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-255">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="8067d-256">예를 들어, 하나의 필드를 두 번째에 따라 변경 해야 하지만 유효성 검사 첫 번째 필드에 두 번째 필드에 오류가 발생할 수 없었다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-256">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8067d-257">사용 하 여 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 될 때까지 데이터 원본에 밀어 넣는에서 변경 되지 않도록 <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> 라고 하지만 데이터 원본에 변경 내용이 바인딩된 컨트롤에 영향을 주지 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-257">Using <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> is called but does not prevent changes in the data source from affecting the bound controls.</span></span> <span data-ttu-id="8067d-258">와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤을 <xref:System.Windows.Forms.DataGridView> 컨트롤을 같은 변경 이벤트에 따라 해당 값을 업데이트를 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-258">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="8067d-259">이 메서드를 호출 해도 이러한 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-259">Calling this method will not prevent these events from occurring.</span></span> <span data-ttu-id="8067d-260">이러한 이유로 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 하 고 <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> 와 같은 단순 바인딩된 컨트롤을 사용 하도록 설계를 <xref:System.Windows.Forms.TextBox>입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-260">For this reason, <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> are designed for use with simple-bound controls, such as a <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="8067d-261">또는이 방법을 사용할 수 있습니다 이러한 복잡 한 바인딩 시나리오에서 무시 하는 경우 <xref:System.Windows.Forms.BindingSource.ListChanged> 설정 하 여 이벤트를 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-261">Alternatively, you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-262">다음 코드 예제에서는 <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-262">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> method.</span></span>  
  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public override void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SuspendBinding();" />
      <MemberSignature Language="F#" Value="override this.SuspendBinding : unit -&gt; unit" Usage="currencyManager.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-263">데이터 바인딩을 일시 중단하여 바인딩된 데이터 소스가 변경 내용으로 업데이트되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-263">Suspends data binding to prevents changes from updating the bound data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8067d-264">합니다 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 및 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 메서드 단순 바인딩 시나리오에서 임시 일시 중단 및 데이터 바인딩을 다시 시작을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-264">The <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> methods allow the temporary suspension and resumption of data binding in a simple binding scenario.</span></span> <span data-ttu-id="8067d-265">데이터 바인딩 유효성 검사를 수행 하기 전에 사용자 데이터 필드에 여러 편집 확인 해야 하는 경우에 일반적으로 일시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-265">You would typically suspend data binding if the user must make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="8067d-266">예를 들어, 하나의 필드를 두 번째에 따라 변경 해야 하지만 유효성 검사 첫 번째 필드에 두 번째 필드에 오류가 발생할 수 없었다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-266">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8067d-267"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 변경 될 때까지 데이터 원본에 적용 되지 않도록 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 를 호출 했지만 실제로 발생 이벤트를 억제 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-267"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being applied to the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="8067d-268">와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤을 <xref:System.Windows.Forms.DataGridView> 컨트롤을 같은 변경 이벤트에 따라 해당 값을 업데이트를 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-268">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events, such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="8067d-269">따라서 호출 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 복잡 한 바인딩된 컨트롤에서 데이터 소스를 업데이트 하는 이벤트를 받을 방지 하지는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-269">Therefore, calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent complex-bound controls from receiving events to update the data source.</span></span> <span data-ttu-id="8067d-270">이러한 이유로 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 하 고 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 와 같은 단순 바인딩된 컨트롤을 사용 하도록 설계를 <xref:System.Windows.Forms.TextBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-270">For this reason, <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="8067d-271">또는이 방법을 사용할 수 있습니다 이러한 복잡 한 바인딩 시나리오에서 무시 하는 경우 <xref:System.Windows.Forms.BindingSource.ListChanged> 설정 하 여 이벤트를 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-271">Alternatively, you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8067d-272">다음 코드 예제에서는 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-272">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> method.</span></span>  
  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#1)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#1)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected override void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="override this.UpdateIsBinding : unit -&gt; unit" Usage="currencyManager.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8067d-273">바인딩 상태를 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="8067d-273">Updates the status of the binding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>