<Type Name="ComboBox" FullName="System.Windows.Forms.ComboBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5593c41e9703f83ccd8a587d1ded777a1b22de32" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57925099" /></Metadata><TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Forms.ListControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComboBox extends System.Windows.Forms.ListControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox&#xA;Inherits ListControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBox : System::Windows::Forms::ListControl" />
  <TypeSignature Language="F#" Value="type ComboBox = class&#xA;    inherit ListControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ComboBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ComboBoxDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ComboBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="90b14-101">Windows 콤보 상자 컨트롤을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-101">Represents a Windows combo box control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-102">A <xref:System.Windows.Forms.ComboBox> 텍스트 상자와 함께 표시를 <xref:System.Windows.Forms.ListBox>, 그러면 사용자가 목록에서 항목을 선택 하거나 새 값을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-102">A <xref:System.Windows.Forms.ComboBox> displays a text box combined with a <xref:System.Windows.Forms.ListBox>, which enables the user to select items from the list or enter a new value.</span></span>  
  
 <span data-ttu-id="90b14-103"><xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성은 항상 표시 되는지 여부 또는 목록 드롭다운에 표시 되는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-103">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property specifies whether the list is always displayed or whether the list is displayed in a drop-down.</span></span> <span data-ttu-id="90b14-104"><xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성 텍스트 부분을 편집할 수 있는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-104">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property also specifies whether the text portion can be edited.</span></span> <span data-ttu-id="90b14-105">참조 <xref:System.Windows.Forms.ComboBoxStyle> 사용 가능한 설정 및 그 영향에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-105">See <xref:System.Windows.Forms.ComboBoxStyle> for the available settings and their effects.</span></span> <span data-ttu-id="90b14-106">항상 목록을 표시 하 고 새 값을 입력을 허용 하지 않도록 설정은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-106">There is no setting to always display the list and disallow entering a new value.</span></span> <span data-ttu-id="90b14-107">새 값이 없는 추가할 수 목록을 표시 하려면 사용을 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-107">To display a list to which no new values can be added, use a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 <span data-ttu-id="90b14-108">를 추가 하거나 런타임 시 목록에서 개체를 제거 하려면의 메서드를 사용 합니다 <xref:System.Windows.Forms.ComboBox.ObjectCollection> 클래스 (통해를 <xref:System.Windows.Forms.ComboBox.Items%2A> 속성을는 <xref:System.Windows.Forms.ComboBox>).</span><span class="sxs-lookup"><span data-stu-id="90b14-108">To add or remove objects in the list at run time, use methods of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ComboBox.Items%2A> property of the <xref:System.Windows.Forms.ComboBox>).</span></span> <span data-ttu-id="90b14-109">사용 하 여 개체 참조의 배열에 할당할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-109">You can assign an array of object references with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="90b14-110">다음은 각 개체에 대 한 기본 문자열 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-110">The list then displays the default string value for each object.</span></span> <span data-ttu-id="90b14-111">개별 개체를 사용 하 여 추가할 수는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-111">You can add individual objects with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method.</span></span> <span data-ttu-id="90b14-112">사용 하 여 항목을 삭제할 수 있습니다 합니다 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> 사용 하 여 전체 목록 메서드 또는 선택 취소 합니다 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-112">You can delete items with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or clear the entire list with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="90b14-113">표시 및 선택 기능 외에도 합니다 <xref:System.Windows.Forms.ComboBox> 항목을 효율적으로 추가할 수 있도록 하는 기능도 제공는 <xref:System.Windows.Forms.ComboBox> 목록의 항목에서 텍스트를 검색 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-113">In addition to display and selection functionality, the <xref:System.Windows.Forms.ComboBox> also provides features that enable you to efficiently add items to the <xref:System.Windows.Forms.ComboBox> and to find text within the items of the list.</span></span> <span data-ttu-id="90b14-114">사용 하 여를 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 하 고 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 메서드는 많은 수의 항목을 추가할 수 있습니다를 <xref:System.Windows.Forms.ComboBox> 컨트롤 될 때마다 다시 표시 하지 않고 항목 목록에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-114">With the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods, you can add a large number of items to the <xref:System.Windows.Forms.ComboBox> without the control being repainted each time an item is added to the list.</span></span> <span data-ttu-id="90b14-115">합니다 <xref:System.Windows.Forms.ComboBox.FindString%2A> 고 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 메서드를 사용 하는 특정 검색 문자열을 포함 하는 목록의 항목을 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-115">The <xref:System.Windows.Forms.ComboBox.FindString%2A> and <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods enable you to search for an item in the list that contains a specific search string.</span></span>  
  
 <span data-ttu-id="90b14-116">목록에서 현재 선택한 항목을 관리 하려면 이러한 속성을 사용할 수는 <xref:System.Windows.Forms.ComboBox.Text%2A> 편집 필드에 표시 되는 문자열을 지정 하는 속성을 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 가져오거나 현재 항목을 설정 하는 속성 및 <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> 속성을 가져오거나 설정는 개체에 대 한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-116">You can use these properties to manage the currently selected item in the list, the <xref:System.Windows.Forms.ComboBox.Text%2A> property to specify the string displayed in the editing field, the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property to get or set the current item, and the <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> property to get or set a reference to the object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-117">있는 경우는 <xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.ComboBox>, 또는 <xref:System.Windows.Forms.CheckedListBox> 기본 Windows Forms 페이지 및 파생된 된 폼에서 해당 컨트롤의 문자열 컬렉션을 수정 하려면, 기본 폼에 있는 컨트롤의 문자열 컬렉션은 비워 둘 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-117">If you have a <xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.ComboBox>, or <xref:System.Windows.Forms.CheckedListBox> on a base Windows Forms page and want to modify the string collections of those controls in a derived form, the string collections of those controls in the base form must be empty.</span></span> <span data-ttu-id="90b14-118">문자열 컬렉션이 비어 있으면 되는 읽기 전용으로 또 다른 형태를 파생 시킬 때 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-118">If the string collections are not empty, they become read-only when you derive another form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-119">다음 코드 예제는 사용 하는 방법을 보여 주는 완전 한 응용 프로그램을 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 항목을 추가 하는 메서드를 <xref:System.Windows.Forms.ComboBox>, <xref:System.Windows.Forms.ComboBox.FindString%2A> 에서 항목을 찾는 방법을 <xref:System.Windows.Forms.ComboBox>, 및 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 방법 많은 항목을 효율적으로 추가 된 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-119">The following code example is a complete application showing how you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add items to a <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.ComboBox.FindString%2A> method to find items in a <xref:System.Windows.Forms.ComboBox>, and the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods to efficiently add a large number items to a <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-120">표시 된 텍스트에서 다른 값을 저장 하는 기능에서 상속 된 <xref:System.Windows.Forms.ListControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-120">The ability to store values that are different from displayed text is inherited from <xref:System.Windows.Forms.ListControl>.</span></span> <span data-ttu-id="90b14-121">이 기능을 사용 하는 방법의 예제를 참조 하세요.를 <xref:System.Windows.Forms.ListControl> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-121">For an example of how to use this feature, see the <xref:System.Windows.Forms.ListControl> class.</span></span>  
  
 <span data-ttu-id="90b14-122">에 대 한 참조를 추가 해야 합니다 `System.Drawing` 및 `System.Windows.Forms` 이 예제를 실행 하려면 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-122">You must add references to the `System.Drawing` and `System.Windows.Forms` namespaces to run this example.</span></span>  
  
 [!code-cpp[ComboBox#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxtype.cpp#1)]
 [!code-csharp[ComboBox#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxtype.cs#1)]
 [!code-vb[ComboBox#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxtype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-123"><see cref="T:System.Windows.Forms.ComboBox" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-123">Initializes a new instance of the <see cref="T:System.Windows.Forms.ComboBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemsCore">
      <MemberSignature Language="C#" Value="protected virtual void AddItemsCore (object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddItemsCore(object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.AddItemsCore(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddItemsCore (value As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddItemsCore(cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddItemsCore : obj[] -&gt; unit&#xA;override this.AddItemsCore : obj[] -&gt; unit" Usage="comboBox.AddItemsCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  There is no replacement.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="90b14-124">추가할 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-124">The items to add.</span></span></param>
        <summary><span data-ttu-id="90b14-125">콤보 상자에 지정된 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-125">Adds the specified items to the combo box.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteCustomSource : System.Windows.Forms.AutoCompleteStringCollection with get, set" Usage="System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-126"><see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" /> 속성이 <see langword="CustomSource" />(으)로 설정된 경우 사용할 사용자 지정 <see cref="T:System.Collections.Specialized.StringCollection" />을(를) 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-126">Gets or sets a custom <see cref="T:System.Collections.Specialized.StringCollection" /> to use when the <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" /> property is set to <see langword="CustomSource" />.</span></span></summary>
        <value><span data-ttu-id="90b14-127"><see cref="T:System.Collections.Specialized.StringCollection" />에 사용할 <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-127">A <see cref="T:System.Collections.Specialized.StringCollection" /> to use with <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-128">사용 합니다 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, 및 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 을 만들기 위한 속성을 <xref:System.Windows.Forms.ComboBox> 입력된 문자열을 관리 되는 소스에서 모든 문자열의 접두사를 입력 되는 접두사를 비교 하 여 자동으로 완료 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-128">Use the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ComboBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="90b14-129">유용 <xref:System.Windows.Forms.ComboBox> 컨트롤은 Url, 주소, 파일 이름 또는 명령을 자주 입력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-129">This is useful for <xref:System.Windows.Forms.ComboBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span> <span data-ttu-id="90b14-130">관리 되는 소스에 중복 된 항목이 있는 경우, 자동 완성이 예기치 않게 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-130">If there are duplicate entries in the maintained source, automatic completion behaves unpredictably.</span></span>  
  
 <span data-ttu-id="90b14-131">사용 된 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> 속성은 선택 사항 이지만 설정 해야 합니다는 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 속성을 `CustomSource` 사용 하려면 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-131">The use of the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="90b14-132">사용 해야 합니다 <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> 및 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 속성을 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-132">You must use the <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-133">운영 체제는 한 번에 표시할 수 있는 사용자 지정 문자열의 수를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-133">The operating system might limit the number of custom strings that it can display at once.</span></span> <span data-ttu-id="90b14-134">슬래시 (/) 또는 백슬래시를 포함 하는 문자열에 대 한 (\\), 자동 완성만 포함 하는 슬래시 모든 문자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-134">For strings that contain a forward slash (/) or backward slash (\\), automatic completion appends all characters only up to and including the slash.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteMode : System.Windows.Forms.AutoCompleteMode with get, set" Usage="System.Windows.Forms.ComboBox.AutoCompleteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-135"><see cref="T:System.Windows.Forms.ComboBox" />의 자동 완성 기능이 작동하는 방법을 제어하는 옵션을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-135">Gets or sets an option that controls how automatic completion works for the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-136"><see cref="T:System.Windows.Forms.AutoCompleteMode" />의 다음 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-136">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span> <span data-ttu-id="90b14-137">값은 <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" /> 및 <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-137">The values are <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />, and <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />.</span></span> <span data-ttu-id="90b14-138">기본값은 <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-138">The default is <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-139">사용 합니다 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, 및 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 을 만들기 위한 속성을 <xref:System.Windows.Forms.ComboBox> 입력된 문자열을 관리 되는 소스에서 모든 문자열의 접두사를 입력 되는 접두사를 비교 하 여 자동으로 완료 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-139">Use the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ComboBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="90b14-140">유용 <xref:System.Windows.Forms.ComboBox> 컨트롤은 Url, 주소, 파일 이름 또는 명령을 자주 입력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-140">This is useful for <xref:System.Windows.Forms.ComboBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span> <span data-ttu-id="90b14-141">관리 되는 소스에 중복 된 항목이 있는 경우, 자동 완성이 예기치 않게 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-141">If there are duplicate entries in the maintained source, automatic completion behaves unpredictably.</span></span>  
  
 <span data-ttu-id="90b14-142">설정 하는 경우 <xref:System.Windows.Forms.ComboBoxStyle> 하 <xref:System.Windows.Forms.ComboBoxStyle.DropDownList>, 경우에 목록에 표시 됩니다 <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> 됩니다 <xref:System.Windows.Forms.AutoCompleteMode.Suggest> 또는 <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-142">If you set <xref:System.Windows.Forms.ComboBoxStyle> to <xref:System.Windows.Forms.ComboBoxStyle.DropDownList>, the list displays only if <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> is <xref:System.Windows.Forms.AutoCompleteMode.Suggest> or <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend>.</span></span>  
  
 <span data-ttu-id="90b14-143">사용 된 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> 속성은 선택 사항 이지만 설정 해야 합니다는 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 속성을 <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> 사용 하려면 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-143">The use of the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> property to <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> in order to use <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="90b14-144">사용 해야 합니다 <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> 및 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 속성을 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-144">You must use the <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties together.</span></span>  
  
 <span data-ttu-id="90b14-145">사용 하 여 <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> 로 설정 <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> 및 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 로 <xref:System.Windows.Forms.AutoCompleteSource.ListItems>, 동작은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-145">With <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> set to <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> set to <xref:System.Windows.Forms.AutoCompleteSource.ListItems>, the behavior is as follows:</span></span>  
  
-   <span data-ttu-id="90b14-146">문자열 목록이 비어 있으면 아무 작업도 수행 하지 백스페이스 또는 DELETE 키를 눌러 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-146">If the list of strings is empty, pressing the BACKSPACE or DELETE key does nothing.</span></span>  
  
-   <span data-ttu-id="90b14-147">1 초 미만에서 백스페이스 키를 누르면 이전 항목을 선택 하거나 문자열 목록이 비어 있는 경우 아무것도 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-147">If the BACKSPACE key is pressed in less than one second, the previous item is selected, or nothing is selected if the list of string is empty.</span></span>  
  
-   <span data-ttu-id="90b14-148">2 초 이상에서 백스페이스 키를 누른 경우 첫 번째 항목이 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-148">If the BACKSPACE key is pressed in more than one second, the first item is selected.</span></span>  
  
-   <span data-ttu-id="90b14-149">DELETE 키를 누를 경우 첫 번째 항목이 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-149">If the DELETE key is pressed, the first item is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-150">운영 체제는 한 번에 표시할 수 있는 사용자 지정 문자열의 수를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-150">The operating system might limit the number of custom strings that it can display at once.</span></span> <span data-ttu-id="90b14-151">슬래시 (/) 또는 백슬래시를 포함 하는 문자열에 대 한 (\\), 자동 완성만 포함 하는 슬래시 모든 문자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-151">For strings that contain a forward slash (/) or backward slash (\\), automatic completion appends all characters only up to and including the slash.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="90b14-152">지정한 값이 <see cref="T:System.Windows.Forms.AutoCompleteMode" />의 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-152">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteSource : System.Windows.Forms.AutoCompleteSource with get, set" Usage="System.Windows.Forms.ComboBox.AutoCompleteSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-153">자동 완성 기능에 사용되는 전체 문자열의 소스를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-153">Gets or sets a value specifying the source of complete strings used for automatic completion.</span></span></summary>
        <value><span data-ttu-id="90b14-154"><see cref="T:System.Windows.Forms.AutoCompleteSource" />의 다음 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-154">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span> <span data-ttu-id="90b14-155">옵션은 <see langword="AllSystemSources" />, <see langword="AllUrl" />, <see langword="FileSystem" />, <see langword="HistoryList" />, <see langword="RecentlyUsedList" />, <see langword="CustomSource" /> 및 <see langword="None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-155">The options are <see langword="AllSystemSources" />, <see langword="AllUrl" />, <see langword="FileSystem" />, <see langword="HistoryList" />, <see langword="RecentlyUsedList" />, <see langword="CustomSource" />, and <see langword="None" />.</span></span> <span data-ttu-id="90b14-156">기본값은 <see langword="None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-156">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-157">사용 합니다 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, 및 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 을 만들기 위한 속성을 <xref:System.Windows.Forms.ComboBox> 입력된 문자열을 관리 되는 소스에서 모든 문자열의 접두사를 입력 되는 접두사를 비교 하 여 자동으로 완료 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-157">Use the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ComboBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="90b14-158">유용 <xref:System.Windows.Forms.ComboBox> 컨트롤은 Url, 주소, 파일 이름 또는 명령을 자주 입력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-158">This is useful for <xref:System.Windows.Forms.ComboBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="90b14-159">사용 된 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> 속성은 선택 사항 이지만 설정 해야 합니다는 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 속성을 <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> 사용 하려면 <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-159">The use of the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> property to <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> in order to use <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="90b14-160">사용 해야 합니다 <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> 및 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 속성을 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-160">You must use the <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties together.</span></span>  
  
 <span data-ttu-id="90b14-161">사용 하 여 <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> 로 설정 <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> 및 <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> 로 <xref:System.Windows.Forms.AutoCompleteSource.ListItems>, 동작은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-161">With <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> set to <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> set to <xref:System.Windows.Forms.AutoCompleteSource.ListItems>, the behavior is as follows:</span></span>  
  
-   <span data-ttu-id="90b14-162">문자열 목록이 비어 있으면 아무 작업도 수행 하지 백스페이스 또는 DELETE 키를 눌러 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-162">If the list of strings is empty, pressing the BACKSPACE or DELETE key does nothing.</span></span>  
  
-   <span data-ttu-id="90b14-163">1 초 미만에서 백스페이스 키를 누르면 이전 항목을 선택 하거나 문자열 목록이 비어 있는 경우 아무것도 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-163">If the BACKSPACE key is pressed in less than one second, the previous item is selected, or nothing is selected if the list of string is empty.</span></span>  
  
-   <span data-ttu-id="90b14-164">2 초 이상에서 백스페이스 키를 누른 경우 첫 번째 항목이 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-164">If the BACKSPACE key is pressed in more than one second, the first item is selected.</span></span>  
  
-   <span data-ttu-id="90b14-165">DELETE 키를 누를 경우 첫 번째 항목이 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-165">If the DELETE key is pressed, the first item is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-166">운영 체제는 한 번에 표시할 수 있는 사용자 지정 문자열의 수를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-166">The operating system might limit the number of custom strings that it can display at once.</span></span> <span data-ttu-id="90b14-167">슬래시 (/) 또는 백슬래시를 포함 하는 문자열에 대 한 (\\), 자동 완성만 포함 하는 슬래시 모든 문자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-167">For strings that contain a forward slash (/) or backward slash (\\), automatic completion appends all characters only up to and including the slash.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="90b14-168">지정한 값이 <see cref="T:System.Windows.Forms.AutoCompleteSource" />의 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-168">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ComboBox.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-169">컨트롤의 배경색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-169">Gets or sets the background color for the control.</span></span></summary>
        <value><span data-ttu-id="90b14-170">컨트롤의 배경색을 나타내는 색 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-170">A color object that represents the background color of the control.</span></span> <span data-ttu-id="90b14-171">기본값은 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-171">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ComboBox.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-172">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-172">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="90b14-173">컨트롤에 표시된 배경 이미지입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-173">The background image displayed in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-174">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-174">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-175"><see cref="P:System.Windows.Forms.ComboBox.BackgroundImage" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-175">Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.BackgroundImage" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-176">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-176">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ComboBox.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-177"><see cref="T:System.Windows.Forms.ImageLayout" /> 열거형에서 정의된 대로 배경 이미지 레이아웃을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-177">Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="90b14-178"><see cref="T:System.Windows.Forms.ImageLayout" />의 값 중 하나(<see langword="Center" />, <see langword="None" />, <see langword="Stretch" />, <see langword="Tile" /> 또는 <see langword="Zoom" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-178">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see langword="Center" />, <see langword="None" />, <see langword="Stretch" />, <see langword="Tile" />, or <see langword="Zoom" />).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-179">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-179">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="90b14-180">지정한 값이 <see cref="T:System.Windows.Forms.ImageLayout" />의 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-180">The specified value is not one of the values of <see cref="T:System.Windows.Forms.ImageLayout" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-181"><see cref="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" /> 속성이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-181">Occurs when the <see cref="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-182">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-182">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="comboBox.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-183">한 번에 하나씩 <see cref="T:System.Windows.Forms.ComboBox" />에 항목이 추가되어도 성능을 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-183">Maintains performance when items are added to the <see cref="T:System.Windows.Forms.ComboBox" /> one at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-184">이 메서드는 때까지에서 컨트롤을 방지 합니다 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-184">This method prevents the control from painting until the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method is called.</span></span>  
  
 <span data-ttu-id="90b14-185">항목을 추가 하는 기본 방법은 <xref:System.Windows.Forms.ComboBox> 사용 하는 것을 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 메서드의 <xref:System.Windows.Forms.ComboBox.ObjectCollection> 클래스 (통해를 <xref:System.Windows.Forms.ComboBox.Items%2A> 의 속성을 <xref:System.Windows.Forms.ComboBox>).</span><span class="sxs-lookup"><span data-stu-id="90b14-185">The preferred way to add items to the <xref:System.Windows.Forms.ComboBox> is to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ComboBox.Items%2A> property of the <xref:System.Windows.Forms.ComboBox>).</span></span> <span data-ttu-id="90b14-186">이 항목의 배열을 목록에 한 번에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-186">This enables you to add an array of items to the list at one time.</span></span> <span data-ttu-id="90b14-187">하지만 추가 하려는 경우에 하나의 항목을 사용 하 여 시간을 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 메서드의 <xref:System.Windows.Forms.ComboBox.ObjectCollection> 클래스를 사용할 수는 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 컨트롤 다시 그리기를 수행 하지 못하도록 메서드는 <xref:System.Windows.Forms.ComboBox> 항목 목록에 추가 될 때마다.</span><span class="sxs-lookup"><span data-stu-id="90b14-187">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ComboBox> each time an item is added to the list.</span></span> <span data-ttu-id="90b14-188">목록에 항목을 추가 하는 작업을 완료 한 후 호출을 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 메서드를는 <xref:System.Windows.Forms.ComboBox> 다시 그려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-188">Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ComboBox> to repaint.</span></span> <span data-ttu-id="90b14-189">이러한 방식으로 항목을 추가 하는 깜박임을 그리는 동안 방지할 수는 <xref:System.Windows.Forms.ComboBox> 많은 수의 항목 목록에 추가 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="90b14-189">This way of adding items can prevent flicker during the drawing of the <xref:System.Windows.Forms.ComboBox> when a large number of items are being added to the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-190">다음 코드 예제에서는의 사용법을 보여 줍니다.는 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 고 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-190">The following code example shows the usage of the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods.</span></span> <span data-ttu-id="90b14-191">이 예제에서는 전체 코드 예제에서의 일부인는 <xref:System.Windows.Forms.ComboBox> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-191">The example is part of a complete code example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#3)]
 [!code-csharp[ComboBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#3)]
 [!code-vb[ComboBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="comboBox.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-192">컨트롤의 액세스 가능성 개체를 새로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-192">Creates a new accessibility object for the control.</span></span></summary>
        <returns><span data-ttu-id="90b14-193">컨트롤의 액세스 가능성 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-193">A new accessibility object for the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="comboBox.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-194">컨트롤의 핸들을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-194">Creates a handle for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-195">이 메서드를 재정의 <xref:System.Windows.Forms.ComboBox> 에 따른 핸들 생성 하는 동안 여러 레이아웃을 방지 하려면 <xref:System.Windows.Forms.ComboBox> 크기를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-195">This method is overridden in <xref:System.Windows.Forms.ComboBox> to avoid multiple layouts during handle creation due to <xref:System.Windows.Forms.ComboBox> size change.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ComboBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-196">컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-196">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="90b14-197">컨트롤 핸들을 만들 때 필요한 작성 매개 변수가 포함된 <see cref="T:System.Windows.Forms.CreateParams" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-197">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.ComboBox.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-198">이 <see cref="T:System.Windows.Forms.ComboBox" />의 데이터 소스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-198">Gets or sets the data source for this <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-199"><see cref="T:System.Collections.IList" /> 인터페이스 또는 <see cref="T:System.Array" />을(를) 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-199">An object that implements the <see cref="T:System.Collections.IList" /> interface or an <see cref="T:System.Array" />.</span></span> <span data-ttu-id="90b14-200">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-200">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-201">데이터 원본에는 데이터베이스, 웹 서비스 또는 데이터 바인딩된 컨트롤을 생성 하려면 나중에 사용할 수 있는 개체 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-201">A data source can be a database, a Web service, or an object that can later be used to generate data-bound controls.</span></span> <span data-ttu-id="90b14-202">경우는 <xref:System.Windows.Forms.ComboBox.DataSource%2A> 속성, 항목 컬렉션을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-202">When the <xref:System.Windows.Forms.ComboBox.DataSource%2A> property is set, the items collection cannot be modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-203">다음 예제에서는 합니다 <xref:System.Windows.Forms.ComboBox.DataSource%2A> 배열에 요일에 표시할 속성을 <xref:System.Windows.Forms.ComboBox>입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-203">The following example uses the <xref:System.Windows.Forms.ComboBox.DataSource%2A> property to display an array of weekdays in a <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ComboBox.DataSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.combobox.datasource/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBox.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.combobox.datasource/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ComboBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-204">컨트롤의 기본 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-204">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="90b14-205">컨트롤의 기본 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-205">The default size of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="comboBox.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="90b14-206">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-206"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="90b14-207"><see cref="T:System.Windows.Forms.ComboBox" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-207">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ComboBox" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-208">이 메서드는 공용 `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-208">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="90b14-209">`Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-209">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="90b14-210"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-210"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="90b14-211">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Windows.Forms.ComboBox>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-211">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ComboBox> references.</span></span> <span data-ttu-id="90b14-212">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-212">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-213">
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-213">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="90b14-214">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-214">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="90b14-215">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-215">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="90b14-216">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-216">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-217">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-217">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-218">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-218">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-219">소유자가 그린 <see cref="T:System.Windows.Forms.ComboBox" />의 시각적 측면이 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-219">Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-220">이 이벤트는 소유자가 그린 사용한 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-220">This event is used by an owner-drawn <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-221">이 이벤트를 사용 하 여 항목을 그리는 데 필요한 작업을 수행 하는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-221">You can use this event to perform the tasks needed to draw items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-222">가변 크기 항목이 있는 경우 (때를 <xref:System.Windows.Forms.ComboBox.DrawMode%2A?displayProperty=nameWithType> 속성을 `OwnerDrawVariable` 값 <xref:System.Windows.Forms.DrawMode?displayProperty=nameWithType>), 항목을 그리기 전에 <xref:System.Windows.Forms.ComboBox.MeasureItem> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-222">If you have a variable sized item (when the <xref:System.Windows.Forms.ComboBox.DrawMode%2A?displayProperty=nameWithType> property is set to the `OwnerDrawVariable` value of <xref:System.Windows.Forms.DrawMode?displayProperty=nameWithType>), before drawing an item, the <xref:System.Windows.Forms.ComboBox.MeasureItem> event is raised.</span></span> <span data-ttu-id="90b14-223">에 대 한 이벤트 처리기를 만들 수 있습니다 합니다 <xref:System.Windows.Forms.ComboBox.MeasureItem> 이벤트에 대 한 이벤트 처리기에서 그릴 하려는 항목에 대 한 크기를 지정 하는 <xref:System.Windows.Forms.ComboBox.DrawItem> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-223">You can create an event handler for the <xref:System.Windows.Forms.ComboBox.MeasureItem> event to specify the size for the item that you are going to draw in your event handler for the <xref:System.Windows.Forms.ComboBox.DrawItem> event.</span></span>  
  
 <span data-ttu-id="90b14-224">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-224">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-225">다음 코드 예제에는 설정 하 여는 소유자가 그린 콤보 상자를 만드는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.ComboBox.DrawMode%2A> 속성을 `OwnerDrawnVariable` 하 고 처리 합니다 <xref:System.Windows.Forms.ComboBox.DrawItem> 및 <xref:System.Windows.Forms.ComboBox.MeasureItem> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="90b14-225">The following code example demonstrates how to create an owner-drawn combo box by setting the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property to `OwnerDrawnVariable` and handling the <xref:System.Windows.Forms.ComboBox.DrawItem> and <xref:System.Windows.Forms.ComboBox.MeasureItem> events.</span></span> <span data-ttu-id="90b14-226">설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> 고 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-226">It also demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties.</span></span> <span data-ttu-id="90b14-227">예제를 실행 하는 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-227">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="90b14-228">호출 된 `InitializeComboBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-228">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); void set(System::Windows::Forms::DrawMode value); };" />
      <MemberSignature Language="F#" Value="member this.DrawMode : System.Windows.Forms.DrawMode with get, set" Usage="System.Windows.Forms.ComboBox.DrawMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-229">목록의 요소 그리기를 코드로 처리할지 운영 체제에서 자동으로 처리할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-229">Gets or sets a value indicating whether your code or the operating system will handle drawing of elements in the list.</span></span></summary>
        <value><span data-ttu-id="90b14-230"><see cref="T:System.Windows.Forms.DrawMode" /> 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-230">One of the <see cref="T:System.Windows.Forms.DrawMode" /> enumeration values.</span></span> <span data-ttu-id="90b14-231">기본값은 <see cref="F:System.Windows.Forms.DrawMode.Normal" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-231">The default is <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="90b14-232">다음 코드 예제에는 설정 하 여는 소유자가 그린 콤보 상자를 만드는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.ComboBox.DrawMode%2A> 속성을 `OwnerDrawnVariable` 하 고 처리 합니다 <xref:System.Windows.Forms.ComboBox.DrawItem> 및 <xref:System.Windows.Forms.ComboBox.MeasureItem> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="90b14-232">The following code example demonstrates how to create an owner-drawn combo box by setting the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property to `OwnerDrawnVariable` and handling the <xref:System.Windows.Forms.ComboBox.DrawItem> and <xref:System.Windows.Forms.ComboBox.MeasureItem> events.</span></span> <span data-ttu-id="90b14-233">설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> 고 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-233">It also demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties.</span></span> <span data-ttu-id="90b14-234">예제를 실행 하는 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-234">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="90b14-235">호출 된 `InitializeComboBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-235">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="90b14-236">해당 값이 올바른 <see cref="T:System.Windows.Forms.DrawMode" /> 열거형 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-236">The value is not a valid <see cref="T:System.Windows.Forms.DrawMode" /> enumeration value.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DrawMode" />
        <altmember cref="E:System.Windows.Forms.ComboBox.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ComboBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="public event EventHandler DropDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDown;" />
      <MemberSignature Language="F#" Value="member this.DropDown : EventHandler " Usage="member this.DropDown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-237"><see cref="T:System.Windows.Forms.ComboBox" />의 드롭다운 부분이 표시될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-237">Occurs when the drop-down portion of a <see cref="T:System.Windows.Forms.ComboBox" /> is shown.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-238">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-238">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-239">다음 코드 예제에는 초기화 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.ComboBox> text 속성을 설정 하 고 컨트롤을 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 9e4af80fa7c0">getroot()</legacylink> 메서드를를 <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="90b14-239">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the text property and using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method to populate the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-240">처리 하는 방법도 보여 줍니다는 <xref:System.Windows.Forms.ComboBox.DropDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-240">It also demonstrates handling the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span> <span data-ttu-id="90b14-241">예제를 실행 하려면 호출을 폼에 다음 코드를 붙여 합니다 `InitializeComboBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-241">To run the example, paste the following code in a form and call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberSignature Language="F#" Value="member this.DropDownClosed : EventHandler " Usage="member this.DropDownClosed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-242"><see cref="T:System.Windows.Forms.ComboBox" />의 드롭다운 부분이 더 이상 표시되지 않을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-242">Occurs when the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" /> is no longer visible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-243">사용 하 여는 <xref:System.Windows.Forms.ComboBox.DropDownClosed> 이벤트의 상태를 복원 하는 <xref:System.Windows.Forms.ComboBox> 변경에 대 한 응답에서에서 <xref:System.Windows.Forms.ComboBox.DropDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-243">Use the <xref:System.Windows.Forms.ComboBox.DropDownClosed> event to restore the state of the <xref:System.Windows.Forms.ComboBox> from changes you made in response to the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span>  
  
 <span data-ttu-id="90b14-244">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-244">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-245">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-245">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="90b14-246">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ComboBox.DropDownClosed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-246">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ComboBox.DropDownClosed> event.</span></span> <span data-ttu-id="90b14-247">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-247">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="90b14-248">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-248">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="90b14-249">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ComboBox> 라는 `ComboBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-249">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ComboBox> named `ComboBox1`.</span></span> <span data-ttu-id="90b14-250">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.ComboBox.DropDownClosed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-250">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ComboBox.DropDownClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#168](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#168)]
 [!code-vb[System.Windows.Forms.EventExamples#168](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#168)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDown" />
      </Docs>
    </Member>
    <Member MemberName="DropDownHeight">
      <MemberSignature Language="C#" Value="public int DropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownHeight : int with get, set" Usage="System.Windows.Forms.ComboBox.DropDownHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(106)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-251"><see cref="T:System.Windows.Forms.ComboBox" />의 드롭다운 부분의 높이(픽셀)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-251">Gets or sets the height in pixels of the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-252">드롭다운 상자의 높이(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-252">The height, in pixels, of the drop-down box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-253">설정 된 <xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> 속성 다시 설정 합니다 <xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-253">Setting the <xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> property resets the <xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90b14-254">지정된 값이 1보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-254">The specified value is less than one.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBoxStyle DropDownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ComboBoxStyle DropDownStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownStyle As ComboBoxStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBoxStyle DropDownStyle { System::Windows::Forms::ComboBoxStyle get(); void set(System::Windows::Forms::ComboBoxStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownStyle : System.Windows.Forms.ComboBoxStyle with get, set" Usage="System.Windows.Forms.ComboBox.DropDownStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBoxStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-255">콤보 상자의 스타일을 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-255">Gets or sets a value specifying the style of the combo box.</span></span></summary>
        <value><span data-ttu-id="90b14-256"><see cref="T:System.Windows.Forms.ComboBoxStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-256">One of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values.</span></span> <span data-ttu-id="90b14-257">기본값은 <see langword="DropDown" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-257">The default is <see langword="DropDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-258"><xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성은 항상 표시 되는지 여부 또는 목록 드롭다운에 표시 되는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-258">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property specifies whether the list is always displayed or whether the list is displayed in a drop-down.</span></span> <span data-ttu-id="90b14-259"><xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성 텍스트 부분을 편집할 수 있는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-259">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property also specifies whether the text portion can be edited.</span></span> <span data-ttu-id="90b14-260">참조 <xref:System.Windows.Forms.ComboBoxStyle> 사용 가능한 설정 및 그 영향에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-260">See <xref:System.Windows.Forms.ComboBoxStyle> for the available settings and their effects.</span></span> <span data-ttu-id="90b14-261">항상 목록을 표시 하 고 새 값을 입력을 허용 하지 않도록 설정은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-261">There is no setting to always display the list and disallow entering a new value.</span></span> <span data-ttu-id="90b14-262">새 값이 없는 추가할 수 목록을 표시 하려면 사용을 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-262">To display a list to which no new values can be added, use a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-263">다음 코드 예제에서는 설정 된 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-263">The following code example demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property.</span></span> <span data-ttu-id="90b14-264">예제를 실행 하는 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-264">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="90b14-265">호출 된 `InitializeComboBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-265">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="90b14-266">할당된 값이 <see cref="T:System.Windows.Forms.ComboBoxStyle" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-266">The assigned value is not one of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ComboBoxStyle" />
      </Docs>
    </Member>
    <Member MemberName="DropDownStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.DropDownStyleChanged : EventHandler " Usage="member this.DropDownStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-267"><see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> 속성이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-267">Occurs when the <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-268">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-268">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-269">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-269">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="90b14-270">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-270">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> event.</span></span> <span data-ttu-id="90b14-271">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-271">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="90b14-272">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-272">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="90b14-273">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ComboBox> 라는 `ComboBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-273">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ComboBox> named `ComboBox1`.</span></span> <span data-ttu-id="90b14-274">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-274">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#166](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#166)]
 [!code-vb[System.Windows.Forms.EventExamples#166](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#166)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownWidth">
      <MemberSignature Language="C#" Value="public int DropDownWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownWidth : int with get, set" Usage="System.Windows.Forms.ComboBox.DropDownWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-275">콤보 상자의 드롭다운 부분 너비를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-275">Gets or sets the width of the of the drop-down portion of a combo box.</span></span></summary>
        <value><span data-ttu-id="90b14-276">드롭다운 상자의 너비(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-276">The width, in pixels, of the drop-down box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-277">값에 대 한 설정 되지 않은 경우는 <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A>,이 속성을 반환 합니다 <xref:System.Windows.Forms.Control.Width%2A> 콤보 상자의 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-277">If a value has not been set for the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A>, this property returns the <xref:System.Windows.Forms.Control.Width%2A> of the combo box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-278">드롭다운 메뉴의 너비 보다 작을 수 없습니다는 <xref:System.Windows.Forms.ComboBox> 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-278">The width of the drop-down cannot be smaller than the <xref:System.Windows.Forms.ComboBox> width.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-279">다음 코드 예제에는 설정 하 여는 소유자가 그린 콤보 상자를 만드는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.ComboBox.DrawMode%2A> 속성을 `OwnerDrawnVariable` 하 고 처리 합니다 <xref:System.Windows.Forms.ComboBox.DrawItem> 및 <xref:System.Windows.Forms.ComboBox.MeasureItem> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="90b14-279">The following code example demonstrates how to create an owner-drawn combo box by setting the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property to `OwnerDrawnVariable` and handling the <xref:System.Windows.Forms.ComboBox.DrawItem> and <xref:System.Windows.Forms.ComboBox.MeasureItem> events.</span></span> <span data-ttu-id="90b14-280">설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> 고 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-280">It also demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties.</span></span> <span data-ttu-id="90b14-281">예제를 실행 하는 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-281">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="90b14-282">호출 된 `InitializeComboBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-282">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90b14-283">지정된 값이 1보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-283">The specified value is less than one.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DroppedDown">
      <MemberSignature Language="C#" Value="public bool DroppedDown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DroppedDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DroppedDown" />
      <MemberSignature Language="VB.NET" Value="Public Property DroppedDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DroppedDown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DroppedDown : bool with get, set" Usage="System.Windows.Forms.ComboBox.DroppedDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-284">콤보 상자에 드롭다운 부분이 표시되는지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-284">Gets or sets a value indicating whether the combo box is displaying its drop-down portion.</span></span></summary>
        <value><span data-ttu-id="90b14-285">드롭다운 부분이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-285"><see langword="true" /> if the drop-down portion is displayed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="90b14-286">기본값은 false입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-286">The default is false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="comboBox.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-287"><see cref="T:System.Windows.Forms.ComboBox" /> 메서드에 의해 그리기가 일시 중단된 후 <see cref="M:System.Windows.Forms.ComboBox.BeginUpdate" /> 컨트롤 그리기를 다시 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-287">Resumes painting the <see cref="T:System.Windows.Forms.ComboBox" /> control after painting is suspended by the <see cref="M:System.Windows.Forms.ComboBox.BeginUpdate" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-288">항목을 추가 하는 기본 방법은 <xref:System.Windows.Forms.ComboBox> 사용 하는 것을 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 메서드의 <xref:System.Windows.Forms.ComboBox.ObjectCollection> 클래스 (통해를 <xref:System.Windows.Forms.ComboBox.Items%2A> 의 속성을 <xref:System.Windows.Forms.ComboBox>).</span><span class="sxs-lookup"><span data-stu-id="90b14-288">The preferred way to add items to the <xref:System.Windows.Forms.ComboBox> is to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ComboBox.Items%2A> property of the <xref:System.Windows.Forms.ComboBox>).</span></span> <span data-ttu-id="90b14-289">이 항목의 배열을 목록에 한 번에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-289">This enables you to add an array of items to the list at one time.</span></span> <span data-ttu-id="90b14-290">하지만 추가 하려는 경우에 하나의 항목을 사용 하 여 시간을 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> 메서드의 <xref:System.Windows.Forms.ComboBox.ObjectCollection> 클래스를 사용할 수는 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 컨트롤 다시 그리기를 수행 하지 못하도록 메서드는 <xref:System.Windows.Forms.ComboBox> 항목 목록에 추가 될 때마다.</span><span class="sxs-lookup"><span data-stu-id="90b14-290">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ComboBox> each time an item is added to the list.</span></span> <span data-ttu-id="90b14-291">목록에 항목을 추가 하는 작업을 완료 한 후 호출을 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 메서드를는 <xref:System.Windows.Forms.ComboBox> 다시 그려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-291">Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ComboBox> to repaint.</span></span> <span data-ttu-id="90b14-292">이 방법으로 항목의 그리기 추가 <xref:System.Windows.Forms.ComboBox> 많은 수의 항목 목록에 추가 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="90b14-292">This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ComboBox> when a large number of items are being added to the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-293">다음 코드 예제에서는의 사용법을 보여 줍니다.는 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 고 <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-293">The following code example shows the usage of the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods.</span></span> <span data-ttu-id="90b14-294">이 예제에서는 코드 예제에서의 일부인는 <xref:System.Windows.Forms.ComboBox> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-294">The example is part of a code example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#3)]
 [!code-csharp[ComboBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#3)]
 [!code-vb[ComboBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindString">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="90b14-295">지정된 문자열로 시작하는 <see cref="T:System.Windows.Forms.ComboBox" />에서 첫 번째 항목의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-295">Returns the index of the first item in the <see cref="T:System.Windows.Forms.ComboBox" /> that starts with the specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.FindString : string -&gt; int" Usage="comboBox.FindString s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="90b14-296">검색할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-296">The <see cref="T:System.String" /> to search for.</span></span></param>
        <summary><span data-ttu-id="90b14-297">지정된 문자열로 시작하는 <see cref="T:System.Windows.Forms.ComboBox" />에서 첫 번째 항목의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-297">Returns the index of the first item in the <see cref="T:System.Windows.Forms.ComboBox" /> that starts with the specified string.</span></span></summary>
        <returns><span data-ttu-id="90b14-298">찾은 첫째 항목의 0부터 시작하는 인덱스입니다. 일치하는 항목이 없으면 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-298">The zero-based index of the first item found; returns -1 if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-299">이 메서드에 의해 수행 검색은 대/소문자 구분 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-299">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="90b14-300">`s` 매개 변수는 콤보 상자 목록에서 해당 항목과 관련 된 텍스트에 대해 비교할 부분 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-300">The `s` parameter is a substring to compare against the text associated with the items in the combo box list.</span></span> <span data-ttu-id="90b14-301">검색은 텍스트의 시작 부분에서 시작 하 고 지정된 된 부분 문자열 일치 하는 목록의 첫 번째 항목을 반환 합니다. 부분적으로 일치를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-301">The search performs a partial match starting from the beginning of the text, and returning the first item in the list that matches the specified substring.</span></span> <span data-ttu-id="90b14-302">사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등의 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> 메서드 또는 항목의 텍스트를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-302">You can then perform tasks, such as removing the item that contains the search text using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="90b14-303">에 있는 텍스트의 다른 인스턴스를 검색 하려는 경우 지정 된 텍스트를 발견 하면를 <xref:System.Windows.Forms.ComboBox>, 버전을 사용 해야 합니다는 <xref:System.Windows.Forms.ComboBox.FindString%2A> 내의 시작 인덱스를 지정 하는 것에 대 한 매개 변수를 제공 하는 메서드는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-303">Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ComboBox>, you must use the version of the <xref:System.Windows.Forms.ComboBox.FindString%2A> method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-304">부분적으로 일치 하는 대신 정확 하 게 일치 하는 항목 검색을 수행 하려는 경우 사용 된 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-304">If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-305">다음 코드 예제에서는의 사용법을 보여 줍니다.는 <xref:System.Windows.Forms.ComboBox.FindString%2A> 메서드 및 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-305">The following code example shows the usage of the <xref:System.Windows.Forms.ComboBox.FindString%2A> method and <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="90b14-306">이 예제에서는 전체 코드 예제에서의 일부인는 <xref:System.Windows.Forms.ComboBox> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-306">The example is part of a complete code example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#4)]
 [!code-csharp[ComboBox#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#4)]
 [!code-vb[ComboBox#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindString(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindString : string * int -&gt; int" Usage="comboBox.FindString (s, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="90b14-307">검색할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-307">The <see cref="T:System.String" /> to search for.</span></span></param>
        <param name="startIndex"><span data-ttu-id="90b14-308">검색될 첫째 항목 앞에 나오는 항목의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-308">The zero-based index of the item before the first item to be searched.</span></span> <span data-ttu-id="90b14-309">컨트롤의 처음부터 검색하려면 -1로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-309">Set to -1 to search from the beginning of the control.</span></span></param>
        <summary><span data-ttu-id="90b14-310">지정된 문자열이 포함된 지정된 인덱스 이후의 <see cref="T:System.Windows.Forms.ComboBox" />에서 첫 번째 항목의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-310">Returns the index of the first item in the <see cref="T:System.Windows.Forms.ComboBox" /> beyond the specified index that contains the specified string.</span></span> <span data-ttu-id="90b14-311">검색은 대/소문자를 구분하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-311">The search is not case sensitive.</span></span></summary>
        <returns><span data-ttu-id="90b14-312">찾은 첫 번째 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 -1을 반환하고, <paramref name="s" /> 매개 변수가 <see cref="F:System.String.Empty" />을(를) 지정하면 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-312">The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-313">이 메서드에 의해 수행 검색은 대/소문자 구분 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-313">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="90b14-314">`s` 매개 변수는 콤보 상자 목록에서 해당 항목과 관련 된 텍스트에 대해 비교할 부분 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-314">The `s` parameter is a substring to compare against the text associated with the items in the combo box list.</span></span> <span data-ttu-id="90b14-315">검색 기능은 부분적으로 일치 텍스트의 시작 부분에서 시작 합니다. 지정된 된 부분 문자열 일치 하는 목록의 첫 번째 항목을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-315">The search performs a partial match starting from the beginning of the text, returning the first item in the list that matches the specified substring.</span></span> <span data-ttu-id="90b14-316">사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등의 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> 메서드 또는 항목의 텍스트를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-316">You can then perform tasks, such as removing the item that contains the search text using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="90b14-317">이 메서드는 호출을 시작 하는 인덱스를 지정 하지 않습니다는이 메서드의 버전을 사용 하 여 생성 된 후에 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-317">This method is typically used after a call has been made using the version of this method that does not specify a starting index.</span></span> <span data-ttu-id="90b14-318">초기 항목을 목록에서 찾은,이 메서드는 대개 사용의 인덱스 위치를 지정 하 여 검색 텍스트의 인스턴스를 추가로 찾는 `startIndex` 첫 번째 검색된 인스턴스의 검색 텍스트 후 항목의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-318">Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text.</span></span> <span data-ttu-id="90b14-319">부분적으로 일치 하는 대신 정확 하 게 일치 하는 항목 검색을 수행 하려는 경우 사용 된 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-319">If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="90b14-320"><paramref name="startIndex" />가 -1보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-320">The <paramref name="startIndex" /> is less than -1.</span></span>  
  
<span data-ttu-id="90b14-321">또는</span><span class="sxs-lookup"><span data-stu-id="90b14-321">-or-</span></span> 
<span data-ttu-id="90b14-322"><paramref name="startIndex" />가 컬렉션의 마지막 인덱스보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-322">The <paramref name="startIndex" /> is greater than the last index in the collection.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindStringExact">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="90b14-323">지정된 문자열과 정확히 일치하는 항목을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-323">Finds the item that exactly matches the specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindStringExact(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.FindStringExact : string -&gt; int" Usage="comboBox.FindStringExact s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="90b14-324">검색할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-324">The <see cref="T:System.String" /> to search for.</span></span></param>
        <summary><span data-ttu-id="90b14-325">콤보 상자에서 지정된 문자열과 일치하는 첫째 항목을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-325">Finds the first item in the combo box that matches the specified string.</span></span></summary>
        <returns><span data-ttu-id="90b14-326">찾은 첫 번째 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 -1을 반환하고, <paramref name="s" /> 매개 변수가 <see cref="F:System.String.Empty" />을(를) 지정하면 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-326">The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-327">이 메서드에 의해 수행 검색은 대/소문자 구분 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-327">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="90b14-328">`s` 매개 변수는 콤보 상자 목록에서 해당 항목과 관련 된 텍스트를 비교할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-328">The `s` parameter is a string to compare against the text associated with the items in the combo box list.</span></span> <span data-ttu-id="90b14-329">지정된 된 부분 문자열 일치 하는 목록의 첫 번째 항목을 반환 합니다. 일치 텍스트의 시작 부분에서 시작을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-329">The search looks for a match starting from the beginning of the text, returning the first item in the list that matches the specified substring.</span></span> <span data-ttu-id="90b14-330">사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등의 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> 메서드 또는 항목의 텍스트를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-330">You can then perform tasks, such as removing the item that contains the search text using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="90b14-331">에 있는 텍스트의 다른 인스턴스를 검색 하려는 경우 지정 된 텍스트를 발견 하면를 <xref:System.Windows.Forms.ComboBox>, 버전을 사용 해야 합니다는 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 내의 시작 인덱스를 지정 하는 것에 대 한 매개 변수를 제공 하는 메서드는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-331">Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ComboBox>, you must use the version of the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-332">사용 하 여 완전 하 게 일치 하는 대신 부분 단어 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ComboBox.FindString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-332">If you want to perform partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ComboBox.FindString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-333">다음 코드 예제에는 초기화 하는 방법을 보여 줍니다.를 <xref:System.Windows.Forms.ComboBox> 설정 하 여 컨트롤을 <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> 및 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성 및 사용 하 여를 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 검색 하는 메서드는 <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="90b14-333">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties and using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-334">또한 처리를 보여 줍니다는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-334">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindStringExact(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindStringExact : string * int -&gt; int" Usage="comboBox.FindStringExact (s, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="90b14-335">검색할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-335">The <see cref="T:System.String" /> to search for.</span></span></param>
        <param name="startIndex"><span data-ttu-id="90b14-336">검색될 첫째 항목 앞에 나오는 항목의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-336">The zero-based index of the item before the first item to be searched.</span></span> <span data-ttu-id="90b14-337">컨트롤의 처음부터 검색하려면 -1로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-337">Set to -1 to search from the beginning of the control.</span></span></param>
        <summary><span data-ttu-id="90b14-338">지정된 문자열과 일치하며 지정된 인덱스 다음에 나오는 첫째 항목을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-338">Finds the first item after the specified index that matches the specified string.</span></span></summary>
        <returns><span data-ttu-id="90b14-339">찾은 첫 번째 항목의 인덱스(0부터 시작)입니다. 일치하는 항목이 없으면 -1을 반환하고, <paramref name="s" /> 매개 변수가 <see cref="F:System.String.Empty" />을(를) 지정하면 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-339">The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-340">이 메서드에 의해 수행 검색은 대/소문자 구분 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-340">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="90b14-341">`s` 매개 변수는 콤보 상자 목록에서 해당 항목과 관련 된 텍스트를 비교할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-341">The `s` parameter is a string to compare against the text associated with the items in the combo box list.</span></span> <span data-ttu-id="90b14-342">지정된 된 부분 문자열 일치 하는 목록의 첫 번째 항목을 반환 합니다. 일치 텍스트의 시작 부분에서 시작을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-342">The search looks for a match starting from the beginning of the text, returning the first item in the list that matches the specified substring.</span></span> <span data-ttu-id="90b14-343">사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등의 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> 메서드 또는 항목의 텍스트를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-343">You can then perform tasks, such as removing the item that contains the search text using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="90b14-344">이 메서드는 호출을 시작 하는 인덱스를 지정 하지 않습니다는이 메서드의 버전을 사용 하 여 생성 된 후에 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-344">This method is typically used after a call has been made using the version of this method that does not specify a starting index.</span></span> <span data-ttu-id="90b14-345">초기 항목을 목록에서 찾은,이 메서드는 대개 사용의 인덱스 위치를 지정 하 여 검색 텍스트의 인스턴스를 추가로 찾는 `startIndex` 첫 번째 검색된 인스턴스의 검색 텍스트 후 항목의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-345">Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text.</span></span> <span data-ttu-id="90b14-346">사용 하 여 완전 하 게 일치 하는 대신 부분 단어 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ComboBox.FindString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-346">If you want to perform partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ComboBox.FindString%2A> method.</span></span>  
  
 <span data-ttu-id="90b14-347">이 메서드에 의해 수행 되는 검색 원형입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-347">The search performed by this method is circular.</span></span> <span data-ttu-id="90b14-348">검색 한 후 다음 인덱스에서 시작 하지만 `startIndex` 매개 변수 검색을 다시 시작 0부터 컬렉션의 끝에 도달한 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-348">Although the search starts at the next index after the `startIndex` parameter, the search restarts at 0 when the end of the collection is reached.</span></span> <span data-ttu-id="90b14-349">그러나 경우는 `startIndex` 자체 매개 변수는 컬렉션의 마지막 인덱스와 같고, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-349">However, note that if the `startIndex` parameter itself is equal to the last index in the collection, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-350">다음 코드 예제에는 초기화 하는 방법을 보여 줍니다.를 <xref:System.Windows.Forms.ComboBox> 설정 하 여 컨트롤을 <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> 및 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성 및 사용 하 여를 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 검색 하는 메서드는 <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="90b14-350">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties and using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-351">또한 처리를 보여 줍니다는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-351">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="90b14-352"><paramref name="startIndex" />가 -1보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-352">The <paramref name="startIndex" /> is less than -1.</span></span>  
  
<span data-ttu-id="90b14-353">또는</span><span class="sxs-lookup"><span data-stu-id="90b14-353">-or-</span></span> 
<span data-ttu-id="90b14-354"><paramref name="startIndex" />가 컬렉션의 마지막 인덱스와 같은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-354">The <paramref name="startIndex" /> is equal to the last index in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.ComboBox.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-355"><see cref="T:System.Windows.Forms.ComboBox" />의 모양을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-355">Gets or sets the appearance of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-356">컨트롤의 모양을 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-356">One of the enumeration values that specifies the appearance of the control.</span></span> <span data-ttu-id="90b14-357">가능한 옵션은 <see langword="Flat" />, <see langword="Popup" />, <see langword="Standard" /> 및 <see langword="System" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-357">The options are <see langword="Flat" />, <see langword="Popup" />, <see langword="Standard" />, and <see langword="System" />.</span></span> <span data-ttu-id="90b14-358">기본값은 <see langword="Standard" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-358">The default is <see langword="Standard" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-359">경우.NET Framework 4.5.2부터 합니다 <xref:System.Windows.Forms.ComboBox.FlatStyle%2A> 속성이 <xref:System.Windows.Forms.FlatStyle.Flat> 또는 <xref:System.Windows.Forms.FlatStyle.Popup>, 드롭다운 화살표의 크기를 조정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-359">Starting with the .NET Framework 4.5.2, if the <xref:System.Windows.Forms.ComboBox.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.Flat> or <xref:System.Windows.Forms.FlatStyle.Popup>, the drop-down arrow may be resized.</span></span> <span data-ttu-id="90b14-360">크기 조정 app.config 파일에 다음 항목이 포함 되어 있으면 시스템 DPI 설정에 의해 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-360">Resizing is determined by the system DPI setting when the app.config file contains the following entry:</span></span>  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="90b14-361">지정한 값이 <see cref="T:System.Windows.Forms.FlatStyle" />의 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-361">The specified value is not one of the values of <see cref="T:System.Windows.Forms.FlatStyle" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.ComboBox.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-362"><see cref="T:System.Windows.Forms.ComboBox" />에 포커스가 있는지 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-362">Gets a value indicating whether the <see cref="T:System.Windows.Forms.ComboBox" /> has focus.</span></span></summary>
        <value><span data-ttu-id="90b14-363">이 컨트롤에 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-363"><see langword="true" /> if this control has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ComboBox.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-364">컨트롤의 전경색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-364">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="90b14-365">컨트롤의 전경색입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-365">The foreground color of the control.</span></span> <span data-ttu-id="90b14-366">기본값은 <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-366">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemHeight">
      <MemberSignature Language="C#" Value="public int GetItemHeight (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetItemHeight(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.GetItemHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemHeight (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItemHeight(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemHeight : int -&gt; int" Usage="comboBox.GetItemHeight index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="90b14-367">높이를 반환할 항목의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-367">The index of the item to return the height of.</span></span></param>
        <summary><span data-ttu-id="90b14-368"><see cref="T:System.Windows.Forms.ComboBox" />의 항목 높이를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-368">Returns the height of an item in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <returns><span data-ttu-id="90b14-369">지정된 인덱스에 있는 항목의 높이(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-369">The height, in pixels, of the item at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-370">경우 <xref:System.Windows.Forms.ComboBox.DrawMode%2A> 로 설정 되어 있지 `OwnerDrawVariable`, 값을 `index` 표준의 모든 항목의 매개 변수가 무시 됩니다 <xref:System.Windows.Forms.ComboBox> 크기는 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-370">If <xref:System.Windows.Forms.ComboBox.DrawMode%2A> is not set to `OwnerDrawVariable`, the value of the `index` parameter is ignored because all items in a standard <xref:System.Windows.Forms.ComboBox> are the same size.</span></span> <span data-ttu-id="90b14-371">소유자가 그린를 사용 하는 경우이 속성을 사용할 수 있습니다 <xref:System.Windows.Forms.ComboBox> 내에서 모든 항목의 크기를 결정 하는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-371">You can use this property when you are using an owner-drawn <xref:System.Windows.Forms.ComboBox> to determine the size of any item within the <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
 <span data-ttu-id="90b14-372">소유자가 그린 목록에서 항목의 높이 지정 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Forms.ComboBox.MeasureItem> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-372">For more information about specifying the height for items in an owner-drawn list, see <xref:System.Windows.Forms.ComboBox.MeasureItem> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="90b14-373"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-373">The <paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="90b14-374">또는</span><span class="sxs-lookup"><span data-stu-id="90b14-374">-or-</span></span> 
<span data-ttu-id="90b14-375"><paramref name="index" />가 목록의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-375">The <paramref name="index" /> is greater than count of items in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IntegralHeight">
      <MemberSignature Language="C#" Value="public bool IntegralHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IntegralHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.IntegralHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property IntegralHeight As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IntegralHeight { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IntegralHeight : bool with get, set" Usage="System.Windows.Forms.ComboBox.IntegralHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-376">부분 항목을 표시하지 않도록 컨트롤의 크기를 조정할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-376">Gets or sets a value indicating whether the control should resize to avoid showing partial items.</span></span></summary>
        <value><span data-ttu-id="90b14-377">목록 부분에 완전한 항목만 포함할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-377"><see langword="true" /> if the list portion can contain only complete items; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="90b14-378">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-378">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-379">이 속성 설정 된 경우 `true`, 컨트롤 크기가 자동으로 조정 항목 부분적으로 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-379">When this property is set to `true`, the control automatically resizes to ensure that an item is not partially displayed.</span></span> <span data-ttu-id="90b14-380">원래 크기를 유지 하려는 경우는 <xref:System.Windows.Forms.ComboBox> 폼의 공간 요구 사항에 따라이 속성을 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-380">If you want to maintain the original size of the <xref:System.Windows.Forms.ComboBox> based on the space requirements of your form, set this property to `false`.</span></span> <span data-ttu-id="90b14-381">경우는 <xref:System.Windows.Forms.ComboBox> 모든 항목이 포함 되지 않은이 속성이 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-381">If the <xref:System.Windows.Forms.ComboBox> does not contain any items, this property has no effect.</span></span>  
  
 <span data-ttu-id="90b14-382">설정 된 <xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> 속성 다시 설정 합니다 <xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-382">Setting the <xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> property resets the <xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-383">경우는 <xref:System.Windows.Forms.ComboBox.DrawMode%2A> 속성이 `OwnerDrawVariable`,이 속성이 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-383">If the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property is set to `OwnerDrawVariable`, this property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="comboBox.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="90b14-384"><see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-384">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span></param>
        <summary><span data-ttu-id="90b14-385">지정된 키가 일반 입력 키인지 또는 전처리가 필요한 특수 키인지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-385">Determines whether the specified key is a regular input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="90b14-386">지정된 키가 일반 입력 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-386"><see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-387"><xref:System.Windows.Forms.ComboBox.IsInputKey%2A> 메서드가 반환 되는 `true` 경우는 `keyData` 매개 변수를 포함 합니다 <xref:System.Windows.Forms.Keys.Return> 또는 <xref:System.Windows.Forms.Keys.Escape> 값 및 <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> 속성이 `true`.</span><span class="sxs-lookup"><span data-stu-id="90b14-387">The <xref:System.Windows.Forms.ComboBox.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Return> or <xref:System.Windows.Forms.Keys.Escape> value and the <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItemHeight : int with get, set" Usage="System.Windows.Forms.ComboBox.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-388">콤보 상자의 항목 높이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-388">Gets or sets the height of an item in the combo box.</span></span></summary>
        <value><span data-ttu-id="90b14-389">콤보 상자의 항목 높이(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-389">The height, in pixels, of an item in the combo box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-390">경우는 <xref:System.Windows.Forms.ComboBox.DrawMode%2A> 속성 `OwnerDrawFixed`, 모든 항목의 높이가 같습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-390">When the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property is set to `OwnerDrawFixed`, all items have the same height.</span></span> <span data-ttu-id="90b14-391">경우는 <xref:System.Windows.Forms.DrawMode> 속성이로 설정 되어 `OwnerDrawVariable`, <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> 속성에 추가 된 각 항목의 높이 지정 합니다 <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="90b14-391">When the <xref:System.Windows.Forms.DrawMode> property is set to `OwnerDrawVariable`, the <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> property specifies the height of each item added to the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-392">소유자가 그린 목록에서 각 항목은 다른 높이 가질 수 있으므로 사용할 수는 <xref:System.Windows.Forms.ComboBox.GetItemHeight%2A> 에서 특정 항목의 높이 가져오기 위한 메서드를 <xref:System.Windows.Forms.ComboBox>입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-392">Because each item in an owner-drawn list can have a different height, you can use the <xref:System.Windows.Forms.ComboBox.GetItemHeight%2A> method to get the height of a specific item in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-393">사용 하는 경우는 <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> 속성에는 <xref:System.Windows.Forms.ComboBox> 가변 높이의 항목을 사용 하 여이 속성 컨트롤의 첫 번째 항목의 높이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-393">If you use the <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> property on a <xref:System.Windows.Forms.ComboBox> with items of variable height, this property returns the height of the first item in the control.</span></span>  
  
 <span data-ttu-id="90b14-394">소유자가 그린 목록에서 항목의 높이 지정 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Forms.ComboBox.MeasureItem> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-394">For more information about specifying the height for items in an owner-drawn list, see <xref:System.Windows.Forms.ComboBox.MeasureItem> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90b14-395">항목 높이 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-395">The item height value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ComboBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ComboBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBox::ObjectCollection ^ Items { System::Windows::Forms::ComboBox::ObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ComboBox.ObjectCollection" Usage="System.Windows.Forms.ComboBox.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-396">이 <see cref="T:System.Windows.Forms.ComboBox" />에 포함된 항목의 컬렉션을 나타내는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-396">Gets an object representing the collection of the items contained in this <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-397"><see cref="T:System.Windows.Forms.ComboBox" />의 항목을 나타내는 <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-397">A <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> representing the items in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-398">이 속성에 현재 저장 되어 있는 항목의 목록에 대 한 참조를 가져올 수 있습니다는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-398">This property enables you to obtain a reference to the list of items that are currently stored in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-399">이 참조를 사용 하 여 항목 추가 항목을 제거 고 컬렉션의 항목 개수를 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-399">With this reference, you can add items, remove items, and obtain a count of the items in the collection.</span></span>  
  
 <span data-ttu-id="90b14-400">하지만 합니다 <xref:System.Windows.Forms.ComboBox> 는 텍스트 항목을 표시 하는 데 일반적으로, 모든 개체를 추가할 수 있습니다는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-400">Although the <xref:System.Windows.Forms.ComboBox> is typically used to display text items, you can add any object to the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-401">개체의 표현이 일반적으로 <xref:System.Windows.Forms.ComboBox> 해당 개체에 의해 반환 되는 문자열 <xref:System.Object.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-401">Typically, the representation of an object in the <xref:System.Windows.Forms.ComboBox> is the string returned by that object's <xref:System.Object.ToString%2A> method.</span></span> <span data-ttu-id="90b14-402">대신 표시 된 개체의 멤버를 포함 하려는 경우 설정 하 여 표시 되는 멤버를 선택 합니다 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성을 적절 한 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-402">If you want to have a member of the object displayed instead, choose the member that will be displayed by setting the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property to the name of the appropriate member.</span></span> <span data-ttu-id="90b14-403">설정 하 여 개체에 의해 반환 된 값을 나타내는 개체의 멤버를 선택할 수도 있습니다는 <xref:System.Windows.Forms.ListControl.ValueMember%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-403">You can also choose a member of the object that will represent the value returned by the object by setting the <xref:System.Windows.Forms.ListControl.ValueMember%2A> property.</span></span> <span data-ttu-id="90b14-404">자세한 내용은 <xref:System.Windows.Forms.ListControl>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-404">For more information, see <xref:System.Windows.Forms.ListControl>.</span></span>  
  
 <span data-ttu-id="90b14-405">항목 컬렉션을 사용 하 여 수행할 수 있는 작업에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> 클래스 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-405">For more information about the tasks that can be performed with the item collection, see the <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> class reference topics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-406">다음 코드 예제 수가 적은 추가 하는 방법에 설명 <xref:System.Windows.Forms.ComboBox> 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-406">The following code example demonstrates how to add a small number of <xref:System.Windows.Forms.ComboBox> items.</span></span> <span data-ttu-id="90b14-407">많은 수의 항목을 추가 해야 할 경우에 예제를 참조 하세요. <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-407">If you need to add a large number of items, see the example at <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A>.</span></span> <span data-ttu-id="90b14-408">두 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.ComboBox> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-408">Both examples are part of a larger example available in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#2)]
 [!code-csharp[ComboBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#2)]
 [!code-vb[ComboBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownItems">
      <MemberSignature Language="C#" Value="public int MaxDropDownItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDropDownItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaxDropDownItems" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownItems As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDropDownItems { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDropDownItems : int with get, set" Usage="System.Windows.Forms.ComboBox.MaxDropDownItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-409"><see cref="T:System.Windows.Forms.ComboBox" />의 드롭다운 부분에 표시되는 최대 항목 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-409">Gets or sets the maximum number of items to be shown in the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-410">드롭다운 부분의 최대 항목 수입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-410">The maximum number of items of in the drop-down portion.</span></span> <span data-ttu-id="90b14-411">이 속성의 최소값은 1이고 최대값은 100입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-411">The minimum for this property is 1 and the maximum is 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="90b14-412">다음 코드 예제에는 초기화 하는 방법을 보여 줍니다.를 <xref:System.Windows.Forms.ComboBox> 설정 하 여 컨트롤을 <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> 및 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성 및 사용 하 여를 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 검색 하는 메서드는 <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="90b14-412">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties and using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-413">또한 처리를 보여 줍니다는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-413">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90b14-414">최대값이 1보다 작거나 100보다 크게 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-414">The maximum number is set less than one or greater than 100.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ComboBox.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-415"><see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> 메서드에서 지정할 수 있는 상한을 나타내는 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-415">Gets or sets the size that is the upper limit that the <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> method can specify.</span></span></summary>
        <value><span data-ttu-id="90b14-416">사각형의 너비와 높이를 나타내는 <see cref="T:System.Drawing.Size" /> 형식의 정렬된 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-416">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.ComboBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-417">사용자가 <see cref="T:System.Windows.Forms.ComboBox" />에 입력할 수 있는 문자 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-417">Gets or sets the number of characters a user can type into the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-418">사용자가 입력할 수 있는 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-418">The maximum number of characters a user can enter.</span></span> <span data-ttu-id="90b14-419">0보다 작은 값은 기본값인 0으로 다시 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-419">Values of less than zero are reset to zero, which is the default value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberSignature Language="F#" Value="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " Usage="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-420">소유자가 그린 <see cref="T:System.Windows.Forms.ComboBox" /> 항목을 그려야 할 때마다 그리고 목록 항목의 크기가 결정되었을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-420">Occurs each time an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> item needs to be drawn and when the sizes of the list items are determined.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-421">항목을 그리기 전에 이루어집니다 크기를 지정 하려면이 이벤트에 대 한 이벤트 처리기를 만들 수는 <xref:System.Windows.Forms.ComboBox.DrawItem> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-421">You can create an event handler for this event to specify the size an item is made before it is drawn in the <xref:System.Windows.Forms.ComboBox.DrawItem> event.</span></span>  
  
 <span data-ttu-id="90b14-422">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-422">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-423">다음 코드 예제에는 설정 하 여는 소유자가 그린 콤보 상자를 만드는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.ComboBox.DrawMode%2A> 속성을 `OwnerDrawnVariable` 하 고 처리 합니다 <xref:System.Windows.Forms.ComboBox.DrawItem> 및 <xref:System.Windows.Forms.ComboBox.MeasureItem> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="90b14-423">The following code example demonstrates how to create an owner-drawn combo box by setting the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property to `OwnerDrawnVariable` and handling the <xref:System.Windows.Forms.ComboBox.DrawItem> and <xref:System.Windows.Forms.ComboBox.MeasureItem> events.</span></span> <span data-ttu-id="90b14-424">설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> 고 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-424">It also demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties.</span></span> <span data-ttu-id="90b14-425">예제를 실행 하는 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-425">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="90b14-426">호출 된 `InitializeComboBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-426">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ComboBox.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-427"><see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> 메서드에서 지정할 수 있는 하한을 나타내는 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-427">Gets or sets the size that is the lower limit that the <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> method can specify.</span></span></summary>
        <value><span data-ttu-id="90b14-428">사각형의 너비와 높이를 나타내는 <see cref="T:System.Drawing.Size" /> 형식의 정렬된 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-428">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="comboBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-429">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-429">The event data.</span></span></param>
        <summary><span data-ttu-id="90b14-430"><see cref="E:System.Windows.Forms.Control.BackColorChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-430">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="comboBox.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-431">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-431">The event data.</span></span></param>
        <summary><span data-ttu-id="90b14-432"><see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-432">Raises the <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDisplayMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayMemberChanged : EventArgs -&gt; unit" Usage="comboBox.OnDisplayMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-433">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-433">The event data.</span></span></param>
        <summary><span data-ttu-id="90b14-434"><see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-434">Raises the <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit" Usage="comboBox.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-435">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DrawItemEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-435">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-436"><see cref="E:System.Windows.Forms.ComboBox.DrawItem" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-436">Raises the <see cref="E:System.Windows.Forms.ComboBox.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-437">이 메서드는 때마다 소유자가 그린 <xref:System.Windows.Forms.ComboBox> 항목을 그려야 할 후 <xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-437">This method is called each time an owner-drawn <xref:System.Windows.Forms.ComboBox> item needs to be drawn and after <xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> is called.</span></span> <span data-ttu-id="90b14-438">자세한 내용은 <xref:System.Windows.Forms.ComboBox.DrawItem>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-438">For more information, see <xref:System.Windows.Forms.ComboBox.DrawItem>.</span></span>  
  
 <span data-ttu-id="90b14-439">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-439">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-440">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-440">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-441">또한 <xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-441">The <xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-442">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-442">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-443">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-443">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ComboBox.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="OnDropDown">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDown(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDown : EventArgs -&gt; unit&#xA;override this.OnDropDown : EventArgs -&gt; unit" Usage="comboBox.OnDropDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-444">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-444">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-445"><see cref="E:System.Windows.Forms.ComboBox.DropDown" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-445">Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-446">이 이벤트는 드롭다운 목록에 표시 될 때마다 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-446">This event is raised each time the drop-down is displayed.</span></span>  
  
 <span data-ttu-id="90b14-447">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-447">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-448">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-448">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-449">또한 <xref:System.Windows.Forms.ComboBox.OnDropDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-449">The <xref:System.Windows.Forms.ComboBox.OnDropDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-450">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-450">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-451">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-451">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownClosed : EventArgs -&gt; unit&#xA;override this.OnDropDownClosed : EventArgs -&gt; unit" Usage="comboBox.OnDropDownClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-452">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-452">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-453"><see cref="E:System.Windows.Forms.ComboBox.DropDownClosed" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-453">Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDownClosed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-454">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-454">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-455">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-455">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-456">또한 <xref:System.Windows.Forms.ComboBox.OnDropDownClosed%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-456">The <xref:System.Windows.Forms.ComboBox.OnDropDownClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-457">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-457">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-458">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-458">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      </Docs>
    </Member>
    <Member MemberName="OnDropDownStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownStyleChanged : EventArgs -&gt; unit&#xA;override this.OnDropDownStyleChanged : EventArgs -&gt; unit" Usage="comboBox.OnDropDownStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-459">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-459">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-460"><see cref="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-460">Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-461">이 이벤트는 설정 하는 경우 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 를 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-461">This event is raised when you set <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> to a new value.</span></span>  
  
 <span data-ttu-id="90b14-462">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-462">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-463">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-463">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-464">또한 <xref:System.Windows.Forms.ComboBox.OnDropDownStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-464">The <xref:System.Windows.Forms.ComboBox.OnDropDownStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-465">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-465">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-466">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-466">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="comboBox.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-467">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-467">The event data.</span></span></param>
        <summary><span data-ttu-id="90b14-468"><see cref="E:System.Windows.Forms.Control.FontChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-468">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="comboBox.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-469">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-469">The event data.</span></span></param>
        <summary><span data-ttu-id="90b14-470"><see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-470">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="comboBox.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-471">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-471">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-472"><see cref="E:System.Windows.Forms.Control.GotFocus" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-472">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-473">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-473">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-474">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-474">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-475">또한 <xref:System.Windows.Forms.ComboBox.OnGotFocus%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-475">The <xref:System.Windows.Forms.ComboBox.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-476">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-476">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-477">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-477">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="comboBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-478">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-478">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-479"><see cref="E:System.Windows.Forms.Control.HandleCreated" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-479">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-480">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-480">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-481">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-481">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-482">또한 <xref:System.Windows.Forms.ComboBox.OnHandleCreated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-482">The <xref:System.Windows.Forms.ComboBox.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-483">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-483">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-484">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-484">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="comboBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-485">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-485">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-486"><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-486">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-487">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-487">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-488">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-488">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-489">또한 <xref:System.Windows.Forms.ComboBox.OnHandleDestroyed%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-489">The <xref:System.Windows.Forms.ComboBox.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-490">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-490">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-491">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-491">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="comboBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-492">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-492">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-493"><see cref="E:System.Windows.Forms.Control.KeyDown" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-493">Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-494">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-494">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-495">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-495">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-496">또한 <xref:System.Windows.Forms.ComboBox.OnKeyDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-496">The <xref:System.Windows.Forms.ComboBox.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-497">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-497">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-498">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-498">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="comboBox.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-499">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-499">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-500"><see cref="E:System.Windows.Forms.Control.KeyPress" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-500">Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-501">경우 값을 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 의 속성 `e` 는 <xref:System.Windows.Forms.Keys.Return> 또는 <xref:System.Windows.Forms.Keys.Escape> 및 <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> 속성은 `true`, <xref:System.Windows.Forms.ComboBox.OnKeyPress%2A> 메서드 집합 <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-501">If the value of the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property of `e` is <xref:System.Windows.Forms.Keys.Return> or <xref:System.Windows.Forms.Keys.Escape> and the <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> property is `true`, the <xref:System.Windows.Forms.ComboBox.OnKeyPress%2A> method sets <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="comboBox.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-502">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-502">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-503"><see cref="E:System.Windows.Forms.Control.LostFocus" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-503">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-504">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-504">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-505">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-505">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-506">또한 <xref:System.Windows.Forms.ComboBox.OnLostFocus%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-506">The <xref:System.Windows.Forms.ComboBox.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-507">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-507">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-508">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-508">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit&#xA;override this.OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit" Usage="comboBox.OnMeasureItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-509">발생한 <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-509">The <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that was raised.</span></span></param>
        <summary><span data-ttu-id="90b14-510"><see cref="E:System.Windows.Forms.ComboBox.MeasureItem" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-510">Raises the <see cref="E:System.Windows.Forms.ComboBox.MeasureItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-511">이 메서드는 때마다 소유자가 그린 <xref:System.Windows.Forms.ComboBox> 항목을 그려야 할 전과 <xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-511">This method is called each time an owner-drawn <xref:System.Windows.Forms.ComboBox> item needs to be drawn and before <xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> is called.</span></span> <span data-ttu-id="90b14-512">자세한 내용은 <xref:System.Windows.Forms.ComboBox.MeasureItem>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-512">For more information, see <xref:System.Windows.Forms.ComboBox.MeasureItem>.</span></span>  
  
 <span data-ttu-id="90b14-513">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-513">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-514">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-514">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-515">또한 <xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-515">The <xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-516">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-516">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-517">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-517">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.MeasureItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ComboBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="comboBox.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-518">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-518">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-519"><see cref="E:System.Windows.Forms.Control.MouseEnter" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-519">Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-520">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-520">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-521">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-521">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-522">또한 <xref:System.Windows.Forms.ComboBox.OnMouseEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-522">The <xref:System.Windows.Forms.ComboBox.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-523">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-523">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-524">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-524">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="comboBox.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-525">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-525">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-526"><see cref="E:System.Windows.Forms.Control.MouseLeave" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-526">Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-527">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-527">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-528">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-528">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-529">또한 <xref:System.Windows.Forms.ComboBox.OnMouseLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-529">The <xref:System.Windows.Forms.ComboBox.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-530">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-530">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-531">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-531">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentBackColorChanged : EventArgs -&gt; unit" Usage="comboBox.OnParentBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-532">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-532">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-533"><see cref="E:System.Windows.Forms.Control.BackColorChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-533">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-534">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-534">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-535">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-535">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-536">또한 <xref:System.Windows.Forms.ComboBox.OnParentBackColorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-536">The <xref:System.Windows.Forms.ComboBox.OnParentBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-537">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-537">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-538">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-538">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="comboBox.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-539">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-539">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-540"><see cref="E:System.Windows.Forms.Control.Resize" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-540">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-541">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-541">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-542">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-542">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-543">또한 <xref:System.Windows.Forms.ComboBox.OnResize%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-543">The <xref:System.Windows.Forms.ComboBox.OnResize%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-544">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-544">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-545">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-545">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="comboBox.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-546">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-546">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-547"><see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-547">Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-548">설정 하는 경우 또는 목록에서 새 항목을 선택 하면이 이벤트가 발생 합니다 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-548">This event is raised when you select a new item from the list or when you set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property.</span></span>  
  
 <span data-ttu-id="90b14-549">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-549">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-550">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-550">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-551">또한 <xref:System.Windows.Forms.ComboBox.OnSelectedIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-551">The <xref:System.Windows.Forms.ComboBox.OnSelectedIndexChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-552">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-552">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-553">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-553">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedItemChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedItemChanged : EventArgs -&gt; unit" Usage="comboBox.OnSelectedItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-554">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-554">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-555"><see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-555">Raises the <see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-556">설정 하는 경우 또는 목록에서 새 항목을 선택 하면이 이벤트가 발생 합니다 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-556">This event is raised when you select a new item from the list or when you set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property.</span></span>  
  
 <span data-ttu-id="90b14-557">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-557">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-558">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-558">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-559">또한 <xref:System.Windows.Forms.ComboBox.OnSelectedItemChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-559">The <xref:System.Windows.Forms.ComboBox.OnSelectedItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-560">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-560">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-561">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-561">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedValueChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedValueChanged : EventArgs -&gt; unit" Usage="comboBox.OnSelectedValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-562">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-562">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-563"><see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-563">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-564">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-564">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-565">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-565">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-566">또한 <xref:System.Windows.Forms.ComboBox.OnSelectedValueChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-566">The <xref:System.Windows.Forms.ComboBox.OnSelectedValueChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-567">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-567">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-568">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-568">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChangeCommitted">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChangeCommitted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChangeCommitted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChangeCommitted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChangeCommitted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChangeCommitted : EventArgs -&gt; unit&#xA;override this.OnSelectionChangeCommitted : EventArgs -&gt; unit" Usage="comboBox.OnSelectionChangeCommitted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-569">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-569">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-570"><see cref="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-570">Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-571">합니다 <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> 사용자가 콤보 상자의 선택 항목을 변경 하는 경우에 설정 하는 경우 발생 합니다 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-571">The <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> is raised only when the user changes the combo box selection, or when you set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>.</span></span> <span data-ttu-id="90b14-572">그러나 방법에 따라 <xref:System.Windows.Forms.ComboBox> 구성 된 사용자가 선택한 항목을 변경 하는 방법 및는 <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> 이벤트가 발생 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-572">However, depending on how the <xref:System.Windows.Forms.ComboBox> is configured, and how the user changes the selected item, the <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event may not be raised.</span></span> <span data-ttu-id="90b14-573">처리할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>, 하지만이 이벤트는 인덱스를 프로그래밍 방식으로 또는 사용자에 의해 변경 되는지 여부를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-573">Alternatively, you can handle the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>, but note that this event occurs whether the index is changed programmatically or by the user.</span></span>  
  
 <span data-ttu-id="90b14-574">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-574">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-575">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-575">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-576">또한 <xref:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-576">The <xref:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-577">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-577">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-578">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> 이벤트 및 <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> 어떤 사용자가 선택 하 고 커밋에 따라 입력란의 길이 변경할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-578">The following code example uses the <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event and the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property to change the length of the text box depending on what the user has selected and committed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-579">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-579">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="comboBox.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-580">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-580">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-581"><see cref="E:System.Windows.Forms.Control.TextChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-581">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-582">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-582">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-583">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-583">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-584">또한 <xref:System.Windows.Forms.ComboBox.OnTextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-584">The <xref:System.Windows.Forms.ComboBox.OnTextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-585">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-585">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-586">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-586">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnTextUpdate">
      <MemberSignature Language="C#" Value="protected virtual void OnTextUpdate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextUpdate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextUpdate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextUpdate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextUpdate : EventArgs -&gt; unit&#xA;override this.OnTextUpdate : EventArgs -&gt; unit" Usage="comboBox.OnTextUpdate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-587">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-587">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-588"><see cref="E:System.Windows.Forms.ComboBox.TextUpdate" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-588">Raises the <see cref="E:System.Windows.Forms.ComboBox.TextUpdate" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-589">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-589">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-590">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-590">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-591">또한 <xref:System.Windows.Forms.ComboBox.OnTextUpdate%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-591">The <xref:System.Windows.Forms.ComboBox.OnTextUpdate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-592">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-592">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-593">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-593">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ComboBox.TextUpdate" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="comboBox.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="90b14-594">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-594">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="90b14-595"><see cref="E:System.Windows.Forms.Control.Validating" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-595">Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-596">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-596">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="90b14-597">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-597">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="90b14-598">또한 <xref:System.Windows.Forms.ComboBox.OnValidating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-598">The <xref:System.Windows.Forms.ComboBox.OnValidating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="90b14-599">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-599">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-600">파생 클래스에서 <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-600">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ComboBox.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-601">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-601">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="90b14-602"><see cref="T:System.Windows.Forms.Padding" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-602">A <see cref="T:System.Windows.Forms.Padding" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-603">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-603">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-604">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-604">This event is not relevant to this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-605">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-605">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-606"><see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤을 다시 그리면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-606">Occurs when the <see cref="T:System.Windows.Forms.ComboBox" /> control is redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-607">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-607">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.ComboBox.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-608"><see cref="T:System.Windows.Forms.ComboBox" />의 기본 설정 높이를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-608">Gets the preferred height of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-609">콤보 상자에 있는 항목 영역의 기본 설정 높이(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-609">The preferred height, in pixels, of the item area of the combo box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-610">기본 설정된 높이 글꼴 높이 및 테두리에 대 한 조정에 따라 값입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-610">The preferred height is a value based on the font height and an adjustment for the border.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyEventArgs :  -&gt; bool" Usage="comboBox.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="90b14-611">처리할 창 메시지를 나타내며 참조에 의해 전달되는 메시지 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-611">A message object, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="90b14-612">키 메시지를 처리하고 적합한 컨트롤 이벤트를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-612">Processes a key message and generates the appropriate control events.</span></span></summary>
        <returns><span data-ttu-id="90b14-613">컨트롤이 메시지를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-613"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItem">
      <MemberSignature Language="C#" Value="protected override void RefreshItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.RefreshItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RefreshItem : int -&gt; unit" Usage="comboBox.RefreshItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="90b14-614">새로 고칠 항목의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-614">The location of the item to refresh.</span></span></param>
        <summary><span data-ttu-id="90b14-615">지정한 위치에 있는 항목을 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-615">Refreshes the item contained at the specified location.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected override void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItems();" />
      <MemberSignature Language="F#" Value="override this.RefreshItems : unit -&gt; unit" Usage="comboBox.RefreshItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-616">모든 <see cref="T:System.Windows.Forms.ComboBox" /> 항목을 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-616">Refreshes all <see cref="T:System.Windows.Forms.ComboBox" /> items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public override void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetText();" />
      <MemberSignature Language="F#" Value="override this.ResetText : unit -&gt; unit" Usage="comboBox.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-617"><see cref="P:System.Windows.Forms.Control.Text" /> 속성을 기본값(<see cref="F:System.String.Empty" />)으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-617">Resets the <see cref="P:System.Windows.Forms.Control.Text" /> property to its default value (<see cref="F:System.String.Empty" />).</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="comboBox.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="90b14-618">컨트롤의 높이와 너비 크기를 조정하는 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-618">The factor by which the height and width of the control will be scaled.</span></span></param>
        <param name="specified"><span data-ttu-id="90b14-619">컨트롤의 크기와 위치를 정의할 때 사용할 컨트롤 범위를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-619">A  value that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="90b14-620">컨트롤의 위치, 크기, 안쪽 여백 및 여백을 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-620">Scales a control's location, size, padding and margin.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="comboBox.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="90b14-621">텍스트 상자에서 현재 선택한 텍스트의 첫 번째 문자에 대한 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-621">The position of the first character in the current text selection within the text box.</span></span></param>
        <param name="length"><span data-ttu-id="90b14-622">선택할 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-622">The number of characters to select.</span></span></param>
        <summary><span data-ttu-id="90b14-623"><see cref="T:System.Windows.Forms.ComboBox" />의 편집 가능 부분에서 텍스트의 범위를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-623">Selects a range of text in the editable portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-624">컨트롤의 텍스트에서 첫 번째 문자로 시작 위치를 설정 하려는 경우 설정 된 `start` 매개 변수를 0으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-624">If you want to set the start position to the first character in the control's text, set the `start` parameter to zero.</span></span> <span data-ttu-id="90b14-625">이 메서드를 사용 하 여 경우와 같이 텍스트의 부분 문자열을 선택 하려면 컨트롤의 텍스트를 검색 하 고 정보를 바꾸는 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-625">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-626"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 현재 선택 영역의 하위 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-626"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> returns the lower value of the current selection.</span></span> <span data-ttu-id="90b14-627">예를 들어 `Select(10, -4)` 문자 위치 10부터 6 문자 위치에서 텍스트를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-627">For example, `Select(10, -4)` selects the text from character position 6 through character position 10.</span></span> <span data-ttu-id="90b14-628">이제 받게 되 면는 <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 값 10이 아닌 6 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-628">If you now get the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> value, it will be 6 rather than 10.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90b14-629"><paramref name="start" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-629">The <paramref name="start" /> is less than zero.</span></span>  
  
<span data-ttu-id="90b14-630">또는</span><span class="sxs-lookup"><span data-stu-id="90b14-630">-or-</span></span> 
 <span data-ttu-id="90b14-631"><paramref name="start" />와 <paramref name="length" />의 합이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-631"><paramref name="start" /> plus <paramref name="length" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="comboBox.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-632"><see cref="T:System.Windows.Forms.ComboBox" />의 편집 가능 부분에서 모든 텍스트를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-632">Selects all the text in the editable portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public override int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Windows.Forms.ComboBox.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-633">현재 선택되어 있는 항목을 지정하는 인덱스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-633">Gets or sets the index specifying the currently selected item.</span></span></summary>
        <value><span data-ttu-id="90b14-634">현재 선택된 항목의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-634">A zero-based index of the currently selected item.</span></span> <span data-ttu-id="90b14-635">선택된 항목이 없으면 -1 값이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-635">A value of negative one (-1) is returned if no item is selected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-636">이 속성은 콤보 상자 목록에서 현재 선택한 항목의 인덱스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-636">This property indicates the zero-based index of the currently selected item in the combo box list.</span></span> <span data-ttu-id="90b14-637">새 인덱스를 발생 시키는 설정 된 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-637">Setting a new index raises the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 <span data-ttu-id="90b14-638"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>를 <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, 및 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 같이 관련 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-638"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, and <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> are related as follows:</span></span>  
  
-   <span data-ttu-id="90b14-639">경우 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 됩니다 `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 경우에-1로 설정 되지 것입니다 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-639">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will not be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
-   <span data-ttu-id="90b14-640">경우 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> 됩니다 `true`를 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> -1로 설정 됩니다 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-640">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-641">현재 선택된 된 항목을 선택 취소 하려면 설정의 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> -1입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-641">To deselect the currently selected item, set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> to -1.</span></span> <span data-ttu-id="90b14-642">설정할 수 없습니다는 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 의 한 <xref:System.Windows.Forms.ComboBox> 항목이 데이터 바인딩된 항목 이면-1로 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-642">You cannot set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> of a <xref:System.Windows.Forms.ComboBox> item to -1 if the item is a data-bound item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-643">다음 코드 예제를 사용 하는 방법을 표시 합니다 <xref:System.Windows.Forms.ComboBox.FindString%2A> 메서드 및 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-643">The following code example show how to use the <xref:System.Windows.Forms.ComboBox.FindString%2A> method and <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="90b14-644">이 예제에서는 전체 예제에서의 일부인는 <xref:System.Windows.Forms.ComboBox> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-644">The example is part of a complete example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#4)]
 [!code-csharp[ComboBox#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#4)]
 [!code-vb[ComboBox#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="90b14-645">지정된 인덱스가 -2보다 작거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-645">The specified index is less than or equal to -2.</span></span>  
  
<span data-ttu-id="90b14-646">또는</span><span class="sxs-lookup"><span data-stu-id="90b14-646">-or-</span></span> 
<span data-ttu-id="90b14-647">지정된 인덱스가 콤보 상자에 있는 항목의 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-647">The specified index is greater than or equal to the number of items in the combo box.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.ListControl.FormattingEnabled" />
        <altmember cref="P:System.Windows.Forms.ListControl.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-648"><see cref="P:System.Windows.Forms.ComboBox.SelectedIndex" /> 속성이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-648">Occurs when the <see cref="P:System.Windows.Forms.ComboBox.SelectedIndex" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-649">시기를 확인 하려면이 이벤트에 대 한 이벤트 처리기를 만들 수 있습니다의 선택한 인덱스를 <xref:System.Windows.Forms.ComboBox> 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-649">You can create an event handler for this event to determine when the selected index in the <xref:System.Windows.Forms.ComboBox> has been changed.</span></span> <span data-ttu-id="90b14-650">현재 선택 영역을 기반으로 다른 컨트롤에서 정보를 표시 해야 할 때 유용할 수 있습니다는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-650">This can be useful when you need to display information in other controls based on the current selection in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-651">다른 컨트롤에서 정보를 로드 하려면이 이벤트에 대 한 이벤트 처리기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-651">You can use the event handler for this event to load the information in the other controls.</span></span>  
  
 <span data-ttu-id="90b14-652">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-652">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-653">다음 코드 예제에는 초기화 하는 방법을 보여 줍니다.를 <xref:System.Windows.Forms.ComboBox> 설정 하 여 컨트롤을 <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> 및 <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> 속성 및 사용 하 여를 <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> 검색 하는 메서드는 <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="90b14-653">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties and using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-654">또한 처리를 보여 줍니다는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-654">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : obj with get, set" Usage="System.Windows.Forms.ComboBox.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-655"><see cref="T:System.Windows.Forms.ComboBox" />에서 현재 선택되어 있는 항목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-655">Gets or sets currently selected item in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-656">현재 선택되어 있는 항목에 해당하는 개체이거나 현재 선택된 항목이 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-656">The object that is the currently selected item or <see langword="null" /> if there is no currently selected item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-657">설정 하는 경우는 <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> 개체에 속성을 <xref:System.Windows.Forms.ComboBox> 개체 목록에서 현재 선택 된 것을 확인 하려는 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-657">When you set the <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> property to an object, the <xref:System.Windows.Forms.ComboBox> attempts to make that object the currently selected one in the list.</span></span> <span data-ttu-id="90b14-658">개체 목록에 있으면의 편집 부분에 표시 됩니다는 <xref:System.Windows.Forms.ComboBox> 및 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 해당 인덱스에 속성이 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-658">If the object is found in the list, it is displayed in the edit portion of the <xref:System.Windows.Forms.ComboBox> and the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property is set to the corresponding index.</span></span> <span data-ttu-id="90b14-659">개체 목록에 없는 경우는 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 속성 현재 값에 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-659">If the object does not exist in the list, the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property is left at its current value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-660">합니다 <xref:System.Windows.Forms.ComboBox> 지정된 된 개체에 대 한 검색을 사용 하 여 클래스를 <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-660">The <xref:System.Windows.Forms.ComboBox> class searches for the specified object by using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method.</span></span> <span data-ttu-id="90b14-661">이 메서드는 사용 된 <xref:System.Object.Equals%2A> 같은지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-661">This method uses the <xref:System.Object.Equals%2A> method to determine equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-662">다음 코드 예제에서는의 사용법을 보여 줍니다.는 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 하며 <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-662">The following code example shows the usage of the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> and the <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> properties.</span></span> <span data-ttu-id="90b14-663">이 예제에서는 전체 코드 예제에서의 일부인는 <xref:System.Windows.Forms.ComboBox> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-663">The example is part of a complete code example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#5)]
 [!code-csharp[ComboBox#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#5)]
 [!code-vb[ComboBox#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.ComboBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-664"><see cref="T:System.Windows.Forms.ComboBox" />의 편집 가능 부분에서 선택된 텍스트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-664">Gets or sets the text that is selected in the editable portion of a <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="90b14-665">콤보 상자에서 현재 선택되어 있는 텍스트를 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-665">A string that represents the currently selected text in the combo box.</span></span> <span data-ttu-id="90b14-666"><see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" />을(를) <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />(으)로 설정하면 빈 문자열("")이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-666">If <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> is set to <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />, the return value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-667">사용할 수는 <xref:System.Windows.Forms.ComboBox.SelectedText%2A> 검색에서 현재 선택한 텍스트를 변경 하는 속성을 <xref:System.Windows.Forms.ComboBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-667">You can use the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> property to retrieve or change the currently selected text in a <xref:System.Windows.Forms.ComboBox> control.</span></span> <span data-ttu-id="90b14-668">그러나 선택 사용자 상호 작용으로 인해 자동으로 바꿀 수 있음을 인식 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-668">However, you should be aware that the selection can change automatically because of user interaction.</span></span> <span data-ttu-id="90b14-669">예를 들어, 검색 하는 경우는 <xref:System.Windows.Forms.ComboBox.SelectedText%2A> 단추의 값 <xref:System.Windows.Forms.Control.Click> 이벤트 처리기를 값에는 빈 문자열일 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-669">For example, if you retrieve the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> value in a button <xref:System.Windows.Forms.Control.Click> event handler, the value will be an empty string.</span></span> <span data-ttu-id="90b14-670">즉, 입력된 포커스를 이동할 때 콤보 상자에서 단추를 선택 영역 자동으로 지워집니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-670">This is because the selection is automatically cleared when the input focus moves from the combo box to the button.</span></span>  
  
 <span data-ttu-id="90b14-671">콤보 상자에 포커스를 잃으면 선택한 지점 텍스트의 시작으로 이동 하 고 선택한 텍스트 선택 취소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-671">When the combo box loses focus, the selection point moves to the beginning of the text and any selected text becomes unselected.</span></span> <span data-ttu-id="90b14-672">이 경우 가져오기는 <xref:System.Windows.Forms.ComboBox.SelectedText%2A> 속성을 빈 문자열 및 설정을 검색 합니다 <xref:System.Windows.Forms.ComboBox.SelectedText%2A> 속성은 텍스트의 시작 부분에 지정된 된 값을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-672">In this case, getting the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> property retrieves an empty string, and setting the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> property adds the specified value to the beginning of the text.</span></span>  
  
 <span data-ttu-id="90b14-673">콤보 상자에 포커스가 컨트롤에서 전체 텍스트를 자동으로 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-673">When the combo box gains focus, the full text in the control is automatically selected.</span></span> <span data-ttu-id="90b14-674">컨트롤의 호출 하는 경우 <xref:System.Windows.Forms.Control.Focus%2A> 컨트롤이 이미 포커스 여부에 관계 없이 전체 텍스트 입력된 포커스를 설정 하는 메서드를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-674">If you call the control's <xref:System.Windows.Forms.Control.Focus%2A> method to set the input focus, the full text is selected regardless of whether the control already had focus.</span></span>  
  
 <span data-ttu-id="90b14-675">사용자가 드롭다운 목록에서 위 또는 위쪽 화살표 및 아래쪽 화살표 키를 사용 하 여 항목을 선택, 새 항목의 텍스트를 자동으로 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-675">When the user selects an item from the drop-down list or by using the UP ARROW and DOWN ARROW keys, the text for the new item is automatically selected.</span></span> <span data-ttu-id="90b14-676">그러나 가져오려고 시도 합니다 <xref:System.Windows.Forms.ComboBox.SelectedText%2A> 값을 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 또는 <xref:System.Windows.Forms.ListControl.SelectedValueChanged> 이벤트 처리기 속성은 빈 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-676">However, if you try to get the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> value in a <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> or <xref:System.Windows.Forms.ListControl.SelectedValueChanged> event handler, the property returns an empty string.</span></span> <span data-ttu-id="90b14-677">이므로 이러한 이벤트 시 이전 <xref:System.Windows.Forms.ComboBox.SelectedText%2A> 값이 지워지고 새 값을 아직 설정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-677">This is because, at the time of these events, the previous <xref:System.Windows.Forms.ComboBox.SelectedText%2A> value has been cleared and the new value has not yet been set.</span></span> <span data-ttu-id="90b14-678">현재 값을 검색 하는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 또는 <xref:System.Windows.Forms.ListControl.SelectedValueChanged> 이벤트 처리기를 사용 하 여는 <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> 속성 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-678">To retrieve the current value in a <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> or <xref:System.Windows.Forms.ListControl.SelectedValueChanged> event handler, use the <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangeCommitted">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChangeCommitted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChangeCommitted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChangeCommitted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChangeCommitted;" />
      <MemberSignature Language="F#" Value="member this.SelectionChangeCommitted : EventHandler " Usage="member this.SelectionChangeCommitted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-679">사용자가 선택한 항목을 변경하고 <see cref="T:System.Windows.Forms.ComboBox" />에 해당 변경 내용이 표시될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-679">Occurs when the user changes the selected item and that change is displayed in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-680">합니다 <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> 사용자가 콤보 상자 선택 변경에 대 한 특수 처리를 제공 하려면이 이벤트에 대 한 처리기를 만들 수 있습니다 및 경우에 이벤트가 발생 합니다 <xref:System.Windows.Forms.ComboBox> 사용자 목록에서 선택한 항목을 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="90b14-680">The <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event is raised only when the user changes the combo box selection, and you can create a handler for this event to provide special handling for the <xref:System.Windows.Forms.ComboBox> when the user changes the selected item in the list.</span></span> <span data-ttu-id="90b14-681">그러나 방법에 따라 <xref:System.Windows.Forms.ComboBox> 구성 된 사용자가 선택한 항목을 변경 하는 방법 및는 <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> 이벤트가 발생 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-681">However, depending on how the <xref:System.Windows.Forms.ComboBox> is configured, and how the user changes the selected item, the <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event may not be raised.</span></span> <span data-ttu-id="90b14-682">처리할 수 있습니다는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>, 하지만이 이벤트는 인덱스를 프로그래밍 방식으로 또는 사용자에 의해 변경 되는지 여부를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-682">Alternatively, you can handle the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>, but note that this event occurs whether the index is changed programmatically or by the user.</span></span>  
  
 <span data-ttu-id="90b14-683">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-683">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-684">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> 이벤트 및 <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> 어떤 사용자가 선택 하 고 커밋에 따라 입력란의 길이 변경할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-684">The following code example uses the <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event and the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property to change the length of the text box depending on what the user has selected and committed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.ComboBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-685">콤보 상자의 편집 가능 부분에서 선택된 문자의 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-685">Gets or sets the number of characters selected in the editable portion of the combo box.</span></span></summary>
        <value><span data-ttu-id="90b14-686">콤보 상자에서 선택된 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-686">The number of characters selected in the combo box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-687">선택 여부를 확인할 문자가 현재 콤보 상자 컨트롤에서 선택한 텍스트에 대 한 작업을 수행 하기 전에이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-687">You can use this property to determine whether any characters are currently selected in the combo box control before performing operations on the selected text.</span></span> <span data-ttu-id="90b14-688">때의 값을 <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> 속성의 값을 컨트롤의 텍스트 내에서 문자 수보다 큰 값으로는 <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> 는값을뺀컨트롤내에서텍스트의전체길이속성<xref:System.Windows.Forms.ComboBox.SelectionStart%2A>속성 (모든 값을 지정 하는 경우는 <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="90b14-688">When the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90b14-689">값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-689">The value was less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.ComboBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-690">콤보 상자에서 선택된 텍스트의 시작 인덱스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-690">Gets or sets the starting index of text selected in the combo box.</span></span></summary>
        <value><span data-ttu-id="90b14-691">현재 선택된 텍스트 문자열에 있는 첫째 문자의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-691">The zero-based index of the first character in the string of the current text selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-692">컨트롤에서 선택 된 텍스트가 있는 경우이 속성에 새 텍스트 삽입 지점을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-692">If no text is selected in the control, this property indicates the insertion point for new text.</span></span> <span data-ttu-id="90b14-693">컨트롤에서 텍스트의 길이 넘어서 위치로이 속성을 설정 하는 경우 선택 시작 위치를 마지막 문자 뒤에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-693">If you set this property to a location beyond the length of the text in the control, the selection start position is placed after the last character.</span></span> <span data-ttu-id="90b14-694">이 속성을 변경 값이 해제 수 텍스트를 텍스트 상자 컨트롤에서 선택 하는 경우는 <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-694">When text is selected in the text box control, changing this property can release the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property.</span></span> <span data-ttu-id="90b14-695">위치 후 컨트롤의 나머지 텍스트에 나타난 경우는 <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 속성의 값 보다 작습니다 합니다 <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> 속성, 값은 <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> 속성은 자동으로 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-695">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="90b14-696">값을 <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 속성에서 증가 생성 하지 않습니다는 <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-696">The value of the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90b14-697"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 현재 선택 영역의 하위 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-697"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> returns the lower value of the current selection.</span></span> <span data-ttu-id="90b14-698">예를 들어 `Select(10, -4)` 문자 위치 10부터 6 문자 위치에서 텍스트를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-698">For example, `Select(10, -4)` selects the text from character position 6 through character position 10.</span></span> <span data-ttu-id="90b14-699">이제 받게 되 면는 <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 값 10이 아닌 6 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-699">If you now get the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> value, it will be 6 rather than 10.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90b14-700">값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-700">The value is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.ComboBox.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="comboBox.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="90b14-701">컨트롤의 가로 위치(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-701">The horizontal location in pixels of the control.</span></span></param>
        <param name="y"><span data-ttu-id="90b14-702">컨트롤의 세로 위치(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-702">The vertical location in pixels of the control.</span></span></param>
        <param name="width"><span data-ttu-id="90b14-703">컨트롤의 너비(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-703">The width in pixels of the control.</span></span></param>
        <param name="height"><span data-ttu-id="90b14-704">컨트롤의 높이(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-704">The height in pixels of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="90b14-705"><see cref="T:System.Windows.Forms.BoundsSpecified" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-705">One of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="90b14-706"><see cref="T:System.Windows.Forms.ComboBox" />의 크기와 위치를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-706">Sets the size and location of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemCore">
      <MemberSignature Language="C#" Value="protected override void SetItemCore (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemCore(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetItemCore(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemCore (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemCore(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetItemCore : int * obj -&gt; unit" Usage="comboBox.SetItemCore (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="90b14-707">개체의 배열 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-707">The array index of the object.</span></span></param>
        <param name="value"><span data-ttu-id="90b14-708">개체입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-708">The object.</span></span></param>
        <summary><span data-ttu-id="90b14-709">파생 클래스에서 재정의되면 개체를 파생 클래스에 지정된 인덱스로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-709">When overridden in a derived class, sets the object with the specified index in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemsCore">
      <MemberSignature Language="C#" Value="protected override void SetItemsCore (System.Collections.IList value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemsCore(class System.Collections.IList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetItemsCore(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemsCore (value As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemsCore(System::Collections::IList ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetItemsCore : System.Collections.IList -&gt; unit" Usage="comboBox.SetItemsCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="90b14-710">항목의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-710">An array of items.</span></span></param>
        <summary><span data-ttu-id="90b14-711">파생 클래스에서 재정의되면 파생 클래스의 컬렉션에서 지정된 개체 배열을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-711">When overridden in a derived class, sets the specified array of objects in a collection in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Sorted : bool with get, set" Usage="System.Windows.Forms.ComboBox.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-712">콤보 상자의 항목이 정렬되어 있는지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-712">Gets or sets a value indicating whether the items in the combo box are sorted.</span></span></summary>
        <value><span data-ttu-id="90b14-713">콤보 상자가 정렬되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-713"><see langword="true" /> if the combo box is sorted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="90b14-714">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-714">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-715">이 속성을 지정 하는지 여부를 <xref:System.Windows.Forms.ComboBox> 기존 항목을 정렬 하 고 목록에서 적절 한 정렬 된 위치에 새 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-715">This property specifies whether the <xref:System.Windows.Forms.ComboBox> sorts existing entries and add new entries to the appropriate sorted position in the list.</span></span> <span data-ttu-id="90b14-716">항목을 자동으로 정렬 하려면이 속성을 사용할 수는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-716">You can use this property to automatically sort items in a <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-717">항목이 추가 되는 정렬 된를 <xref:System.Windows.Forms.ComboBox>, 항목 정렬 된 목록에서 적절 한 위치로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-717">As items are added to a sorted <xref:System.Windows.Forms.ComboBox>, the items are moved to the appropriate location in the sorted list.</span></span> <span data-ttu-id="90b14-718">속성 설정 하면 `false`, 기존 목록 끝에 새 항목이 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-718">When you set the property to `false`, new items are added to the end of the existing list.</span></span> <span data-ttu-id="90b14-719">정렬은 대/소문자 및 사전순 오름차순입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-719">The sort is case-insensitive and in alphabetically ascending order.</span></span>  
  
 <span data-ttu-id="90b14-720">설정 하려고 합니다 <xref:System.Windows.Forms.ComboBox.Sorted%2A> 발생 하는 데이터 바인딩된 컨트롤의 속성에는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-720">Attempting to set the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property on a data-bound control raises an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="90b14-721">기본 데이터 모델을 사용 하 여 데이터를 정렬 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-721">You must sort the data using the underlying data model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90b14-722">데이터 소스에 연결된 <see cref="T:System.Windows.Forms.ComboBox" />를 정렬하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="90b14-722">An attempt was made to sort a <see cref="T:System.Windows.Forms.ComboBox" /> that is attached to a data source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ComboBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-723">이 컨트롤과 관련된 텍스트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-723">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="90b14-724">이 컨트롤과 관련된 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-724">The text associated with this control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-725">설정 합니다 <xref:System.Windows.Forms.ComboBox.Text%2A> 속성을 `null` 이거나 빈 문자열 ("") 설정의 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> -1로.</span><span class="sxs-lookup"><span data-stu-id="90b14-725">Setting the <xref:System.Windows.Forms.ComboBox.Text%2A> property to `null` or an empty string ("") sets the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> to -1.</span></span> <span data-ttu-id="90b14-726">설정 합니다 <xref:System.Windows.Forms.ComboBox.Text%2A> 속성에 있는 값을는 <xref:System.Windows.Forms.ComboBox.Items%2A> 컬렉션 집합은 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 해당 항목의 인덱스.</span><span class="sxs-lookup"><span data-stu-id="90b14-726">Setting the <xref:System.Windows.Forms.ComboBox.Text%2A> property to a value that is in the <xref:System.Windows.Forms.ComboBox.Items%2A> collection sets the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> to the index of that item.</span></span> <span data-ttu-id="90b14-727">설정 합니다 <xref:System.Windows.Forms.ComboBox.Text%2A> 콜렉션에 있지 않은 값으로 속성을 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 변경 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-727">Setting the <xref:System.Windows.Forms.ComboBox.Text%2A> property to a value that is not in the collection leaves the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-728">다음 코드 예제에는 초기화 하는 방법을 보여 줍니다.를 <xref:System.Windows.Forms.ComboBox> 설정 하 여 컨트롤을 <xref:System.Windows.Forms.ComboBox.Text%2A> 속성 및 사용 하 여를 <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> 9e4af80fa7c0">getroot()</legacylink> 메서드를는 <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="90b14-728">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.Text%2A> property and using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method to populate the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="90b14-729">처리 하는 방법도 보여 줍니다는 <xref:System.Windows.Forms.ComboBox.DropDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-729">It also demonstrates handling the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span> <span data-ttu-id="90b14-730">예제를 실행 하려면 호출을 폼에 다음 코드를 붙여 합니다 `InitializeComboBox` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-730">To run the example, paste the following code in a form and call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler TextUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextUpdate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.TextUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextUpdate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextUpdate;" />
      <MemberSignature Language="F#" Value="member this.TextUpdate : EventHandler " Usage="member this.TextUpdate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90b14-731">컨트롤에서 텍스트의 서식을 지정한 경우 해당 텍스트가 표시되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-731">Occurs when the control has formatted the text, but before the text is displayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-732">사용 된 <xref:System.Windows.Forms.ComboBox.TextUpdate> 실제로 표시 되기 전에 텍스트의 유효성을 검사 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-732">Use the <xref:System.Windows.Forms.ComboBox.TextUpdate> event to validate the text before it is actually shown.</span></span> <span data-ttu-id="90b14-733"><xref:System.Windows.Forms.ComboBox.TextUpdate> 경우에 발생 하지 않습니다는 <xref:System.Windows.Forms.ComboBox.Text%2A> 속성은 프로그래밍 방식으로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-733"><xref:System.Windows.Forms.ComboBox.TextUpdate> is not fired if the <xref:System.Windows.Forms.ComboBox.Text%2A> property is programmatically changed.</span></span>  
  
 <span data-ttu-id="90b14-734">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="90b14-734">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-735">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-735">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="90b14-736">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ComboBox.TextUpdate> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-736">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ComboBox.TextUpdate> event.</span></span> <span data-ttu-id="90b14-737">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-737">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="90b14-738">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-738">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="90b14-739">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ComboBox> 라는 `ComboBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-739">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ComboBox> named `ComboBox1`.</span></span> <span data-ttu-id="90b14-740">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.ComboBox.TextUpdate> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-740">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ComboBox.TextUpdate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#167](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#167)]
 [!code-vb[System.Windows.Forms.EventExamples#167](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#167)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="comboBox.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90b14-741"><see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤을 나타내는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-741">Returns a string that represents the <see cref="T:System.Windows.Forms.ComboBox" /> control.</span></span></summary>
        <returns><span data-ttu-id="90b14-742">현재 <see cref="T:System.String" />를 나타내는 <see cref="T:System.Windows.Forms.ComboBox" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-742">A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Forms.ComboBox" />.</span></span> <span data-ttu-id="90b14-743">문자열에는 <see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤의 항목 수와 형식이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-743">The string includes the type and the number of items in the <see cref="T:System.Windows.Forms.ComboBox" /> control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="comboBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="90b14-744">처리할 Windows <see cref="T:System.Windows.Forms.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-744">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="90b14-745">Windows 메시지를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-745">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b14-746">모든 메시지를 전송 합니다 <xref:System.Windows.Forms.Control.WndProc%2A> 메서드를 통해 필터링 된 후의 <xref:System.Windows.Forms.Control.PreProcessMessage%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="90b14-746">All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.</span></span>  
  
 <span data-ttu-id="90b14-747"><xref:System.Windows.Forms.Control.WndProc%2A> 메서드는 Windows `WindowProc` 함수와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-747">The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="90b14-748">Windows 메시지를 처리 하는 방법에 대 한 자세한 내용은 참조는 `WindowProc` MSDN library에 있는 Windows Platform SDK 참조에서 함수 설명서 http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-748">For more information about processing Windows messages, see the `WindowProc` function documentation in the Windows Platform SDK reference located in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b14-749">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.Control.WndProc%2A> 에서 식별 하는 운영 체제 메시지를 처리 하는 메서드는 <xref:System.Windows.Forms.Message> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-749">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.WndProc%2A> method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure.</span></span> <span data-ttu-id="90b14-750">WM_ACTIVATEAPP 운영 시스템 메시지는 다른 응용 프로그램이 활성화 되는 시기를 알려면이 예제에서 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-750">The WM_ACTIVATEAPP operating system message is handled in this example to know when another application is becoming active.</span></span> <span data-ttu-id="90b14-751">MSDN library에 있는 Platform SDK 설명서를 참조 하세요 http://msdn.microsoft.com/library 사용 가능한 알아야 <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>를 <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-751">Refer to the Platform SDK documentation reference located in the MSDN library at http://msdn.microsoft.com/library to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="90b14-752">실제 상수 값도 사용할 수 있는 MSDN library의 Platform SDK (코어 SDK 섹션) 다운로드에 포함 된 Windows.h 헤더 파일에서 찾을 수 있습니다 http://msdn.microsoft.com/library합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-752">Actual constant values can be found in the Windows.h header file included in the Platform SDK (Core SDK section) download, which is also available in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="90b14-753">관리 되지 않는 코드를 호출 하는 클래스를 상속 합니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-753">for inheriting classes to call unmanaged code.</span></span> <span data-ttu-id="90b14-754">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="90b14-754">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="90b14-755">상속 하는 컨트롤 기본 클래스를 호출 해야 <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> 처리 하지 않는 모든 메시지를 처리 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="90b14-755">Inheriting controls should call the base class's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> method to process any messages that they do not handle.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>