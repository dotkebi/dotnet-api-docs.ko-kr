<Type Name="DragAction" FullName="System.Windows.Forms.DragAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e3b027225bd70b06b7fb4adf148d36e18bd57e0" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56391632" /></Metadata><TypeSignature Language="C#" Value="public enum DragAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DragAction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragAction" />
  <TypeSignature Language="VB.NET" Value="Public Enum DragAction" />
  <TypeSignature Language="C++ CLI" Value="public enum class DragAction" />
  <TypeSignature Language="F#" Value="type DragAction = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="268f4-101">끌어서 놓기 작업의 방법과 이 작업을 계속할지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-101">Specifies how and if a drag-and-drop operation should continue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="268f4-102">이 열거형을 사용 하 여 <xref:System.Windows.Forms.QueryContinueDragEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-102">This enumeration is used by <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="268f4-103">다음 예제에서는 두는 끌어서 놓기 작업을 보여 줍니다. <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-103">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="268f4-104">예제에서는 호출을 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="268f4-104">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="268f4-105">마우스를 이동 하는 경우 끌기 작업이 시작 둘 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-105">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="268f4-106">합니다 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드를 사용 하는 동안 끌어서 항목의 인덱스를 확인 합니다 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-106">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="268f4-107">또한이 사용자 지정 커서를 사용 하 여 끌어서 놓기 작업에 대 한 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-107">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="268f4-108">이 예제에서는 두 개의 가정 커서 파일인 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌기에 대 한 애플리케이션 디렉터리에 있으며 놓기 없음 커서를 각각.</span><span class="sxs-lookup"><span data-stu-id="268f4-108">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="268f4-109">사용자 지정 커서를 사용할 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 확인란이 선택 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-109">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="268f4-110">에 설정 된 사용자 지정 커서를 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-110">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="268f4-111">키보드 상태에서 평가 되는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`결정 끌기 작업을 SHIFT, CTRL, ALT 또는 CTRL + ALT 키의 상태에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-111">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="268f4-112">위치는 `ListBox` 하는 동안 결정 됩니다 드롭다운 수행 되는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-112">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="268f4-113">데이터 삭제 없는 경우는 `String`, 해당 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-113">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="268f4-114">드롭다운의 상태에 표시 됩니다는 마지막으로, 합니다 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-114">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="268f4-115">데이터를 오른쪽에 대 한 drop `ListBox` 에서 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 값에 적절 한 위치에 추가 됩니다는 `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="268f4-115">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="268f4-116">끌기 작업 이동 폼의 범위를 벗어나는 경우에서 끌어서 놓기 작업이 취소 되는 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-116">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="268f4-117">이 코드 예제에서는 사용 하 여는 <xref:System.Windows.Forms.DragAction> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-117">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragAction> enumeration.</span></span> <span data-ttu-id="268f4-118">참조 된 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="268f4-118">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="Cancel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DragAction Cancel = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DragAction.Cancel" />
      <MemberSignature Language="VB.NET" Value="Cancel" />
      <MemberSignature Language="C++ CLI" Value="Cancel" />
      <MemberSignature Language="F#" Value="Cancel = 2" Usage="System.Windows.Forms.DragAction.Cancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="268f4-119">놓기 메시지가 표시되지 않고 작업이 취소됩니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-119">The operation is canceled with no drop message.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="Continue" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DragAction Continue = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DragAction.Continue" />
      <MemberSignature Language="VB.NET" Value="Continue" />
      <MemberSignature Language="C++ CLI" Value="Continue" />
      <MemberSignature Language="F#" Value="Continue = 0" Usage="System.Windows.Forms.DragAction.Continue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="268f4-120">작업이 계속됩니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-120">The operation will continue.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="Drop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DragAction Drop = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DragAction.Drop" />
      <MemberSignature Language="VB.NET" Value="Drop" />
      <MemberSignature Language="C++ CLI" Value="Drop" />
      <MemberSignature Language="F#" Value="Drop = 1" Usage="System.Windows.Forms.DragAction.Drop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="268f4-121">놓기와 함께 작업이 중지됩니다.</span><span class="sxs-lookup"><span data-stu-id="268f4-121">The operation will stop with a drop.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>