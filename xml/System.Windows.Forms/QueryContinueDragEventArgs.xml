<Type Name="QueryContinueDragEventArgs" FullName="System.Windows.Forms.QueryContinueDragEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b01ed3c491cb797efe6308946ea34009d0ab7071" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56394895" /></Metadata><TypeSignature Language="C#" Value="public class QueryContinueDragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryContinueDragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.QueryContinueDragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryContinueDragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryContinueDragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type QueryContinueDragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="91b78-101"><see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> 이벤트에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-101">Provides data for the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91b78-102"><xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 끌어서 놓기 작업 중에 발생 하 고 끌기 소스가 끌어서 놓기 작업을 취소 해야 하는지 여부를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-102">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.</span></span> <span data-ttu-id="91b78-103"><xref:System.Windows.Forms.QueryContinueDragEventArgs> 끌어서 놓기 작업을 계속할지 여부 및 방법을, 보조키를 눌렀는지 여부 및 사용자가 ESC 키를 눌렀습니다 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-103">A <xref:System.Windows.Forms.QueryContinueDragEventArgs> specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.</span></span>  
  
 <span data-ttu-id="91b78-104">기본적으로 Esc 키를 누른 경우 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트는 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>을 <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType>로 설정하고 마우스 왼쪽, 가운데 또는 오른쪽 단추를 누른 경우 `Action`을 <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType>으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-104">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if the left, middle, or right mouse button is pressed.</span></span>  
  
 <span data-ttu-id="91b78-105">이벤트 모델에 대 한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-105">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91b78-106">이 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Windows.Forms.QueryContinueDragEventArgs> 클래스는 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-106">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="91b78-107">참조 된 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="91b78-107">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragAction" />
    <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keyState, bool escapePressed, valuetype System.Windows.Forms.DragAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyState As Integer, escapePressed As Boolean, action As DragAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContinueDragEventArgs(int keyState, bool escapePressed, System::Windows::Forms::DragAction action);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.QueryContinueDragEventArgs : int * bool * System.Windows.Forms.DragAction -&gt; System.Windows.Forms.QueryContinueDragEventArgs" Usage="new System.Windows.Forms.QueryContinueDragEventArgs (keyState, escapePressed, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="escapePressed" Type="System.Boolean" />
        <Parameter Name="action" Type="System.Windows.Forms.DragAction" />
      </Parameters>
      <Docs>
        <param name="keyState"><span data-ttu-id="91b78-108">Shift, Ctrl 및 Alt 키의 현재 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-108">The current state of the SHIFT, CTRL, and ALT keys.</span></span></param>
        <param name="escapePressed"><span data-ttu-id="91b78-109">Esc 키를 눌렀으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-109"><see langword="true" /> if the ESC key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="action"><span data-ttu-id="91b78-110"><see cref="T:System.Windows.Forms.DragAction" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-110">A <see cref="T:System.Windows.Forms.DragAction" /> value.</span></span></param>
        <summary><span data-ttu-id="91b78-111"><see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragAction Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As DragAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragAction Action { System::Windows::Forms::DragAction get(); void set(System::Windows::Forms::DragAction value); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Windows.Forms.DragAction with get, set" Usage="System.Windows.Forms.QueryContinueDragEventArgs.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91b78-112">끌어서 놓기 작업의 상태를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-112">Gets or sets the status of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="91b78-113"><see cref="T:System.Windows.Forms.DragAction" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-113">A <see cref="T:System.Windows.Forms.DragAction" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91b78-114">기본적으로 Esc 키를 누른 경우 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트는 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>을 <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType>로 설정하고 마우스 왼쪽, 가운데 또는 오른쪽 단추를 누른 경우 `Action`을 <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType>으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-114">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if the left, middle, or right mouse button is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91b78-115">이 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Windows.Forms.QueryContinueDragEventArgs> 클래스는 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-115">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="91b78-116">참조 된 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="91b78-116">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="EscapePressed">
      <MemberSignature Language="C#" Value="public bool EscapePressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EscapePressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapePressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EscapePressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapePressed : bool" Usage="System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91b78-117">사용자가 Esc 키를 눌렀는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-117">Gets whether the user pressed the ESC key.</span></span></summary>
        <value><span data-ttu-id="91b78-118">Esc 키를 눌렀으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-118"><see langword="true" /> if the ESC key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91b78-119">기본적으로 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 집합 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 하 <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> 경우 <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> 그렇습니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-119">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> is true.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91b78-120">다음 코드 예제에서는 <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> 합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-120">The following code example demonstrates the use of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> .</span></span> <span data-ttu-id="91b78-121">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-121">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="91b78-122">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-122">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="91b78-123">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-123">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="91b78-124">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Control>와 같은 <xref:System.Windows.Forms.Button> 또는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-124">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="91b78-125">다음 인스턴스 이름을 `Control1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-125">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.QueryContinueDragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91b78-126">Shift, Ctrl 및 Alt 키의 현재 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-126">Gets the current state of the SHIFT, CTRL, and ALT keys.</span></span></summary>
        <value><span data-ttu-id="91b78-127">Shift, Ctrl 및 Alt 키의 현재 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-127">The current state of the SHIFT, CTRL, and ALT keys.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91b78-128">에 설정 된 비트를 <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> 키 또는 작업 중에 누른 마우스 단추 속성을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-128">The bits that are set in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="91b78-129">예를 들어 마우스 왼쪽된 단추를 누르는 경우 첫 번째 비트를 <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-129">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="91b78-130">비트를 사용할 수 있습니다 `AND` 연산자를 지정된 된 키 상태를 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-130">You can use the bitwise `AND` operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="91b78-131">다음 표에서 지정된 된 이벤트에 대해 설정 된 비트를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-131">The following table lists the bits that are set for a specified event.</span></span>  
  
|<span data-ttu-id="91b78-132">비트</span><span class="sxs-lookup"><span data-stu-id="91b78-132">Bit</span></span>|<span data-ttu-id="91b78-133">Key</span><span class="sxs-lookup"><span data-stu-id="91b78-133">Key</span></span>|  
|---------|---------|  
|<span data-ttu-id="91b78-134">1</span><span class="sxs-lookup"><span data-stu-id="91b78-134">1</span></span>|<span data-ttu-id="91b78-135">마우스 왼쪽 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-135">The left mouse button.</span></span>|  
|<span data-ttu-id="91b78-136">2</span><span class="sxs-lookup"><span data-stu-id="91b78-136">2</span></span>|<span data-ttu-id="91b78-137">마우스 오른쪽 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-137">The right mouse button.</span></span>|  
|<span data-ttu-id="91b78-138">4</span><span class="sxs-lookup"><span data-stu-id="91b78-138">4</span></span>|<span data-ttu-id="91b78-139">Shift 키입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-139">The SHIFT key.</span></span>|  
|<span data-ttu-id="91b78-140">8</span><span class="sxs-lookup"><span data-stu-id="91b78-140">8</span></span>|<span data-ttu-id="91b78-141">CTL 키입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-141">The CTL key.</span></span>|  
|<span data-ttu-id="91b78-142">16</span><span class="sxs-lookup"><span data-stu-id="91b78-142">16</span></span>|<span data-ttu-id="91b78-143">마우스 가운데 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-143">The middle mouse button.</span></span>|  
|<span data-ttu-id="91b78-144">32</span><span class="sxs-lookup"><span data-stu-id="91b78-144">32</span></span>|<span data-ttu-id="91b78-145">Alt 키입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-145">The ALT key.</span></span>|  
  
 <span data-ttu-id="91b78-146">기본적으로 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 집합 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 하 <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> 경우 <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> 왼쪽, 가운데 또는 오른쪽 마우스 단추를 눌렀음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-146">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> indicates that the left, middle, or right mouse button is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91b78-147">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-147">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="91b78-148">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-148">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="91b78-149">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-149">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="91b78-150">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-150">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="91b78-151">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.Control>와 같은 <xref:System.Windows.Forms.Button> 또는 <xref:System.Windows.Forms.ComboBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-151">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="91b78-152">다음 인스턴스 이름을 `Control1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="91b78-152">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
  </Members>
</Type>