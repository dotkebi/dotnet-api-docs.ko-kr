<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5674c2da293b1c67f2e72f5a7b7a7afa8c53fc6f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56352325" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="169b0-101">Text 컨트롤에 필요한 기본 기능을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-101">Implements the basic functionality required by text controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-102">이 클래스와 같은 텍스트 조작 컨트롤의 핵심 기능을 구현 <xref:System.Windows.Forms.TextBox> 고 <xref:System.Windows.Forms.RichTextBox>입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="169b0-103">선택한 텍스트를 포함 하는 이러한 **클립보드** 기능, 여러 줄 텍스트 컨트롤 지원 및 이벤트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-104">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 파생 클래스를 여러 줄을 만들려면 <xref:System.Windows.Forms.TextBox> 세로 스크롤 막대를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="169b0-105">또한이 예제에서는 합니다 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, 및 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 속성을 여러 줄 텍스트 상자 컨트롤을 텍스트 문서를 만드는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="169b0-106">일반적으로 상속 하지 않는 <see cref="T:System.Windows.Forms.TextBoxBase" />합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-106">You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />.</span></span> <span data-ttu-id="169b0-107">사용자 고유의 텍스트 컨트롤 클래스를 만들려면에서 상속 <see cref="T:System.Windows.Forms.TextBox" /> 또는 <see cref="T:System.Windows.Forms.RichTextBox" />합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-107">To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</span></span></para></block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-108">여러 줄을 입력할 수 있는 TextBox 컨트롤에서 Tab 키를 누를 때 탭 순서에 따라 다음 컨트롤로 포커스를 이동하는 대신 해당 컨트롤에 탭 문자를 입력할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-108">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span></span></summary>
        <value><span data-ttu-id="169b0-109">Tab 키를 사용하여 여러 줄을 입력할 수 있는 텍스트 상자에 탭을 입력할 수 있으면 <see langword="true" />이고 Tab 키를 누를 때 포커스가 이동하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-109"><see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span></span> <span data-ttu-id="169b0-110">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-110">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-111">합니다 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 속성 수도 있어야 `true` 컨트롤에서 탭 문자를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-111">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="169b0-112">경우는 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> 속성이 `true`, 사용자는 탭 순서의 다음 컨트롤로 포커스를 이동 하려면 CTRL + TAB을 눌러 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-112">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-113">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 파생 클래스를 여러 줄을 만들려면 <xref:System.Windows.Forms.TextBox> 세로 스크롤 막대를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-113">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="169b0-114">또한이 예제에서는 합니다 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, 및 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 속성을 여러 줄 텍스트 상자 컨트롤을 텍스트 문서를 만드는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-114">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-115"><see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-115">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-116">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-116">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-117">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-117">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="169b0-118">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-118">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="169b0-119">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-119">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="169b0-120">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-120">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="169b0-121">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.TextBoxBase>와 같은 <xref:System.Windows.Forms.TextBox> 또는 <xref:System.Windows.Forms.TextBoxBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-121">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="169b0-122">다음 인스턴스 이름을 `TextBoxBase1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-122">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="169b0-123">텍스트 상자의 현재 내용에 추가할 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-123">The text to append to the current contents of the text box.</span></span></param>
        <summary><span data-ttu-id="169b0-124">텍스트 상자의 현재 텍스트에 텍스트를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-124">Appends text to the current text of a text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-125">텍스트 연결 연산자 (+)를 사용 하 여 텍스트를 연결 하는 대신 해당 컨트롤의 기존 텍스트를 추가 하려면이 메서드를 사용 합니다 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-125">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-126">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> 메서드 및 <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> 하나에서 텍스트를 복사 하는 속성 <xref:System.Windows.Forms.TextBox> 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-126">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="169b0-127">이 예제에서는 두 개의 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 하 고 `textBox2`를 폼에 추가 되었습니다 `textBox1` 에 할당 된 텍스트에 해당 <xref:System.Windows.Forms.Control.Text%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-127">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-128">컨트롤에 할당된 글꼴이 변경될 때 컨트롤의 높이가 자동으로 조정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-128">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span></span></summary>
        <value><span data-ttu-id="169b0-129">글꼴이 변경될 때 컨트롤의 높이가 자동으로 조정되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-129"><see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="169b0-130">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-130">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-131">설정한 경우를 <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> 속성을 `true` 에 대 한를 <xref:System.Windows.Forms.TextBox>경우를 <xref:System.Windows.Forms.Control.Font%2A> 변경을 <xref:System.Windows.Forms.TextBox> 확장 또는 축소 되는 <xref:System.Windows.Forms.Control.Height%2A> 크거나 작은 텍스트를 수용 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-131">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="169b0-132">합니다 <xref:System.Windows.Forms.Control.Width%2A> 의 <xref:System.Windows.Forms.TextBox> 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-132">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="169b0-133">사용자가 텍스트 컨트롤의 크기를 변경 하려는 경우 사용할 수 있습니다는 <xref:System.Windows.Forms.RichTextBox> 컨트롤을 사용 하 여 해당 <xref:System.Windows.Forms.RichTextBox.ContentsResized> 크기로 변경 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-133">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-134">이 예제에서는 두 개의 단추를 두 개의 텍스트 상자를 사용 하 여 폼 있고 각 단추에 대 한 클릭 이벤트를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-134">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="169b0-135">예제에 <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> 속성을 설정 하 여 `true` 텍스트 상자에 대 한 및 `false` 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-135">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="169b0-136">단추 하나를 클릭할 때 텍스트 상자는 작은 텍스트를 사용 하 여 채워지고 다른 단추를 클릭할 때 텍스트 상자는 큰 텍스트를 사용 하 여.</span><span class="sxs-lookup"><span data-stu-id="169b0-136">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="169b0-137">포함 된 텍스트 상자 <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> 로 `true` 큰 텍스트에 맞게 높이가 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-137">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="169b0-138">너비를 변경 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-138">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-139">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-139">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-140">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-140">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-141">컨트롤의 배경색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-141">Gets or sets the background color of the control.</span></span></summary>
        <value><span data-ttu-id="169b0-142">컨트롤의 배경을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-142">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-143">사용할 수는 <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> 폼의 색 구성표에 blend 텍스트 컨트롤의 배경색을 변경할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-143">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="169b0-144">컨트롤 내에서 텍스트의 색을 변경 하려면 사용 된 <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-144">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="169b0-145">설정 하는 경우는 <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> text 컨트롤의 속성 확인 선택한 색 사라질 컨트롤의 텍스트를 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-145">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="169b0-146">예를 들어 경우는 <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> 하 고 <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> 속성이 둘 다로 설정 됩니다 `Color.Black`, textbox 컨트롤 내의 텍스트를 볼 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-146">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="169b0-147">이 속성 경우 재정의 될 수 있습니다는 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> 의 속성을 <xref:System.Windows.Forms.TextBoxBase> 로 설정 되어 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-147">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-148">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-148">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="169b0-149">개체의 배경 이미지입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-149">The background image for the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-150">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-150">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-151"><see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-151">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span></span> <span data-ttu-id="169b0-152">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-152">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-153">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-153">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-154">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-154">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="169b0-155"><see cref="T:System.Windows.Forms.ImageLayout" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-155">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-156">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-156">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-157"><see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-157">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span></span> <span data-ttu-id="169b0-158">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-158">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-159">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-159">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-160">TextBox 컨트롤의 테두리 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-160">Gets or sets the border type of the text box control.</span></span></summary>
        <value><span data-ttu-id="169b0-161">TextBox 컨트롤의 테두리 형식을 나타내는 <see cref="T:System.Windows.Forms.BorderStyle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-161">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span></span> <span data-ttu-id="169b0-162">기본값은 <see langword="Fixed3D" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-162">The default is <see langword="Fixed3D" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-163">사용할 수는 <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> 기본 3 차원 컨트롤 외에도 테두리가 없는 평면 스타일 컨트롤을 만드는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-163">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-164">파생된 클래스 <xref:System.Windows.Forms.RichTextBox>를 지원 하지 않습니다는 `BorderStyle.FixedSingle` 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-164">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="169b0-165">이 스타일 하면 합니다 <xref:System.Windows.Forms.BorderStyle> 사용 하는 `BorderStyle.Fixed3D` 대신 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-165">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-166">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 20 지점 Arial를 사용 하 여 단일 테두리가 지정 된 텍스트를 올바르게 표시할 수 있는 텍스트 상자를 만들려면 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-166">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="169b0-167">이 예제에서는 합니다 <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> 글꼴 후 적절 한 컨트롤의 높이 결정 하는 속성 및 <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> 컨트롤에 할당 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-167">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="169b0-168">열거형의 올바른 값 범위에 속하지 않는 값이 속성에 할당된 경우</span><span class="sxs-lookup"><span data-stu-id="169b0-168">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-169"><see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-169">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-170">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-170">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-171">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="169b0-172">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="169b0-173">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="169b0-174">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="169b0-175">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.TextBoxBase>와 같은 <xref:System.Windows.Forms.TextBox> 또는 <xref:System.Windows.Forms.TextBoxBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-175">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="169b0-176">다음 인스턴스 이름을 `TextBoxBase1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-176">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-177">IME 지원을 사용하도록 <see cref="P:System.Windows.Forms.Control.ImeMode" /> 속성을 활성 값으로 설정할 수 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-177">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span></span></summary>
        <value><span data-ttu-id="169b0-178"><see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> 속성이 <see langword="false" />이거나 이 <see cref="T:System.Windows.Forms.TextBoxBase" /> 클래스가 암호 마스크 문자를 사용하도록 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-178"><see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-179">TextBox 컨트롤에서 이전 작업을 실행 취소할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-179">Gets a value indicating whether the user can undo the previous operation in a text box control.</span></span></summary>
        <value><span data-ttu-id="169b0-180">TextBox 컨트롤에서 수행한 이전 작업을 실행 취소할 수 있는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-180"><see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-181">이 메서드가 반환 하는 경우 `true`를 호출할 수 있습니다는 <xref:System.Windows.Forms.TextBoxBase.Undo%2A> 입력란의 마지막 작업을 취소 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-181">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="169b0-182">이 메서드를 사용할 수 있습니다는 <xref:System.Windows.Forms.MenuItem.Popup> 의 이벤트를 <xref:System.Windows.Forms.MenuItem>, 또는에서 단추의 상태를 관리 하는 코드는 <xref:System.Windows.Forms.ToolBar> 텍스트 상자 컨트롤에서 이전 작업을 취소 하는 기능을 사용할지 여부를 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-182">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-183">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-183">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-184">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-184">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-185">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-185">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBoxBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-186">TextBox 컨트롤의 모든 텍스트를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-186">Clears all text from the text box control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-187">이 메서드를 사용 하 여 할당 하는 대신 컨트롤의 내용을 지울 수는 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 속성에 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-187">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-188">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>에 대 한 이벤트 처리기를 만들려면 클래스를 파생 합니다 <xref:System.Windows.Forms.Control.TextChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-188">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="169b0-189">이벤트 처리기 내에서 코드는 숫자 데이터를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-189">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="169b0-190">컨트롤의 텍스트를 입력 한 후 코드를 입력 한 텍스트 숫자 인지를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-190">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="169b0-191">코드 컨트롤에서 텍스트를 지웁니다 텍스트를 숫자로 없으면 및 <xref:System.Windows.Forms.MessageBox> 숫자만 허용 되도록 사용자 경고를 발생 시 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-191">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="169b0-192">이 예제에서는 `Boolean` 라는 변수 `flag` 및 <xref:System.Windows.Forms.TextBox> 이라는 컨트롤 `textBox1` 이 메서드 외부에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-192">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="169b0-193">이 예제에서 연계 이벤트를 방지 하려면 변수를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.Control.TextChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-193">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="member this.ClearUndo : unit -&gt; unit" Usage="textBoxBase.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-194">텍스트 상자의 실행 취소 버퍼에서 가장 최근 작업에 대한 정보를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-194">Clears information about the most recent operation from the undo buffer of the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-195">애플리케이션의 상태에 따라, 반복에서 실행 취소 작업을 방지 하기 위해이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-195">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-196">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-196">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-197">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-197">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-198">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-198">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-199">텍스트 상자를 클릭하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-199">Occurs when the text box is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-200">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-200">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-201">다음 코드 예제에서는 처리 하는 방법에 설명 합니다 <xref:System.Windows.Forms.TextBoxBase.Click> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-201">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="169b0-202">예제를 실행 하려면 다음 코드를 포함 하는 폼의 붙여를 <xref:System.Windows.Forms.TextBox> TextBox1 이라는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-202">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="169b0-203">이 예제에서는 이벤트 처리 메서드에 연결 되었는지는 <xref:System.Windows.Forms.TextBoxBase.Click> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-203">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-204">텍스트 상자에서 현재 선택한 내용을 **클립보드**에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-204">Copies the current selection in the text box to the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-205">이 메서드를 사용 하 여 사용 하는 대신 합니다 <xref:System.Windows.Forms.Clipboard> 텍스트 상자에 텍스트를 복사 하 여 해당 클래스를 **클립보드**합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-205">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-206">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-206">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-207">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-207">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-208">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-208">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="textBoxBase.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-209">컨트롤의 핸들을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-209">Creates a handle for the control.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="169b0-210">에 관리 되지 않는 코드를 사용 하 여 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-210">for operating with unmanaged code.</span></span> <span data-ttu-id="169b0-211">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="169b0-211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-212">컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-212">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="169b0-213">컨트롤 핸들을 만들 때 필요한 작성 매개 변수가 포함된 <see cref="T:System.Windows.Forms.CreateParams" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-213">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-214">텍스트 상자에서 현재 선택한 내용을 **클립보드**로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-214">Moves the current selection in the text box to the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-215">컨트롤에서 텍스트를 선택한 경우이 메서드는 텍스트 상자에서 텍스트 잘라내기만.</span><span class="sxs-lookup"><span data-stu-id="169b0-215">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="169b0-216">사용 하는 대신이 메서드를 사용할 수 있습니다는 <xref:System.Windows.Forms.Clipboard> 텍스트 상자에 텍스트를 복사 및 이동 되도록 클래스를 **클립보드**합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-216">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-217">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-217">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-218">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-218">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-219">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-219">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-220">컨트롤의 기본 커서를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-220">Gets or sets the default cursor for the control.</span></span></summary>
        <value><span data-ttu-id="169b0-221">현재 기본 커서를 나타내는 <see cref="T:System.Windows.Forms.Cursor" /> 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-221">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-222">재정의 <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> 컨트롤에 대 한 기본 커서를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-222">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="169b0-223">컨트롤의 생성자에서 커서를 설정 하는 보다 효율적 이며 특정 커서와 관련 된 디자이너 기능에 대 한 자동 지원 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-223">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-224">컨트롤의 기본 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-224">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="169b0-225">컨트롤의 기본 <see cref="T:System.Drawing.Size" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-225">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberSignature Language="F#" Value="member this.DeselectAll : unit -&gt; unit" Usage="textBoxBase.DeselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-226">컨트롤에 선택된 문자가 없도록 <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> 속성 값을 0으로 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-226">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-227">컨트롤이 표시되기 전에 버퍼에서 컨트롤 그리기가 완료되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-227">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span></span> <span data-ttu-id="169b0-228">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-228">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="169b0-229">컨트롤에 이중 버퍼링을 구현하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-229"><see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-230">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-230">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-231">컨트롤의 전경색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-231">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="169b0-232">컨트롤의 전경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-232">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-233">사용할 수는 <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> 폼에서 다른 컨트롤의 텍스트에 맞게 컨트롤 내에서 텍스트의 색을 변경할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-233">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="169b0-234">또한 잘못 된 값이 포함 된 특정 텍스트 상자에 강조 표시 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-234">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="169b0-235">컨트롤의 배경색을 변경 하려면 사용 된 <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-235">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="169b0-236">설정 하는 경우는 <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> text 컨트롤의 속성 확인 선택한 색 사라질 컨트롤의 텍스트를 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-236">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="169b0-237">예를 들어 경우는 <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> 하 고 <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> 속성이 둘 다로 설정 됩니다 `Color.Black`, textbox 컨트롤 내의 텍스트를 볼 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-237">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="169b0-238">이 속성 경우 재정의 될 수 있습니다는 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> 의 속성을 <xref:System.Windows.Forms.TextBoxBase> 로 설정 되어 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-238">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharFromPosition : System.Drawing.Point -&gt; char&#xA;override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="textBoxBase.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="169b0-239">가장 가까운 문자를 검색할 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-239">The location from which to seek the nearest character.</span></span></param>
        <summary><span data-ttu-id="169b0-240">컨트롤 내의 지정된 위치에서 가장 가까운 문자를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-240">Retrieves the character that is closest to the specified location within the control.</span></span></summary>
        <returns><span data-ttu-id="169b0-241">지정된 위치의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-241">The character at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-242">위치에 지정 하는 경우는 `pt` 매개 변수는 첫 번째 문자의 문자열에 지정 된 위치에 가장 가까운 컨트롤의 클라이언트 영역 외부 `pt` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-242">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="169b0-243">컨트롤 내의 특정 지점을 근처에 있는 문자를 확인 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-243">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="169b0-244">그런 다음 해당 위치에서 텍스트에 대 한 작업을 수행 하려면이 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-244">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-245">경우에 지정된 된 위치는 `pt` 매개 변수에서 지정 된 지점에서 가장 가까운 문자열의 마지막 문자가 컨트롤의 클라이언트 영역 오른쪽에 있는 `pt` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-245">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharIndexFromPosition : System.Drawing.Point -&gt; int&#xA;override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="textBoxBase.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="169b0-246">검색할 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-246">The location to search.</span></span></param>
        <summary><span data-ttu-id="169b0-247">지정된 위치에 가장 가까운 문자의 인덱스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-247">Retrieves the index of the character nearest to the specified location.</span></span></summary>
        <returns><span data-ttu-id="169b0-248">지정된 위치의 0부터 시작하는 문자 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-248">The zero-based character index at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-249">에 지정 된 위치에 가장 가까운 문자 인덱스를 반환 하는이 메서드는 `pt` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-249">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="169b0-250">문자 인덱스에는 공백을 포함 하 여 컨트롤에서 텍스트의 0부터 시작 인덱스가입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-250">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="169b0-251">텍스트에 사용자가 있는 마우스 좌표가 메서드에 전달 하 여 마우스를 확인 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-251">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="169b0-252">이 컨트롤의 텍스트에 단어 위에 마우스 포인터를 놓을 때 작업을 수행 하려는 경우에 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-252">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="169b0-253">지정된 된 위치 컨트롤의 클라이언트 사각형에 속하지 않거나 컨트롤의 마지막 문자 뒤, 반환 값은 마지막 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-253">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexFromLine : int -&gt; int" Usage="textBoxBase.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="169b0-254">첫째 문자의 인덱스를 가져올 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-254">The line for which to get the index of its first character.</span></span></param>
        <summary><span data-ttu-id="169b0-255">지정된 줄에 있는 첫 번째 문자의 인덱스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-255">Retrieves the index of the first character of a given line.</span></span></summary>
        <returns><span data-ttu-id="169b0-256">지정된 줄에서 첫 번째 문자의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-256">The zero-based index of the first character in the specified line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-257">입력란의 줄 번호는 0부터 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-257">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="169b0-258">경우는 `lineNumber` 매개 변수 입력란의 마지막 줄 보다 크면 <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> -1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-258">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="169b0-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> 실제 줄의 첫 번째 문자 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="169b0-260">실제 줄은 표시 된 줄에 할당 된 줄은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-260">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="169b0-261">표시 된 줄 수 할당 된 줄 바꿈 인해 수보다 커야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-261">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="169b0-262">예를 들어, 두 긴 줄을 할당 하는 경우는 <xref:System.Windows.Forms.RichTextBox> 제어 하 고 설정 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 및 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 에 `true`, 두 할당 된 긴 줄을 4 개의 실제 발생 (또는 줄으로 표시).</span><span class="sxs-lookup"><span data-stu-id="169b0-262">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="169b0-263"><paramref name="lineNumber" /> 매개 변수 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="169b0-263">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="textBoxBase.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-264">현재 줄에서 첫 번째 문자의 인덱스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-264">Retrieves the index of the first character of the current line.</span></span></summary>
        <returns><span data-ttu-id="169b0-265">현재 줄의 0부터 시작하는 문자 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-265">The zero-based character index in the current line.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetLineFromCharIndex : int -&gt; int&#xA;override this.GetLineFromCharIndex : int -&gt; int" Usage="textBoxBase.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="169b0-266">검색할 문자 인덱스 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-266">The character index position to search.</span></span></param>
        <summary><span data-ttu-id="169b0-267">컨트롤의 텍스트 내에서 지정된 문자 위치의 줄 번호를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-267">Retrieves the line number from the specified character position within the text of the control.</span></span></summary>
        <returns><span data-ttu-id="169b0-268">문자 인덱스가 있는 0부터 시작하는 줄 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-268">The zero-based line number in which the character index is located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-269">이 메서드를 사용 하면에 지정 된 문자 인덱스를 기준으로 줄 번호를 확인 하는 `index` 메서드의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-269">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="169b0-270">컨트롤의 텍스트의 첫 번째 줄 값 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-270">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="169b0-271"><xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> 메서드는 인덱싱된 문자가 위치한 컨트롤 내에서 실제 줄 번호를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-271">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="169b0-272">예를 들어, 첫 번째 논리 줄의 텍스트 부분 컨트롤 줄 바꿈 다음 줄으로 된 <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> 메서드는 지정된 된 문자 인덱스에 있는 문자가 두 번째 회선을 래핑하면 경우 1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-272">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="169b0-273">경우 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 로 설정 된 `false`, 없습니다 부분 줄 다음를 래핑하고 메서드를 지정된 된 문자 인덱스에 대 한 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-273">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="169b0-274">내에 줄 특정 문자 인덱스를 확인 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-274">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="169b0-275">예를 들어, 호출 후의 <xref:System.Windows.Forms.RichTextBox.Find%2A> 텍스트를 검색 하는 방법 검색 결과 발견에 문자 인덱스를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-275">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="169b0-276">반환 된 문자 인덱스를 사용 하 여이 메서드를 호출할 수 있습니다는 <xref:System.Windows.Forms.RichTextBox.Find%2A> 단어 줄을 확인할 메서드를 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-276">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-277">문자 인덱스에 지정 된 경우는 `index` 매개 변수가 사용 가능한 컨트롤 내에 포함 된 줄 수를 초과 된 경우 마지막 줄 번호 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-277">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetPositionFromCharIndex : int -&gt; System.Drawing.Point&#xA;override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="textBoxBase.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="169b0-278">위치를 검색할 문자의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-278">The index of the character for which to retrieve the location.</span></span></param>
        <summary><span data-ttu-id="169b0-279">컨트롤 내에서 지정된 문자 인덱스의 위치를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-279">Retrieves the location within the control at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="169b0-280">컨트롤의 클라이언트 영역 내에서 지정된 문자의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-280">The location of the specified character within the client rectangle of the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-281">이 메서드를 사용 하면 컨트롤에서 특정 문자의 인덱스를 위치한 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-281">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="169b0-282">컨트롤의 단어에 대 한 바로 가기 메뉴 항목 또는 도움말 정보를 표시 하는 등의 작업에 대 한이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-282">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="169b0-283">예를 들어, 사용자 컨트롤의 단어를 마우스 오른쪽 단추로 클릭할 때 사용자에 게 옵션 메뉴를 표시 하려는 경우 사용할 수이 메서드를 올바르게 표시할 단어의 위치를 확인 하는 <xref:System.Windows.Forms.ContextMenu> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-283">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-284">TextBox 컨트롤이 포커스를 잃을 때 해당 컨트롤에서 선택한 텍스트가 강조 표시된 상태로 남아 있는지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-284">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span></span></summary>
        <value><span data-ttu-id="169b0-285">TextBox 컨트롤이 포커스를 잃을 때 선택한 텍스트가 강조 표시된 상태로 유지되지 않으면 <see langword="true" />이고 강조 표시된 상태로 유지되면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-285"><see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span></span> <span data-ttu-id="169b0-286">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-286">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-287">포커스가 있는 동안 다른 양식 또는 대화 상자에서 맞춤법 검사기 대화 상자와 같은 텍스트 상자 컨트롤을 강조 표시 하는 텍스트를 유지 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-287">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-288">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-288">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="169b0-289">예제를 실행 하는 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-289">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="169b0-290">호출 된 `InitializeTextBox` 폼의 생성자 또는 `Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="169b0-290">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.HideSelectionChanged : EventHandler " Usage="member this.HideSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-291"><see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-291">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-292">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-292">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-293">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-293">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="169b0-294">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-294">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="169b0-295">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-295">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="169b0-296">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-296">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="169b0-297">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.TextBoxBase>와 같은 <xref:System.Windows.Forms.TextBox> 또는 <xref:System.Windows.Forms.TextBoxBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-297">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="169b0-298">다음 인스턴스 이름을 `TextBoxBase1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-298">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-299">컨트롤의 IME(입력기) 모드를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-299">Gets or sets the Input Method Editor (IME) mode of a control.</span></span></summary>
        <value><span data-ttu-id="169b0-300">컨트롤의 IME 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-300">The IME mode of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="169b0-301">키 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-301">One of the Keys value.</span></span></param>
        <summary><span data-ttu-id="169b0-302">지정된 키가 입력 키인지 또는 전처리가 필요한 특수 키인지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-302">Determines whether the specified key is an input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="169b0-303">지정된 키가 입력 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-303"><see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-304"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> 메서드가 반환 되는 `true` 경우는 `keyData` 매개 변수를 포함 합니다 <xref:System.Windows.Forms.Keys.Tab> 값 및 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> 속성이 `true`.</span><span class="sxs-lookup"><span data-stu-id="169b0-304">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="169b0-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> 반환 `false` 하는 경우 `keyData` 둘 다 포함 <xref:System.Windows.Forms.Keys.Tab> 고 <xref:System.Windows.Forms.Keys.Control>입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.TextBoxBase.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-306">TextBox 컨트롤의 텍스트 줄을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-306">Gets or sets the lines of text in a text box control.</span></span></summary>
        <value><span data-ttu-id="169b0-307">TextBox 컨트롤의 텍스트가 포함된 문자열 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-307">An array of strings that contains the text in a text box control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-308">배열의 각 요소에에서 텍스트 상자 컨트롤의 텍스트를 줄이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-308">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="169b0-309">경우는 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 텍스트 상자 컨트롤의 속성이 `true` 및 줄 바꿈 문자가 텍스트에 나타나는, 줄 바꿈 문자를 텍스트 배열에 새 요소를 추가 하 고 별도 줄에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-309">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-310">기본적으로 줄의 컬렉션이 읽기 전용 복사본에 있는 줄을 <xref:System.Windows.Forms.TextBox>입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-310">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="169b0-311">줄의 쓰기 가능한 컬렉션을 가져오려면 다음과 유사한 코드를 사용 합니다. `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="169b0-311">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-312">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 파생 클래스를 여러 줄 텍스트 상자 컨트롤에서 모든 텍스트 문자열을 추출 하 고 표시를 사용 하는 <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="169b0-312">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="169b0-313">이 예제에서는 <xref:System.Windows.Forms.TextBox> 컨트롤을 만든 라는 `textBox1`, 있고 텍스트 줄으로 채워져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-313">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-314">TextBox 컨트롤에 입력하거나 붙여넣을 수 있는 최대 문자 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-314">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span></span></summary>
        <value><span data-ttu-id="169b0-315">컨트롤에 입력할 수 있는 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-315">The number of characters that can be entered into the control.</span></span> <span data-ttu-id="169b0-316">기본값은 32767입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-316">The default is 32767.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-317">우편 번호 및 전화 번호와 같은 값에 대 한 컨트롤에 입력 된 텍스트의 길이를 제한 하거나 데이터를 데이터베이스에 입력 해야 할 때 입력 한 텍스트의 길이 제한 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-317">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="169b0-318">데이터베이스의 해당 필드의 최대 길이를 컨트롤에 입력 한 텍스트를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-318">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-319">코드에서 값을 설정할 수 있습니다 합니다 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 길이가 지정 된 값 보다 큰 값으로 속성을 <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-319">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="169b0-320">이 속성은 런타임 시 컨트롤에 입력 한 텍스트를만 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-320">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-321">다음 코드 예제에서는 파생된 클래스인 <xref:System.Windows.Forms.TextBox>, 암호를 적용 하는 데 사용 되는 텍스트 상자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-321">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="169b0-322">이 예제에서는 합니다 <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> 대문자로 입력 한 모든 문자를 변경 하는 속성 및 <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> 암호는 길이가 8 자로 제한 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-322">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="169b0-323">또한이 예제에서는 합니다 <xref:System.Windows.Forms.TextBox.TextAlign%2A> 속성에 암호를 가운데를 <xref:System.Windows.Forms.TextBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-323">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="169b0-324">속성에 할당된 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="169b0-324">The value assigned to the property is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-325">TextBox 컨트롤을 만들거나 컨트롤의 내용을 마지막으로 설정한 이후 해당 컨트롤이 수정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-325">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span></span></summary>
        <value><span data-ttu-id="169b0-326">컨트롤의 내용이 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-326"><see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="169b0-327">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-327">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-328">사용자가 텍스트 상자 컨트롤의 내용을 수정 하는 경우를 확인 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-328">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="169b0-329">또한 애플리케이션에서 변경 내용을 텍스트 상자 컨트롤에 내용이 있는지 여부를 나타낼 코드에서이 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-329">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="169b0-330">이 속성에서에서 변경 된 텍스트 상자 컨트롤을 변경 된 내용의 유효성을 검사 하거나 저장할 수 있도록 하는 경우를 확인 하려면 유효성 검사 및 데이터 저장 방법을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-330">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="169b0-331">변경 하는 경우는 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 속성을 프로그래밍 방식으로 <xref:System.Windows.Forms.TextBoxBase.Modified%2A> 속성으로 돌아갑니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-331">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="169b0-332">이 발생 하지 않습니다는 <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-332">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-333">다음 코드 예제에서는 <xref:System.Windows.Forms.Control.TextChanged> 에 대 한 이벤트를 <xref:System.Windows.Forms.TextBox>, 파생 클래스를 확인 하려면 내용의 <xref:System.Windows.Forms.TextBox> 컨트롤 컨트롤을 데이터로 채운 후 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-333">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="169b0-334">이 예제에서는 컨트롤의 원래 내용을 저장 하는 문자열을 사용 하 여과의 내용을 비교는 <xref:System.Windows.Forms.TextBox> 내용을 변경 되었는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="169b0-334">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="169b0-335">내용이 변경 될 경우는 <xref:System.Windows.Forms.TextBoxBase.Modified%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-335">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="169b0-336">그렇지 않으면 다시 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-336">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="169b0-337">이 예제에서는 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다 하 고는 `String` 라는 변수 `originalText` 에 대 한 원래 텍스트를 저장할 만들었습니다를 <xref:System.Windows.Forms.TextBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-337">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberSignature Language="F#" Value="member this.ModifiedChanged : EventHandler " Usage="member this.ModifiedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-338"><see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-338">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-339">변경 하는 경우는 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 속성을 프로그래밍 방식으로 <xref:System.Windows.Forms.TextBoxBase.Modified%2A> 속성으로 돌아갑니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-339">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="169b0-340">이 발생 하지 않습니다는 <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-340">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="169b0-341">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-341">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-342">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="169b0-343">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="169b0-344">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="169b0-345">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="169b0-346">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.TextBoxBase>와 같은 <xref:System.Windows.Forms.TextBox> 또는 <xref:System.Windows.Forms.TextBoxBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="169b0-347">다음 인스턴스 이름을 `TextBoxBase1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-347">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-348">컨트롤을 마우스로 클릭할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-348">Occurs when the control is clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-349">합니다 <xref:System.Windows.Forms.RichTextBox> 컨트롤을 발생 하지 않습니다는 <xref:System.Windows.Forms.TextBoxBase.Click> 이벤트를 마우스 오른쪽 단추로 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-349">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="169b0-350"><xref:System.Windows.Forms.TextBoxBase.MouseClick> 이벤트는 이와 동일한 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-350">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="169b0-351">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-351">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-352">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-352">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="169b0-353">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.TextBoxBase.MouseClick> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-353">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="169b0-354">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-354">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="169b0-355">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-355">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="169b0-356">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.TextBoxBase>와 같은 <xref:System.Windows.Forms.TextBox> 또는 <xref:System.Windows.Forms.TextBoxBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-356">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="169b0-357">다음 인스턴스 이름을 `TextBoxBase1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.TextBoxBase.MouseClick> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-357">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-358">이 컨트롤이 여러 줄을 입력할 수 있는 TextBox 컨트롤인지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-358">Gets or sets a value indicating whether this is a multiline text box control.</span></span></summary>
        <value><span data-ttu-id="169b0-359">컨트롤이 여러 줄을 입력할 수 있는 TextBox 컨트롤이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-359"><see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="169b0-360">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-361">여러 줄 텍스트 상자를 사용 하면 두 줄 이상의 텍스트 컨트롤에 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-361">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="169b0-362">경우는 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 속성이 `true`, 여러 줄 텍스트 상자에 입력 한 텍스트 컨트롤의 다음 줄으로 줄 바꿈됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="169b0-363">경우는 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 속성이 `false`, 여러 줄 텍스트 상자 컨트롤에 입력 한 텍스트 줄 바꿈 문자를 입력할 때까지 동일한 줄에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-363">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="169b0-364">다음 줄 바꿈 문자로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-364">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="169b0-365">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="169b0-365">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="169b0-366">vbCrLf (Visual Basic만 해당)</span><span class="sxs-lookup"><span data-stu-id="169b0-366">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="169b0-367">스크롤 막대를 사용 하 여 텍스트 상자에 추가할 수 있습니다는 <xref:System.Windows.Forms.TextBox.ScrollBars%2A> 속성을 가로 및/또는 세로 스크롤 막대를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-367">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="169b0-368">이 컨트롤의 크기를 초과 하는 텍스트를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-368">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-369">때문에 기본값인은 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 속성은 `false`의 기본 크기를 <xref:System.Windows.Forms.TextBox> 크기를 조정 하는 경우에 글꼴 크기에 따라 수는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-369">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="169b0-370">에 대 한 일관 된 크기를 가져오려면 사용자 <xref:System.Windows.Forms.TextBox>설정, 해당 <xref:System.Windows.Forms.TextBox.Multiline%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-370">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-371">일본어 운영 체제의 경우는 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 속성이로 설정 되어 `true`설정의 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 속성 시스템 보안을 손상 시킬 암호의 텍스트가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-371">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="169b0-372">따라서 일본어 운영 체제를 설정 합니다 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 속성을 `false` 설정 하는 경우는 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-372">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-373">이 속성이 `false` 모두에 대해 기본적으로의 경우는 예외 클래스를 파생 합니다 <xref:System.Windows.Forms.RichTextBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-373">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="169b0-374">에 대 한를 <xref:System.Windows.Forms.RichTextBox> 컨트롤을 <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> 속성 컨트롤을 자동으로 조정할지를 다음과 같이 여부에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-374">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="169b0-375">하는 경우 <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> 로 설정 됩니다 `true` 하 고 <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> 로 설정 되어 `true`, <xref:System.Windows.Forms.RichTextBox> 자동으로 크기가 조정 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="169b0-376">경우 <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> 로 설정 된 `true` 하 고 <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> 로 설정 되어 `false`, <xref:System.Windows.Forms.RichTextBox> 자동으로 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-376">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-377">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 파생 클래스를 여러 줄을 만들려면 <xref:System.Windows.Forms.TextBox> 세로 스크롤 막대를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-377">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="169b0-378">또한이 예제에서는 합니다 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, 및 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 속성을 여러 줄 텍스트 상자 컨트롤을 텍스트 문서를 만드는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-378">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-379"><see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-379">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-380">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-380">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-381">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-381">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="169b0-382">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-382">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="169b0-383">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-383">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="169b0-384">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-384">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="169b0-385">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.TextBoxBase>와 같은 <xref:System.Windows.Forms.TextBox> 또는 <xref:System.Windows.Forms.TextBoxBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-385">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="169b0-386">다음 인스턴스 이름을 `TextBoxBase1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-386">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAcceptsTabChanged : EventArgs -&gt; unit&#xA;override this.OnAcceptsTabChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAcceptsTabChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-387">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-387">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-388"><see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-388">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-389">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-389">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="169b0-390">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-390">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="169b0-391">또한 <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-391">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="169b0-392">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-392">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="169b0-393">파생 클래스에서 <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-393">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-394">이벤트 데이터가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-394">An object that contains event data.</span></span></param>
        <summary><span data-ttu-id="169b0-395"><see cref="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-395">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-396">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-396">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-397"><see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-397">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-398">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-398">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="169b0-399">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-399">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="169b0-400">또한 <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-400">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="169b0-401">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-401">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="169b0-402">파생 클래스에서 <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-402">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-403">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-403">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-404"><see cref="E:System.Windows.Forms.Control.FontChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-404">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-405">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-405">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-406"><see cref="E:System.Windows.Forms.Control.HandleCreated" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-406">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-407">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-408"><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-408">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHideSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnHideSelectionChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnHideSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-409">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-409">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-410"><see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-410">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-411">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-411">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="169b0-412">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-412">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="169b0-413">또한 <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-413">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="169b0-414">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-414">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="169b0-415">파생 클래스에서 <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-415">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModifiedChanged : EventArgs -&gt; unit&#xA;override this.OnModifiedChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnModifiedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-416">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-416">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-417"><see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-417">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-418">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-418">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="169b0-419">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-419">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="169b0-420">또한 <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-420">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="169b0-421">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-421">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="169b0-422">파생 클래스에서 <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-422">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="169b0-423">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-423">The event data.</span></span></param>
        <summary><span data-ttu-id="169b0-424"><see cref="E:System.Windows.Forms.Control.MouseUp" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-424">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultilineChanged : EventArgs -&gt; unit&#xA;override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-425">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-425">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-426"><see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-426">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-427">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-427">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="169b0-428">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-428">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="169b0-429">또한 <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-429">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="169b0-430">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-430">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="169b0-431">파생 클래스에서 <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-431">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-432">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-432">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-433">이 메서드는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-433">This method is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-434">이 메서드는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-434">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-435">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-435">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-436"><see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-436">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-437">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-437">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="169b0-438">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-438">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="169b0-439">또한 <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-439">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="169b0-440">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-440">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="169b0-441">파생 클래스에서 <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-441">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="169b0-442">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-442">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="169b0-443"><see cref="E:System.Windows.Forms.Control.TextChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-443">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TextBoxBase.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-444">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-444">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="169b0-445"><see cref="T:System.Windows.Forms.Padding" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-445">A <see cref="T:System.Windows.Forms.Padding" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-446">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-446">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-447">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-447">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-448">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-448">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-449">컨트롤을 다시 그리면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-449">Occurs when the control is redrawn.</span></span> <span data-ttu-id="169b0-450">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-450">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-451">이 이벤트는 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-451">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-452">텍스트 상자에서 현재 선택한 내용을 **클립보드**의 내용으로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-452">Replaces the current selection in the text box with the contents of the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-453"><xref:System.Windows.Forms.TextBoxBase.Paste%2A> 메서드는 붙여넣기만 텍스트 컨트롤에 텍스트에 현재 저장 된 경우는 **클립보드**합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-453">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-454">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-454">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-455">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-455">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-456">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-456">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="169b0-457">읽기 위한 합니다 **클립보드**합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-457">for reading from the **Clipboard**.</span></span> <span data-ttu-id="169b0-458">연관 된 열거형: 합니다 <see langword="AllClipboard" /> 의 값 <see cref="T:System.Security.Permissions.UIPermissionClipboard" />합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-458">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-459">텍스트 상자의 기본 설정 높이를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-459">Gets the preferred height for a text box.</span></span></summary>
        <value><span data-ttu-id="169b0-460">텍스트 상자의 기본 설정 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-460">The preferred height of a text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-461">이 속성에 의해 반환 되는 크기는 입력란의 글꼴 높이 테두리 스타일을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-461">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="169b0-462">컨트롤의 텍스트가 제대로 표시 되는지 확인 하려면 입력란의 적절 한 크기를 확인 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-462">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="169b0-463">이 속성에 의해 반환 되는 값은 픽셀에서입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-463">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="169b0-464">변수의 <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> 입력란 위쪽 이나 아래쪽에 있는 텍스트 클리핑 없이 한 줄 텍스트를 표시 하기 위해 있어야 합니다. 최소 높이 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-464">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="169b0-465">이 값이 같은지 여부를 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 속성이로 설정 되어 `true` 또는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-465">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="169b0-466">처리할 창 메시지를 나타내는 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-466">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="169b0-467">처리할 바로 가기 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-467">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span></span></param>
        <summary><span data-ttu-id="169b0-468">명령 키를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-468">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="169b0-469">컨트롤에 의해 명령 키가 처리되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-469"><see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="169b0-470">에 관리 되지 않는 코드를 사용 하 여 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-470">for operating with unmanaged code.</span></span> <span data-ttu-id="169b0-471">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="169b0-471">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="169b0-472">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-472">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="169b0-473">대화 상자 키를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-473">Processes a dialog key.</span></span></summary>
        <returns><span data-ttu-id="169b0-474">컨트롤이 키를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-474"><see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-475">텍스트 상자의 텍스트가 읽기 전용인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-475">Gets or sets a value indicating whether text in the text box is read-only.</span></span></summary>
        <value><span data-ttu-id="169b0-476">텍스트 상자가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-476"><see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="169b0-477">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-477">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-478">이 속성 설정 된 경우 `true`, 런타임 시 사용자가 컨트롤의 내용을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-478">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="169b0-479">이 속성 설정 하 여 `true`의 값을 설정할 수 있습니다는 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 코드에서 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-479">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="169b0-480">컨트롤을 사용 하지 않도록 설정 하는 대신이 기능을 사용할 수는 <xref:System.Windows.Forms.Control.Enabled%2A> 콘텐츠 복사를 허용 하는 속성 및 표시 될 도구 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-480">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-481"><see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-481">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-482">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-482">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-483">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-483">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="169b0-484">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-484">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="169b0-485">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-485">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="169b0-486">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-486">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="169b0-487">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.TextBoxBase>와 같은 <xref:System.Windows.Forms.TextBox> 또는 <xref:System.Windows.Forms.TextBoxBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-487">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="169b0-488">다음 인스턴스 이름을 `TextBoxBase1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-488">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="member this.ScrollToCaret : unit -&gt; unit" Usage="textBoxBase.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-489">컨트롤의 내용을 현재 캐럿 위치까지 스크롤합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-489">Scrolls the contents of the control to the current caret position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-490">이 메서드를 사용 하면 컨트롤의 표시 영역 내에서 캐럿이 컨트롤의 내용을 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-490">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="169b0-491">캐럿은 컨트롤의 표시 영역 아래에 배치 하는 경우는 <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> 캐럿 컨트롤의 맨 아래에 표시 될 때까지 메서드는 컨트롤의 콘텐츠를 스크롤.</span><span class="sxs-lookup"><span data-stu-id="169b0-491">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="169b0-492">컨트롤의 표시 영역 위에 캐럿이 캐럿 컨트롤의 위쪽에 표시 될 때까지이 메서드는 컨트롤의 내용의 스크롤합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-492">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="169b0-493">컨트롤의 표시 영역 내에서 현재 텍스트 진입점 인지 확인 하는 여러 줄 텍스트 상자에이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-493">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-494">컨트롤에 포커스가 없는 경우 또는 캐럿 컨트롤의 표시 영역에 배치 하는 경우 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-494">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-495">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Keys> 열거형 및 <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> 캐럿으로 표시, 텍스트 삽입 지점을 항상 표시 되도록 화면의 ENTER 키를 누른 후 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-495">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="169b0-496">예제를 실행 하려면 다음 코드를 포함 하는 폼의 붙여를 <xref:System.Windows.Forms.TextBox> 이라는 컨트롤 `TextBox1` 와 <xref:System.Windows.Forms.RichTextBox> 이라는 컨트롤 `RichTextBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-496">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="169b0-497">이 예제에서는 이벤트 처리 메서드에 연결 되었는지는 <xref:System.Windows.Forms.Control.KeyDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-497">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="textBoxBase.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="169b0-498">텍스트 상자에서 현재 선택한 텍스트의 첫 번째 문자에 대한 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-498">The position of the first character in the current text selection within the text box.</span></span></param>
        <param name="length"><span data-ttu-id="169b0-499">선택할 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-499">The number of characters to select.</span></span></param>
        <summary><span data-ttu-id="169b0-500">텍스트 상자의 텍스트 범위를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-500">Selects a range of text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-501">컨트롤의 텍스트에서 첫 번째 문자로 시작 위치를 설정 하려는 경우 설정 된 `start` 매개 변수를 0입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-501">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="169b0-502">이 메서드를 사용 하 여 경우와 같이 텍스트의 부분 문자열을 선택 하려면 컨트롤의 텍스트를 검색 하 고 정보를 바꾸는 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-502">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-503">설정 하 여 입력란 내에서 캐럿을 프로그래밍 방식으로 이동할 수는 `start` 캐럿을 이동 하 고 설정 하려는 텍스트 상자 내에서 위치 매개 변수는 `length` 매개 변수 값을 영 (0).</span><span class="sxs-lookup"><span data-stu-id="169b0-503">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="169b0-504">캐럿을 이동 하기 위해 텍스트 상자에 포커스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-504">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-505">이 메서드가 매개 변수 없이 호출 되는 다른 방법을 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-505">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="169b0-506">이 대체 방법에서 상속 된 <xref:System.Windows.Forms.Control> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-506">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="169b0-507">를 호출 하면 컨트롤에 입력된 포커스를 설정 하 고 컨트롤의 내용을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-507">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="169b0-508">자세한 내용은 <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="169b0-508">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-509">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 파생 클래스에서 단어 "fox"의 인스턴스에 대 한 컨트롤의 내용을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-509">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="169b0-510">하는 경우, 코드 단어 선택 사용 하 여 컨트롤을 <xref:System.Windows.Forms.TextBoxBase.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="169b0-510">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="169b0-511">이 예제에서는 <xref:System.Windows.Forms.TextBox> 라는 `textBox1` 만들었습니다 고 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 속성에 "The quick brown fox jumps over the lazy dog." 이라는 문장이 포함</span><span class="sxs-lookup"><span data-stu-id="169b0-511">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="169b0-512"><paramref name="start" /> 매개 변수 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="169b0-512">The value of the <paramref name="start" /> parameter is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-513">텍스트 상자의 모든 텍스트를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-513">Selects all text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-514">이 메서드를 사용 하면 컨트롤 내에서 모든 텍스트를 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-514">This method enables you to select all text within the control.</span></span> <span data-ttu-id="169b0-515">이 메서드를 사용 하 여 함께에서 <xref:System.Windows.Forms.TextBoxBase.Cut%2A> 텍스트를를 컨트롤의 전체 콘텐츠를 잘라내고 붙여 넣으면 컨트롤에서 선택 해야 하는 메서드를 **클립보드**합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-515">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-516">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 모든 텍스트 컨트롤에서 선택 됩니다 확인 하려면 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-516">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="169b0-517">호출 하려고 선택한 텍스트가 없는 경우는 <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> 컨트롤의 콘텐츠를 복사 하기 전에 메서드를 **클립보드**합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-517">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="169b0-518">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 명명 된 만들었습니다 `textBox1`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-518">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-519">컨트롤에서 현재 선택한 텍스트를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-519">Gets or sets a value indicating the currently selected text in the control.</span></span></summary>
        <value><span data-ttu-id="169b0-520">텍스트 상자에서 현재 선택한 텍스트를 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-520">A string that represents the currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-521">텍스트 상자에서 현재 선택한 텍스트를 변경 하려면이 속성에 텍스트를 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-521">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="169b0-522">텍스트 상자에 선택은 현재 텍스트가 없으면이 속성에 길이가 0 인 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-522">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-523">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-523">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-524">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-524">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-525">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-525">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-526">텍스트 상자에서 선택한 문자 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-526">Gets or sets the number of characters selected in the text box.</span></span></summary>
        <value><span data-ttu-id="169b0-527">텍스트 상자에서 선택한 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-527">The number of characters selected in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-528">경우 문자가 현재 선택 된 텍스트 상자 컨트롤에서 선택한 텍스트에 대 한 작업을 수행 하기 전에 확인 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-528">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="169b0-529">때의 값을 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 속성의 값을 컨트롤의 텍스트 내에서 문자 수보다 큰 값으로는 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 는값을뺀컨트롤내에서텍스트의전체길이속성<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>속성 (모든 값을 지정 하는 경우는 <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="169b0-529">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-530">설정 하 여 입력란 내에서 캐럿을 프로그래밍 방식으로 이동할 수 있습니다는 <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> 캐럿을 이동 하 고 설정 하려는 텍스트 상자 내에서 위치를 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 영 (0) 값으로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-530">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="169b0-531">캐럿을 이동 하기 위해 텍스트 상자에 포커스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-531">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-532">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-532">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-533">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-533">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-534">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-534">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="169b0-535">할당된 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="169b0-535">The assigned value is less than zero.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-536">텍스트 상자에서 선택한 텍스트의 시작 지점을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-536">Gets or sets the starting point of text selected in the text box.</span></span></summary>
        <value><span data-ttu-id="169b0-537">텍스트 상자에서 선택한 텍스트의 시작 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-537">The starting position of text selected in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-538">컨트롤에서 선택 된 텍스트가이 속성에서 삽입 지점 또는 캐럿을 새 텍스트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-538">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="169b0-539">컨트롤에서 텍스트의 길이 넘어서 위치로이 속성을 설정 하는 경우 선택 시작 위치를 마지막 문자 뒤에 놓입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-539">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="169b0-540">이 속성을 변경의 값을 줄이려면 수 텍스트를 텍스트 상자 컨트롤에서 선택 하는 경우는 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-540">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="169b0-541">위치 후 컨트롤의 나머지 텍스트에 나타난 경우는 <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> 속성의 값 보다 작습니다 합니다 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 속성, 값은 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 속성은 자동으로 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-541">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="169b0-542">값을 <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> 속성에서 증가 생성 하지 않습니다는 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-542">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="169b0-543">설정 하 여 선택한 입력란 내에서 프로그래밍 방식으로 이동할 수 있습니다 합니다 <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> 하며 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-543">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="169b0-544">설정 하 여 입력란 내에서 캐럿을 프로그래밍 방식으로 이동할 수 있습니다는 <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> 캐럿을 이동 하 고 설정 하려는 텍스트 상자 내에서 위치를 <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> 영 (0) 값으로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-544">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="169b0-545"><xref:System.Windows.Forms.TextBox> 이동할 선택 영역 또는 캐럿에 대 한 순서에 포커스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-545">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="169b0-546">설정할 수 있습니다는 <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> 의 속성을 <xref:System.Windows.Forms.TextBox> 즉 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> 지정 하 여는 <xref:System.Windows.Forms.Control.Focus%2A> 첫 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-546">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-547">**예제 1**</span><span class="sxs-lookup"><span data-stu-id="169b0-547">**Example 1**</span></span>  
  
 <span data-ttu-id="169b0-548">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-548">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-549">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-549">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-550">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-550">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="169b0-551">**예제 2**</span><span class="sxs-lookup"><span data-stu-id="169b0-551">**Example 2**</span></span>  
  
 <span data-ttu-id="169b0-552">다음 예제에서는 합니다 <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> 의 속성을 <xref:System.Windows.Forms.TextBox> 즉 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> 지정 하 여는 <xref:System.Windows.Forms.Control.Focus%2A> 첫 번째 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-552">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="169b0-553">할당된 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="169b0-553">The assigned value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="textBoxBase.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="169b0-554">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Left" /> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-554">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="169b0-555">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Top" /> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-555">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="169b0-556">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Width" /> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-556">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="169b0-557">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-557">Not used.</span></span></param>
        <param name="specified"><span data-ttu-id="169b0-558"><see cref="T:System.Windows.Forms.BoundsSpecified" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-558">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="169b0-559"><see cref="T:System.Windows.Forms.TextBoxBase" /> 컨트롤의 지정된 범위를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-559">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-560"><xref:System.Windows.Forms.TextBoxBase> 컨트롤이 사용 하는 <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> 범위를 설정 하는 경우 속성을 <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> 속성은 `true` 및 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 속성은 `false`.</span><span class="sxs-lookup"><span data-stu-id="169b0-560">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="169b0-561">에 포함 되지 않은 범위에 해당 하는 매개 변수가 일반적으로 `specified` 매개 변수는 현재 값과 함께 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-561">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="169b0-562">예를 들어, 합니다 <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, 또는 <xref:System.Drawing.Point.X%2A> 또는 <xref:System.Drawing.Point.Y%2A> 의 속성을 <xref:System.Windows.Forms.Control.Location%2A> 컨트롤의 현재 인스턴스에 대 한 참조를 사용 하 여 로그인 속성을 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-562">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="169b0-563">하지만 전달 된 모든 값 적용 하 고 컨트롤에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-563">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="169b0-564">합니다 `specified` 매개 변수는 컨트롤의 요소를 나타냅니다 <xref:System.Windows.Forms.Control.Bounds%2A> 애플리케이션에서 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-564">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="169b0-565">예를 들어, 변경 하는 경우는 <xref:System.Windows.Forms.Control.Size%2A> 컨트롤의 합니다 `specified` 매개 변수 값이를 `Size` 의 값 <xref:System.Windows.Forms.BoundsSpecified>합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-565">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="169b0-566">그러나 경우는 <xref:System.Windows.Forms.Control.Size%2A> 대 한 응답으로 조정 하는 <xref:System.Windows.Forms.Control.Dock%2A> 설정 되는 속성을 `specified` 매개 변수 값이를 `None` 값 <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="169b0-566">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="169b0-567">재정의 하는 경우 <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> 메서드를 변경 하려면 컨트롤의 범위를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-567">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span></span> <span data-ttu-id="169b0-568">파생된 클래스에 대 한 크기 제한을 추가할 수는 <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="169b0-568">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-569">정의된 바로 가기를 사용할지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-569">Gets or sets a value indicating whether the defined shortcuts are enabled.</span></span></summary>
        <value><span data-ttu-id="169b0-570">바로 가기를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-570"><see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-571">사용 된 <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> 속성을 사용 하도록 설정 하거나 다음 바로 가기 키 조합 및 컨트롤의 바로 가기 메뉴를 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-571">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control's shortcut menu:</span></span>  
  
-   <span data-ttu-id="169b0-572">Ctrl+Z</span><span class="sxs-lookup"><span data-stu-id="169b0-572">CTRL+Z</span></span>  
  
-   <span data-ttu-id="169b0-573">Ctrl+E</span><span class="sxs-lookup"><span data-stu-id="169b0-573">CTRL+E</span></span>  
  
-   <span data-ttu-id="169b0-574">Ctrl+C</span><span class="sxs-lookup"><span data-stu-id="169b0-574">CTRL+C</span></span>  
  
-   <span data-ttu-id="169b0-575">Ctrl+Y</span><span class="sxs-lookup"><span data-stu-id="169b0-575">CTRL+Y</span></span>  
  
-   <span data-ttu-id="169b0-576">Ctrl+X</span><span class="sxs-lookup"><span data-stu-id="169b0-576">CTRL+X</span></span>  
  
-   <span data-ttu-id="169b0-577">Ctrl+백스페이스</span><span class="sxs-lookup"><span data-stu-id="169b0-577">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="169b0-578">Ctrl+V</span><span class="sxs-lookup"><span data-stu-id="169b0-578">CTRL+V</span></span>  
  
-   <span data-ttu-id="169b0-579">Ctrl+Delete</span><span class="sxs-lookup"><span data-stu-id="169b0-579">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="169b0-580">Ctrl+A</span><span class="sxs-lookup"><span data-stu-id="169b0-580">CTRL+A</span></span>  
  
-   <span data-ttu-id="169b0-581">SHIFT + DELETE</span><span class="sxs-lookup"><span data-stu-id="169b0-581">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="169b0-582">Ctrl+L</span><span class="sxs-lookup"><span data-stu-id="169b0-582">CTRL+L</span></span>  
  
-   <span data-ttu-id="169b0-583">SHIFT + INSERT</span><span class="sxs-lookup"><span data-stu-id="169b0-583">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="169b0-584">Ctrl+R</span><span class="sxs-lookup"><span data-stu-id="169b0-584">CTRL+R</span></span>  
  
 <span data-ttu-id="169b0-585">기타 바로 가기 키를 지정 하려면이 속성을 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-585">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBoxBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-586">텍스트 상자에서 현재 텍스트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-586">Gets or sets the current text in the text box.</span></span></summary>
        <value><span data-ttu-id="169b0-587">컨트롤에 표시된 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-587">The text displayed in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-588">여러 줄 텍스트의 텍스트 상자에 표시할 설정 합니다 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-588">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="169b0-589">읽기 사용 하거나 여러 줄 텍스트 상자의 텍스트를 설정 하려면 사용 된 <xref:System.Windows.Forms.TextBoxBase.Lines%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-589">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="169b0-590">에 입력할 수 있는 텍스트의 크기는 <xref:System.Windows.Forms.RichTextBox> 컨트롤 사용 가능한 시스템 메모리에 의해서만 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-590">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-591">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 파생 클래스를 여러 줄을 만들려면 <xref:System.Windows.Forms.TextBox> 세로 스크롤 막대를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-591">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="169b0-592">또한이 예제에서는 합니다 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, 및 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 속성을 여러 줄 텍스트 상자 컨트롤을 텍스트 문서를 만드는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-592">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-593">컨트롤의 텍스트 길이를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-593">Gets the length of text in the control.</span></span></summary>
        <value><span data-ttu-id="169b0-594">컨트롤의 텍스트에 포함된 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-594">The number of characters contained in the text of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-595">문자의 총 수에 대 한 지식이 필요한 특정 컨트롤의 텍스트 내에서 텍스트 문자열을 검색 하는 등 작업에 대 한 문자열의 문자 수를 확인 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-595">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-596">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> 메서드 및 <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> 하나에서 텍스트를 복사 하는 속성 <xref:System.Windows.Forms.TextBox> 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-596">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="169b0-597">이 예제에서는 두 개의 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 하 고 `textBox2`를 폼에 추가 되었습니다 `textBox1` 에 할당 된 텍스트에 해당 <xref:System.Windows.Forms.Control.Text%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-597">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textBoxBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-598"><see cref="T:System.Windows.Forms.TextBoxBase" /> 컨트롤을 나타내는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-598">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span></span></summary>
        <returns><span data-ttu-id="169b0-599">현재 <see cref="T:System.Windows.Forms.TextBoxBase" />을(를) 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-599">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span></span> <span data-ttu-id="169b0-600">문자열에는 컨트롤의 형식과 <see cref="T:System.Windows.Forms.TextBoxBase" /> 속성이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-600">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="169b0-601">텍스트 상자의 마지막 편집 작업을 실행 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-601">Undoes the last edit operation in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-602">이 메서드는 마지막 실행 취소 됩니다 **클립보드** 하거나 텍스트 변경 하는 경우 텍스트 상자 컨트롤에서 수행한 작업을 <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> 속성에서 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-602">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-603">합니다 <xref:System.Windows.Forms.TextBoxBase.Undo%2A> 메서드는 사용 하지 않고 합니다 <xref:System.Windows.Forms.Control.KeyPress> 또는 <xref:System.Windows.Forms.Control.TextChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-603">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-604">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 클래스를 파생 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-604">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="169b0-605">쉽게 <xref:System.Windows.Forms.MenuItem.Click> 에 대 한 이벤트 처리기 <xref:System.Windows.Forms.MenuItem> 잘라내기, 복사, 붙여넣기 및 실행 취소 작업을 수행 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-605">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="169b0-606">이 예제에서는 한 <xref:System.Windows.Forms.TextBox> 라는 컨트롤 `textBox1` 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-606">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBoxBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="169b0-607">처리할 Windows <see cref="T:System.Windows.Forms.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-607">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="169b0-608">Windows 메시지를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-608">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="169b0-609">필요한 경우 여러 줄을 입력할 수 있는 TextBox 컨트롤이 다음 줄의 처음 부분으로 줄 바꿈하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-609">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span></span></summary>
        <value><span data-ttu-id="169b0-610">여러 줄을 입력할 수 있는 TextBox 컨트롤에서 줄 바꿈되면 <see langword="true" />이고, 컨트롤의 오른쪽 가장자리를 초과하여 입력할 때 TextBox 컨트롤이 자동으로 가로 방향으로 스크롤하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-610"><see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span></span> <span data-ttu-id="169b0-611">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-611">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="169b0-612">이 속성 설정 된 경우 `true`에 관계 없이 가로 스크롤 막대가 표시 되지 않으면를 <xref:System.Windows.Forms.TextBox.ScrollBars%2A> 속성 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-612">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="169b0-613">파생된 클래스에서 <xref:System.Windows.Forms.TextBox>, 경우가 아니면이 속성의 속성 설정에 관계 없이 항상 컨트롤 내의 텍스트는 래핑합니다 합니다 <xref:System.Windows.Forms.TextBox.TextAlign%2A> 속성이 `HorizontalAlignment.Left`합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-613">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="169b0-614">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>, 파생 클래스를 여러 줄을 만들려면 <xref:System.Windows.Forms.TextBox> 세로 스크롤 막대를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-614">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="169b0-615">또한이 예제에서는 합니다 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, 및 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 속성을 여러 줄 텍스트 상자 컨트롤을 텍스트 문서를 만드는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="169b0-615">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>