<Type Name="LinkLabel" FullName="System.Windows.Forms.LinkLabel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4df2ed6641d161a0102df8a7d4c1c43a7199492f" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57944950" /></Metadata><TypeSignature Language="C#" Value="public class LinkLabel : System.Windows.Forms.Label, System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkLabel extends System.Windows.Forms.Label implements class System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkLabel" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkLabel&#xA;Inherits Label&#xA;Implements IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinkLabel : System::Windows::Forms::Label, System::Windows::Forms::IButtonControl" />
  <TypeSignature Language="F#" Value="type LinkLabel = class&#xA;    inherit Label&#xA;    interface IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Label</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("LinkClicked")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="271b7-101">하이퍼링크를 표시할 수 있는 Windows 레이블 컨트롤을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-101">Represents a Windows label control that can display hyperlinks.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-102">합니다 <xref:System.Windows.Forms.ToolStripLabel> 컨트롤이 대체 하 고 기능을 추가 합니다 <xref:System.Windows.Forms.Label> 및 <xref:System.Windows.Forms.LinkLabel> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-102">The <xref:System.Windows.Forms.ToolStripLabel> control replaces and adds functionality to the <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.LinkLabel> controls.</span></span> <span data-ttu-id="271b7-103">그러나 합니다 <xref:System.Windows.Forms.Label> 및 <xref:System.Windows.Forms.LinkLabel> 컨트롤을 선택 하면 이전 버전과 호환성 및 향후 사용을 위해 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-103">However, the <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.LinkLabel> controls are retained for both backward compatibility and future use, if you choose.</span></span>  
  
 <span data-ttu-id="271b7-104"><xref:System.Windows.Forms.LinkLabel> 제어는 비슷합니다는 <xref:System.Windows.Forms.Label> 하이퍼링크를 표시할 수는 예외를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-104">The <xref:System.Windows.Forms.LinkLabel> control is similar to a <xref:System.Windows.Forms.Label> control with the exception that it can display a hyperlink.</span></span> <span data-ttu-id="271b7-105">컨트롤의 텍스트에 여러 개의 하이퍼링크를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-105">Multiple hyperlinks can be specified in the text of the control.</span></span> <span data-ttu-id="271b7-106">각 hyperlink 응용 프로그램 내에서 다른 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-106">Each hyperlink can perform a different task within an application.</span></span> <span data-ttu-id="271b7-107">예를 들어, 응용 프로그램을 사용 하 여 연결 된 로그 파일을 로드 또는 Microsoft Internet Explorer에서 웹 사이트를 표시 하려면 하이퍼링크를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-107">For example, you can use a hyperlink to display a Web site in Microsoft Internet Explorer or to load a log file associated with an application.</span></span>  
  
 <span data-ttu-id="271b7-108">에 표시 되는 각 하이퍼링크를 <xref:System.Windows.Forms.LinkLabel> 컨트롤은의 인스턴스는 <xref:System.Windows.Forms.LinkLabel.Link> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-108">Each hyperlink displayed in the <xref:System.Windows.Forms.LinkLabel> control is an instance of the <xref:System.Windows.Forms.LinkLabel.Link> class.</span></span> <span data-ttu-id="271b7-109"><xref:System.Windows.Forms.LinkLabel.Link> 클래스 정보를 표시, 상태 및 하이퍼링크의 위치를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-109">The <xref:System.Windows.Forms.LinkLabel.Link> class defines display information, state, and location of the hyperlink.</span></span> <span data-ttu-id="271b7-110">또한 합니다 <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> 의 속성을 <xref:System.Windows.Forms.LinkLabel.Link> 클래스를 사용 하는 URL 하이퍼링크를 사용 하 여 표시 등의 정보에 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-110">In addition, the <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> property of the <xref:System.Windows.Forms.LinkLabel.Link> class enables you to associate information, such as a URL to display, with the hyperlink.</span></span> <span data-ttu-id="271b7-111">컨트롤 내의 하이퍼링크를 클릭할 때 합니다 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 이벤트가 발생 하며 <xref:System.Windows.Forms.LinkLabel.Link> 의 일부로 전달 되는 클릭 된 하이퍼링크를 나타내는 개체를 <xref:System.Windows.Forms.LinkLabelLinkClickedEventArgs> 이벤트 처리기에 매개 변수로 전달 되는 개체.</span><span class="sxs-lookup"><span data-stu-id="271b7-111">When a user clicks a hyperlink within the control, the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event is raised, and the <xref:System.Windows.Forms.LinkLabel.Link> object representing the hyperlink that was clicked is passed as part of the <xref:System.Windows.Forms.LinkLabelLinkClickedEventArgs> object that is passed as a parameter to the event handler.</span></span> <span data-ttu-id="271b7-112">이 개체를 사용 하 여 가져올 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.Link> 사용자가 클릭 된 하이퍼링크와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-112">You can use this object to obtain the <xref:System.Windows.Forms.LinkLabel.Link> object associated with the hyperlink that was clicked by the user.</span></span> <span data-ttu-id="271b7-113">내에 포함 된 모든 하이퍼링크를 <xref:System.Windows.Forms.LinkLabel> 컨트롤에 저장 됩니다는 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 컨트롤에 대 한 클래스 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="271b7-113">All hyperlinks contained within the <xref:System.Windows.Forms.LinkLabel> control are stored in the <xref:System.Windows.Forms.LinkLabel.LinkCollection> class instance for the control.</span></span>  
  
 <span data-ttu-id="271b7-114">에 대 한 하이퍼링크를 추가 하는 방법은 두 가지는 <xref:System.Windows.Forms.LinkLabel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-114">There are two ways to add a hyperlink to the <xref:System.Windows.Forms.LinkLabel> control.</span></span> <span data-ttu-id="271b7-115">가장 빠른 방법을 지정 하는 것을 <xref:System.Windows.Forms.LinkArea> 에 할당 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="271b7-115">The quickest way is to specify a <xref:System.Windows.Forms.LinkArea> and assign it to the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property.</span></span> <span data-ttu-id="271b7-116">이 옵션을 사용 하면 컨트롤의 텍스트 내에서 하이퍼링크를 하나만 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-116">This enables you to specify a single hyperlink within the text of the control.</span></span> <span data-ttu-id="271b7-117">여러 개의 하이퍼링크를 추가 하려면 사용할 수 있습니다 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> 메서드를 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 클래스를 통해 컬렉션에 액세스 하 여는 <xref:System.Windows.Forms.LinkLabel.Links%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-117">To add multiple hyperlinks, you can use the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> method of the <xref:System.Windows.Forms.LinkLabel.LinkCollection> class by accessing the collection through the <xref:System.Windows.Forms.LinkLabel.Links%2A> property.</span></span>  
  
 <span data-ttu-id="271b7-118">경우는 <xref:System.Windows.Forms.LinkLabel> 내에서 모든 텍스트를 포함 하는 기본 하이퍼링크 컨트롤이 만들어진 합니다 <xref:System.Windows.Forms.LinkLabel> 컨트롤을 추가할는 <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span><span class="sxs-lookup"><span data-stu-id="271b7-118">When a <xref:System.Windows.Forms.LinkLabel> control is created, a default hyperlink that contains all the text within the <xref:System.Windows.Forms.LinkLabel> control is added to the <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span></span> <span data-ttu-id="271b7-119">이 기본 링크를 사용 하 여 새 링크 영역을 지정 하 여 재정의할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 속성을 사용 하 여 링크 지정 또는 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> 메서드의 <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span><span class="sxs-lookup"><span data-stu-id="271b7-119">You can override this default link by specifying a new link area with the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property, or specify a link using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> method of the <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span></span> <span data-ttu-id="271b7-120">사용 하 여 기본 하이퍼링크를 제거할 수도 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> 메서드는 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-120">You can also remove the default hyperlink by using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> method of the <xref:System.Windows.Forms.LinkLabel.LinkCollection> class.</span></span>  
  
 <span data-ttu-id="271b7-121">합니다 <xref:System.Windows.Forms.Label.TabStop%2A> 속성은 `true` 기본적으로 길이가 0 보다 큰 하나 이상의 링크가 하기만 합니다 <xref:System.Windows.Forms.LinkLabel.Links%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-121">The <xref:System.Windows.Forms.Label.TabStop%2A> property is `true` by default, as long as there is at least one link of greater than zero length in the <xref:System.Windows.Forms.LinkLabel.Links%2A> collection.</span></span> <span data-ttu-id="271b7-122">합니다 <xref:System.Windows.Forms.LinkLabel> 컨트롤에는 단일 <xref:System.Windows.Forms.Control.TabIndex%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-122">The <xref:System.Windows.Forms.LinkLabel> control has a single <xref:System.Windows.Forms.Control.TabIndex%2A> value.</span></span> <span data-ttu-id="271b7-123">그러나 길이가 0 보다 큰 각 링크는 왼쪽에서 오른쪽 순서로 자체 탭 정지를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-123">However, each link of greater than zero length gets its own tab stop, in left-to-right order.</span></span> <span data-ttu-id="271b7-124">탭 탐색을 방지 하는 <xref:System.Windows.Forms.LinkLabel> 컨트롤을 <xref:System.Windows.Forms.Label.TabStop%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-124">To prevent tab navigation to the <xref:System.Windows.Forms.LinkLabel> control, set the <xref:System.Windows.Forms.Label.TabStop%2A> property to `false`.</span></span> <span data-ttu-id="271b7-125">그러나에 새 링크를 추가 합니다 <xref:System.Windows.Forms.LinkLabel.Links%2A> 컬렉션은 자동으로 설정 합니다 <xref:System.Windows.Forms.Label.TabStop%2A> 속성을 `true` 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-125">However, be aware that adding new links to the <xref:System.Windows.Forms.LinkLabel.Links%2A> collection will automatically set the <xref:System.Windows.Forms.Label.TabStop%2A> property to `true` again.</span></span>  
  
 <span data-ttu-id="271b7-126"><xref:System.Windows.Forms.LinkLabel> 다양 한 컨트롤의 하이퍼링크의 표시 모양을 정의할 수 있도록 하는 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-126">The <xref:System.Windows.Forms.LinkLabel> provides a number of properties that enable you to define the display appearance of hyperlinks in the control.</span></span> <span data-ttu-id="271b7-127">합니다 <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 속성 다양 한 상태에서 하이퍼링크를 표시할 때 사용 되는 색을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-127">The <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties define the colors used when displaying a hyperlink in various states.</span></span> <span data-ttu-id="271b7-128"><xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> 속성 하이퍼링크와 연결 된 밑줄 표시를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-128">The <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> property defines the display of the underline that is associated with a hyperlink.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-129">다음 예제는 <xref:System.Windows.Forms.LinkLabel> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-129">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class.</span></span> <span data-ttu-id="271b7-130">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 웹 사이트를 열어 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-130">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by opening a Web site.</span></span>  
  
 [!code-csharp[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/CS/form.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/VB/form.vb#1)]  
  
 <span data-ttu-id="271b7-131">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-131">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-132">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-132">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-133">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-133">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-134">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-134">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-135">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-135">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Label" />
    <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.Link" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
    <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkLabel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="271b7-136"><see cref="T:System.Windows.Forms.LinkLabel" /> 클래스의 새로운 기본 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-136">Initializes a new default instance of the <see cref="T:System.Windows.Forms.LinkLabel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="271b7-137">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-137">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-138">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-138">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-139">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-139">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-140">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-140">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-141">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-141">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ActiveLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ActiveLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ActiveLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.ActiveLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-142">활성 링크를 표시하는데 사용된 색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-142">Gets or sets the color used to display an active link.</span></span></summary>
        <value><span data-ttu-id="271b7-143">활성 링크를 표시할 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-143">A <see cref="T:System.Drawing.Color" /> that represents the color to display an active link.</span></span> <span data-ttu-id="271b7-144">기본 색은 시스템에서 지정되는 <see langword="Color.Red" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-144">The default color is specified by the system, typically this color is <see langword="Color.Red" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-145">활성 링크를 클릭 하 고 있는 링크를입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-145">An active link is a link that is in the process of being clicked.</span></span> <span data-ttu-id="271b7-146">눌러진된 상태 비슷합니다는 <xref:System.Windows.Forms.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-146">This is similar to the depressed state of a <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="271b7-147">이 속성을 사용 하 여 링크 하는 동안 클릭 중인 링크에 표시 되는 색을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-147">You can use this property to specify the color that the link is displayed in when the link is in the process of being clicked.</span></span>  
  
 <span data-ttu-id="271b7-148">링크와 관련 된 색의 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-148">There are a number of colors associated with a link.</span></span> <span data-ttu-id="271b7-149">합니다 <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> 에 표시 된 모든 링크의 색을 지정 합니다 <xref:System.Windows.Forms.LinkLabel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-149">The <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> specifies the color of all links displayed in the <xref:System.Windows.Forms.LinkLabel> control.</span></span> <span data-ttu-id="271b7-150"><xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 속성을 사용 하면 사용자가 방문한 후 링크의 색을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-150">The <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> property enables you to specify the color of a link after it has been visited by the user.</span></span> <span data-ttu-id="271b7-151">링크를 사용 하지 않도록 설정 하는 경우는 <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> 사용 안 함 상태의 링크를 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-151">When a link is disabled, the <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> is used to display the link in a disabled state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="271b7-152">이 속성을 설정할 때 되도록 색 설정한 컨트롤의 배경색을 사용 하 여 충돌 하지 않는 속성의 텍스트가 제대로 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-152">When setting this property, ensure that the color you are setting the property to does not conflict with the color of the control's background or the text does not display properly.</span></span> <span data-ttu-id="271b7-153">예를 들어 컨트롤의 배경색 `Color.Red` 이 속성을 설정 하 고 `Color.Red`, 클릭 되 고 링크의 경우 텍스트를 제대로 다루지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-153">For example, if the background color of the control is `Color.Red` and this property is set to `Color.Red`, the text is not shown properly when the link is in the process of being clicked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-154">다음 예제에서는 설정 합니다 <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> 사용 하 여 속성을 <xref:System.Windows.Forms.LinkBehavior> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-154">The following example demonstrates setting the <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> property using the <xref:System.Windows.Forms.LinkBehavior> enumeration.</span></span> <span data-ttu-id="271b7-155">설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> 및 <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-155">It also demonstrates setting the <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> and <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> properties.</span></span> <span data-ttu-id="271b7-156">실행 하려면이 샘플에 붙여 빈 양식 및 호출 `InitializeLinkLabel` 폼의 생성자에서 또는 `Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-156">To run this sample paste it in a blank form and call `InitializeLinkLabel` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="linkLabel.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="271b7-157"><see cref="T:System.Windows.Forms.LinkLabel" /> 컨트롤의 액세스 가능성 개체를 새로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-157">Creates a new accessibility object for the <see cref="T:System.Windows.Forms.LinkLabel" /> control.</span></span></summary>
        <returns><span data-ttu-id="271b7-158">컨트롤의 새로운 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-158">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-159"><xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> 메서드를 명시적으로 호출하지 않으면 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 속성을 참조할 때 이 메서드가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-159">If you do not explicitly call the <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.</span></span>  
  
 <span data-ttu-id="271b7-160">참고: <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 속성을 가져오거나 설정하려면 .NET Framework와 함께 설치된 액세스 가능성 어셈블리에 대한 참조를 추가해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-160">Note: To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the Accessibility assembly installed with the .NET Framework.</span></span>  
  
 <span data-ttu-id="271b7-161">상속자 참고 사항: 재정의 하는 경우 <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> 파생된 클래스에서 호출 하지 않아야 기본 클래스의 <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-161">Notes to Inheritors: When overriding <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> in a derived class, you should not call the base class's <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="linkLabel.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="271b7-162">이 컨트롤의 핸들을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-162">Creates a handle for this control.</span></span> <span data-ttu-id="271b7-163">이 메서드는 .NET Framework에 의해 호출되지만 호출하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-163">This method is called by the .NET Framework, this should not be called.</span></span> <span data-ttu-id="271b7-164">상속하는 클래스는 이 메서드를 재정의할 때 항상 <see langword="base.createHandle" />을 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-164">Inheriting classes should always call <see langword="base.createHandle" /> when overriding this method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisabledLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color DisabledLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color DisabledLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property DisabledLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color DisabledLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.DisabledLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-165">사용할 수 없는 링크를 표시할 때 사용된 색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-165">Gets or sets the color used when displaying a disabled link.</span></span></summary>
        <value><span data-ttu-id="271b7-166">사용할 수 없는 링크를 표시할 때 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-166">A <see cref="T:System.Drawing.Color" /> that represents the color when displaying a disabled link.</span></span> <span data-ttu-id="271b7-167">기본값은 <see langword="Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-167">The default is <see langword="Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-168">이 속성을 사용 하면에서 비활성화 된 링크의 색을 지정할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-168">This property enables you to specify the color for links that are disabled in the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-169">비활성된 링크 하지 않게 된 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 이벤트를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-169">Disabled links do not cause the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event to be raised.</span></span>  
  
 <span data-ttu-id="271b7-170">링크와 관련 된 색의 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-170">There are a number of colors associated with a link.</span></span> <span data-ttu-id="271b7-171">모든 링크는 <xref:System.Windows.Forms.LinkLabel> 에 정의 된 색을 사용 하 여 처음에 표시 되는 <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="271b7-171">All links in the <xref:System.Windows.Forms.LinkLabel> are initially displayed with the color defined in the <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> property.</span></span> <span data-ttu-id="271b7-172"><xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> 속성을 사용 하면 클릭 되는 경우 링크의 색을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-172">The <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> property enables you to specify the color of the link when it is in the process of being clicked.</span></span> <span data-ttu-id="271b7-173"><xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 속성을 사용 하면 사용자가 방문한 후 링크의 색을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-173">The <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> property enables you to specify the color of a link after it has been visited by the user.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="271b7-174">이 속성을 설정할 때 되도록 색 설정한 컨트롤의 배경색을 사용 하 여 충돌 하지 않는 속성의 텍스트가 제대로 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-174">When setting this property, ensure that the color you are setting the property to does not conflict with the color of the control's background or the text does not display properly.</span></span> <span data-ttu-id="271b7-175">예를 들어 컨트롤의 배경색 `Color.Red` 이 속성을 설정 하 고 `Color.Red`, 링크를 비활성화 하는 경우 텍스트를 제대로 다루지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-175">For example, if the background color of the control is `Color.Red` and this property is set to `Color.Red`, the text is not shown properly when the link is disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-176">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-176">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-177">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-177">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-178">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-178">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-179">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-179">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-180">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-180">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.LinkLabel.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-181"><see cref="T:System.Windows.Forms.LinkLabel" />의 평면 스타일 모양을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-181">Gets or sets the flat style appearance of the <see cref="T:System.Windows.Forms.LinkLabel" />.</span></span></summary>
        <value><span data-ttu-id="271b7-182"><see cref="T:System.Windows.Forms.FlatStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-182">One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-183">이 속성은 이 클래스와 관련이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-183">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkArea">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkArea LinkArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LinkArea LinkArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkArea" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkArea As LinkArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkArea LinkArea { System::Windows::Forms::LinkArea get(); void set(System::Windows::Forms::LinkArea value); };" />
      <MemberSignature Language="F#" Value="member this.LinkArea : System.Windows.Forms.LinkArea with get, set" Usage="System.Windows.Forms.LinkLabel.LinkArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.LinkAreaEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.LinkAreaEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.LinkAreaEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-184">링크로 처리할 텍스트의 범위를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-184">Gets or sets the range in the text to treat as a link.</span></span></summary>
        <value><span data-ttu-id="271b7-185">링크로 처리된 영역을 나타내는 <see cref="T:System.Windows.Forms.LinkArea" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-185">A <see cref="T:System.Windows.Forms.LinkArea" /> that represents the area treated as a link.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-186">합니다 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 속성은 단일 하이퍼링크의 텍스트에 표시를 지정 하는 빠른 방법을 제공 합니다 <xref:System.Windows.Forms.LinkLabel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-186">The <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property provides a quick way to specify a single hyperlink to display in the text of the <xref:System.Windows.Forms.LinkLabel> control.</span></span> <span data-ttu-id="271b7-187"><xref:System.Windows.Forms.LinkArea> 개체는 하이퍼링크의 텍스트의 길이 컨트롤의 텍스트 내 링크 영역의 시작 위치를 지정 하는 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-187">The <xref:System.Windows.Forms.LinkArea> object provides properties that specify the starting position of the link within the text of the control and the length of text for the hyperlink.</span></span> <span data-ttu-id="271b7-188">하이퍼링크를 사용 하 여 지정 된 경우는 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 에 하이퍼링크를 추가 속성을 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 컨트롤의 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-188">When a hyperlink is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property, the hyperlink is added to the <xref:System.Windows.Forms.LinkLabel.LinkCollection> of the control.</span></span> <span data-ttu-id="271b7-189"><xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 속성으로 변환 합니다 합니다 <xref:System.Windows.Forms.LinkArea> 에 할당 된 개체는 <xref:System.Windows.Forms.LinkLabel.Link> 컬렉션 내에 저장 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-189">The <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property converts the <xref:System.Windows.Forms.LinkArea> object assigned to it to a <xref:System.Windows.Forms.LinkLabel.Link> object that is stored within the collection.</span></span>  
  
 <span data-ttu-id="271b7-190">여러 개의 하이퍼링크에 컨트롤의 텍스트를 추가 하려면 사용할 수는 <xref:System.Windows.Forms.LinkLabel.Links%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-190">To add multiple hyperlinks to the text of the control, you can use the <xref:System.Windows.Forms.LinkLabel.Links%2A> property.</span></span> <span data-ttu-id="271b7-191">합니다 <xref:System.Windows.Forms.LinkLabel.Links%2A> 속성의 메서드와 속성에 액세스할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkCollection>를 컨트롤에 대 한 지정 된 링크를 저장 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-191">The <xref:System.Windows.Forms.LinkLabel.Links%2A> property enables you to access the properties and methods of the <xref:System.Windows.Forms.LinkLabel.LinkCollection>, which stores the links specified for the control.</span></span> <span data-ttu-id="271b7-192">에 대 한 링크를 추가 하는이 메서드는 <xref:System.Windows.Forms.LinkLabel> 에 데이터를 지정할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> 만들어지는 링크와 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-192">This method of adding links to the <xref:System.Windows.Forms.LinkLabel> also enables you to specify data in the <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> property that is associated with the link being created.</span></span> <span data-ttu-id="271b7-193">값을 <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> 표시할 파일의 위치 또는 웹 사이트의 주소를 저장할 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-193">The value of the <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> property can be used to store the location of a file to display or the address of a Web site.</span></span>  
  
 <span data-ttu-id="271b7-194">경우는 <xref:System.Windows.Forms.LinkLabel> 내에서 모든 텍스트를 포함 하는 기본 하이퍼링크 컨트롤이 만들어진 합니다 <xref:System.Windows.Forms.LinkLabel> 컨트롤을 추가할는 <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span><span class="sxs-lookup"><span data-stu-id="271b7-194">When a <xref:System.Windows.Forms.LinkLabel> control is created, a default hyperlink that contains all the text within the <xref:System.Windows.Forms.LinkLabel> control is added to the <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span></span> <span data-ttu-id="271b7-195">이 기본 링크를 사용 하 여 새 링크 영역을 지정 하 여 재정의할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 속성을 사용 하 여 링크 지정 또는 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> 메서드의 <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span><span class="sxs-lookup"><span data-stu-id="271b7-195">You can override this default link by specifying a new link area with the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property, or specify a link using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> method of the <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span></span> <span data-ttu-id="271b7-196">사용 하 여 기본 하이퍼링크를 제거할 수도 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> 메서드는 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-196">You can also remove the default hyperlink by using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> method of the <xref:System.Windows.Forms.LinkLabel.LinkCollection> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="271b7-197">합니다 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 속성은 항상 첫 번째 항목을 반환 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection>컬렉션에 추가 된 하이퍼링크에 관계 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-197">The <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property always returns the first item in the <xref:System.Windows.Forms.LinkLabel.LinkCollection>, regardless of how the hyperlink was added to the collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="271b7-198">합니다 <xref:System.Windows.Forms.LinkArea.Length%2A> 속성을 <xref:System.Windows.Forms.LinkArea> 호출 하는 경우 다릅니다 <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A>, 및 <xref:System.Windows.Forms.LinkLabel.Text%2A> 더블 바이트 문자를 포함 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-198">The <xref:System.Windows.Forms.LinkArea.Length%2A> property on <xref:System.Windows.Forms.LinkArea> will differ if you call <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A>, and the <xref:System.Windows.Forms.LinkLabel.Text%2A> property contains double-byte characters.</span></span> <span data-ttu-id="271b7-199">호출 하는 경우 <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A>, 문자열의 바이트 수가 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-199">If you call <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A>, it will return the number of bytes in the string.</span></span> <span data-ttu-id="271b7-200">그렇지 않은 경우 실제 문자 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-200">Otherwise, it will return the number of actual characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-201">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-201">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-202">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-202">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-203">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-203">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-204">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-204">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-205">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-205">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="271b7-206"><see cref="P:System.Windows.Forms.LinkArea.Start" /> 개체의 <see cref="T:System.Windows.Forms.LinkArea" /> 속성이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="271b7-206">The <see cref="P:System.Windows.Forms.LinkArea.Start" /> property of the <see cref="T:System.Windows.Forms.LinkArea" /> object is less than zero.</span></span>  
  
<span data-ttu-id="271b7-207">또는</span><span class="sxs-lookup"><span data-stu-id="271b7-207">-or-</span></span> 
<span data-ttu-id="271b7-208"><see cref="P:System.Windows.Forms.LinkArea.Length" /> 개체의 <see cref="T:System.Windows.Forms.LinkArea" /> 속성이 -1보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="271b7-208">The <see cref="P:System.Windows.Forms.LinkArea.Length" /> property of the <see cref="T:System.Windows.Forms.LinkArea" /> object is less than -1.</span></span></exception>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="LinkBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkBehavior LinkBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LinkBehavior LinkBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkBehavior As LinkBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkBehavior LinkBehavior { System::Windows::Forms::LinkBehavior get(); void set(System::Windows::Forms::LinkBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.LinkBehavior : System.Windows.Forms.LinkBehavior with get, set" Usage="System.Windows.Forms.LinkLabel.LinkBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-209">링크의 동작을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-209">Gets or sets a value that represents the behavior of a link.</span></span></summary>
        <value><span data-ttu-id="271b7-210"><see cref="T:System.Windows.Forms.LinkBehavior" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-210">One of the <see cref="T:System.Windows.Forms.LinkBehavior" /> values.</span></span> <span data-ttu-id="271b7-211">기본값은 <see langword="LinkBehavior.SystemDefault" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-211">The default is <see langword="LinkBehavior.SystemDefault" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-212">이 속성을 사용 하면 컨트롤에 표시 되는 링크의 동작을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-212">This property enables you to specify the behavior of links when they are displayed in the control.</span></span> <span data-ttu-id="271b7-213">예를 들어 마우스 포인터가 링크 위에 있는 경우에 밑줄을 사용 하 여 표시에 대 한 링크를 하려는 경우 설정할 수 있습니다이 속성 `LinkBehavior.HoverUnderline`입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-213">For example, if you want links to be displayed with an underline only when the mouse pointer is over a link, you can set this property to `LinkBehavior.HoverUnderline`.</span></span> <span data-ttu-id="271b7-214">링크와 관련 될 수 있는 동작 유형에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Forms.LinkBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-214">For more information on the types of behaviors that can be associated with a link, see <xref:System.Windows.Forms.LinkBehavior>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-215">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-215">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-216">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-216">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-217">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-217">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-218">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-218">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-219">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-219">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="271b7-220">할당된 값이 <see cref="T:System.Windows.Forms.LinkBehavior" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="271b7-220">A value is assigned that is not one of the <see cref="T:System.Windows.Forms.LinkBehavior" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.LinkBehavior" />
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LinkLabelLinkClickedEventHandler LinkClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LinkLabelLinkClickedEventHandler LinkClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.LinkLabel.LinkClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LinkClicked As LinkLabelLinkClickedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LinkLabelLinkClickedEventHandler ^ LinkClicked;" />
      <MemberSignature Language="F#" Value="member this.LinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventHandler " Usage="member this.LinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabelLinkClickedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-221">컨트롤에서 링크를 눌렀을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-221">Occurs when a link is clicked within the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-222">일반적으로 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 이벤트가 처리 되어 사용자가 컨트롤의 링크를 클릭할 때 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-222">Typically, the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event is handled to perform tasks when the user clicks on a link in the control.</span></span> <span data-ttu-id="271b7-223">에 대 한 이벤트 처리기를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 이벤트의 인스턴스가 전달 됩니다 합니다 <xref:System.Windows.Forms.LinkLabelLinkClickedEventArgs> 포함 하는 클래스를 <xref:System.Windows.Forms.LinkLabel.Link> 클릭 한 링크와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-223">The event handler for the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event is passed an instance of the <xref:System.Windows.Forms.LinkLabelLinkClickedEventArgs> class that contains a <xref:System.Windows.Forms.LinkLabel.Link> object that is associated with the link that was clicked.</span></span> <span data-ttu-id="271b7-224">에 지정 된 정보를 사용할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> 속성의 <xref:System.Windows.Forms.LinkLabel.Link> 연결을 확인 하려면 클래스를 클릭 한 또는 어떤 유형의 때 수행할 작업 링크를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-224">You can use information specified in the <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> property of <xref:System.Windows.Forms.LinkLabel.Link> class to determine which link was clicked or what type of task to perform when the link is clicked.</span></span> <span data-ttu-id="271b7-225">예를 들어 경우는 <xref:System.Windows.Forms.LinkLabel> 컨트롤에는 <xref:System.Windows.Forms.LinkLabel.Link> 으로 정의 된 개체 해당 <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> 문자열 www.microsoft.com로 설정 하는 속성에 대 한 이벤트 처리기에서이 정보를 사용할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 웹 사이트를 표시 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-225">For example, if a <xref:System.Windows.Forms.LinkLabel> control has a <xref:System.Windows.Forms.LinkLabel.Link> object defined with its <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> property set to the string www.microsoft.com, you can use this information in an event handler for the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event to display the Web site.</span></span>  
  
 <span data-ttu-id="271b7-226">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="271b7-226">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-227">다음 예제는 <xref:System.Windows.Forms.LinkLabel> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-227">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class.</span></span> <span data-ttu-id="271b7-228">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 웹 사이트를 열어 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-228">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by opening a Web site.</span></span>  
  
 [!code-csharp[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/CS/form.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/VB/form.vb#1)]  
  
 <span data-ttu-id="271b7-229">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-229">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-230">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-230">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-231">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-231">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-232">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-232">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-233">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-233">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventHandler" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-234">기본 링크를 표시할 때 사용된 색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-234">Gets or sets the color used when displaying a normal link.</span></span></summary>
        <value><span data-ttu-id="271b7-235">기본 링크를 표시하는데 사용된 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-235">A <see cref="T:System.Drawing.Color" /> that represents the color used to displaying a normal link.</span></span> <span data-ttu-id="271b7-236">기본 색은 시스템에서 지정되는 <see langword="Color.Blue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-236">The default color is specified by the system, typically this color is <see langword="Color.Blue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-237">이 속성을 사용 하면 모든 링크에 대 한 처음 표시 되는 색을 지정할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-237">This property enables you to specify the color that is initially displayed for all links in the <xref:System.Windows.Forms.LinkLabel>.</span></span>  
  
 <span data-ttu-id="271b7-238">링크와 관련 된 색의 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-238">There are a number of colors associated with a link.</span></span> <span data-ttu-id="271b7-239"><xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> 속성을 사용 하면 클릭 되는 경우 링크의 색을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-239">The <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> property enables you to specify the color of the link when it is in the process of being clicked.</span></span> <span data-ttu-id="271b7-240"><xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 속성을 사용 하면 사용자가 방문한 후 링크의 색을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-240">The <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> property enables you to specify the color of a link after it has been visited by the user.</span></span> <span data-ttu-id="271b7-241">링크를 사용 하지 않도록 설정 하는 경우는 <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> 사용 안 함 상태의 링크를 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-241">When a link is disabled, the <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> is used to display the link in a disabled state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="271b7-242">이 속성을 설정할 때 되도록 색 설정한 컨트롤의 배경색을 사용 하 여 충돌 하지 않는 속성의 텍스트가 제대로 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-242">When setting this property, ensure that the color you are setting the property to does not conflict with the color of the control's background or the text does not display properly.</span></span> <span data-ttu-id="271b7-243">예를 들어 컨트롤의 배경색 `Color.Red` 이 속성을 설정 하 고 `Color.Red`, 링크의 텍스트를 제대로 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-243">For example, if the background color of the control is `Color.Red` and this property is set to `Color.Red`, the text of the link is not shown properly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-244">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-244">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-245">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-245">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-246">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-246">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-247">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-247">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-248">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-248">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkLabel.LinkCollection Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.LinkLabel/LinkCollection Links" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As LinkLabel.LinkCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkLabel::LinkCollection ^ Links { System::Windows::Forms::LinkLabel::LinkCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Windows.Forms.LinkLabel.LinkCollection" Usage="System.Windows.Forms.LinkLabel.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+LinkCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-249"><see cref="T:System.Windows.Forms.LinkLabel" />에 들어 있는 링크의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-249">Gets the collection of links contained within the <see cref="T:System.Windows.Forms.LinkLabel" />.</span></span></summary>
        <value><span data-ttu-id="271b7-250"><see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" /> 컨트롤에 들어 있는 링크를 나타내는 <see cref="T:System.Windows.Forms.LinkLabel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-250">A <see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" /> that represents the links contained within the <see cref="T:System.Windows.Forms.LinkLabel" /> control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-251"><xref:System.Windows.Forms.LinkLabel> 컨트롤 개수에 관계 없이 컨트롤의 텍스트 내에서 링크를 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-251">A <xref:System.Windows.Forms.LinkLabel> control can display any number of links within the text of the control.</span></span> <span data-ttu-id="271b7-252">이 속성을 사용 하면 액세스할 수 있습니다 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 와 연결 된 인스턴스는 <xref:System.Windows.Forms.LinkLabel> 컨트롤에 표시 된 링크의 컬렉션을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-252">This property enables you to access the <xref:System.Windows.Forms.LinkLabel.LinkCollection> instance associated with the <xref:System.Windows.Forms.LinkLabel> that represents the collection of links displayed in the control.</span></span> <span data-ttu-id="271b7-253">멤버를 사용할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 추가, 제거 및 컬렉션에 링크를 찾을 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-253">You can then use the members of the <xref:System.Windows.Forms.LinkLabel.LinkCollection> class to add, remove, and find links in the collection.</span></span> <span data-ttu-id="271b7-254">링크 컬렉션을 사용 하 여 수행할 수 있는 작업의 형식에 자세한 정보를 참조 하세요. <xref:System.Windows.Forms.LinkLabel.LinkCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-254">For more information on the types of tasks you can perform with the link collection, see <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span></span>  
  
 <span data-ttu-id="271b7-255">경우는 <xref:System.Windows.Forms.LinkLabel> 내에서 모든 텍스트를 포함 하는 기본 하이퍼링크 컨트롤이 만들어진 합니다 <xref:System.Windows.Forms.LinkLabel> 컨트롤을 추가할는 <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span><span class="sxs-lookup"><span data-stu-id="271b7-255">When a <xref:System.Windows.Forms.LinkLabel> control is created, a default hyperlink that contains all the text within the <xref:System.Windows.Forms.LinkLabel> control is added to the <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span></span> <span data-ttu-id="271b7-256">이 기본 링크를 사용 하 여 새 링크 영역을 지정 하 여 재정의할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 속성을 사용 하 여 링크 지정 또는 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> 메서드의 <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span><span class="sxs-lookup"><span data-stu-id="271b7-256">You can override this default link by specifying a new link area with the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property, or specify a link using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> method of the <xref:System.Windows.Forms.LinkLabel.LinkCollection>.</span></span> <span data-ttu-id="271b7-257">사용 하 여 기본 하이퍼링크를 제거할 수도 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> 메서드는 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-257">You can also remove the default hyperlink by using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> method of the <xref:System.Windows.Forms.LinkLabel.LinkCollection> class.</span></span>  
  
 <span data-ttu-id="271b7-258">내에 표시할 여러 개의 링크를 지정 하지 필요가 합니다 <xref:System.Windows.Forms.LinkLabel>를 사용할 수는 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="271b7-258">If you do not need to specify more than one link to display within the <xref:System.Windows.Forms.LinkLabel>, you can use the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-259">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-259">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-260">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-260">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-261">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-261">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-262">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-262">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-263">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-263">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
      </Docs>
    </Member>
    <Member MemberName="LinkVisited">
      <MemberSignature Language="C#" Value="public bool LinkVisited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinkVisited" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkVisited" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkVisited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LinkVisited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LinkVisited : bool with get, set" Usage="System.Windows.Forms.LinkLabel.LinkVisited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-264">열어 본 것으로 링크가 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-264">Gets or sets a value indicating whether a link should be displayed as though it were visited.</span></span></summary>
        <value><span data-ttu-id="271b7-265">열어 본 것으로 링크가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-265"><see langword="true" /> if links should display as though they were visited; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="271b7-266">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-266">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-267"><xref:System.Windows.Forms.LinkLabel> 컨트롤을 열어 본된 링크를 자동으로 표시 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-267">A <xref:System.Windows.Forms.LinkLabel> control does not automatically denote that a link is a visited link.</span></span> <span data-ttu-id="271b7-268">링크를 방문한 링크로 표시 하려면이 속성의 값을 설정할 수 있습니다 `true` 에 대 한 이벤트 처리기에는 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 이벤트를 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-268">To display the link as a visited link, you can set the value of this property to `true` in an event handler for the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event of a <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-269">열어 본된 링크에 지정 된 색을 사용 하 여 표시 되는 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 속성을 <xref:System.Windows.Forms.LinkLabel> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="271b7-269">A visited link is displayed using the color specified in the <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> property of the <xref:System.Windows.Forms.LinkLabel> control.</span></span> <span data-ttu-id="271b7-270">포함 된 폼을 <xref:System.Windows.Forms.LinkLabel> 컨트롤이 닫혀, 링크와 관련 된 "모든 display" 상태 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-270">Once the form containing the <xref:System.Windows.Forms.LinkLabel> control is closed, the "all display" state associated with the link is deleted.</span></span> <span data-ttu-id="271b7-271">링크의 표시 상태를 유지 하기 위해 애플리케이션과 연결 된 레지스트리 설정에서 링크의 표시 상태를 저장 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-271">In order to retain the display state of the link, you need to store the display state of the link in a registry setting associated with your application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="271b7-272">이 속성에 정의 된 첫 번째 링크에만 영향을 줍니다는 <xref:System.Windows.Forms.LinkLabel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-272">This property only affects the first link defined in the <xref:System.Windows.Forms.LinkLabel> control.</span></span> <span data-ttu-id="271b7-273">둘 이상의 링크 컨트롤에 지정 된 경우 사용 합니다 <xref:System.Windows.Forms.LinkLabel.Link.Visited%2A> 의 속성을 <xref:System.Windows.Forms.LinkLabel.Link> 클래스.</span><span class="sxs-lookup"><span data-stu-id="271b7-273">If you have more than one link specified in the control, use the <xref:System.Windows.Forms.LinkLabel.Link.Visited%2A> property of the <xref:System.Windows.Forms.LinkLabel.Link> class.</span></span> <span data-ttu-id="271b7-274">에 정의 된 모든 링크에 액세스할 수 있습니다 합니다 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여는 <xref:System.Windows.Forms.LinkLabel.Links%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-274">You can access all the links defined in the <xref:System.Windows.Forms.LinkLabel> by using the <xref:System.Windows.Forms.LinkLabel.Links%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-275">다음 예제에서는 설정 합니다 <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> 사용 하 여 속성을 <xref:System.Windows.Forms.LinkBehavior> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-275">The following example demonstrates setting the <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> property using the <xref:System.Windows.Forms.LinkBehavior> enumeration.</span></span> <span data-ttu-id="271b7-276">설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> 및 <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-276">It also demonstrates setting the <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> and <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> properties.</span></span> <span data-ttu-id="271b7-277">실행 하려면이 샘플에 붙여 빈 양식 및 호출 `InitializeLinkLabel` 폼의 생성자에서 또는 `Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-277">To run this sample paste it in a blank form and call `InitializeLinkLabel` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected override void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="linkLabel.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-278">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-278">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-279"><see cref="E:System.Windows.Forms.Label.AutoSizeChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-279">Raises the <see cref="E:System.Windows.Forms.Label.AutoSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-280">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-280">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-281">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-281">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="271b7-282">또한 <xref:System.Windows.Forms.LinkLabel.OnAutoSizeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-282">The <xref:System.Windows.Forms.LinkLabel.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="271b7-283">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-283">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-284">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-284">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="linkLabel.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-285">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-285">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-286"><see cref="E:System.Windows.Forms.Control.EnabledChanged" /> 이벤트에 대한 처리를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-286">Provides handling for the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-287">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-287">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-288">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-288">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="271b7-289">또한 <xref:System.Windows.Forms.LinkLabel.OnEnabledChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-289">The <xref:System.Windows.Forms.LinkLabel.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="271b7-290">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-290">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-291">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-291">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="linkLabel.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-292">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-292">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-293"><see cref="E:System.Windows.Forms.Control.FontChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-293">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="linkLabel.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-294">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-294">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-295"><see cref="E:System.Windows.Forms.Control.GotFocus" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-295">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-296">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-296">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-297">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-297">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-298">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnGotFocus(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-298">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="linkLabel.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-299">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-299">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-300"><see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-300">Raises the <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-301">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-301">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-302">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-302">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-303">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-303">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLinkClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnLinkClicked (System.Windows.Forms.LinkLabelLinkClickedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLinkClicked(class System.Windows.Forms.LinkLabelLinkClickedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLinkClicked (e As LinkLabelLinkClickedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLinkClicked(System::Windows::Forms::LinkLabelLinkClickedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventArgs -&gt; unit&#xA;override this.OnLinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventArgs -&gt; unit" Usage="linkLabel.OnLinkClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-304">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-304">A <see cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-305"><see cref="E:System.Windows.Forms.LinkLabel.LinkClicked" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-305">Raises the <see cref="E:System.Windows.Forms.LinkLabel.LinkClicked" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-306">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-306">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-307">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-307">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="271b7-308">또한 <xref:System.Windows.Forms.LinkLabel.OnLinkClicked%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-308">The <xref:System.Windows.Forms.LinkLabel.OnLinkClicked%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="271b7-309">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-309">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-310">파생 클래스에서 <see cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-310">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
        <altmember cref="E:System.Windows.Forms.LinkLabel.LinkClicked" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="linkLabel.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-311">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-311">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-312"><see cref="E:System.Windows.Forms.Control.LostFocus" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-312">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-313">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-313">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-314">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-314">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-315">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnLostFocus(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-315">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-316">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-316">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-317"><see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-317">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-318">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-318">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-319">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-319">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-320">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-320">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="linkLabel.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-321">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-321">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-322"><see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-322">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-323">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-323">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-324">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-324">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-325">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnMouseLeave(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-325">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-326">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-326">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-327"><see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-327">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-328">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-328">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-329">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-329">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-330">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-330">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-331">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-331">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-332"><see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-332">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-333">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-333">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-334">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-334">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-335">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-335">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="linkLabel.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-336">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-336">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-337"><see cref="E:System.Windows.Forms.Control.PaddingChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-337">Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-338">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-338">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-339">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-339">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="271b7-340">또한 <xref:System.Windows.Forms.LinkLabel.OnPaddingChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-340">The <xref:System.Windows.Forms.LinkLabel.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="271b7-341">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-341">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-342">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-342">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="linkLabel.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-343">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-343">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-344"><see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-344">Raises the <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-345">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-345">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="271b7-346">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-346">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="271b7-347">재정의 하는 경우 <see cref="M:System.Windows.Forms.LinkLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-347">When overriding <see cref="M:System.Windows.Forms.LinkLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="T:System.Windows.Forms.PaintEventArgs" />
        <altmember cref="T:System.Windows.Forms.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="linkLabel.OnPaintBackground e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-348">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-348">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-349">컨트롤의 배경을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-349">Paints the background of the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="linkLabel.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-350">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-350">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-351"><see cref="E:System.Windows.Forms.Label.TextAlignChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-351">Raises the <see cref="E:System.Windows.Forms.Label.TextAlignChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Label.OnTextAlignChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="linkLabel.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="271b7-352">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-352">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="271b7-353"><see cref="E:System.Windows.Forms.Control.TextChanged" /> 이벤트에 대한 처리를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-353">Provides handling for the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Cursor ^ OverrideCursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.LinkLabel.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-354">마우스 포인터가 <see cref="T:System.Windows.Forms.LinkLabel" />의 경계 내에 있을 때 사용할 마우스 포인터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-354">Gets or sets the mouse pointer to use when the mouse pointer is within the bounds of the <see cref="T:System.Windows.Forms.LinkLabel" />.</span></span></summary>
        <value><span data-ttu-id="271b7-355">마우스 포인터가 <see cref="T:System.Windows.Forms.Cursor" /> 경계 내에 있을 때 사용할 <see cref="T:System.Windows.Forms.LinkLabel" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-355">The <see cref="T:System.Windows.Forms.Cursor" /> to use when the mouse pointer is within the <see cref="T:System.Windows.Forms.LinkLabel" /> bounds.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.LinkLabel.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-356"><see cref="T:System.Windows.Forms.LinkLabel" />의 가장자리와 내용 사이의 내부 간격(픽셀)을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-356">Gets or sets the interior spacing, in pixels, between the edges of a <see cref="T:System.Windows.Forms.LinkLabel" /> and its contents.</span></span></summary>
        <value><span data-ttu-id="271b7-357">내부 간격(픽셀)을 나타내는 <see cref="T:System.Windows.Forms.Padding" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-357"><see cref="T:System.Windows.Forms.Padding" /> values representing the interior spacing, in pixels.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointInLink">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LinkLabel.Link PointInLink (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Forms.LinkLabel/Link PointInLink(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.PointInLink(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function PointInLink (x As Integer, y As Integer) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LinkLabel::Link ^ PointInLink(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.PointInLink : int * int -&gt; System.Windows.Forms.LinkLabel.Link" Usage="linkLabel.PointInLink (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="271b7-358">링크를 검색할 지점의 가로 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-358">The horizontal coordinate of the point to search for a link.</span></span></param>
        <param name="y"><span data-ttu-id="271b7-359">링크를 검색할 지점의 세로 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-359">The vertical coordinate of the point to search for a link.</span></span></param>
        <summary><span data-ttu-id="271b7-360">지정한 클라이언트 좌표에 위치한 링크를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-360">Gets the link located at the specified client coordinates.</span></span></summary>
        <returns><span data-ttu-id="271b7-361">지정한 좌표에 위치한 링크를 나타내는 <see cref="T:System.Windows.Forms.LinkLabel.Link" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-361">A <see cref="T:System.Windows.Forms.LinkLabel.Link" /> representing the link located at the specified coordinates.</span></span> <span data-ttu-id="271b7-362">지점에 링크가 들어 있지 않으면, <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-362">If the point does not contain a link, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-363">이 메서드를 사용 하면 링크 내에서 특정 지점에 있는지 여부를 결정 하는 <xref:System.Windows.Forms.LinkLabel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-363">This method enables you to determine whether a link is located at a specific point within a <xref:System.Windows.Forms.LinkLabel> control.</span></span> <span data-ttu-id="271b7-364">에 대 한 이벤트 처리기에서이 메서드를 사용할 수는 <xref:System.Windows.Forms.Control.MouseEnter> 마우스 포인터가 컨트롤의 링크를 가리키면 여부를 확인 하려면 컨트롤의 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-364">You can use this method in an event handler for the <xref:System.Windows.Forms.Control.MouseEnter> event of the control to determine whether the mouse pointer is hovering over a link in the control.</span></span> <span data-ttu-id="271b7-365">마우스 포인터가 링크를 통해 결정 한 경우에 표시할 수 있습니다 다음 링크에 대 한 추가 정보를 통해 사용자에 게 <xref:System.Windows.Forms.StatusBar> 텍스트 또는 <xref:System.Windows.Forms.ToolTip>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-365">Once you have determined that the mouse pointer is over a link, you can then display additional information about the link to the user through <xref:System.Windows.Forms.StatusBar> text or a <xref:System.Windows.Forms.ToolTip>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="linkLabel.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="271b7-366">키 코드 및 한정자 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-366">Key code and modifier flags.</span></span></param>
        <summary><span data-ttu-id="271b7-367">대화 상자 키를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-367">Processes a dialog key.</span></span></summary>
        <returns><span data-ttu-id="271b7-368">키를 사용하려면 <see langword="true" />이고, 추가 처리를 허용하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-368"><see langword="true" /> to consume the key; <see langword="false" /> to allow further processing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-369">이 메서드는 메시지 전처리 탭, 리턴, 이스케이프 및 화살표 키 같은 대화 상자 문자를 처리 하는 동안 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-369">This method is called during message pre-processing to handle dialog characters, such as TAB, RETURN, ESCAPE, and arrow keys.</span></span> <span data-ttu-id="271b7-370">이 메서드는 경우에는 `isInputKey` 메서드 컨트롤이 키에 관심이 있는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-370">This method is called only if the `isInputKey` method indicates that the control isn't interested in the key.</span></span> <span data-ttu-id="271b7-371">`processDialogKey` 단순히 부모의 문자를 보냅니다 `processDialogKey` 메서드 또는 컨트롤에 부모가 없으면 false를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-371">`processDialogKey` simply sends the character to the parent's `processDialogKey` method, or returns false if the control has no parent.</span></span> <span data-ttu-id="271b7-372">`Form` 클래스 대화 상자 키의 실제 처리를 수행 하려면이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-372">The `Form` class overrides this method to perform actual processing of dialog keys.</span></span> <span data-ttu-id="271b7-373">재정의 하는 경우 `processDialogKey`에 컨트롤을 반환 해야 `true` 키를 처리 했음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-373">When overriding `processDialogKey`, a control should return `true` to indicate that it has processed the key.</span></span> <span data-ttu-id="271b7-374">컨트롤의 결과 의해 처리 되지 않은 키에 대 한 `base.processDialogChar` 반환 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-374">For keys that aren't processed by the control, the result of `base.processDialogChar` should be returned.</span></span> <span data-ttu-id="271b7-375">컨트롤을 거의 경우 어느 해야이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-375">Controls will seldom, if ever, need to override this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="override this.Select : bool * bool -&gt; unit" Usage="linkLabel.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed"><span data-ttu-id="271b7-376">선택할 컨트롤의 방향을 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-376"><see langword="true" /> to specify the direction of the control to select; otherwise, <see langword="false" />.</span></span></param>
        <param name="forward"><span data-ttu-id="271b7-377">탭 순서에서 앞으로 이동하려면 <see langword="true" />이고, 뒤로 이동하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-377"><see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span></span></param>
        <summary><span data-ttu-id="271b7-378">자식 컨트롤을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-378">Activates a child control.</span></span> <span data-ttu-id="271b7-379">또한 필요에 따라 컨트롤을 선택할 탭 순서의 방향을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-379">Optionally specifies the direction in the tab order to select the control from.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="linkLabel.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="271b7-380">컨트롤의 새 왼쪽입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-380">New left of the control.</span></span></param>
        <param name="y"><span data-ttu-id="271b7-381">컨트롤의 새 오른쪽입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-381">New right of the control.</span></span></param>
        <param name="width"><span data-ttu-id="271b7-382">컨트롤의 새 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-382">New width of the control.</span></span></param>
        <param name="height"><span data-ttu-id="271b7-383">컨트롤의 새 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-383">New height of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="271b7-384">지정된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-384">Which values were specified.</span></span> <span data-ttu-id="271b7-385">이 매개 변수는 어떤 값이 변경되었는지가 아니라 사용자의 의도를 반영합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-385">This parameter reflects user intent, not which values have changed.</span></span></param>
        <summary><span data-ttu-id="271b7-386">이 컨트롤의 범위를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-386">Performs the work of setting the bounds of this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-387">클래스 상속 크기 제한을 추가 하려면이 함수를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-387">Inheriting classes can override this function to add size restrictions.</span></span> <span data-ttu-id="271b7-388">상속 하는 클래스를 호출 해야 `base.setBoundsCore` 변경 하려면 컨트롤의 범위를 실제로 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-388">Inheriting classes must call `base.setBoundsCore` to actually cause the bounds of the control to change.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.DialogResult">
      <MemberSignature Language="C#" Value="System.Windows.Forms.DialogResult System.Windows.Forms.IButtonControl.DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#DialogResult" />
      <MemberSignature Language="VB.NET" Value=" Property DialogResult As DialogResult Implements IButtonControl.DialogResult" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Forms::DialogResult System::Windows::Forms::IButtonControl::DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IButtonControl.DialogResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-389">이 멤버에 대한 설명은 <see cref="P:System.Windows.Forms.IButtonControl.DialogResult" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="271b7-389">For a description of this member, see <see cref="P:System.Windows.Forms.IButtonControl.DialogResult" />.</span></span></summary>
        <value><span data-ttu-id="271b7-390"><see cref="T:System.Windows.Forms.DialogResult" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-390">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-391">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="271b7-391">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="271b7-392"><xref:System.Windows.Forms.LinkLabel> 인스턴스가 <xref:System.Windows.Forms.IButtonControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-392">It can be used only when the <xref:System.Windows.Forms.LinkLabel> instance is cast to an <xref:System.Windows.Forms.IButtonControl> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.NotifyDefault">
      <MemberSignature Language="C#" Value="void IButtonControl.NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IButtonControl.NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub NotifyDefault (value As Boolean) Implements IButtonControl.NotifyDefault" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IButtonControl.NotifyDefault(bool value) = System::Windows::Forms::IButtonControl::NotifyDefault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="271b7-393">컨트롤이 기본 단추로 동작하도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-393"><see langword="true" /> if the control should behave as a default button; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="271b7-394"><see cref="T:System.Windows.Forms.LinkLabel" /> 컨트롤에 이것이 기본 단추임을 알립니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-394">Notifies the <see cref="T:System.Windows.Forms.LinkLabel" /> control that it is the default button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-395">A <xref:System.Windows.Forms.LinkLabel> 컨트롤이 기본 단추 인지에 관계 없이 동일 하 게 표시,이 메서드를 호출 하므로 모양이 나 동작의 변경 되지 것입니다는 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-395">A <xref:System.Windows.Forms.LinkLabel> control appears the same regardless of whether it is the default button, so calling this method will not change the appearance or behavior of the <xref:System.Windows.Forms.LinkLabel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.PerformClick">
      <MemberSignature Language="C#" Value="void IButtonControl.PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IButtonControl.PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#PerformClick" />
      <MemberSignature Language="VB.NET" Value="Sub PerformClick () Implements IButtonControl.PerformClick" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IButtonControl.PerformClick() = System::Windows::Forms::IButtonControl::PerformClick;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.PerformClick</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="271b7-396"><see cref="E:System.Windows.Forms.Control.Click" /> 컨트롤에 대해 <see cref="T:System.Windows.Forms.LinkLabel" /> 이벤트를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-396">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for the <see cref="T:System.Windows.Forms.LinkLabel" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-397">이 메서드를 호출 하면 첫 번째 링크를는 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 클릭 됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-397">Calling this method causes the first link in the <xref:System.Windows.Forms.LinkLabel.LinkCollection> to be clicked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.LinkLabel.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-398">사용자가 Tab 키를 눌러 <see cref="T:System.Windows.Forms.LinkLabel" />로 이동할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-398">Gets or sets a value that indicates whether the user can tab to the <see cref="T:System.Windows.Forms.LinkLabel" />.</span></span></summary>
        <value><span data-ttu-id="271b7-399">사용자가 Tab 키를 눌러 <see cref="T:System.Windows.Forms.LinkLabel" />로 이동할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-399"><see langword="true" /> if the user can tab to the <see cref="T:System.Windows.Forms.LinkLabel" />;otherwise, <see langword="false" />.</span></span> <span data-ttu-id="271b7-400">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-400">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-401">합니다 <xref:System.Windows.Forms.LinkLabel.TabStop%2A> 속성은 `true` 기본적으로 길이가 0 보다 큰 하나 이상의 링크가 하기만 합니다 <xref:System.Windows.Forms.LinkLabel.Links%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-401">The <xref:System.Windows.Forms.LinkLabel.TabStop%2A> property is `true` by default, as long as there is at least one link of greater than zero length in the <xref:System.Windows.Forms.LinkLabel.Links%2A> collection.</span></span> <span data-ttu-id="271b7-402">합니다 <xref:System.Windows.Forms.LinkLabel> 컨트롤에는 단일 <xref:System.Windows.Forms.Control.TabIndex%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-402">The <xref:System.Windows.Forms.LinkLabel> control has a single <xref:System.Windows.Forms.Control.TabIndex%2A> value.</span></span> <span data-ttu-id="271b7-403">그러나 길이가 0 보다 큰 각 링크는 왼쪽에서 오른쪽 순서로 자체 탭 정지를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-403">However, each link of greater than zero length gets its own tab stop, in left-to-right order.</span></span> <span data-ttu-id="271b7-404">탭 탐색을 방지 하는 <xref:System.Windows.Forms.LinkLabel> 컨트롤을 <xref:System.Windows.Forms.LinkLabel.TabStop%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-404">To prevent tab navigation to the <xref:System.Windows.Forms.LinkLabel> control, set the <xref:System.Windows.Forms.LinkLabel.TabStop%2A> property to `false`.</span></span> <span data-ttu-id="271b7-405">그러나에 새 링크를 추가 합니다 <xref:System.Windows.Forms.LinkLabel.Links%2A> 컬렉션은 자동으로 설정 합니다 <xref:System.Windows.Forms.LinkLabel.TabStop%2A> 속성을 `true` 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-405">However, be aware that adding new links to the <xref:System.Windows.Forms.LinkLabel.Links%2A> collection will automatically set the <xref:System.Windows.Forms.LinkLabel.TabStop%2A> property to `true` again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.LinkLabel.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-406"><see cref="P:System.Windows.Forms.Label.TabStop" /> 속성 값이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-406">Occurs when the value of the <see cref="P:System.Windows.Forms.Label.TabStop" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-407">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="271b7-407">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-408">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-408">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="271b7-409">예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.LinkLabel.TabStopChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-409">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.LinkLabel.TabStopChanged> event.</span></span> <span data-ttu-id="271b7-410">이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-410">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="271b7-411">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-411">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="271b7-412">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.LinkLabel> 라는 `LinkLabel1`합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-412">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.LinkLabel> named `LinkLabel1`.</span></span> <span data-ttu-id="271b7-413">연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.LinkLabel.TabStopChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-413">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.LinkLabel.TabStopChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#460](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#460)]
 [!code-vb[System.Windows.Forms.EventExamples#460](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#460)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.LinkLabel.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-414"><see cref="T:System.Windows.Forms.LinkLabel" />에서 표시하는 텍스트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-414">Gets or sets the text displayed by the <see cref="T:System.Windows.Forms.LinkLabel" />.</span></span></summary>
        <value><span data-ttu-id="271b7-415"><see cref="T:System.Windows.Forms.LinkLabel" />에서 표시하는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-415">The text displayed by the <see cref="T:System.Windows.Forms.LinkLabel" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="public bool UseCompatibleTextRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleTextRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleTextRendering : bool with get, set" Usage="System.Windows.Forms.LinkLabel.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-416">텍스트 렌더링에 <see cref="T:System.Drawing.Graphics" /> 클래스([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)])를 사용할지 아니면 <see cref="T:System.Windows.Forms.TextRenderer" /> 클래스([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)])를 사용할지를 결정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-416">Gets or sets a value that determines whether to use the <see cref="T:System.Drawing.Graphics" /> class ([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]) or the <see cref="T:System.Windows.Forms.TextRenderer" /> class ([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]) to render text.</span></span></summary>
        <value><span data-ttu-id="271b7-417"><see langword="true" /> 경우는 <see cref="T:System.Drawing.Graphics" /> 버전 1.0 및 1.1과 호환성을 위해 텍스트 렌더링을 수행 하려면 클래스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-417"><see langword="true" /> if the <see cref="T:System.Drawing.Graphics" /> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1.</span></span> <span data-ttu-id="271b7-418">.NET framework; 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-418">of the .NET Framework; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="271b7-419">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-419">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-420">경우는 <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A> 속성이 `false`, <xref:System.Windows.Forms.LinkArea> 전체 텍스트를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-420">If the <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A> property is set to `false`, the <xref:System.Windows.Forms.LinkArea> covers the entire text.</span></span> <span data-ttu-id="271b7-421">예를 들어, "abcd" 등의 텍스트에 밑줄이 후행 공백을 사용 하 여 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-421">For example, text such as "abcd " is rendered with the trailing space underlined.</span></span>  
  
 <span data-ttu-id="271b7-422">경우는 <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A> 속성이 `true`는 <xref:System.Windows.Forms.LinkArea> 전체 텍스트를 다루지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-422">If the <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A> property is set to `true`, the <xref:System.Windows.Forms.LinkArea> does not cover the entire text.</span></span>  
  
 <span data-ttu-id="271b7-423">`UseCompatibleTextRendering` 속성을 사용 하 여 렌더링 텍스트는 Windows Forms 컨트롤 간에 시각적 호환성을 제공 합니다 <xref:System.Windows.Forms.TextRenderer> 클래스 및 [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] 고 [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] 를사용하여사용자지정텍스트렌더링을수행하는응용프로그램<xref:System.Drawing.Graphics>클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-423">The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class.</span></span> <span data-ttu-id="271b7-424">대부분의 경우 응용 프로그램에서 업그레이드 중이 아님 [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] 또는 [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]를 그대로 두는 것이 좋습니다 `UseCompatibleTextRendering` 기본값인으로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-424">In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.</span></span>  
  
 <span data-ttu-id="271b7-425">합니다 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 기반 <xref:System.Windows.Forms.TextRenderer> 클래스에 도입 된는 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 성능 향상을 위해 텍스트를 좋게 및 국가별 글꼴에 대 한 지원이 향상을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-425">The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts.</span></span> <span data-ttu-id="271b7-426">이전 버전의 합니다 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]는 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 기반 <xref:System.Drawing.Graphics> 클래스는 모든 텍스트 렌더링을 수행 하는 데 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-426">In earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering.</span></span> [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <span data-ttu-id="271b7-427">문자 간격 및 줄 바꿈 다르게에서 계산 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-427">calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span></span> <span data-ttu-id="271b7-428">사용 하는 Windows Forms 응용 프로그램을 <xref:System.Drawing.Graphics> 텍스트를 렌더링 하는 클래스를 사용 하는 컨트롤의 텍스트 발생할 수 있습니다 <xref:System.Windows.Forms.TextRenderer> 응용 프로그램의 다른 텍스트와에서 다르게 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-428">In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application.</span></span> <span data-ttu-id="271b7-429">이러한 호환성 문제를 해결 하려면 설정 합니다 `UseCompatibleTextRendering` 속성을 `true` 특정 컨트롤에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-429">To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true` for a specific control.</span></span> <span data-ttu-id="271b7-430">설정 하려면 `UseCompatibleTextRendering` 에 `true` 응용 프로그램에서 모든 지원 되는 컨트롤에 대 한 호출을 <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> 매개 변수를 사용 하 여 메서드 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-430">To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> method with a parameter of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkArea" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkArea" />
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="VisitedLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color VisitedLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color VisitedLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property VisitedLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color VisitedLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.VisitedLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="271b7-431">이전에 열어 보았던 링크를 표시할 때 사용되는 색을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-431">Gets or sets the color used when displaying a link that has been previously visited.</span></span></summary>
        <value><span data-ttu-id="271b7-432">열어 보았던 링크를 표시하는데 사용된 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-432">A <see cref="T:System.Drawing.Color" /> that represents the color used to display links that have been visited.</span></span> <span data-ttu-id="271b7-433">기본 색은 시스템에서 지정되는 <see langword="Color.Purple" />입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-433">The default color is specified by the system, typically this color is <see langword="Color.Purple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="271b7-434">이 속성을 사용 하면 모든 링크 표시 되는 색을 지정 하는 `LinkLabel` <xref:System.Windows.Forms> 사용자가 방문 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-434">This property enables you to specify the color that is displayed for all links in the `LinkLabel`<xref:System.Windows.Forms> that have been visited by the user.</span></span>  
  
 <span data-ttu-id="271b7-435">링크와 관련 된 색의 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-435">There are a number of colors associated with a link.</span></span> <span data-ttu-id="271b7-436">모든 링크는 <xref:System.Windows.Forms.LinkLabel> 에 정의 된 색을 사용 하 여 처음에 표시 되는 <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="271b7-436">All links in the <xref:System.Windows.Forms.LinkLabel> are initially displayed with the color defined in the <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> property.</span></span> <span data-ttu-id="271b7-437"><xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> 속성을 사용 하면 클릭 되는 경우 링크의 색을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-437">The <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> property enables you to specify the color of the link when it is in the process of being clicked.</span></span> <span data-ttu-id="271b7-438">링크를 사용 하지 않도록 설정 하는 경우는 <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> 사용 안 함 상태의 링크를 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-438">When a link is disabled, the <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> is used to display the link in a disabled state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="271b7-439">이 속성을 설정할 때 되도록 색 설정한 컨트롤의 배경색을 사용 하 여 충돌 하지 않는 속성의 텍스트가 제대로 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-439">When setting this property, ensure that the color you are setting the property to does not conflict with the color of the control's background or the text does not display properly.</span></span> <span data-ttu-id="271b7-440">예를 들어 컨트롤의 배경색 `Color.Red` 이 속성을 설정 하 고 `Color.Red`, 링크를 방문한 링크로 표시 되 면 텍스트를 제대로 다루지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-440">For example, if the background color of the control is `Color.Red` and this property is set to `Color.Red`, the text is not shown properly when the link is displayed as a visited link.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="271b7-441">다음 예제에서는 합니다 <xref:System.Windows.Forms.LinkLabel> 여러 개의 클래스 <xref:System.Windows.Forms.LinkArea> 양식에 레이블을 표시 하려면 정의 된 섹션.</span><span class="sxs-lookup"><span data-stu-id="271b7-441">The following example demonstrates using the <xref:System.Windows.Forms.LinkLabel> class, with multiple <xref:System.Windows.Forms.LinkArea> sections defined, to display a label on a form.</span></span> <span data-ttu-id="271b7-442">예제 설정에는 <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, 및 <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> 의 모양을 사용자 지정 속성은 <xref:System.Windows.Forms.LinkLabel>합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-442">The example demonstrates setting the <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, and <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> properties to customize the look of the <xref:System.Windows.Forms.LinkLabel>.</span></span> <span data-ttu-id="271b7-443">첫 번째 <xref:System.Windows.Forms.LinkArea> 를 사용 하 여 지정 된 <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-443">The first <xref:System.Windows.Forms.LinkArea> is specified using the <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="271b7-444">추가 링크에 추가 되는 <xref:System.Windows.Forms.LinkLabel> 를 사용 하 여를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="271b7-444">Additional links are added to the <xref:System.Windows.Forms.LinkLabel> using the <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="271b7-445">예제에서는 처리를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 하이퍼링크에 대 한 웹 브라우저를 시작 하 고 표시 하 여 이벤트를 <xref:System.Windows.Forms.MessageBox> 다른 링크에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-445">The example handles the <xref:System.Windows.Forms.LinkLabel.LinkClicked> event by starting the Web browser for hyperlinks, and displaying a <xref:System.Windows.Forms.MessageBox> for other links.</span></span>  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef msg As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="linkLabel.WndProc msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="271b7-446">처리할 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-446">The message to process.</span></span></param>
        <summary><span data-ttu-id="271b7-447">지정된 Windows 메시지를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-447">Processes the specified Windows message.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="271b7-448">에 관리 되지 않는 코드를 사용 하 여 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="271b7-448">for operating with unmanaged code.</span></span> <span data-ttu-id="271b7-449">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="271b7-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>