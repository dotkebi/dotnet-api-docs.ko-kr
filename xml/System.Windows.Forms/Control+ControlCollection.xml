<Type Name="Control+ControlCollection" FullName="System.Windows.Forms.Control+ControlCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69f423558c1f46274f0c64b5bbc8a544833ac6b6" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57922496" /></Metadata><TypeSignature Language="C#" Value="public class Control.ControlCollection : System.Windows.Forms.Layout.ArrangedElementCollection, ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Control/ControlCollection extends System.Windows.Forms.Layout.ArrangedElementCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Control.ControlCollection&#xA;Inherits ArrangedElementCollection&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Control::ControlCollection : System::Windows::Forms::Layout::ArrangedElementCollection, ICloneable, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type Control.ControlCollection = class&#xA;    inherit ArrangedElementCollection&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Layout.ArrangedElementCollection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCollectionCodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b476-101"><see cref="T:System.Windows.Forms.Control" /> 개체의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-101">Represents a collection of <see cref="T:System.Windows.Forms.Control" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-102">합니다 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A>, <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, 및 <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> 메서드를 사용 하면 추가 하 고 컬렉션에서 개별 컨트롤을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-102">The <xref:System.Windows.Forms.Control.ControlCollection.Add%2A>, <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, and <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> methods enable you to add and remove individual controls from the collection.</span></span> <span data-ttu-id="2b476-103">사용할 수도 있습니다는 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> 또는 <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> 메서드를 추가 하거나 컬렉션에서 모든 컨트롤을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-103">You can also use the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> or <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> methods to add or remove all the controls from the collection.</span></span>  
  
 <span data-ttu-id="2b476-104">확인할 수 있습니다는 <xref:System.Windows.Forms.Control> 에 컨트롤을 전달 하 여 컬렉션의 멤버인는 <xref:System.Windows.Forms.Control.ControlCollection.Contains%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-104">You can determine if a <xref:System.Windows.Forms.Control> is a member of the collection by passing the control into the <xref:System.Windows.Forms.Control.ControlCollection.Contains%2A> method.</span></span> <span data-ttu-id="2b476-105">위치의 인덱스 값을 가져올는 <xref:System.Windows.Forms.Control> 컬렉션에 컨트롤을 전달 합니다 <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-105">To get the index value of the location of a <xref:System.Windows.Forms.Control> in the collection, pass the control into the <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> method.</span></span> <span data-ttu-id="2b476-106">호출 하 여 컬렉션을 배열에 복사 될 수는 <xref:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-106">The collection can be copied into an array by calling the <xref:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b476-107">다음 코드 예제에서는 제거는 <xref:System.Windows.Forms.Control> 에서 합니다 <xref:System.Windows.Forms.Control.ControlCollection> 파생된 클래스의 <xref:System.Windows.Forms.Panel> 컬렉션의 멤버인 경우.</span><span class="sxs-lookup"><span data-stu-id="2b476-107">The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection.</span></span> <span data-ttu-id="2b476-108">만든이 예제는 <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>와 하나 이상의 <xref:System.Windows.Forms.RadioButton> 대 한 control 권한를 <xref:System.Windows.Forms.Form>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-108">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-109"><xref:System.Windows.Forms.RadioButton> 컨트롤을 추가 하는 <xref:System.Windows.Forms.Panel> 컨트롤 및 <xref:System.Windows.Forms.Panel> 에 추가 된 컨트롤을 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-109">The <xref:System.Windows.Forms.RadioButton> controls are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-110">라디오 단추 라는 단추를 클릭 하면 `radioButton2` 에서 제거 되는 <xref:System.Windows.Forms.Control.ControlCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-110">When the button is clicked, the radio button named `radioButton2` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Collections.IList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Windows.Forms.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Windows::Forms::Control ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control.ControlCollection : System.Windows.Forms.Control -&gt; System.Windows.Forms.Control.ControlCollection" Usage="new System.Windows.Forms.Control.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="2b476-111">이 컨트롤 컬렉션을 소유하는 컨트롤을 나타내는 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-111">A <see cref="T:System.Windows.Forms.Control" /> representing the control that owns the control collection.</span></span></param>
        <summary><span data-ttu-id="2b476-112"><see cref="T:System.Windows.Forms.Control.ControlCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control.ControlCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.Control -&gt; unit&#xA;override this.Add : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2b476-113">컨트롤 컬렉션에 추가할 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-113">The <see cref="T:System.Windows.Forms.Control" /> to add to the control collection.</span></span></param>
        <summary><span data-ttu-id="2b476-114">지정된 컨트롤을 컨트롤 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-114">Adds the specified control to the control collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-115"><xref:System.Windows.Forms.Control.ControlCollection.Add%2A> 메서드를 사용 하면 추가 <xref:System.Windows.Forms.Control> 컨트롤 컬렉션의 끝에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-115">The <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> method allows you to add <xref:System.Windows.Forms.Control> objects to the end of the control collection.</span></span>  
  
 <span data-ttu-id="2b476-116">새 추가할 수도 있습니다 <xref:System.Windows.Forms.Control> 개체를 사용 하 여 컬렉션에는 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-116">You can also add new <xref:System.Windows.Forms.Control> objects to the collection by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="2b476-117">제거할를 <xref:System.Windows.Forms.Control> 이전에 추가한를 사용 합니다 <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>, 또는 <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-117">To remove a <xref:System.Windows.Forms.Control> that you previously added, use the <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>, or <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b476-118">A <xref:System.Windows.Forms.Control> 하나에 할당할 수 있습니다 <xref:System.Windows.Forms.Control.ControlCollection> 번입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-118">A <xref:System.Windows.Forms.Control> can only be assigned to one <xref:System.Windows.Forms.Control.ControlCollection> at a time.</span></span> <span data-ttu-id="2b476-119">경우는 <xref:System.Windows.Forms.Control> 이미 다른 컨트롤에 추가 되기 전에 해당 컨트롤에서 제거 하는 다른 컨트롤의 자식입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-119">If the <xref:System.Windows.Forms.Control> is already a child of another control it is removed from that control before it is added to another control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b476-120">다음 코드 예제에서는 추가 <xref:System.Windows.Forms.Control> 에 <xref:System.Windows.Forms.Control.ControlCollection> 파생된 클래스의 <xref:System.Windows.Forms.Panel>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-120">The following code example adds a <xref:System.Windows.Forms.Control> to the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="2b476-121">만든이 예제는 <xref:System.Windows.Forms.Panel> 컨트롤 및 <xref:System.Windows.Forms.Button> 대 한 control 권한를 <xref:System.Windows.Forms.Form>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-121">The example requires that you have created a <xref:System.Windows.Forms.Panel> control and a <xref:System.Windows.Forms.Button> control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-122">단추를 클릭할 때를 <xref:System.Windows.Forms.TextBox> 패널의 컨트롤을 추가할 <xref:System.Windows.Forms.Control.ControlCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-122">When the button is clicked, a <xref:System.Windows.Forms.TextBox> control is added to the panel's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#2)]
 [!code-csharp[ControlCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#2)]
 [!code-vb[ControlCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="2b476-123">지정된 컨트롤이 최상위 컨트롤이거나, 이 컨트롤이 컨트롤 컬렉션에 추가될 때 순환 컨트롤 참조가 발생하는 경우</span><span class="sxs-lookup"><span data-stu-id="2b476-123">The specified control is a top-level control, or a circular control reference would result if this control were added to the control collection.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b476-124"><paramref name="value" /> 매개 변수에 할당된 개체가 <see cref="T:System.Windows.Forms.Control" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="2b476-124">The object assigned to the <paramref name="value" /> parameter is not a <see cref="T:System.Windows.Forms.Control" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b476-125">재정의 하는 경우 <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> 컨트롤 컬렉션에 추가 되었는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-125">When overriding <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> method to ensure that the control is added to the collection.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.Control[] controls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.Control[] controls) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (controls As Control())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::Control ^&gt; ^ controls);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.Control[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.Control[] -&gt; unit" Usage="controlCollection.AddRange controls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="System.Windows.Forms.Control[]" />
      </Parameters>
      <Docs>
        <param name="controls"><span data-ttu-id="2b476-126">컬렉션에 추가할 <see cref="T:System.Windows.Forms.Control" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-126">An array of <see cref="T:System.Windows.Forms.Control" /> objects to add to the collection.</span></span></param>
        <summary><span data-ttu-id="2b476-127">컨트롤 개체의 배열을 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-127">Adds an array of control objects to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-128">합니다 <xref:System.Windows.Forms.Control> 에 포함 된 개체는 `controls` 배열 컬렉션의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-128">The <xref:System.Windows.Forms.Control> objects contained in the `controls` array are appended to the end of the collection.</span></span>  
  
 <span data-ttu-id="2b476-129">사용할 수는 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> 신속 하 게의 그룹을 추가 하는 방법 <xref:System.Windows.Forms.Control> 수동으로 각를 추가 하는 대신 컬렉션에 개체 <xref:System.Windows.Forms.Control> 사용 하 여 컬렉션을 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-129">You can use the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method to quickly add a group of <xref:System.Windows.Forms.Control> objects to the collection instead of manually adding each <xref:System.Windows.Forms.Control> to the collection using the <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> method.</span></span>  
  
 <span data-ttu-id="2b476-130">제거할를 <xref:System.Windows.Forms.Control> 이전에 추가한를 사용 합니다 <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>, 또는 <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-130">To remove a <xref:System.Windows.Forms.Control> that you previously added, use the <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>, or <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b476-131">다음 코드 예제에서는 두 개를 더한 <xref:System.Windows.Forms.Control> 개체를 <xref:System.Windows.Forms.Control.ControlCollection> 파생된 클래스의 <xref:System.Windows.Forms.Panel>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-131">The following code example adds two <xref:System.Windows.Forms.Control> objects to the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="2b476-132">만든이 예제는 <xref:System.Windows.Forms.Panel> 컨트롤 및 <xref:System.Windows.Forms.Button> 대 한 control 권한를 <xref:System.Windows.Forms.Form>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-132">The example requires that you have created a <xref:System.Windows.Forms.Panel> control and a <xref:System.Windows.Forms.Button> control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-133">단추를 클릭할 때, 두 <xref:System.Windows.Forms.RadioButton> 패널의 컨트롤은 <xref:System.Windows.Forms.Control.ControlCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-133">When the button is clicked, two <xref:System.Windows.Forms.RadioButton> controls are added to the panel's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#3)]
 [!code-csharp[ControlCollection#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#3)]
 [!code-vb[ControlCollection#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b476-134">재정의 하는 경우 <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> 컨트롤 컬렉션에 추가 되어 있는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-134">When overriding <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> method to ensure that the controls are added to the collection.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="controlCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b476-135">컬렉션에서 컨트롤을 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-135">Removes all controls from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-136">사용할 수는 <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> 부모 컨트롤에서 컨트롤의 전체 컬렉션을 제거 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-136">You can use the <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> method to remove the entire collection of controls from a parent control.</span></span>  
  
 <span data-ttu-id="2b476-137">컬렉션에서 개별 컨트롤을 제거 하려면 사용 합니다 <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> 또는 <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-137">To remove an individual control from the collection, use the <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> or <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2b476-138">호출 된 <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> 메서드 컨트롤 핸들 메모리에서 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-138">Calling the <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> method does not remove control handles from memory.</span></span> <span data-ttu-id="2b476-139">명시적으로 호출 해야 합니다 <xref:System.Windows.Forms.Control.Dispose%2A> 누수 메모리를 방지 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-139">You must explicitly call the <xref:System.Windows.Forms.Control.Dispose%2A> method to avoid memory leaks.</span></span>  
  
 <span data-ttu-id="2b476-140">새로 추가 하려면 <xref:System.Windows.Forms.Control> 컬렉션에 개체를 사용 합니다 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> 또는 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-140">To add new <xref:System.Windows.Forms.Control> objects to the collection, use the <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> or <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b476-141">다음 코드 예제는 모두 제거 합니다 <xref:System.Windows.Forms.Control> 개체를 <xref:System.Windows.Forms.Control.ControlCollection> 파생된 클래스의 <xref:System.Windows.Forms.Panel>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-141">The following code example removes all the <xref:System.Windows.Forms.Control> objects in the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="2b476-142">만든이 예제는 <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>, 및 다른 컨트롤에 하나 이상의 <xref:System.Windows.Forms.Form>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-142">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one other control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-143">다른 컨트롤에 추가 됩니다는 <xref:System.Windows.Forms.Panel> 컨트롤 및 <xref:System.Windows.Forms.Panel> 에 추가 된 <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="2b476-143">The other controls are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-144">단추를 패널에 포함 된 모든 컨트롤에서 제거 됩니다는 <xref:System.Windows.Forms.Control.ControlCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-144">When the button is clicked, all the controls contained in the panel are removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#1)]
 [!code-csharp[ControlCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#1)]
 [!code-vb[ControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b476-145">재정의 하는 경우 <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> 모든 컨트롤 컬렉션에서 제거 되도록 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-145">When overriding <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> method to ensure that all the controls are removed from the collection.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.Control -&gt; bool" Usage="controlCollection.Contains control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="2b476-146">컬렉션에서 찾을 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-146">The <see cref="T:System.Windows.Forms.Control" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="2b476-147">지정된 컨트롤이 컬렉션의 멤버인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-147">Determines whether the specified control is a member of the collection.</span></span></summary>
        <returns><span data-ttu-id="2b476-148"><see cref="T:System.Windows.Forms.Control" />이 컬렉션의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-148"><see langword="true" /> if the <see cref="T:System.Windows.Forms.Control" /> is a member of the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-149">이 메서드를 사용 하면 확인할 수 있습니다 여부를 <xref:System.Windows.Forms.Control> 작업을 수행 하기 전에 컬렉션의 멤버인는 <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="2b476-149">This method enables you to determine whether a <xref:System.Windows.Forms.Control> is a member of the collection before attempting to perform operations on the <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="2b476-150">있는지 확인 하려면이 메서드를 사용할 수는 <xref:System.Windows.Forms.Control> 에 추가한 또는 컬렉션의 멤버는 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-150">You can use this method to confirm that a <xref:System.Windows.Forms.Control> has been added to or is still a member of the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b476-151">다음 코드 예제에서는 제거는 <xref:System.Windows.Forms.Control> 에서 합니다 <xref:System.Windows.Forms.Control.ControlCollection> 파생된 클래스의 <xref:System.Windows.Forms.Panel> 컬렉션의 멤버인 경우.</span><span class="sxs-lookup"><span data-stu-id="2b476-151">The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection.</span></span> <span data-ttu-id="2b476-152">만든이 예제는 <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>와 하나 이상의 <xref:System.Windows.Forms.RadioButton> 대 한 control 권한를 <xref:System.Windows.Forms.Form>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-152">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-153"><xref:System.Windows.Forms.RadioButton> 컨트롤을 추가 하는 <xref:System.Windows.Forms.Panel> 컨트롤 및 <xref:System.Windows.Forms.Panel> 에 추가 된 컨트롤을 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-153">The <xref:System.Windows.Forms.RadioButton> controls are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-154">라디오 단추 라는 단추를 클릭 하면 `removeButton` 에서 제거 되는 <xref:System.Windows.Forms.Control.ControlCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-154">When the button is clicked, the radio button named `removeButton` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="controlCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2b476-155"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에서 찾을 수 있는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-155">The key to locate in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></param>
        <summary><span data-ttu-id="2b476-156"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에 지정된 키를 갖는 항목이 포함되어 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-156">Determines whether the <see cref="T:System.Windows.Forms.Control.ControlCollection" /> contains an item with the specified key.</span></span></summary>
        <returns><span data-ttu-id="2b476-157"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에 지정된 키를 갖는 항목이 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-157"><see langword="true" /> if the <see cref="T:System.Windows.Forms.Control.ControlCollection" /> contains an item with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-158"><xref:System.Windows.Forms.Control.Name%2A> 의 속성을 <xref:System.Windows.Forms.Control> 에 대 한 키에 해당 하는 <xref:System.Windows.Forms.Control> 에 <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="2b476-158">The <xref:System.Windows.Forms.Control.Name%2A> property of a <xref:System.Windows.Forms.Control> corresponds to the key for a <xref:System.Windows.Forms.Control> in the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="controlCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dest"><span data-ttu-id="2b476-159">컬렉션에서 복사한 요소의 대상인 1차원 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-159">The one-dimensional array that is the destination of the elements copied from the collection.</span></span> <span data-ttu-id="2b476-160">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-160">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="2b476-161"><paramref name="dest" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-161">The zero-based index in <paramref name="dest" /> at which to begin copying.</span></span></param>
        <summary><span data-ttu-id="2b476-162">특정 배열 인덱스부터 시작하여 컬렉션의 요소를 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-162">Copies the elements of the collection to an array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.Control.ControlCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b476-163">컬렉션에 포함된 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-163">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="2b476-164">컬렉션에 포함된 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-164">The number of elements contained in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="controlCollection.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary><span data-ttu-id="2b476-165">현재 컬렉션 개체와 지정된 개체가 같은지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-165">Specifies whether the current collection object and the specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="2b476-166"><paramref name="other" />와 이 인스턴스가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-166"><see langword="true" /> if this instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllChildren As Boolean) As Control()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::Control ^&gt; ^ Find(System::String ^ key, bool searchAllChildren);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.Control[]" Usage="controlCollection.Find (key, searchAllChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2b476-167"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에서 찾을 수 있는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-167">The key to locate in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></param>
        <param name="searchAllChildren"><span data-ttu-id="2b476-168">모든 자식 컨트롤을 검색하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-168"><see langword="true" /> to search all child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b476-169"><see cref="P:System.Windows.Forms.Control.Name" /> 속성으로 컨트롤을 검색하고 일치하는 모든 컨트롤의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-169">Searches for controls by their <see cref="P:System.Windows.Forms.Control.Name" /> property and builds an array of all the controls that match.</span></span></summary>
        <returns><span data-ttu-id="2b476-170">일치하는 컨트롤이 들어 있는 <see cref="T:System.Windows.Forms.Control" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-170">An array of type <see cref="T:System.Windows.Forms.Control" /> containing the matching controls.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b476-171"><paramref name="key" />가 <see langword="null" />이거나 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-171"><paramref name="key" /> is <see langword="null" /> or the empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildIndex">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b476-172">컨트롤 컬렉션 내에 있는 컨트롤의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-172">Retrieves the index of a control within the control collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public int GetChildIndex (System.Windows.Forms.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetChildIndex(class System.Windows.Forms.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildIndex (child As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetChildIndex(System::Windows::Forms::Control ^ child);" />
      <MemberSignature Language="F#" Value="member this.GetChildIndex : System.Windows.Forms.Control -&gt; int" Usage="controlCollection.GetChildIndex child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="2b476-173">컨트롤 컬렉션에서 검색할 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-173">The <see cref="T:System.Windows.Forms.Control" /> to search for in the control collection.</span></span></param>
        <summary><span data-ttu-id="2b476-174">컨트롤 컬렉션 내에 있는 지정된 자식 컨트롤의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-174">Retrieves the index of the specified child control within the control collection.</span></span></summary>
        <returns><span data-ttu-id="2b476-175">컨트롤 컬렉션 내에 있는 지정된 자식 컨트롤의 위치를 나타내는 0부터 시작하는 인덱스 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-175">A zero-based index value that represents the location of the specified child control within the control collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-176">컨트롤 인덱스 값이 0 z 순서 맨 위에 있는 이며 많은 맨 아래에 더 가깝습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-176">The control with an index value of zero is at the top of the z-order, and higher numbers are closer to the bottom.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b476-177"><paramref name="child" /><see cref="T:System.Windows.Forms.Control" />이 <see cref="T:System.Windows.Forms.Control.ControlCollection" />에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-177">The <paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> is not in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
      </Docs>
    </Member>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public virtual int GetChildIndex (System.Windows.Forms.Control child, bool throwException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildIndex(class System.Windows.Forms.Control child, bool throwException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildIndex (child As Control, throwException As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildIndex(System::Windows::Forms::Control ^ child, bool throwException);" />
      <MemberSignature Language="F#" Value="abstract member GetChildIndex : System.Windows.Forms.Control * bool -&gt; int&#xA;override this.GetChildIndex : System.Windows.Forms.Control * bool -&gt; int" Usage="controlCollection.GetChildIndex (child, throwException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="throwException" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="2b476-178">컨트롤 컬렉션에서 검색할 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-178">The <see cref="T:System.Windows.Forms.Control" /> to search for in the control collection.</span></span></param>
        <param name="throwException"><span data-ttu-id="2b476-179"><paramref name="child" /> 매개 변수에 지정된 <see cref="T:System.Windows.Forms.Control" />이 <see cref="T:System.Windows.Forms.Control.ControlCollection" />에 있는 컨트롤이 아닌 경우 예외를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-179"><see langword="true" /> to throw an exception if the <see cref="T:System.Windows.Forms.Control" /> specified in the <paramref name="child" /> parameter is not a control in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b476-180">컨트롤 컬렉션 내에 있는 지정된 자식 컨트롤의 인덱스를 가져옵니다. 지정된 컨트롤이 컨트롤 컬렉션 내에 없으면 예외가 발생할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-180">Retrieves the index of the specified child control within the control collection, and optionally raises an exception if the specified control is not within the control collection.</span></span></summary>
        <returns><span data-ttu-id="2b476-181">컨트롤 컬렉션 내에 있는 지정된 자식 컨트롤의 위치를 나타내는 0부터 시작하는 인덱스 값입니다. <see cref="T:System.Windows.Forms.Control" />에 지정된 <see cref="T:System.Windows.Forms.Control.ControlCollection" />이 없으면 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-181">A zero-based index value that represents the location of the specified child control within the control collection; otherwise -1 if the specified <see cref="T:System.Windows.Forms.Control" /> is not found in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-182">컨트롤 인덱스 값이 0 z 순서 맨 위에 있는 이며 많은 맨 아래에 더 가깝습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-182">The control with an index value of zero is at the top of the z-order, and higher numbers are closer to the bottom.</span></span> <span data-ttu-id="2b476-183">반환 값이-1 일 때만 반환 되는 `throwException` 매개 변수는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-183">A return value of -1 is returned only when the `throwException` parameter is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b476-184"><paramref name="child" /><see cref="T:System.Windows.Forms.Control" />이 <see cref="T:System.Windows.Forms.Control.ControlCollection" />에 없고, <paramref name="throwException" /> 매개 변수 값이 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-184">The <paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> is not in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />, and the <paramref name="throwException" /> parameter value is <see langword="true" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="controlCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b476-185"><see cref="T:System.Windows.Forms.Control.ControlCollection" />을 반복하는 데 사용되는 열거자 개체에 대한 참조를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-185">Retrieves a reference to an enumerator object that is used to iterate over a <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <returns><span data-ttu-id="2b476-186"><see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-186">An <see cref="T:System.Collections.IEnumerator" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="controlCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b476-187">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-187">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="2b476-188">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-188">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.Control -&gt; int" Usage="controlCollection.IndexOf control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="2b476-189">컬렉션에서 찾을 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-189">The <see cref="T:System.Windows.Forms.Control" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="2b476-190">컨트롤 컬렉션 내에 있는 지정된 컨트롤의 인덱스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-190">Retrieves the index of the specified control in the control collection.</span></span></summary>
        <returns><span data-ttu-id="2b476-191"><see cref="T:System.Windows.Forms.Control" /> 내에 있는 지정된 <see cref="T:System.Windows.Forms.Control.ControlCollection" />의 위치를 나타내는 인덱스(0부터 시작) 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-191">A zero-based index value that represents the position of the specified <see cref="T:System.Windows.Forms.Control" /> in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-192">컨트롤 컬렉션에 없는 경우는 <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> 메서드 반환 값이-1입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-192">If the control is not found in the collection, the <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> method return value is -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="controlCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2b476-193">검색할 컨트롤의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-193">The name of the control to search for.</span></span></param>
        <summary><span data-ttu-id="2b476-194">컬렉션에서 지정된 항목이 처음 발견된 위치의 인덱스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-194">Retrieves the index of the first occurrence of the specified item within the collection.</span></span></summary>
        <returns><span data-ttu-id="2b476-195">컬렉션에서 지정된 이름의 컨트롤을 검색한 결과 맨 처음 검색된 컨트롤의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-195">The zero-based index of the first occurrence of the control with the specified name in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-196">경우 <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> 마지막 연속적으로 호출 반환 인덱스 키 일치에 먼저 확인 하 고 컬렉션의 시작 부분에서 일치 하는 경우 검색을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-196">If <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> is called successively, the last returned index will be checked for a key match first, and if there is no match, the search starts at the beginning of the collection.</span></span>  
  
 <span data-ttu-id="2b476-197">키 비교는 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-197">The key comparison is not case-sensitive.</span></span> <span data-ttu-id="2b476-198">경우는 `key` 매개 변수가 `null` 빈 문자열 또는 지정 된 항목 키가 없는 <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> -1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-198">If the `key` parameter is `null` or an empty string, or an item with the specified key is not found, <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> returns -1.</span></span>  
  
 <span data-ttu-id="2b476-199"><xref:System.Windows.Forms.Control.Name%2A> 의 속성을 <xref:System.Windows.Forms.Control> 에 대 한 키에 해당 하는 <xref:System.Windows.Forms.Control> 에 <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="2b476-199">The <xref:System.Windows.Forms.Control.Name%2A> property of a <xref:System.Windows.Forms.Control> corresponds to the key for a <xref:System.Windows.Forms.Control> in the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.Control.ControlCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b476-200">이 컬렉션 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-200">Gets a value that indicates whether this collection object is read-only.</span></span></summary>
        <value><span data-ttu-id="2b476-201"><see langref="true" /> 현재 인스턴스가 읽기 전용입니다. 그렇지 않으면 <see langref="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-201"><see langref="true" /> if the current instance is read-only; otherwise, <see langref="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b476-202">컬렉션의 <see cref="T:System.Windows.Forms.Control" />을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-202">Indicates a <see cref="T:System.Windows.Forms.Control" /> in the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ default[int] { System::Windows::Forms::Control ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2b476-203">컨트롤 컬렉션에서 검색할 컨트롤의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-203">The index of the control to retrieve from the control collection.</span></span></param>
        <summary><span data-ttu-id="2b476-204">컬렉션에서 지정된 인덱스 위치의 <see cref="T:System.Windows.Forms.Control" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-204">Indicates the <see cref="T:System.Windows.Forms.Control" /> at the specified indexed location in the collection.</span></span></summary>
        <value><span data-ttu-id="2b476-205">컨트롤 컬렉션 내에서 지정된 인덱스 위치의 <see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-205">The <see cref="T:System.Windows.Forms.Control" /> located at the specified index location within the control collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-206">검색 하는 <xref:System.Windows.Forms.Control> 에서 <xref:System.Windows.Forms.Control.ControlCollection>, 특정 인덱스 값을 사용 하 여 컬렉션 개체를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-206">To retrieve a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection>, reference the collection object with a specific index value.</span></span> <span data-ttu-id="2b476-207">인덱스 값을 <xref:System.Windows.Forms.Control.ControlCollection> 인덱스가 0부터 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-207">The index value of the <xref:System.Windows.Forms.Control.ControlCollection> is a zero-based index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2b476-208"><paramref name="index" /> 값이 0보다 작거나 컬렉션에 포함된 컨트롤의 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="2b476-208">The <paramref name="index" /> value is less than zero or is greater than or equal to the number of controls in the collection.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ default[System::String ^] { System::Windows::Forms::Control ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2b476-209">컨트롤 컬렉션에서 검색할 컨트롤의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-209">The name of the control to retrieve from the control collection.</span></span></param>
        <summary><span data-ttu-id="2b476-210">컬렉션에서 지정된 키를 갖는 <see cref="T:System.Windows.Forms.Control" />을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-210">Indicates a <see cref="T:System.Windows.Forms.Control" /> with the specified key in the collection.</span></span></summary>
        <value><span data-ttu-id="2b476-211"><see cref="T:System.Windows.Forms.Control" /> 내에서 지정된 키를 갖는 <see cref="T:System.Windows.Forms.Control.ControlCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-211">The <see cref="T:System.Windows.Forms.Control" /> with the specified key within the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-212"><xref:System.Windows.Forms.Control.Name%2A> 의 속성을 <xref:System.Windows.Forms.Control> 에 대 한 키에 해당 하는 <xref:System.Windows.Forms.Control> 에 <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="2b476-212">The <xref:System.Windows.Forms.Control.Name%2A> property of a <xref:System.Windows.Forms.Control> corresponds to the key for a <xref:System.Windows.Forms.Control> in the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Owner { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b476-213"><see cref="T:System.Windows.Forms.Control.ControlCollection" />을 소유하는 컨트롤을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-213">Gets the control that owns this <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <value><span data-ttu-id="2b476-214">이 <see cref="T:System.Windows.Forms.Control" /> 컬렉션을 소유하는 <see cref="T:System.Windows.Forms.Control.ControlCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-214">The <see cref="T:System.Windows.Forms.Control" /> that owns this <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.Control -&gt; unit&#xA;override this.Remove : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2b476-215"><see cref="T:System.Windows.Forms.Control" />에서 제거할 <see cref="T:System.Windows.Forms.Control.ControlCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-215">The <see cref="T:System.Windows.Forms.Control" /> to remove from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></param>
        <summary><span data-ttu-id="2b476-216">컨트롤 컬렉션에서 지정된 컨트롤을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-216">Removes the specified control from the control collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-217">경우는 <xref:System.Windows.Forms.Control> 제거는 컨트롤 컬렉션에서 모든 후속 컨트롤을 컬렉션에서 한 칸 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-217">When a <xref:System.Windows.Forms.Control> is removed from the control collection, all subsequent controls are moved up one position in the collection.</span></span>  
  
 <span data-ttu-id="2b476-218">제거할 수도 있습니다는 <xref:System.Windows.Forms.Control> 를 사용 하 여 합니다 <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> 메서드 또는 모든 제어를 사용 하 여 제거를 <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-218">You can also remove a <xref:System.Windows.Forms.Control> by using the <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> method, or remove all controls by using the <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="2b476-219">새로 추가 하려면 <xref:System.Windows.Forms.Control> 컬렉션에 개체를 사용 합니다 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> 또는 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-219">To add new <xref:System.Windows.Forms.Control> objects to the collection, use the <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> or <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b476-220">다음 코드 예제에서는 제거는 <xref:System.Windows.Forms.Control> 에서 합니다 <xref:System.Windows.Forms.Control.ControlCollection> 파생된 클래스의 <xref:System.Windows.Forms.Panel> 컬렉션의 멤버인 경우.</span><span class="sxs-lookup"><span data-stu-id="2b476-220">The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection.</span></span> <span data-ttu-id="2b476-221">예제를 실행 하려면 만든를 <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>, 및 하나 이상의 <xref:System.Windows.Forms.RadioButton> 컨트롤을 <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="2b476-221">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and one or more <xref:System.Windows.Forms.RadioButton> controls on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-222">합니다 <xref:System.Windows.Forms.RadioButton> 컨트롤을 추가 하는 <xref:System.Windows.Forms.Panel> 컨트롤 및 <xref:System.Windows.Forms.Panel> 컨트롤을 추가할를 <xref:System.Windows.Forms.Form>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-222">The <xref:System.Windows.Forms.RadioButton> controls are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control is added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-223">라디오 단추 라는 단추를 클릭 하면 `radioButton2` 에서 제거 되는 <xref:System.Windows.Forms.Control.ControlCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-223">When the button is clicked, the radio button named `radioButton2` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b476-224">재정의 하는 경우 <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> 컨트롤 컬렉션에서 제거 되었는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-224">When overriding <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> method to ensure that the control is removed from the collection.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="controlCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2b476-225">제거할 <see cref="T:System.Windows.Forms.Control" />의 인덱스 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-225">The index value of the <see cref="T:System.Windows.Forms.Control" /> to remove.</span></span></param>
        <summary><span data-ttu-id="2b476-226">컨트롤 컬렉션에서 지정된 인덱스 위치의 컨트롤을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-226">Removes a control from the control collection at the specified indexed location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-227">경우는 <xref:System.Windows.Forms.Control> 제거는 컨트롤 컬렉션에서 모든 후속 컨트롤을 컬렉션에서 한 칸 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-227">When a <xref:System.Windows.Forms.Control> is removed from the control collection, all subsequent controls are moved up one position in the collection.</span></span>  
  
 <span data-ttu-id="2b476-228">제거할 수도 있습니다는 <xref:System.Windows.Forms.Control> 를 사용 하 여 이전에 추가 합니다 <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> 또는 <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-228">You can also remove a <xref:System.Windows.Forms.Control> that you previously added by using the <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> or <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> methods.</span></span>  
  
 <span data-ttu-id="2b476-229">새로 추가 하려면 <xref:System.Windows.Forms.Control> 컬렉션에 개체를 사용 합니다 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> 또는 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2b476-229">To add new <xref:System.Windows.Forms.Control> objects to the collection, use the <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> or <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b476-230">다음 코드 예제에서는 첫 번째 제거 <xref:System.Windows.Forms.Control> 에 <xref:System.Windows.Forms.Control.ControlCollection> 파생된 클래스의 <xref:System.Windows.Forms.Panel> 컬렉션 수가 0 보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="2b476-230">The following code example removes the first <xref:System.Windows.Forms.Control> in the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if the count of the collection is greater than zero.</span></span> <span data-ttu-id="2b476-231">만든이 예제는 <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>, 및 다른 컨트롤에 하나 이상의 <xref:System.Windows.Forms.Form>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-231">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one other control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-232">다른 컨트롤에 추가 됩니다는 <xref:System.Windows.Forms.Panel> 컨트롤 및 <xref:System.Windows.Forms.Panel> 에 추가 된 컨트롤을 <xref:System.Windows.Forms.Form>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-232">The other controls are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="2b476-233">단추를 패널에 포함 된 첫 번째 컨트롤에서 제거 됩니다는 <xref:System.Windows.Forms.Control.ControlCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-233">When the button is clicked, the first control contained in the panel is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#5)]
 [!code-csharp[ControlCollection#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#5)]
 [!code-vb[ControlCollection#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="controlCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2b476-234">제거할 자식 컨트롤의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-234">The name of the child control to remove.</span></span></param>
        <summary><span data-ttu-id="2b476-235">지정된 키를 갖는 자식 컨트롤을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-235">Removes the child control with the specified key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-236"><xref:System.Windows.Forms.Control.Name%2A> 의 속성을 <xref:System.Windows.Forms.Control> 에 대 한 키에 해당 하는 <xref:System.Windows.Forms.Control> 에 <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="2b476-236">The <xref:System.Windows.Forms.Control.Name%2A> property of a <xref:System.Windows.Forms.Control> corresponds to the key for a <xref:System.Windows.Forms.Control> in the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildIndex">
      <MemberSignature Language="C#" Value="public virtual void SetChildIndex (System.Windows.Forms.Control child, int newIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildIndex(class System.Windows.Forms.Control child, int32 newIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetChildIndex (child As Control, newIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetChildIndex(System::Windows::Forms::Control ^ child, int newIndex);" />
      <MemberSignature Language="F#" Value="abstract member SetChildIndex : System.Windows.Forms.Control * int -&gt; unit&#xA;override this.SetChildIndex : System.Windows.Forms.Control * int -&gt; unit" Usage="controlCollection.SetChildIndex (child, newIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="2b476-237">검색할 <paramref name="child" /><see cref="T:System.Windows.Forms.Control" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-237">The <paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> to search for.</span></span></param>
        <param name="newIndex"><span data-ttu-id="2b476-238">컨트롤의 새 인덱스 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-238">The new index value of the control.</span></span></param>
        <summary><span data-ttu-id="2b476-239">컬렉션에 있는 지정된 자식 컨트롤의 인덱스를 지정된 인덱스 값으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-239">Sets the index of the specified child control in the collection to the specified index value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-240">때 <xref:System.Windows.Forms.Control.ControlCollection.SetChildIndex%2A> 호출 되는 <xref:System.Windows.Forms.Control> 에서 참조 하는 `child` 매개 변수에서 지정한 위치로 이동 `newIndex` 및 다른 <xref:System.Windows.Forms.Control> 참조를 <xref:System.Windows.Forms.Control.ControlCollection> 이동에 맞게 자식은 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-240">When <xref:System.Windows.Forms.Control.ControlCollection.SetChildIndex%2A> is called, the <xref:System.Windows.Forms.Control> referred to by the `child` parameter is moved to the position specified by `newIndex` and the other <xref:System.Windows.Forms.Control> references in the <xref:System.Windows.Forms.Control.ControlCollection> are reordered to accommodate the move.</span></span> <span data-ttu-id="2b476-241">컨트롤 인덱스 값이 0 z 순서 맨 위에 있는 이며 많은 맨 아래에 더 가깝습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-241">The control with an index value of zero is at the top of the z-order, and higher numbers are closer to the bottom.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b476-242"><paramref name="child" /> 컨트롤이 <see cref="T:System.Windows.Forms.Control.ControlCollection" />에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="2b476-242">The <paramref name="child" /> control is not in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (control As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ control) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="2b476-243">이 컬렉션에 추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-243">The object to add to this collection.</span></span></param>
        <summary><span data-ttu-id="2b476-244">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Add(System.Object)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2b476-244">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="2b476-245">새 요소가 삽입된 위치 또는 -1(항목이 컬렉션에 삽입되지 않았음을 나타냄)입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-245">The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-246">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2b476-246">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2b476-247"><xref:System.Windows.Forms.Control.ControlCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-247">It can be used only when the <xref:System.Windows.Forms.Control.ControlCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (control As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ control) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="2b476-248"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-248">The object to locate in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></param>
        <summary><span data-ttu-id="2b476-249">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Contains(System.Object)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2b476-249">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="2b476-250"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에 지정된 개체가 있는 요소가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-250"><see langword="true" /> if the <see cref="T:System.Windows.Forms.Control.ControlCollection" /> contains an element that has the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

 ## Remarks  
<span data-ttu-id="2b476-251">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2b476-251">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2b476-252"><xref:System.Windows.Forms.Control.ControlCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-252">It can be used only when the <xref:System.Windows.Forms.Control.ControlCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (control As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ control) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="2b476-253"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-253">The object to locate in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></param>
        <summary><span data-ttu-id="2b476-254">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2b476-254">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="2b476-255"><see cref="T:System.Windows.Forms.Control.ControlCollection" />에 <paramref name="control" />가 있으면 해당 값의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-255">The index of <paramref name="control" /> if found in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks  
<span data-ttu-id="2b476-256">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2b476-256">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2b476-257"><xref:System.Windows.Forms.Control.ControlCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-257">It can be used only when the <xref:System.Windows.Forms.Control.ControlCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2b476-258"><paramref name="value" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-258">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="2b476-259">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-259">The object to insert.</span></span></param>
        <summary><span data-ttu-id="2b476-260">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2b476-260">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks  
<span data-ttu-id="2b476-261">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2b476-261">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2b476-262"><xref:System.Windows.Forms.Control.ControlCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-262">It can be used only when the <xref:System.Windows.Forms.Control.ControlCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (control As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ control) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary><span data-ttu-id="2b476-263">이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Remove(System.Object)" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2b476-263">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-264">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2b476-264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2b476-265"><xref:System.Windows.Forms.Control.ControlCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-265">It can be used only when the <xref:System.Windows.Forms.Control.ControlCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b476-266">이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2b476-266">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="2b476-267">이 인스턴스의 복사본인 새 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-267">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b476-268">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="2b476-268">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2b476-269"><xref:System.Windows.Forms.Control.ControlCollection> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b476-269">It can be used only when the <xref:System.Windows.Forms.Control.ControlCollection> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>