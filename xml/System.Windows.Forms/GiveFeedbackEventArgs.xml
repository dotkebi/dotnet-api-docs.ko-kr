<Type Name="GiveFeedbackEventArgs" FullName="System.Windows.Forms.GiveFeedbackEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b4de4d861988864ab86d72dcd8dcdae0a37d200" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56393102" /></Metadata><TypeSignature Language="C#" Value="public class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GiveFeedbackEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GiveFeedbackEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type GiveFeedbackEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b2844-101">끌기 작업 중에 발생하는 <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> 이벤트에 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-101">Provides data for the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event, which occurs during a drag operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2844-102"><xref:System.Windows.Forms.Control.GiveFeedback> 이벤트는 끌기 작업 중에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-102">The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation.</span></span> <span data-ttu-id="b2844-103">이 통해 끌어서 놓기 작업 중 사용자의 시각적 피드백을 제공 하기 위해 마우스 포인터의 모양을 수정 하는 끌기 이벤트의 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-103">It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="b2844-104"><xref:System.Windows.Forms.GiveFeedbackEventArgs> 개체 끌어서 놓기 작업 유형과 기본 커서 사용 되는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-104">A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used.</span></span>  
  
 <span data-ttu-id="b2844-105">이벤트 모델에 대 한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-105">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2844-106">다음 예제에서는 두는 끌어서 놓기 작업을 보여 줍니다. <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-106">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="b2844-107">예제에서는 호출을 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="b2844-107">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="b2844-108">마우스를 이동 하는 경우 끌기 작업이 시작 둘 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-108">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="b2844-109">합니다 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드를 사용 하는 동안 끌어서 항목의 인덱스를 확인 합니다 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-109">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="b2844-110">또한이 사용자 지정 커서를 사용 하 여 끌어서 놓기 작업에 대 한 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-110">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="b2844-111">이 예제에서는 두 개의 가정 커서 파일인 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌기에 대 한 애플리케이션 디렉터리에 있으며 놓기 없음 커서를 각각.</span><span class="sxs-lookup"><span data-stu-id="b2844-111">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="b2844-112">사용자 지정 커서를 사용할 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 확인란이 선택 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-112">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="b2844-113">에 설정 된 사용자 지정 커서를 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-113">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="b2844-114">키보드 상태에서 평가 되는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`결정 끌기 작업을 SHIFT, CTRL, ALT 또는 CTRL + ALT 키의 상태에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-114">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="b2844-115">위치는 `ListBox` 하는 동안 결정 됩니다 드롭다운 수행 되는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-115">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="b2844-116">데이터 삭제 없는 경우는 `String`, 해당 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-116">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b2844-117">드롭다운의 상태에 표시 됩니다는 마지막으로, 합니다 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-117">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="b2844-118">데이터를 오른쪽에 대 한 drop `ListBox` 에서 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 값에 적절 한 위치에 추가 됩니다는 `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="b2844-118">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="b2844-119">끌기 작업 이동 폼의 범위를 벗어나는 경우에서 끌어서 놓기 작업이 취소 되는 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-119">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="b2844-120">이 코드 예제에서는 사용 하 여는 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-120">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="b2844-121">참조 된 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="b2844-121">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (effect As DragDropEffects, useDefaultCursors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GiveFeedbackEventArgs(System::Windows::Forms::DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.GiveFeedbackEventArgs : System.Windows.Forms.DragDropEffects * bool -&gt; System.Windows.Forms.GiveFeedbackEventArgs" Usage="new System.Windows.Forms.GiveFeedbackEventArgs (effect, useDefaultCursors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="useDefaultCursors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="effect"><span data-ttu-id="b2844-122">끌어서 놓기 작업의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-122">The type of drag-and-drop operation.</span></span> <span data-ttu-id="b2844-123">가능한 값은 <see cref="T:System.Windows.Forms.DragDropEffects" />에 정의된 상수에 비트 OR(|) 연산을 적용하여 얻습니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-123">Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <see cref="T:System.Windows.Forms.DragDropEffects" />.</span></span></param>
        <param name="useDefaultCursors"><span data-ttu-id="b2844-124">기본 포인터가 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-124"><see langword="true" /> if default pointers are used; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b2844-125"><see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2844-126">표시된 끌어서 놓기 작업 피드백을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-126">Gets the drag-and-drop operation feedback that is displayed.</span></span></summary>
        <value><span data-ttu-id="b2844-127"><see cref="T:System.Windows.Forms.DragDropEffects" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-127">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2844-128">다음 예제에서는 두는 끌어서 놓기 작업을 보여 줍니다. <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-128">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="b2844-129">예제에서는 호출을 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="b2844-129">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="b2844-130">마우스를 이동 하는 경우 끌기 작업이 시작 둘 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-130">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="b2844-131">합니다 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드를 사용 하는 동안 끌어서 항목의 인덱스를 확인 합니다 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-131">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="b2844-132">또한이 사용자 지정 커서를 사용 하 여 끌어서 놓기 작업에 대 한 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-132">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="b2844-133">이 예제에서는 두 개의 가정 커서 파일인 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌기에 대 한 애플리케이션 디렉터리에 있으며 놓기 없음 커서를 각각.</span><span class="sxs-lookup"><span data-stu-id="b2844-133">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="b2844-134">사용자 지정 커서를 사용할 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 확인란이 선택 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-134">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="b2844-135">에 설정 된 사용자 지정 커서를 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-135">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="b2844-136">키보드 상태에서 평가 되는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`결정 끌기 작업을 SHIFT, CTRL, ALT 또는 CTRL + ALT 키의 상태에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-136">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="b2844-137">위치는 `ListBox` 하는 동안 결정 됩니다 드롭다운 수행 되는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-137">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="b2844-138">데이터 삭제 없는 경우는 `String`, 해당 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-138">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b2844-139">드롭다운의 상태에 표시 됩니다는 마지막으로, 합니다 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-139">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="b2844-140">데이터를 오른쪽에 대 한 drop `ListBox` 에서 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 값에 적절 한 위치에 추가 됩니다는 `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="b2844-140">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="b2844-141">끌기 작업 이동 폼의 범위를 벗어나는 경우에서 끌어서 놓기 작업이 취소 되는 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-141">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="b2844-142">이 코드 예제에서는 사용 하 여는 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-142">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="b2844-143">참조 된 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="b2844-143">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCursors">
      <MemberSignature Language="C#" Value="public bool UseDefaultCursors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCursors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCursors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCursors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCursors : bool with get, set" Usage="System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2844-144">끌기 작업에서 끌어서 놓기 작업에 관련된 기본 커서를 사용해야 하는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-144">Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.</span></span></summary>
        <value><span data-ttu-id="b2844-145">기본 포인터가 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-145"><see langword="true" /> if the default pointers are used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2844-146">시스템 기본 끌어서 놓기 커서 이동 또는 복사와 같은 다양 한 끌어서 놓기 작업을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-146">The system provides default drag-drop cursors for different drag-drop operations such as move or copy.</span></span> <span data-ttu-id="b2844-147">하는 경우 <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> 로 설정 된 `false`, 적절 한 커서를 설정 하는 이벤트 소스 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-147">If <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> is set to `false`, it is the responsibility of the event source to set the appropriate cursor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2844-148">다음 예제에서는 두는 끌어서 놓기 작업을 보여 줍니다. <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-148">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="b2844-149">예제에서는 호출을 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="b2844-149">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="b2844-150">마우스를 이동 하는 경우 끌기 작업이 시작 둘 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-150">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="b2844-151">합니다 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드를 사용 하는 동안 끌어서 항목의 인덱스를 확인 합니다 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-151">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="b2844-152">또한이 사용자 지정 커서를 사용 하 여 끌어서 놓기 작업에 대 한 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-152">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="b2844-153">이 예제에서는 두 개의 가정 커서 파일인 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌기에 대 한 애플리케이션 디렉터리에 있으며 놓기 없음 커서를 각각.</span><span class="sxs-lookup"><span data-stu-id="b2844-153">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="b2844-154">사용자 지정 커서를 사용할 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 확인란이 선택 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-154">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="b2844-155">에 설정 된 사용자 지정 커서를 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-155">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="b2844-156">키보드 상태에서 평가 되는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`결정 끌기 작업을 SHIFT, CTRL, ALT 또는 CTRL + ALT 키의 상태에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-156">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="b2844-157">위치는 `ListBox` 하는 동안 결정 됩니다 드롭다운 수행 되는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-157">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="b2844-158">데이터 삭제 없는 경우는 `String`, 해당 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-158">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b2844-159">드롭다운의 상태에 표시 됩니다는 마지막으로, 합니다 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-159">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="b2844-160">데이터를 오른쪽에 대 한 drop `ListBox` 에서 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 값에 적절 한 위치에 추가 됩니다는 `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="b2844-160">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="b2844-161">끌기 작업 이동 폼의 범위를 벗어나는 경우에서 끌어서 놓기 작업이 취소 되는 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-161">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="b2844-162">이 코드 예제에서는 사용 하 여는 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b2844-162">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="b2844-163">참조 된 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="b2844-163">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>