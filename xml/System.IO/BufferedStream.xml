<Type Name="BufferedStream" FullName="System.IO.BufferedStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="71e1102c5749c0adafe029c5f178435435df6319" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56390072" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.BufferedStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedStream sealed : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type BufferedStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1eb61-101">다른 스트림에서 작업을 읽고 쓰기 위한 버퍼링 레이어를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-101">Adds a buffering layer to read and write operations on another stream.</span></span> <span data-ttu-id="1eb61-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-103">버퍼는 운영 체제에 대 한 호출의 수를 줄이는 하는 데이터를 캐시 하는 데 사용 되는 메모리의 바이트 블록.</span><span class="sxs-lookup"><span data-stu-id="1eb61-103">A buffer is a block of bytes in memory used to cache data, thereby reducing the number of calls to the operating system.</span></span> <span data-ttu-id="1eb61-104">버퍼 개선 읽기 및 쓰기 성능을 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-104">Buffers improve read and write performance.</span></span> <span data-ttu-id="1eb61-105">버퍼 읽기 또는 쓰기, 하지만에 되지 둘 다 동시에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-105">A buffer can be used for either reading or writing, but never both simultaneously.</span></span> <span data-ttu-id="1eb61-106">합니다 <xref:System.IO.BufferedStream.Read%2A> 하 고 <xref:System.IO.BufferedStream.Write%2A> 의 메서드 `BufferedStream` 자동으로 버퍼를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-106">The <xref:System.IO.BufferedStream.Read%2A> and <xref:System.IO.BufferedStream.Write%2A> methods of `BufferedStream` automatically maintain the buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1eb61-107">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1eb61-108">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1eb61-109">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1eb61-110">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="1eb61-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1eb61-111">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="1eb61-112">`BufferedStream` 특정 형식의 스트림 구성 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-112">`BufferedStream` can be composed around certain types of streams.</span></span> <span data-ttu-id="1eb61-113">바이트 읽기 및 쓰기는 기본 데이터 소스 또는 리포지토리에 대 한 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-113">It provides implementations for reading and writing bytes to an underlying data source or repository.</span></span> <span data-ttu-id="1eb61-114">사용 하 여 <xref:System.IO.BinaryReader> 고 <xref:System.IO.BinaryWriter> 읽고 쓰며 다른 데이터 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-114">Use <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> for reading and writing other data types.</span></span> <span data-ttu-id="1eb61-115">`BufferedStream` 버퍼는 필요 하지 않은 경우 입력 및 출력 속도가 느려지지 버퍼를 방지 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-115">`BufferedStream` is designed to prevent the buffer from slowing down input and output when the buffer is not needed.</span></span> <span data-ttu-id="1eb61-116">항상 읽기 및 내부 버퍼 크기 보다 큰 크기에 대 한 다음 쓰기 경우 `BufferedStream` 내부 버퍼를 할당 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-116">If you always read and write for sizes greater than the internal buffer size, then `BufferedStream` might not even allocate the internal buffer.</span></span> <span data-ttu-id="1eb61-117">`BufferedStream` 또한 읽기를 버퍼링 하 고 공유 버퍼에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-117">`BufferedStream` also buffers reads and writes in a shared buffer.</span></span> <span data-ttu-id="1eb61-118">거의 항상 일련의 읽기 또는 쓰기를 수행할 수는 있지만 둘 사이 번갈아 전환 거의 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-118">It is assumed that you will almost always be doing a series of reads or writes, but rarely alternate between the two of them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eb61-119">다음 코드 예제에 사용 하는 방법을 보여 줍니다 합니다 `BufferedStream` 를 통해 클래스는 `NetworkStream` 특정 I/O 작업의 성능을 향상 시키기 위해 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-119">The following code examples show how to use the `BufferedStream` class over the `NetworkStream` class to increase the performance of certain I/O operations.</span></span> <span data-ttu-id="1eb61-120">클라이언트를 시작 하기 전에 원격 컴퓨터에서 서버를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-120">Start the server on a remote computer before starting the client.</span></span> <span data-ttu-id="1eb61-121">클라이언트를 시작할 때 명령줄 인수 형태로 원격 컴퓨터 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-121">Specify the remote computer name as a command-line argument when starting the client.</span></span> <span data-ttu-id="1eb61-122">달라질 합니다 `dataArraySize` 및 `streamBufferSize` 성능에 미치는 영향을 보려는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-122">Vary the `dataArraySize` and `streamBufferSize` constants to view their effect on performance.</span></span>  
  
 <span data-ttu-id="1eb61-123">첫 번째 예제에서는 클라이언트에서 실행 되는 코드를 보여 줍니다. 및 두 번째 예제에는 서버에서 실행 되는 코드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-123">The first example shows the code that runs on the client, and the second example shows the code that runs on the server.</span></span>  
  
 <span data-ttu-id="1eb61-124">**예제 1: 클라이언트에서 실행 되는 코드**</span><span class="sxs-lookup"><span data-stu-id="1eb61-124">**Example 1: Code that runs on the client**</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#1)]
 [!code-csharp[System.IO.BufferedStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#1)]
 [!code-vb[System.IO.BufferedStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#1)]  
  
 <span data-ttu-id="1eb61-125">**예제 2: 서버에서 실행 되는 코드**</span><span class="sxs-lookup"><span data-stu-id="1eb61-125">**Example 2: Code that runs on the server**</span></span>  
  
 [!code-cpp[System.IO.BufferedStream2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream2/CPP/server.cpp#1)]
 [!code-csharp[System.IO.BufferedStream2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream2/CS/server.cs#1)]
 [!code-vb[System.IO.BufferedStream2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream2/VB/server.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.Stream" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-126">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-126">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-127">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-127">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-128">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-128">How to: Write Text to a File</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1eb61-129"><see cref="T:System.IO.BufferedStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-129">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.BufferedStream : System.IO.Stream -&gt; System.IO.BufferedStream" Usage="new System.IO.BufferedStream stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="1eb61-130">현재 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-130">The current stream.</span></span></param>
        <summary><span data-ttu-id="1eb61-131">기본 버퍼 크기인 4096바이트를 사용하여 <see cref="T:System.IO.BufferedStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-131">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class with a default buffer size of 4096 bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-132">공유 읽기/쓰기 버퍼를 처음으로 할당 되는 `BufferedStream` 개체는이 생성자를 사용 하 여 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-132">A shared read/write buffer is allocated the first time a `BufferedStream` object is initialized with this constructor.</span></span> <span data-ttu-id="1eb61-133">모든 읽기 및 쓰기 보다 크거나 같은 경우 공유 버퍼는 `bufferSize`합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-133">The shared buffer is not used if all reads and writes are greater than or equal to `bufferSize`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-134"><paramref name="stream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-134"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-135">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-135">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-136">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-136">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-137">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-137">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedStream (System.IO.Stream stream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedStream(System::IO::Stream ^ stream, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.BufferedStream : System.IO.Stream * int -&gt; System.IO.BufferedStream" Usage="new System.IO.BufferedStream (stream, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="1eb61-138">현재 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-138">The current stream.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="1eb61-139">버퍼 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-139">The buffer size in bytes.</span></span></param>
        <summary><span data-ttu-id="1eb61-140">지정된 버퍼 크기를 사용하여 <see cref="T:System.IO.BufferedStream" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-140">Initializes a new instance of the <see cref="T:System.IO.BufferedStream" /> class with the specified buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-141">공유 읽기/쓰기 버퍼를 처음으로 할당 되는 `BufferedStream` 개체는이 생성자를 사용 하 여 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-141">A shared read/write buffer is allocated the first time a `BufferedStream` object is initialized with this constructor.</span></span> <span data-ttu-id="1eb61-142">모든 읽기 및 쓰기 보다 크거나 같은 경우 공유 버퍼는 `bufferSize`합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-142">The shared buffer is not used if all reads and writes are greater than or equal to `bufferSize`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eb61-143">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.BufferedStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-143">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#2)]
 [!code-csharp[System.IO.BufferedStream1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#2)]
 [!code-vb[System.IO.BufferedStream1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-144"><paramref name="stream" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-144"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-145"><paramref name="bufferSize" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-145"><paramref name="bufferSize" /> is negative.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-146">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-146">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-147">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-147">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-148">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-148">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="bufferedStream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1eb61-149">데이터를 읽을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-149">The buffer to read the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="1eb61-150">스트림에서 읽은 데이터를 쓰기 시작할 <paramref name="buffer" />의 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-150">The byte offset in <paramref name="buffer" /> at which to begin writing data read from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="1eb61-151">읽을 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-151">The maximum number of bytes to read.</span></span></param>
        <param name="callback"><span data-ttu-id="1eb61-152">읽기가 완료되면 호출되는 선택적 비동기 콜백입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-152">An optional asynchronous callback, to be called when the read is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1eb61-153">다른 요청에서 특정 비동기 읽기 요청을 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-153">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="1eb61-154">비동기 읽기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-154">Begins an asynchronous read operation.</span></span> <span data-ttu-id="1eb61-155">대신 <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="1eb61-155">(Consider using <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="1eb61-156">보류 중인 비동기 읽기를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-156">An object that represents the asynchronous read, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-157">.NET Framework 4 및 이전 버전에서와 같은 메서드를 사용 해야 <xref:System.IO.Stream.BeginRead%2A> 고 <xref:System.IO.Stream.EndRead%2A> 비동기 파일 작업을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-157">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="1eb61-158">그러나 이러한 메서드는에서 계속 제공 합니다 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 레거시 코드를 지원 하기 위해 새로운 비동기 메서드를 같은 <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, 및 <xref:System.IO.BufferedStream.FlushAsync%2A>, 비동기 파일 작업을 보다 쉽게 구현 하는 도움말.</span><span class="sxs-lookup"><span data-stu-id="1eb61-158">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="1eb61-159"><xref:System.IO.BufferedStream.EndWrite%2A> 호출할 때마다 한 번씩 호출 해야 <xref:System.IO.BufferedStream.BeginRead%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-159"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once for every call to <xref:System.IO.BufferedStream.BeginRead%2A>.</span></span> <span data-ttu-id="1eb61-160">다른 읽기를 시작 하기 전에 읽기 프로세스를 종료 하지 못하면 교착 상태 같은 바람직하지 않은 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-160">Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eb61-161">사용 된 <xref:System.IO.BufferedStream.CanRead%2A> 현재 인스턴스가 읽기를 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-161">Use the <xref:System.IO.BufferedStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="1eb61-162"><xref:System.IO.BufferedStream.EndRead%2A> 이 사용 하 여 호출 해야 <xref:System.IAsyncResult> 읽은 바이트 수는 방법을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-162"><xref:System.IO.BufferedStream.EndRead%2A> must be called with this <xref:System.IAsyncResult> to find out how many bytes were read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-163"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-163"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-164"><paramref name="offset" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-164"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-165">스트림 끝을 지나 비동기 읽기를 시도한 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-165">Attempted an asynchronous read past the end of the stream.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1eb61-166">버퍼 길이에서 <paramref name="offset" />를 빼면 <paramref name="count" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-166">The buffer length minus <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-167">현재 스트림이 읽기 작업을 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-167">The current stream does not support the read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="bufferedStream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1eb61-168">현재 스트림에 쓸 데이터를 포함하는 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-168">The buffer containing data to write to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="1eb61-169">현재 스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-169">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="1eb61-170">쓸 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-170">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="1eb61-171">비동기 쓰기 작업이 완료되면 호출될 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-171">The method to be called when the asynchronous write operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="1eb61-172">다른 요청에서 특정 비동기 쓰기 요청을 구별하는 사용자 제공 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-172">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="1eb61-173">비동기 쓰기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-173">Begins an asynchronous write operation.</span></span> <span data-ttu-id="1eb61-174">대신 <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="1eb61-174">(Consider using <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="1eb61-175">보류 중인 비동기 쓰기를 참조하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-175">An object that references the asynchronous write which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-176">.NET Framework 4 및 이전 버전에서와 같은 메서드를 사용 해야 <xref:System.IO.Stream.BeginWrite%2A> 고 <xref:System.IO.Stream.EndWrite%2A> 비동기 파일 작업을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-176">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="1eb61-177">그러나 이러한 메서드는에서 계속 제공 합니다 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 레거시 코드를 지원 하기 위해 새로운 비동기 메서드를 같은 <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, 및 <xref:System.IO.BufferedStream.FlushAsync%2A>, 비동기 파일 작업을 보다 쉽게 구현 하는 도움말.</span><span class="sxs-lookup"><span data-stu-id="1eb61-177">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="1eb61-178"><xref:System.IO.BufferedStream.EndWrite%2A> 정확히 한 번만 호출 해야 모든 <xref:System.IAsyncResult> 에서 <xref:System.IO.BufferedStream.BeginWrite%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-178"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.BufferedStream.BeginWrite%2A>.</span></span> <span data-ttu-id="1eb61-179"><xref:System.IO.BufferedStream.EndWrite%2A> I/O 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-179"><xref:System.IO.BufferedStream.EndWrite%2A> will block until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1eb61-180"><paramref name="buffer" /> 길이에서 <paramref name="offset" />을 뺀 값이 <paramref name="count" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-180"><paramref name="buffer" /> length minus <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-181"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-181"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-182"><paramref name="offset" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-182"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-183">스트림이 쓰기를 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-183">The stream does not support writing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int" Usage="System.IO.BufferedStream.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.BufferedStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1eb61-184">현재 스트림이 읽기를 지원하는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-184">Gets a value indicating whether the current stream supports reading.</span></span></summary>
        <value><span data-ttu-id="1eb61-185">스트림이 읽기를 지원하면 <see langword="true" />이고, 스트림이 닫혀 있거나 쓰기 전용 권한으로 열렸으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-185"><see langword="true" /> if the stream supports reading; <see langword="false" /> if the stream is closed or was opened with write-only access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-186">클래스에서 파생 하는 경우 <xref:System.IO.Stream> 읽기를 지원 하지 않습니다, 호출 하는 <xref:System.IO.BufferedStream.Read%2A>, <xref:System.IO.BufferedStream.ReadByte%2A>, <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.EndRead%2A>, 및 `Peek` 의 메서드 <xref:System.IO.StreamReader>를 <xref:System.IO.StringReader>, 및 <xref:System.IO.TextReader> throw를 <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="1eb61-186">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.BufferedStream.Read%2A>, <xref:System.IO.BufferedStream.ReadByte%2A>, <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.EndRead%2A>, and the `Peek` methods of <xref:System.IO.StreamReader>, <xref:System.IO.StringReader>, and <xref:System.IO.TextReader> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="1eb61-187">이 속성을 반환 하는 경우 스트림이 닫혀, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-187">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eb61-188">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.BufferedStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-188">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#5)]
 [!code-csharp[System.IO.BufferedStream1#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#5)]
 [!code-vb[System.IO.BufferedStream1#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-189">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-189">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-190">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-190">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-191">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-191">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.BufferedStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1eb61-192">현재 스트림이 검색을 지원하는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-192">Gets a value indicating whether the current stream supports seeking.</span></span></summary>
        <value><span data-ttu-id="1eb61-193">스트림이 검색을 지원하면 <see langword="true" />이고, 스트림이 닫혔거나 스트림이 콘솔에 대한 출력 또는 파이프와 같은 운영 체제 핸들로부터 생성된 경우에는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-193"><see langword="true" /> if the stream supports seeking; <see langword="false" /> if the stream is closed or if the stream was constructed from an operating system handle such as a pipe or output to the console.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-194">파생 된 클래스가 <xref:System.IO.Stream> 검색을 지원 하지 않습니다, 호출 하는 <xref:System.IO.BufferedStream.Length%2A>, <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Position%2A>, 및 <xref:System.IO.BufferedStream.Seek%2A> throw를 <xref:System.NotSupportedException>입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-194">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.BufferedStream.Length%2A>, <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Position%2A>, and <xref:System.IO.BufferedStream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="1eb61-195">이 속성을 반환 하는 경우 스트림이 닫혀, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-195">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eb61-196">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.BufferedStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-196">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#3)]
 [!code-csharp[System.IO.BufferedStream1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#3)]
 [!code-vb[System.IO.BufferedStream1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.SetLength(System.Int64)" />
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-197">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-197">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-198">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-198">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-199">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-199">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.BufferedStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1eb61-200">현재 스트림이 쓰기를 지원하는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-200">Gets a value indicating whether the current stream supports writing.</span></span></summary>
        <value><span data-ttu-id="1eb61-201">스트림이 쓰기를 지원하면 <see langword="true" />이고, 스트림이 닫혀 있거나 읽기 전용 권한으로 열렸으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-201"><see langword="true" /> if the stream supports writing; <see langword="false" /> if the stream is closed or was opened with read-only access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-202">파생 된 클래스가 <xref:System.IO.Stream> 에 대 한 호출을 작성 하는 것을 지원 하지 않습니다 <xref:System.IO.BufferedStream.SetLength%2A>를 <xref:System.IO.BufferedStream.Write%2A>, 또는 <xref:System.IO.BufferedStream.WriteByte%2A> throw를 <xref:System.NotSupportedException>입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-202">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.BufferedStream.SetLength%2A>, <xref:System.IO.BufferedStream.Write%2A>, or <xref:System.IO.BufferedStream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="1eb61-203">이 속성을 반환 하는 경우 스트림이 닫혀, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-203">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eb61-204">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.BufferedStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-204">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#4)]
 [!code-csharp[System.IO.BufferedStream1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#4)]
 [!code-vb[System.IO.BufferedStream1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-205">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-205">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-206">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-206">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-207">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-207">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="bufferedStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1eb61-208">스트림을 닫고 현재 버퍼링된 스트림과 관련된 리소스(특히 소켓 및 파일 핸들과 같은 시스템 리스소)를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-208">Closes the stream and releases any resources (especially system resources such as sockets and file handles) associated with the current buffered stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="1eb61-209">버퍼링된 된 스트림에 닫히기 전에 기본 데이터 소스 또는 리포지토리에 버퍼에 이전에 기록 된 모든 데이터가 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-209">Any data previously written to the buffer is copied to the underlying data source or repository before the buffered stream is closed.</span></span> <span data-ttu-id="1eb61-210">호출 하는 데 필요한는 따라서 <xref:System.IO.BufferedStream.Flush> Close를 호출 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-210">Therefore, it is not necessary to call <xref:System.IO.BufferedStream.Flush> before invoking Close.</span></span> <span data-ttu-id="1eb61-211">Close 호출을 다음 버퍼링된 된 스트림에 대 한 모든 작업에는 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-211">Following a call to Close, any operations on the buffered stream might raise exceptions.</span></span>

<span data-ttu-id="1eb61-212">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.IO.BufferedStream.Flush> 닫기 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-212">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BufferedStream.Flush> or Close.</span></span> <span data-ttu-id="1eb61-213">설정 <xref:System.IO.StreamWriter.AutoFlush> 을 true로 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-213">Setting <xref:System.IO.StreamWriter.AutoFlush> to true means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="1eb61-214">이 수는 다음 문자 블록을 올바르게 인코딩할 수 있도록 상태로 (부분 자)를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-214">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="1eb61-215">이 시나리오는 UTF8 및 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩된만 수 있는 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-215">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>

<span data-ttu-id="1eb61-216">닫힌 후에 스트림을 조작 하는 동안 발생할 수 있는 <xref:System.ObjectDisposedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-216">Attempting to manipulate a stream after it has been closed might throw an <xref:System.ObjectDisposedException>.</span></span>

## Examples  
<span data-ttu-id="1eb61-217">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.BufferedStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-217">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>

```vb
' When bufStream is closed, netStream is in turn 
' closed, which in turn shuts down the connection 
' and closes clientSocket.
Console.WriteLine(vbCrLf & "Shutting down the connection.")
bufStream.Close()
```

```csharp
// When bufStream is closed, netStream is in turn
// closed, which in turn shuts down the connection
// and closes clientSocket.
Console.WriteLine("\nShutting down the connection.");
bufStream.Close();
```

```cpp
// When bufStream is closed, netStream is in turn closed,
// which in turn shuts down the connection and closes
// clientSocket.
Console::WriteLine( "\nShutting down connection." );
bufStream->Close();

```

]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-218">스트림을 닫는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-218">An error occurred while trying to close the stream.</span></span></exception>
        <altmember cref="M:System.IO.BufferedStream.Flush" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-219">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-219">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-220">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-220">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-221">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-221">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="bufferedStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="bufferedStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="bufferedStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="1eb61-222">대기할 보류 중인 비동기 요청에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-222">The reference to the pending asynchronous request to wait for.</span></span></param>
        <summary><span data-ttu-id="1eb61-223">보류 중인 비동기 읽기 작업이 완료되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-223">Waits for the pending asynchronous read operation to complete.</span></span> <span data-ttu-id="1eb61-224">대신 <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="1eb61-224">(Consider using <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="1eb61-225">0과 요청한 바이트 수 사이의 스트림에서 읽은 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-225">The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</span></span> <span data-ttu-id="1eb61-226">스트림은 스트림의 끝에서 0만을 반환하며 그렇지 않으면 최소한 1바이트를 사용할 수 있을 때까지 차단됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-226">Streams only return 0 only at the end of the stream, otherwise, they should block until at least 1 byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-227">.NET Framework 4 및 이전 버전에서와 같은 메서드를 사용 해야 <xref:System.IO.Stream.BeginRead%2A> 고 <xref:System.IO.Stream.EndRead%2A> 비동기 파일 작업을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-227">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="1eb61-228">그러나 이러한 메서드는에서 계속 제공 합니다 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 레거시 코드를 지원 하기 위해 새로운 비동기 메서드를 같은 <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, 및 <xref:System.IO.BufferedStream.FlushAsync%2A>, 비동기 파일 작업을 보다 쉽게 구현 하는 도움말.</span><span class="sxs-lookup"><span data-stu-id="1eb61-228">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="1eb61-229"><xref:System.IO.BufferedStream.EndRead%2A> 이 사용 하 여 호출 해야 <xref:System.IAsyncResult> 읽은 바이트 수는 방법을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-229"><xref:System.IO.BufferedStream.EndRead%2A> must be called with this <xref:System.IAsyncResult> to find out how many bytes were read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-230"><paramref name="asyncResult" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-230"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1eb61-231">이 클래스에 대해 <see cref="T:System.IAsyncResult" />를 호출하여 이 <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 개체가 만들어지지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-231">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="bufferedStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="1eb61-232">보류 중인 비동기 요청입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-232">The pending asynchronous request.</span></span></param>
        <summary><span data-ttu-id="1eb61-233">비동기 쓰기 작업을 종료하고 I/O 작업이 완료될 때까지 차단시킵니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-233">Ends an asynchronous write operation and blocks until the I/O operation is complete.</span></span> <span data-ttu-id="1eb61-234">대신 <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />를 사용하세요.</span><span class="sxs-lookup"><span data-stu-id="1eb61-234">(Consider using <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-235">.NET Framework 4 및 이전 버전에서와 같은 메서드를 사용 해야 <xref:System.IO.Stream.BeginWrite%2A> 고 <xref:System.IO.Stream.EndWrite%2A> 비동기 파일 작업을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-235">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="1eb61-236">그러나 이러한 메서드는에서 계속 제공 합니다 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 레거시 코드를 지원 하기 위해 새로운 비동기 메서드를 같은 <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, 및 <xref:System.IO.BufferedStream.FlushAsync%2A>, 비동기 파일 작업을 보다 쉽게 구현 하는 도움말.</span><span class="sxs-lookup"><span data-stu-id="1eb61-236">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.BufferedStream.ReadAsync%2A>, <xref:System.IO.BufferedStream.WriteAsync%2A>, and <xref:System.IO.BufferedStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="1eb61-237"><xref:System.IO.BufferedStream.EndWrite%2A> 호출할 때마다 한 번씩 호출 해야 <xref:System.IO.BufferedStream.BeginRead%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-237"><xref:System.IO.BufferedStream.EndWrite%2A> must be called exactly once for every call to <xref:System.IO.BufferedStream.BeginRead%2A>.</span></span> <span data-ttu-id="1eb61-238">다른 읽기 작업이 시작 하기 전에 읽기 프로세스를 종료 하지 못하면 교착 상태 또는 기타 원치 않는 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-238">Failing to end a read process before beginning another read operation can cause deadlock or other undesirable behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-239"><paramref name="asyncResult" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-239"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1eb61-240">이 클래스에 대해 <see cref="T:System.IAsyncResult" />를 호출하여 이 <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 개체가 만들어지지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-240">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="bufferedStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1eb61-241">이 스트림에 대한 모든 버퍼를 지우고 버퍼링된 모든 데이터가 내부 장치에 쓰여지도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-241">Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-242">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 `Flush` 또는 <xref:System.IO.Stream.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-242">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.Stream.Close%2A>.</span></span>  
  
 <span data-ttu-id="1eb61-243">사용 하는 경우는 <xref:System.IO.BufferedStream.%23ctor%2A> 생성자를 만드는 동안 버퍼 크기를 지정 하는 `BufferedStream` 개체, 버퍼 크기에 도달 하면 플러시됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-243">If you use the <xref:System.IO.BufferedStream.%23ctor%2A> constructor, thus specifying the buffer size while creating the `BufferedStream` object, the content is flushed when it reaches the buffer size.</span></span> <span data-ttu-id="1eb61-244">예를 들어,와 같은 코드 `BufferedStream bs = new BufferedStream(bs, 5)` 버퍼 크기 5 바이트에 도달할 때 내용을 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-244">For example, code such as `BufferedStream bs = new BufferedStream(bs, 5)` will flush the content when the buffer size reaches 5 bytes.</span></span>  
  
 <span data-ttu-id="1eb61-245">모든 읽기 및 쓰기 메서드 `BufferedStream` 자동으로 호출 하지 않아도 되므로 버퍼를 유지 관리 `Flush` 읽기 및 쓰기 간에 앞뒤로 전환 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="1eb61-245">All the read and write methods of `BufferedStream` automatically maintain the buffer, so there is no need to invoke `Flush` when switching back and forth between reading and writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eb61-246">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.BufferedStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-246">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#6)]
 [!code-csharp[System.IO.BufferedStream1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#6)]
 [!code-vb[System.IO.BufferedStream1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-247">스트림이 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-247">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-248">데이터 소스 또는 리포지토리가 열려 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-248">The data source or repository is not open.</span></span></exception>
        <altmember cref="M:System.IO.Stream.Close" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-249">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-249">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-250">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-250">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-251">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-251">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="bufferedStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="1eb61-252">취소 요청을 모니터링할 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-252">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="1eb61-253">이 스트림에 대해 모든 버퍼를 비동기적으로 지우고 버퍼링된 데이터가 내부 디바이스에 쓰여지도록 하고 취소 요청을 모니터링합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-253">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="1eb61-254">비동기 플러시 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-254">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-255">스트림이 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-255">The stream has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.BufferedStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1eb61-256">스트림 길이(바이트)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-256">Gets the stream length in bytes.</span></span></summary>
        <value><span data-ttu-id="1eb61-257">스트림 길이(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-257">The stream length in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-258">내부 스트림이 <see langword="null" />이거나 닫혀 있는 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-258">The underlying stream is <see langword="null" /> or closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-259">스트림이 검색을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-259">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-260">스트림이 닫힌 후에 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-260">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-261">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-261">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-262">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-262">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-263">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-263">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.BufferedStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1eb61-264">현재 스트림 내에서의 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-264">Gets the position within the current stream.</span></span></summary>
        <value><span data-ttu-id="1eb61-265">현재 스트림 내에서의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-265">The position within the current stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-266">합니다 `get` 접근자를 호출 <xref:System.IO.BufferedStream.Seek%2A> 기본 스트림 내의 현재 위치를 가져오는 다음 버퍼 내의 현재 위치에 따라이 값을 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-266">The `get` accessor invokes <xref:System.IO.BufferedStream.Seek%2A> to obtain the current position within the underlying stream and then adjusts this value according to the current position within the buffer.</span></span>  
  
 <span data-ttu-id="1eb61-267">합니다 `set` 접근자는 이전에 기본 스트림 버퍼에 쓴 모든 데이터를 복사 하 고 다음 호출 <xref:System.IO.BufferedStream.Seek%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-267">The `set` accessor copies any data previously written to the buffer to the underlying stream, and then invokes <xref:System.IO.BufferedStream.Seek%2A>.</span></span>  
  
 <span data-ttu-id="1eb61-268">스트림의 길이 초과 하는 위치 검색을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-268">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-269"><see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />에 음수 값이 전달된 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-269">The value passed to <see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-270">스트림이 닫히는 등 I/O 오류가 발생하는 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-270">An I/O error occurs, such as the stream being closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-271">스트림이 검색을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-271">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-272">스트림이 닫힌 후에 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-272">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="P:System.IO.BufferedStream.CanSeek" />
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-273">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-273">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-274">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-274">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-275">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-275">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (array As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="bufferedStream.Read (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1eb61-276">바이트를 복사해 넣을 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-276">The buffer to which bytes are to be copied.</span></span></param>
        <param name="offset"><span data-ttu-id="1eb61-277">바이트를 읽기 시작하는 버퍼의 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-277">The byte offset in the buffer at which to begin reading bytes.</span></span></param>
        <param name="count"><span data-ttu-id="1eb61-278">읽을 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-278">The number of bytes to be read.</span></span></param>
        <summary><span data-ttu-id="1eb61-279">현재 버퍼링된 스트림의 바이트를 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-279">Copies bytes from the current buffered stream to an array.</span></span></summary>
        <returns><span data-ttu-id="1eb61-280"><paramref name="array" />로 읽어온 총 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-280">The total number of bytes read into <paramref name="array" />.</span></span> <span data-ttu-id="1eb61-281">총 바이트 수는 요청된 바이트 수를 현재 사용할 수 없는 경우 이 바이트 수보다 작을 수 있으며 데이터를 읽기 전에 스트림의 끝에 도달한 경우에는 0이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-281">This can be less than the number of bytes requested if that many bytes are not currently available, or 0 if the end of the stream has been reached before any data can be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-282">`Read` 메서드가 스트림의 끝에 도달한 경우에 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-282">The `Read` method will return 0 only if the end of the stream is reached.</span></span> <span data-ttu-id="1eb61-283">다른 모든 경우에서 `Read` 항상 스트림에서 반환 하기 전에 최소한 1 바이트를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-283">In all other cases, `Read` always reads at least one byte from the stream before returning.</span></span> <span data-ttu-id="1eb61-284">호출 시 스트림의 데이터가 없는 경우 당연히 `Read`, `Read` 메서드 (스트림의 맨 끝에 도달한 자동으로) 하는 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-284">By definition, if no data is available from the stream upon a call to `Read`, the `Read` method returns 0 (the end of the stream is reached automatically).</span></span> <span data-ttu-id="1eb61-285">구현을 스트림의 맨 끝에 도달 하지 않은 경우에 요청 된 것 보다 적은 바이트를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-285">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="1eb61-286">사용 하 여 <xref:System.IO.BinaryReader> 읽기 기본 데이터 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-286">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eb61-287">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.BufferedStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-287">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#7)]
 [!code-csharp[System.IO.BufferedStream1#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#7)]
 [!code-vb[System.IO.BufferedStream1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1eb61-288"><paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값이 <paramref name="count" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-288">Length of <paramref name="array" /> minus <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-289"><paramref name="array" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-289"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-290"><paramref name="offset" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-290"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-291">스트림이 열리지 않았거나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-291">The stream is not open or is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-292">스트림이 읽기를 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-292">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-293">스트림이 닫힌 후에 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-293">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="P:System.IO.BufferedStream.CanRead" />
        <altmember cref="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-294">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-294">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-295">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-295">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-296">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-296">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="bufferedStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1eb61-297">데이터를 쓸 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-297">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="1eb61-298">스트림의 데이터를 쓰기 시작할 <paramref name="buffer" />의 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-298">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="1eb61-299">읽을 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-299">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1eb61-300">취소 요청을 모니터링할 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-300">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="1eb61-301">현재 스트림에서 바이트의 시퀀스를 비동기적으로 읽고 읽은 바이트 수만큼 스트림 내에서 앞으로 이동하며 취소 요청을 모니터링합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-301">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="1eb61-302">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-302">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="1eb61-303"><paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-303">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="1eb61-304">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 스트림의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-304">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-305">인스턴스를 만들어 취소 토큰을 만들 수 있습니다는 <xref:System.Threading.CancellationTokenSource> 클래스 및 전달 합니다 <xref:System.Threading.CancellationTokenSource.Token%2A> 속성으로는 `cancellationToken` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-305">You can create a cancellation token by creating an instance of the <xref:System.Threading.CancellationTokenSource> class and passing the <xref:System.Threading.CancellationTokenSource.Token%2A> property as the `cancellationToken` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-306"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-306"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-307"><paramref name="offset" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-307"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1eb61-308"><paramref name="offset" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-308">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-309">스트림이 읽기를 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-309">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-310">스트림이 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-310">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eb61-311">스트림을 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-311">The stream is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="bufferedStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1eb61-312">원본 스트림에서 바이트를 읽고 <see langword="int" />로 캐스팅된 바이트를 반환하거나 스트림의 끝에서 읽는 경우 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-312">Reads a byte from the underlying stream and returns the byte cast to an <see langword="int" />, or returns -1 if reading from the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="1eb61-313"><see langword="int" />로 캐스팅된 바이트이거나 스트림의 끝에서 읽는 경우 바이트 수는 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-313">The byte cast to an <see langword="int" />, or -1 if reading from the end of the stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-314">스트림이 닫히는 등 I/O 오류가 발생하는 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-314">An I/O error occurs, such as the stream being closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-315">스트림이 읽기를 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-315">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-316">스트림이 닫힌 후에 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-316">Methods were called after the stream was closed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1eb61-317">기본 구현을 <see langword="Stream" /> 새 싱글바이트 배열을 만들고 호출 <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-317">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="1eb61-318">공식적으로 올바른 중일 것은 비효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-318">While this is formally correct, it is inefficient.</span></span> <span data-ttu-id="1eb61-319">내부 버퍼를 사용 하 여 스트림을이 메서드를 재정의 하 고 버퍼에 대 한 모든 호출 추가 배열 할당 방지를 직접 읽는 훨씬 더 효율적으로 버전을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-319">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-320">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-320">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-321">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-321">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-322">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-322">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="bufferedStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="1eb61-323"><paramref name="origin" />에 상대적인 바이트 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-323">A byte offset relative to <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="1eb61-324">새 위치를 가져오는 데 사용되는 참조 위치를 나타내는 <see cref="T:System.IO.SeekOrigin" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-324">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point from which to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="1eb61-325">버퍼링된 현재 스트림 내에서의 위치를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-325">Sets the position within the current buffered stream.</span></span></summary>
        <returns><span data-ttu-id="1eb61-326">버퍼링된 현재 스트림 내에서의 새 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-326">The new position within the current buffered stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-327">`offset`이 음수인 경우 새 위치는 `origin`에 의해 지정된 바이트 수만큼 `offset`으로 지정된 위치 앞에 옵니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-327">If `offset` is negative, the new position will precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="1eb61-328">하는 경우 `offset` 가 0 이면 새 위치에 지정 된 위치 수 `origin`입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-328">If `offset` is 0, the new position will be the position specified by `origin`.</span></span> <span data-ttu-id="1eb61-329">`offset`이 양수인 경우 새 위치는 `origin`에 의해 지정된 바이트 수만큼 `offset`으로 지정된 위치 뒤에 옵니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-329">If `offset` is positive, the new position will follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="1eb61-330">경우는 <xref:System.IO.BufferedStream> 개체에 대 한 기본 스트림이 <xref:System.IO.StreamReader> 개체를 호출 합니다 <xref:System.IO.BufferedStream.Seek%2A> 메서드는 더 이상 판독기의 내부 버퍼의 위치와 일치 하도록 스트림의 위치를 발생할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-330">When a <xref:System.IO.BufferedStream> object is the base stream for a <xref:System.IO.StreamReader> object, calling the <xref:System.IO.BufferedStream.Seek%2A> method can cause the position of the stream to no longer match the position of the internal buffer in the reader.</span></span> <span data-ttu-id="1eb61-331">내부 버퍼를 다시 설정 하려면 호출는 <xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=nameWithType> 메서드도 있습니다; 그러나이 경우 성능이 저하 메서드와 반드시 필요한 경우에 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-331">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=nameWithType> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="1eb61-332">스트림의 길이 초과 하는 위치 검색을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-332">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-333">스트림이 열리지 않았거나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-333">The stream is not open or is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-334">스트림이 검색을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-334">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-335">스트림이 닫힌 후에 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-335">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="T:System.IO.SeekOrigin" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-336">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-336">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-337">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-337">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-338">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-338">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="bufferedStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1eb61-339">현재 버퍼링된 스트림의 원하는 길이(바이트)를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-339">An integer indicating the desired length of the current buffered stream in bytes.</span></span></param>
        <summary><span data-ttu-id="1eb61-340">버퍼링된 스트림의 길이를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-340">Sets the length of the buffered stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-341">버퍼는 내부 데이터 소스 또는 리포지토리에의 길이 설정 하기 전에 플러시됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-341">The buffer is flushed before setting the length of the underlying data source or repository.</span></span> <span data-ttu-id="1eb61-342">지정된 된 값을 사용 하면 버퍼링 된 스트림의 현재 길이 보다 작으면, 버퍼링된 된 스트림에 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-342">If the specified value is less than the current length of the buffered stream, the buffered stream is truncated.</span></span> <span data-ttu-id="1eb61-343">지정 된 값을 버퍼링 된 스트림의 현재 길이 보다 큰 경우 버퍼링된 된 스트림에 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-343">If the specified value is larger than the current length of the buffered stream, the buffered stream is expanded.</span></span> <span data-ttu-id="1eb61-344">버퍼링된 된 스트림에 확장 되어 있으면 이전 및 새 길이 간에 버퍼링 된 스트림의 내용은 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-344">If the buffered stream is expanded, the contents of the buffered stream between the old and the new lengths are not defined.</span></span>  
  
 <span data-ttu-id="1eb61-345">`SetLength` 필요한 경우 버퍼링 된 모든 쓰기를 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-345">`SetLength` flushes any buffered writes if necessary.</span></span>  
  
 <span data-ttu-id="1eb61-346">스트림이 쓰기와 검색을 모두 지원 해야 `SetLength` 작동 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-346">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-347"><paramref name="value" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-347"><paramref name="value" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-348">스트림이 열리지 않았거나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-348">The stream is not open or is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-349">스트림이 쓰기 및 검색을 모두 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-349">The stream does not support both writing and seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-350">스트림이 닫힌 후에 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-350">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-351">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-351">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-352">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-352">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-353">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-353">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream UnderlyingStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream UnderlyingStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BufferedStream.UnderlyingStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ UnderlyingStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingStream : System.IO.Stream" Usage="System.IO.BufferedStream.UnderlyingStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (array As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="bufferedStream.Write (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1eb61-354"><paramref name="count" /> 바이트를 현재 버퍼링된 스트림에 복사할 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-354">The byte array from which to copy <paramref name="count" /> bytes to the current buffered stream.</span></span></param>
        <param name="offset"><span data-ttu-id="1eb61-355">버퍼링된 현재 스트림으로 바이트를 복사하기 시작할 버퍼의 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-355">The offset in the buffer at which to begin copying bytes to the current buffered stream.</span></span></param>
        <param name="count"><span data-ttu-id="1eb61-356">현재 버퍼링된 스트림에 쓸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-356">The number of bytes to be written to the current buffered stream.</span></span></param>
        <summary><span data-ttu-id="1eb61-357">버퍼링된 스트림에 바이트를 복사하고 버퍼링된 스트림 내에서의 현재 위치를 쓴 바이트 수만큼 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-357">Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1eb61-358">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.BufferedStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-358">This code example is part of a larger example provided for the <xref:System.IO.BufferedStream> class.</span></span>  
  
 [!code-cpp[System.IO.BufferedStream1#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CPP/client.cpp#6)]
 [!code-csharp[System.IO.BufferedStream1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BufferedStream1/CS/client.cs#6)]
 [!code-vb[System.IO.BufferedStream1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BufferedStream1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1eb61-359"><paramref name="array" /> 길이에서 <paramref name="offset" />을 뺀 값이 <paramref name="count" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-359">Length of <paramref name="array" /> minus <paramref name="offset" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-360"><paramref name="array" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-360"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-361"><paramref name="offset" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-361"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1eb61-362">스트림이 닫혀 있거나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="1eb61-362">The stream is closed or <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-363">스트림이 쓰기를 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-363">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-364">스트림이 닫힌 후에 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-364">Methods were called after the stream was closed.</span></span></exception>
        <altmember cref="P:System.IO.BufferedStream.CanWrite" />
        <altmember cref="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-365">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-365">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-366">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-366">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-367">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-367">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="bufferedStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1eb61-368">데이터를 쓸 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-368">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="1eb61-369">스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-369">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="1eb61-370">쓸 최대 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-370">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1eb61-371">취소 요청을 모니터링할 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-371">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="1eb61-372">바이트의 시퀀스를 현재 스트림에 비동기적으로 쓰고 쓰여진 바이트 수만큼 이 스트림 내의 현재 위치를 앞으로 이동한 후 취소 요청을 모니터링합니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-372">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="1eb61-373">비동기 쓰기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-373">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eb61-374">인스턴스를 만들어 취소 토큰을 만들 수 있습니다는 <xref:System.Threading.CancellationTokenSource> 클래스 및 전달 합니다 <xref:System.Threading.CancellationTokenSource.Token%2A> 속성으로는 `cancellationToken` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-374">You can create a cancellation token by creating an instance of the <xref:System.Threading.CancellationTokenSource> class and passing the <xref:System.Threading.CancellationTokenSource.Token%2A> property as the `cancellationToken` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-375"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-375"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1eb61-376"><paramref name="offset" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-376"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1eb61-377"><paramref name="offset" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-377">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-378">스트림이 쓰기를 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-378">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-379">스트림이 삭제되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-379">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eb61-380">이전 쓰기 작업에서 현재 이 스트림을 사용하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-380">The stream is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BufferedStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="bufferedStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1eb61-381">스트림에 쓸 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-381">A byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="1eb61-382">버퍼링된 스트림의 현재 위치에 바이트를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-382">Writes a byte to the current position in the buffered stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1eb61-383">스트림이 쓰기를 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-383">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1eb61-384"><paramref name="value" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-384"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1eb61-385">스트림이 닫힌 후에 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1eb61-385">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="1eb61-386">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="1eb61-386">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="1eb61-387">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="1eb61-387">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="1eb61-388">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="1eb61-388">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>