<Type Name="TextReader" FullName="System.IO.TextReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a4b4d32df0f20272abb602e4f3dcdaf62f746f09" /><Meta Name="ms.sourcegitcommit" Value="635a1dbdc9cbcf7f7c258ac9ffa0314ed734da90" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/10/2019" /><Meta Name="ms.locfileid" Value="59472159" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextReader : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextReader extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReader abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37fb3-101">여러 개의 문자를 순차적으로 읽을 수 있는 판독기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-101">Represents a reader that can read a sequential series of characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.TextReader> <span data-ttu-id="37fb3-102">추상 기본 클래스인 <xref:System.IO.StreamReader> 고 <xref:System.IO.StringReader>에서 문자를 읽는 스트림과 문자열에 각각.</span><span class="sxs-lookup"><span data-stu-id="37fb3-102">is the abstract base class of <xref:System.IO.StreamReader> and <xref:System.IO.StringReader>, which read characters from streams and strings, respectively.</span></span> <span data-ttu-id="37fb3-103">지정된 된 범위의 문자를 읽는 데 필요한 텍스트 파일을 열려면 또는 기존 스트림을 기반 판독기를 만들려면 이러한 파생된 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-103">Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="37fb3-104">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="37fb3-105">이 형식에서 파생 되는 모든 형식을 사용 하 여 마쳤으면 직접 또는 간접적으로으로 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-105">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="37fb3-106">직접 형식의 dispose 호출 해당 <xref:System.IO.TextReader.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-106">To dispose of the type directly, call its <xref:System.IO.TextReader.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="37fb3-107">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="37fb3-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="37fb3-108">자세한 내용은 Dispose 및 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-108">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37fb3-109"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-109">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-110">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-110">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-111">합니다 <xref:System.IO.StreamReader> 클래스에서 파생 되며 <xref:System.IO.TextReader> 스트림에서 읽기에 대 한 멤버의 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-111">The <xref:System.IO.StreamReader> class derives from <xref:System.IO.TextReader> and provides implementations of the members for reading from a stream.</span></span> <span data-ttu-id="37fb3-112">다음 예제에 사용 하 여 파일에 있는 모든 문자를 읽는 방법을 보여 줍니다는 <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-112">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="37fb3-113">각 문자는 문자, 숫자 또는 공백 문자의 인스턴스를 추가 하기 전에 인지 여부를 확인 합니다 <xref:System.Text.StringBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-113">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="37fb3-114">파생된 클래스가 최소한으로 구현 해야 합니다 <see cref="M:System.IO.TextReader.Peek" /> 하 고 <see cref="M:System.IO.TextReader.Read" /> 의 유용한 인스턴스를 확인 하는 방법 <see cref="T:System.IO.TextReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-114">A derived class must minimally implement the <see cref="M:System.IO.TextReader.Peek" /> and <see cref="M:System.IO.TextReader.Read" /> methods to make a useful instance of <see cref="T:System.IO.TextReader" />.</span></span></para></block>
    <altmember cref="T:System.IO.StringReader" />
    <altmember cref="T:System.IO.StreamReader" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-115">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-115">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-116">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-116">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-117">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-117">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="37fb3-118">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-118">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-119"><see cref="T:System.IO.TextReader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-119">Initializes a new instance of the <see cref="T:System.IO.TextReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-120">파생된 클래스에 대 한이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-120">Use this constructor for derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-121">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-121">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-122">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-122">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-123">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-123">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-124"><see cref="T:System.IO.TextReader" />를 닫고 <see langword="TextReader" />와 관련된 시스템 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-124">Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the <see langword="TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-125">이 구현의 `Close` 호출을 <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> 메서드 전달는 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-125">This implementation of `Close` calls the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37fb3-126">파생된 클래스에서 재정의 하지는 <xref:System.IO.TextReader.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-126">In derived classes, do not override the <xref:System.IO.TextReader.Close%2A> method.</span></span> <span data-ttu-id="37fb3-127">대신 재정의 된 <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> 리소스를 해제 하는 것에 대 한 코드를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-127">Instead, override the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-128">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-128">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-129">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-129">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-130">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-130">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37fb3-131">해당 <see cref="T:System.IO.TextReader" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-131">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-132">해당 <see cref="T:System.IO.TextReader" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-132">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-133"><xref:System.IO.TextReader.Dispose%2A> 사용을 마치면 <xref:System.IO.TextReader>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-133">Call <xref:System.IO.TextReader.Dispose%2A> when you are finished using the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="37fb3-134"><xref:System.IO.TextReader.Dispose%2A> 메서드를 사용하면 <xref:System.IO.TextReader>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-134">The <xref:System.IO.TextReader.Dispose%2A> method leaves the <xref:System.IO.TextReader> in an unusable state.</span></span> <span data-ttu-id="37fb3-135">호출한 후 <xref:System.IO.TextReader.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.IO.TextReader> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.IO.TextReader> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-135">After calling <xref:System.IO.TextReader.Dispose%2A>, you must release all references to the <xref:System.IO.TextReader> so the garbage collector can reclaim the memory that the <xref:System.IO.TextReader> was occupying.</span></span>  
  
 <span data-ttu-id="37fb3-136">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-136">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37fb3-137"><xref:System.IO.TextReader.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.IO.TextReader>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="37fb3-137">Always call <xref:System.IO.TextReader.Dispose%2A> before you release your last reference to the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="37fb3-138">이렇게 하지 않으면 가비지 컬렉션이 <xref:System.IO.TextReader> 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-138">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextReader> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> <span data-ttu-id="37fb3-139">관리되는 리소스와 관리되지 않는 리소스를 모두 해제합니다. 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-139">to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="37fb3-140"><see cref="T:System.IO.TextReader" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-140">Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-141">이 메서드는 공용 `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-141">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="37fb3-142">기본적으로이 메서드는 다음과 같이 지정 됩니다. 합니다 `disposing` 매개 변수에 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-142">By default, this method specifies the `disposing` parameter as `true`.</span></span> <xref:System.Object.Finalize%2A> <span data-ttu-id="37fb3-143">지정 된 `disposing` 매개 변수에 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-143">specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="37fb3-144">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.TextReader>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-144">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextReader> references.</span></span> <span data-ttu-id="37fb3-145">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-145">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> <span data-ttu-id="37fb3-146">다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-146">can be called multiple times by other objects.</span></span> <span data-ttu-id="37fb3-147">이 메서드를 재정의 하는 경우에 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-147">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="37fb3-148">이 메서드를 구현 하는 방법에 대 한 자세한 내용은 참조 하십시오 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-148">For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="37fb3-149">에 대 한 자세한 내용은 <see cref="M:System.IDisposable.Dispose" /> 하 고 <see cref="M:System.Object.Finalize" />를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-149">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-150">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-150">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-151">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-151">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-152">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-152">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextReader ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextReader" Usage="System.IO.TextReader.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37fb3-153"><see langword="TextReader" />에 읽을 데이터를 제공하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-153">Provides a <see langword="TextReader" /> with no data to read from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-154">읽기를 <xref:System.IO.TextReader.Null> 텍스트 판독기가 스트림의 맨 끝에서 읽기와 유사 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-154">Reading from the <xref:System.IO.TextReader.Null> text reader is similar to reading from the end of a stream:</span></span>  
  
-   <span data-ttu-id="37fb3-155">합니다 <xref:System.IO.TextReader.Read%2A> 고 <xref:System.IO.TextReader.Peek%2A> 메서드는-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-155">The <xref:System.IO.TextReader.Read%2A> and <xref:System.IO.TextReader.Peek%2A> methods return -1.</span></span>  
  
-   <span data-ttu-id="37fb3-156"><xref:System.IO.TextReader.ReadBlock%2A> 메서드 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-156">The <xref:System.IO.TextReader.ReadBlock%2A> method returns zero.</span></span>  
  
-   <span data-ttu-id="37fb3-157">합니다 <xref:System.IO.TextReader.ReadLine%2A> 메서드가 반환 되는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-157">The <xref:System.IO.TextReader.ReadLine%2A> method returns `null`.</span></span>  
  
-   <span data-ttu-id="37fb3-158"><xref:System.IO.TextReader.ReadToEnd%2A> 메서드는 빈 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-158">The <xref:System.IO.TextReader.ReadToEnd%2A> method returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-159">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-159">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-160">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-160">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-161">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-161">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; int&#xA;override this.Peek : unit -&gt; int" Usage="textReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-162">문자 소스나 판독기의 상태를 변경하지 않고 다음 문자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-162">Reads the next character without changing the state of the reader or the character source.</span></span> <span data-ttu-id="37fb3-163">판독기에서 실제로 읽지 않고 사용 가능한 다음 문자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-163">Returns the next available character without actually reading it from the reader.</span></span></summary>
        <returns><span data-ttu-id="37fb3-164">읽을 다음 문자를 나타내는 정수이거나, 사용할 수 있는 문자가 더 이상 없거나 판독기에서 검색을 지원하지 않을 경우 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-164">An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-165"><xref:System.IO.TextReader.Peek%2A> 메서드 끝 파일 또는 다른 오류가 발생 했는지 여부를 확인 하기 위해 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-165">The <xref:System.IO.TextReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="37fb3-166">이렇게 하면 사용자는 반환된 값은-1로 캐스팅 하기 전에 먼저 확인 하는 <xref:System.Char> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-166">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="37fb3-167">현재 위치를 <xref:System.IO.TextReader> 이 작업에 의해 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-167">The current position of the <xref:System.IO.TextReader> is not changed by this operation.</span></span> <span data-ttu-id="37fb3-168">반환된 된 값-1 이면 문자가 더 이상 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-168">The returned value is -1 if no more characters are available.</span></span> <span data-ttu-id="37fb3-169">기본 구현된 경우에는 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-169">The default implementation returns -1.</span></span>  
  
 <span data-ttu-id="37fb3-170"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-170">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-171">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-171">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-172">사용 하는 예는 <xref:System.IO.TextReader.Peek%2A> 메서드를 참조 합니다 <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-172">For an example of using the <xref:System.IO.TextReader.Peek%2A> method, see the <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-173"><see cref="T:System.IO.TextReader" />가 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-173">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37fb3-174">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-174">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Peek" />
        <altmember cref="M:System.IO.StringReader.Peek" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-175">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-175">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-176">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-176">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-177">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-177">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37fb3-178">텍스트 판독기에서 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-178">Reads data from the text reader.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="textReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-179">텍스트 판독기에서 다음 문자를 읽고 문자 위치를 한 문자씩 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-179">Reads the next character from the text reader and advances the character position by one character.</span></span></summary>
        <returns><span data-ttu-id="37fb3-180">텍스트 판독기의 다음 문자 또는 사용할 수 있는 문자가 더 이상 없는 경우 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-180">The next character from the text reader, or -1 if no more characters are available.</span></span> <span data-ttu-id="37fb3-181">기본 구현된 경우에는 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-181">The default implementation returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-182"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-182">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-183">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-183">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-184">사용 하는 예는 <xref:System.IO.TextReader.Read%2A> 메서드를 참조 합니다 <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-184">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-185"><see cref="T:System.IO.TextReader" />가 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-185">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37fb3-186">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-186">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Read" />
        <altmember cref="M:System.IO.StringReader.Read" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-187">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-187">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-188">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-188">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-189">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-189">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="textReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="textReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="37fb3-190">이 메서드는 지정된 문자 배열의 값이 <paramref name="index" />와 (<paramref name="index" /> + <paramref name="count" /> - 1) 사이에서 현재 원본으로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-190">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="37fb3-191">쓰기를 시작할 <paramref name="buffer" />의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-191">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="37fb3-192">읽을 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-192">The maximum number of characters to read.</span></span> <span data-ttu-id="37fb3-193">지정한 문자 수를 버퍼로 읽어오기 전에 판독기의 끝에 도달하면 메서드가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-193">If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="37fb3-194">현재 판독기에서 지정된 최대 수의 문자를 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-194">Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="37fb3-195">읽은 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-195">The number of characters that have been read.</span></span> <span data-ttu-id="37fb3-196">이 문자 수는 판독기 내에서 데이터를 사용할 수 있는지 여부에 따라 <paramref name="count" />보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-196">The number will be less than or equal to <paramref name="count" />, depending on whether the data is available within the reader.</span></span> <span data-ttu-id="37fb3-197">읽을 문자가 더 이상 없는 경우에 이 메서드를 호출하면 0이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-197">This method returns 0 (zero) if it is called when no more characters are left to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-198">이 메서드가 반환 후 `count` 문자를 읽거나 파일의 끝에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-198">This method returns after either `count` characters are read or the end of the file is reached.</span></span> <xref:System.IO.TextReader.ReadBlock%2A> <span data-ttu-id="37fb3-199">이 메서드의 버전이 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-199">is a blocking version of this method.</span></span>  
  
 <span data-ttu-id="37fb3-200"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-200">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-201">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-201">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-202">사용 하는 예는 <xref:System.IO.TextReader.Read%2A> 메서드를 참조 합니다 <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-202">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> <span data-ttu-id="37fb3-203"><see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-203">is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37fb3-204">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-204">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> <span data-ttu-id="37fb3-205">또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-205">or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-206"><see cref="T:System.IO.TextReader" />가 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-206">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37fb3-207">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-207">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-208">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-208">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-209">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-209">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-210">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-210">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="37fb3-211">이 메서드는 지정된 문자 배열의 값이 <paramref name="index" />와 (<paramref name="index" /> + <paramref name="count" /> - 1) 사이에서 현재 원본으로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-211">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="37fb3-212">쓰기를 시작할 <paramref name="buffer" />의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-212">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="37fb3-213">읽을 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-213">The maximum number of characters to read.</span></span> <span data-ttu-id="37fb3-214">지정한 문자 수를 버퍼로 읽어오기 전에 텍스트의 끝에 도달하면 현재 메서드가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-214">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span></span></param>
        <summary><span data-ttu-id="37fb3-215">현재 텍스트 판독기에서 지정된 최대 문자 수를 비동기적으로 읽어 이 데이터를 지정된 위치에서 시작되는 버퍼에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-215">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="37fb3-216">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-216">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="37fb3-217"><paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-217">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="37fb3-218">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 텍스트의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-218">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-219">작업 완료 후 지정 된 문자의 수를 `count` 매개 변수는 읽기 또는 파일의 끝에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-219">The task completes after either the number of characters specified by the `count` parameter are read or the end of the file is reached.</span></span>  
  
 <span data-ttu-id="37fb3-220"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-220">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-221">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-221">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-222">사용 하는 예는 <xref:System.IO.TextReader.ReadAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-222">For an example of using the <xref:System.IO.TextReader.ReadAsync%2A> method, see the <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> <span data-ttu-id="37fb3-223"><see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-223">is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> <span data-ttu-id="37fb3-224">또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-224">or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37fb3-225"><paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-225">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-226">텍스트 판독기가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="37fb3-226">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37fb3-227">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-227">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-228">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-228">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-229">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-229">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-230">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-230">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : Span&lt;char&gt; -&gt; int&#xA;override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="textReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : char[] * int * int -&gt; int&#xA;override this.ReadBlock : char[] * int * int -&gt; int" Usage="textReader.ReadBlock (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="37fb3-231">이 메서드는 지정된 문자 배열의 값이 <paramref name="index" /> 및 (<paramref name="index" /> + <paramref name="count" /> -1) 사이에서 현재 원본으로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-231">When this method returns, this parameter contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> -1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="37fb3-232">쓰기를 시작할 <paramref name="buffer" />의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-232">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="37fb3-233">읽을 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-233">The maximum number of characters to read.</span></span></param>
        <summary><span data-ttu-id="37fb3-234">현재 텍스트 판독기에서 지정된 최대 수의 문자를 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-234">Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="37fb3-235">읽은 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-235">The number of characters that have been read.</span></span> <span data-ttu-id="37fb3-236">이 문자 수는 모든 입력 문자를 읽었는지 여부에 따라 <paramref name="count" />보다 작거나 같습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-236">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-237">내부 텍스트 판독기의 위치는 앞으로 읽은 문자 수가으로 `buffer`입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-237">The position of the underlying text reader is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="37fb3-238">될 때까지 메서드 블록 `count` 모든 문자가 읽혀진 또는 문자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-238">The method blocks until either `count` characters are read, or all characters have been read.</span></span> <span data-ttu-id="37fb3-239">이 버전이 차단 <xref:System.IO.TextReader.Read%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-239">This is a blocking version of <xref:System.IO.TextReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> <span data-ttu-id="37fb3-240"><see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-240">is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37fb3-241">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-241">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> <span data-ttu-id="37fb3-242">또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-242">or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-243"><see cref="T:System.IO.TextReader" />가 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-243">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37fb3-244">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-244">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-245">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-245">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-246">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-246">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-247">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-247">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="37fb3-248">이 메서드는 지정된 문자 배열의 값이 <paramref name="index" />와 (<paramref name="index" /> + <paramref name="count" /> - 1) 사이에서 현재 원본으로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-248">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="37fb3-249">쓰기를 시작할 <paramref name="buffer" />의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-249">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="37fb3-250">읽을 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-250">The maximum number of characters to read.</span></span> <span data-ttu-id="37fb3-251">지정한 문자 수를 버퍼로 읽어오기 전에 텍스트의 끝에 도달하면 현재 메서드가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-251">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span></span></param>
        <summary><span data-ttu-id="37fb3-252">현재 텍스트 판독기에서 지정된 최대 문자 수를 비동기적으로 읽어 이 데이터를 지정된 위치에서 시작되는 버퍼에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-252">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="37fb3-253">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-253">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="37fb3-254"><paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-254">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="37fb3-255">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 텍스트의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-255">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-256">작업이 완료 되지 않으면 될 때까지 지정 된 문자의 수를 `count` 매개 변수를 읽거나 텍스트의 끝에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-256">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the text has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> <span data-ttu-id="37fb3-257"><see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-257">is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> <span data-ttu-id="37fb3-258">또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-258">or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37fb3-259"><paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-259">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-260">텍스트 판독기가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="37fb3-260">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37fb3-261">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-261">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-262">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-262">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-263">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-263">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-264">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-264">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="textReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-265">텍스트 판독기에서 한 줄의 문자를 읽고 데이터를 문자열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-265">Reads a line of characters from the text reader and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="37fb3-266">판독기의 다음 줄이거나 모든 문자를 읽은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-266">The next line from the reader, or <see langword="null" /> if all characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-267">줄 뒤에 캐리지 리턴 (0x000d), 줄 바꿈 문자 (0x000a) 시퀀스로 정의 캐리지 뒤에 줄 바꿈 반환. <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, 또는 스트림 끝 표식입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-267">A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, or the end-of-stream marker.</span></span> <span data-ttu-id="37fb3-268">반환 되는 문자열 종료 캐리지 리턴 또는 줄 바꿈 없습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-268">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="37fb3-269">반환 값은 `null` 입력 스트림의 끝에 도달한 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-269">The return value is `null` if the end of the input stream has been reached.</span></span>  
  
 <span data-ttu-id="37fb3-270">메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException> 예외, 기본 판독기의 위치가 <xref:System.IO.Stream> 메서드를 읽지 못한 자 이지만 내부로 이미 읽은 문자 수 만큼 <xref:System.IO.TextReader.ReadLine%2A> 버퍼는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-270">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="37fb3-271">이미 읽은 문자 스트림에서 판독기의 위치를 변경할 수 없으므로은 복구할 수 없습니다 하 고 다시 초기화에 의해서만 액세스할 수 있습니다는 <xref:System.IO.TextReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-271">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader> object.</span></span> <span data-ttu-id="37fb3-272">스트림 내에서 처음 위치를 알 수 없는 경우는 스트림이 검색을 기본 지원 하지 않는 <xref:System.IO.Stream> 도 다시 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-272">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="37fb3-273">이러한 상황을 방지 하 고 사용 해야 하는 강력한 코드를 생성 하는 <xref:System.IO.TextReader.Read%2A> 읽기 미리 할당 된 버퍼의 문자 메서드와 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-273">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="37fb3-274"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-274">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-275">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-275">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-276">사용 하는 예는 <xref:System.IO.TextReader.ReadLine%2A> 메서드를 참조 합니다 <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-276">For an example of using the <xref:System.IO.TextReader.ReadLine%2A> method, see the <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37fb3-277">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-277">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="37fb3-278">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-278">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-279"><see cref="T:System.IO.TextReader" />가 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-279">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="37fb3-280">다음 줄의 문자 수가 이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="37fb3-280">The number of characters in the next line is larger than</span></span> <see cref="F:System.Int32.MaxValue" /></exception>
        <altmember cref="M:System.IO.StreamReader.ReadLine" />
        <altmember cref="M:System.IO.StringReader.ReadLine" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-281">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-281">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-282">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-282">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-283">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-283">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-284">한 줄의 문자를 비동기적으로 읽고 데이터를 문자열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-284">Reads a line of characters asynchronously and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="37fb3-285">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-285">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="37fb3-286"><paramref name="TResult" /> 매개 변수의 값은 텍스트 판독기의 다음 줄을 포함하거나 모든 문자가 읽혀진 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-286">The value of the <paramref name="TResult" /> parameter contains the next line from the text reader, or is <see langword="null" /> if all of the characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-287"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-287">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-288">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-288">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-289">사용 하는 예는 <xref:System.IO.TextReader.ReadLineAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-289">For an example of using the <xref:System.IO.TextReader.ReadLineAsync%2A> method, see the <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="37fb3-290">경우 현재 <xref:System.IO.TextReader> 반환한 표준 입력된 스트림을 나타내는 합니다 <xref:System.Console.In%2A?displayProperty=nameWithType> 속성을는 <xref:System.IO.TextReader.ReadLineAsync%2A> 메서드가 비동기가 아닌 동기적으로 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-290">If the current <xref:System.IO.TextReader> represents the standard input stream returned by the <xref:System.Console.In%2A?displayProperty=nameWithType> property, the <xref:System.IO.TextReader.ReadLineAsync%2A> method executes synchronously rather than asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="37fb3-291">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-291">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-292">텍스트 판독기가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="37fb3-292">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37fb3-293">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-293">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadLineAsync" />
        <altmember cref="M:System.IO.StringReader.ReadLineAsync" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-294">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-294">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-295">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-295">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-296">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-296">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public virtual string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEnd : unit -&gt; string&#xA;override this.ReadToEnd : unit -&gt; string" Usage="textReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-297">현재 위치에서 텍스트 판독기 끝까지의 모든 문자를 읽어서 단일 문자열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-297">Reads all characters from the current position to the end of the text reader and returns them as one string.</span></span></summary>
        <returns><span data-ttu-id="37fb3-298">현재 위치에서 텍스트 판독기 끝까지의 모든 문자를 포함하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-298">A string that contains all characters from the current position to the end of the text reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-299">메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException> 예외, 기본 판독기의 위치가 <xref:System.IO.Stream> 메서드를 읽지 못한 자 이지만 내부로 이미 읽은 문자 수 만큼 <xref:System.IO.TextReader.ReadToEnd%2A> 버퍼는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-299">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="37fb3-300">이미 읽은 문자 스트림에서 판독기의 위치를 변경할 수 없으므로은 복구할 수 없습니다 하 고 다시 초기화에 의해서만 액세스할 수 있습니다는 <xref:System.IO.TextReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-300">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="37fb3-301">스트림 내에서 처음 위치를 알 수 없는 경우는 스트림이 검색을 기본 지원 하지 않는 <xref:System.IO.Stream> 도 다시 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-301">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="37fb3-302">이러한 상황을 방지 하 고 사용 해야 하는 강력한 코드를 생성 하는 <xref:System.IO.TextReader.Read%2A> 읽기 미리 할당 된 버퍼의 문자 메서드와 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-302">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="37fb3-303"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-303">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-304">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-304">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-305">사용 하는 예는 <xref:System.IO.TextReader.ReadToEnd%2A> 메서드를 참조 합니다 <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-305">For an example of using the <xref:System.IO.TextReader.ReadToEnd%2A> method, see the <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="37fb3-306">I/O 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-306">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-307"><see cref="T:System.IO.TextReader" />가 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-307">The <see cref="T:System.IO.TextReader" /> is closed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="37fb3-308">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-308">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="37fb3-309">다음 줄의 문자 수가 이보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="37fb3-309">The number of characters in the next line is larger than</span></span> <see cref="F:System.Int32.MaxValue" /></exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEnd" />
        <altmember cref="M:System.IO.StringReader.ReadToEnd" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-310">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-310">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-311">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-311">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-312">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-312">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-313">현재 위치에서 텍스트 판독기 끝까지의 모든 문자를 비동기적으로 읽어서 하나의 문자열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-313">Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.</span></span></summary>
        <returns><span data-ttu-id="37fb3-314">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-314">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="37fb3-315"><paramref name="TResult" /> 매개 변수의 값은 현재 위치에서 텍스트 판독기 끝까지의 문자로 이루어진 문자열을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-315">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the text reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-316"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-316">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="37fb3-317">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="37fb3-317">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="37fb3-318">사용 하는 예는 <xref:System.IO.TextReader.ReadToEndAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37fb3-318">For an example of using the <xref:System.IO.TextReader.ReadToEndAsync%2A> method, see the <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="37fb3-319">문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-319">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="37fb3-320">텍스트 판독기가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="37fb3-320">The text reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37fb3-321">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-321">The reader is currently in use by a previous read operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEndAsync" />
        <altmember cref="M:System.IO.StringReader.ReadToEndAsync" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-322">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-322">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-323">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-323">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-324">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-324">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader Synchronized (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader Synchronized(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Synchronized(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (reader As TextReader) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextReader ^ Synchronized(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextReader -&gt; System.IO.TextReader" Usage="System.IO.TextReader.Synchronized reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="37fb3-325">동기화할 <see langword="TextReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-325">The <see langword="TextReader" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="37fb3-326">지정된 <see langword="TextReader" /> 주위에 스레드로부터 안전한 래퍼를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-326">Creates a thread-safe wrapper around the specified <see langword="TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="37fb3-327">스레드로부터 안전한 <see cref="T:System.IO.TextReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-327">A thread-safe <see cref="T:System.IO.TextReader" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37fb3-328">현재 메서드가 반환 된 주위를 래핑하는 클래스 <xref:System.IO.TextReader> 인스턴스를 여러 스레드에서 액세스를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-328">The current method returns a class that wraps around the specified <xref:System.IO.TextReader> instance and restricts access to it by multiple threads.</span></span> <span data-ttu-id="37fb3-329">래퍼에서 반환 된 모든 읽기 스레드를 안전 하 게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-329">All reads from the returned wrapper will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> <span data-ttu-id="37fb3-330"><see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-330">is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="37fb3-331">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="37fb3-331">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="37fb3-332">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="37fb3-332">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="37fb3-333">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="37fb3-333">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37fb3-334">이 멤버에 대한 설명은 <see cref="M:System.IDisposable.Dispose" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="37fb3-334">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="37fb3-335">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="37fb3-335">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="37fb3-336"><xref:System.IO.TextReader> 인스턴스가 <xref:System.IDisposable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37fb3-336">It can be used only when the <xref:System.IO.TextReader> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>