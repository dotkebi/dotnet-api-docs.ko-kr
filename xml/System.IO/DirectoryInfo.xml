<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="efd4232c6f87b717a92029bb7e8fbc934b7738a5" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57912190" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b540b-101">디렉터리 및 하위 디렉터리를 만들고, 이동하고, 열거하는 인스턴스 메서드를 노출합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="b540b-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-103">사용 된 <xref:System.IO.DirectoryInfo> 복사, 이동, 이름 바꾸기 및 디렉터리 삭제 등의 일반적인 작업에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="b540b-104">인스턴스 메서드를 사용 하 여 개체를 여러 번 재사용 하려는 경우 고려해 <xref:System.IO.DirectoryInfo> 의 해당 정적 메서드 대신는 <xref:System.IO.Directory> 클래스를 보안 검사는 항상 되지 않으므로 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b540b-105">입력 문자열로 경로 허용 하는 멤버를 해당 경로 올바른 형식 이어야 합니다. 또는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="b540b-106">예를 들어, 경로 정규화 공백으로 시작 하지만 경로 클래스의 메서드에서 잘리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="b540b-107">따라서 경로 잘못 되었으며 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="b540b-108">마찬가지로, 경로 또는 경로의 조합을 두 번 정규화 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="b540b-109">예를 들어, "c:\temp c:\windows"는 또한 대부분의 경우에서 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="b540b-110">경로 잘 구성 된 경우에 경로 문자열을 허용 하는 메서드를 사용 하 여 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="b540b-111">경로 허용 하는 멤버의 경로 파일 또는 디렉터리를 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="b540b-112">지정된 된 경로 상대 경로 또는 서버 및 공유 이름에 대 한 범용 명명 규칙 (UNC) 경로 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="b540b-113">예를 들어, 다음은 허용 가능한 경로.</span><span class="sxs-lookup"><span data-stu-id="b540b-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="b540b-114">"c:\\\MyDir\\\MyFile.txt" C# 또는 Visual Basic의 "c:\MyDir\MyFile.txt"입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="b540b-115">"c:\\\MyDir" C# 또는 Visual Basic의 "c:\MyDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="b540b-116">"MyDir\\\MySubdir" C# 또는 Visual Basic의 "MyDir\MySubDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="b540b-117">"\\\\\\\MyServer\\\MyShare" C#에서 또는 "\\\MyServer\MyShare" Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="b540b-118">기본적으로 새 디렉터리에 대 한 전체 읽기/쓰기 액세스는 모든 사용자에 게 부여 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="b540b-119">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-120">다음 예제에서는 기본 멤버 중 일부는 `DirectoryInfo` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="b540b-121">다음 예제에서는 디렉터리와 해당 콘텐츠를 복사 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-122">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-122">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-123">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-124">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="b540b-125">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b540b-126"><see langword="DirectoryInfo" />를 만들 경로를 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="b540b-127">지정된 경로를 사용하여 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-128">이 생성자는 디렉터리가 존재 하는지 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="b540b-129">이 생성자에는 후속 작업에서 디스크에 액세스 하는 데 사용 되는 문자열에 대 한 자리 표시자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="b540b-130">`path` 매개 변수는 범용 명명 규칙 (UNC) 공유에 파일을 포함 하는 파일 이름 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b540b-131">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및 throw 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="b540b-132">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-132">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-133">다음 예제에서는이 생성자를 사용 하 여 지정 된 디렉터리와 하위 디렉터리를 만듭니다 및 하위 디렉터리를 포함 하는 디렉터리를 삭제할 수 없습니다 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-134"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-135">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-136"><paramref name="path" />에 잘못된 문자(", &lt;, &gt; 또는 |)가 들어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b540b-137">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-138">파일 및 디렉터리에서 계속 하십시오.</span><span class="sxs-lookup"><span data-stu-id="b540b-138">for reading from files and directories.</span></span> <span data-ttu-id="b540b-139">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b540b-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-140">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-140">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-141">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-141">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-142">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-142">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-143">디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-143">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-144">디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-144">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-145">해당 디렉터리가 이미 존재 하는 경우 두이 일은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-145">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="b540b-146">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-147">지정된 된 디렉터리가 있는지 여부를 다음 예제에서는 검사는 존재 하지 않는 경우 디렉터리를 삭제에서 디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-147">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b540b-148">디렉터리를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-148">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-149">파일을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-149">for writing files.</span></span> <span data-ttu-id="b540b-150">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b540b-150">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-151">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-151">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-152">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-152">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-153">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-153">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="b540b-154">디렉터리에 적용할 액세스 제어입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-154">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="b540b-155"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체를 사용하여 디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-155">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-156">이 메서드 오버 로드를 사용 하 여 보안 적용 되기 전에 디렉터리에 액세스할 수 없는 가능성이 있으므로 액세스 제어를 사용 하 여 디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-156">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="b540b-157">해당 디렉터리가 이미 존재 하는 경우 두이 일은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-157">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="b540b-158">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b540b-159"><paramref name="path" />로 지정한 디렉터리가 읽기 전용이거나 빈 디렉터리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-159">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b540b-160">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-160">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-161"><paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-161"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-162"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b540b-163">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-163">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-164">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span><span class="sxs-lookup"><span data-stu-id="b540b-164">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b540b-165">콜론(:) 문자만으로 디렉터리를 만들려고 했습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-165">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-166">디렉터리를 만들 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-166">for permission to create a directory.</span></span> <span data-ttu-id="b540b-167">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-167">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b540b-168">연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b540b-168">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-169">지정된 경로에 하위 디렉터리를 하나 이상 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="b540b-170">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b540b-171">지정된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-171">The specified path.</span></span> <span data-ttu-id="b540b-172">이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-172">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="b540b-173">지정된 경로에 하위 디렉터리를 하나 이상 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-173">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="b540b-174">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-174">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="b540b-175"><paramref name="path" />에 지정된 마지막 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-175">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-176">에 지정 된 모든 디렉터리가 `path` 하지 않으면 만들어집니다 일부 `path` 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-176">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="b540b-177">`path` 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-177">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="b540b-178">하위 디렉터리에 이미 있으면이 메서드는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-178">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="b540b-179">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-179">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-180">다음 예제에서는 하위 디렉터리를 만드는 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-180">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="b540b-181">이 예제에서는 만든된 디렉터리를 만든 후 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-181">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="b540b-182">따라서이 샘플을 테스트 하려면 줄을 주석 처리를 삭제 코드에서입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-182">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-183"><paramref name="path" />가 올바른 파일 경로를 지정하지 않거나 잘못된 <see langword="DirectoryInfo" /> 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-183"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-184"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-184"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-185">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span><span class="sxs-lookup"><span data-stu-id="b540b-185">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b540b-186">하위 디렉터리를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-186">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="b540b-187">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-187">-or-</span></span> 
<span data-ttu-id="b540b-188"><paramref name="path" />에 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-188">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b540b-189">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-189">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-190">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-190">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="b540b-191">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-191">-or-</span></span> 
<span data-ttu-id="b540b-192">호출자가 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리를 읽기 위한 코드 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-192">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="b540b-193">이 문제는 <paramref name="path" /> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-193">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b540b-194"><paramref name="path" />에 드라이브 레이블("C:\\")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-194"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-195">페이지를 읽고 파일을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-195">for reading and writing files.</span></span> <span data-ttu-id="b540b-196">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b540b-196">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-197">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-197">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-198">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-198">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-199">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-199">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b540b-200">지정된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-200">The specified path.</span></span> <span data-ttu-id="b540b-201">이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-201">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="b540b-202">적용할 보안입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-202">The security to apply.</span></span></param>
        <summary><span data-ttu-id="b540b-203">지정된 경로에 지정된 보안을 사용하여 하위 디렉터리를 하나 이상 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-203">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="b540b-204">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-204">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="b540b-205"><paramref name="path" />에 지정된 마지막 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-205">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-206">에 지정 된 모든 디렉터리가 `path` 하지 않으면 만들어집니다 일부 `path` 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-206">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="b540b-207">`path` 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-207">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="b540b-208">하위 디렉터리에 이미 있으면이 메서드는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-208">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="b540b-209">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-210"><paramref name="path" />가 올바른 파일 경로를 지정하지 않거나 잘못된 <see langword="DirectoryInfo" /> 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-210"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-211"><paramref name="path" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-211"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-212">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span><span class="sxs-lookup"><span data-stu-id="b540b-212">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b540b-213">하위 디렉터리를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-213">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="b540b-214">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-214">-or-</span></span> 
<span data-ttu-id="b540b-215"><paramref name="path" />에 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-215">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="b540b-216">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-216">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-217">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-217">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="b540b-218">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-218">-or-</span></span> 
<span data-ttu-id="b540b-219">호출자가 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리를 읽기 위한 코드 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-219">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="b540b-220">이 문제는 <paramref name="path" /> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-220">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b540b-221"><paramref name="path" />에 드라이브 레이블("C:\\")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-221"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-222">페이지를 읽고 파일을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-222">for reading and writing files.</span></span> <span data-ttu-id="b540b-223">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b540b-223">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-224">경로에서 <see cref="T:System.IO.DirectoryInfo" /> 및 해당 내용을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-224">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-225"><see cref="T:System.IO.DirectoryInfo" />가 비어 있으면 이를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-225">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-226">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-226">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-227">다음 예에서는 비어 있지 않은 디렉터리를 삭제 하려고 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-227">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b540b-228">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-228">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-229">이 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명하는 디렉터리가 없거나 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-229">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b540b-230">디렉터리가 비어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-230">The directory is not empty.</span></span>  
  
<span data-ttu-id="b540b-231">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-231">-or-</span></span> 
<span data-ttu-id="b540b-232">이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-232">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="b540b-233">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-233">-or-</span></span> 
<span data-ttu-id="b540b-234">디렉터리에 대한 열린 핸들이 있고 운영 체제가 Windows XP 또는 그 이전 버전인 경우.</span><span class="sxs-lookup"><span data-stu-id="b540b-234">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="b540b-235">이 열린 핸들은 디렉터리 열거로 인해 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-235">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="b540b-236">자세한 내용은 [방법: 디렉터리 및 파일 열거](~/docs/standard/io/how-to-enumerate-directories-and-files.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b540b-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-237">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-237">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-238">디렉터리를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-238">for writing directories.</span></span> <span data-ttu-id="b540b-239">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b540b-239">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-240">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-240">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-241">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-241">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-242">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-242">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="b540b-243">이 디렉터리, 하위 디렉터리 및 모든 파일을 삭제하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-243"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b540b-244">하위 디렉터리와 파일을 삭제할지 여부를 지정하여 <see cref="T:System.IO.DirectoryInfo" />의 이 인스턴스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-244">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-245">경우는 `DirectoryInfo` 파일 또는 하위 디렉터리에이 메서드를 삭제 합니다 `DirectoryInfo` 경우에 `recursive` 는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-245">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="b540b-246">삭제 하려고를 `DirectoryInfo` 비어 있는 경우 `recursive` 됩니다 `false` throw는 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-246">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="b540b-247">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-247">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-248">다음 예제에서는 디렉터리를 삭제 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-248">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="b540b-249">디렉터리가 제거 되기 때문에 먼저 주석 처리를 `Delete` 디렉터리가 존재 하는지 테스트할 줄.</span><span class="sxs-lookup"><span data-stu-id="b540b-249">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="b540b-250">그런 다음 동일한 디렉터리가 성공적으로 제거 되었는지 테스트 하는 코드 줄 주석 처리를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-250">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b540b-251">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-251">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-252">이 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명하는 디렉터리가 없거나 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-252">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b540b-253">디렉터리가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-253">The directory is read-only.</span></span>  
  
<span data-ttu-id="b540b-254">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-254">-or-</span></span> 
<span data-ttu-id="b540b-255">디렉터리에 하나 이상의 파일이나 하위 디렉터리가 있으며 <paramref name="recursive" />가 <see langword="false" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-255">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="b540b-256">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-256">-or-</span></span> 
<span data-ttu-id="b540b-257">이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-257">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="b540b-258">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-258">-or-</span></span> 
<span data-ttu-id="b540b-259">디렉터리 또는 해당 파일 중 하나에 대한 열린 핸들이 있고 운영 체제가 Windows XP 또는 그 이전 버전인 경우.</span><span class="sxs-lookup"><span data-stu-id="b540b-259">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="b540b-260">이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-260">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="b540b-261">자세한 내용은 [방법: 디렉터리 및 파일 열거](~/docs/standard/io/how-to-enumerate-directories-and-files.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b540b-261">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-262">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-262">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="b540b-263">쓰기에 대해 쓰기 권한이 필요한 플래그는 <see langword="DirectoryInfo" /> 및 하위 디렉터리를 삭제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-263">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-264">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-264">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-265">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-265">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-266">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-266">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-267">현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-267">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-268">현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-268">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="b540b-269">현재 디렉터리에 있는 디렉터리의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-269">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-270">합니다 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 고 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-271">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.DirectoryInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-272">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>, 전체 배열의 기다려야 <xref:System.IO.DirectoryInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-273">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-274">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b540b-275">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-276">다음 예제에서는 C:\Program Files 디렉터리 아래 하위 디렉터리를 열거 하 고 LINQ 쿼리를 사용 하 여 값을 확인 하 여 2009 전에 생성 된 모든 디렉터리의 이름을 반환 하는 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-276">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="b540b-277">하위 디렉터리의 이름에만 필요한 경우 사용 하 여 정적 <xref:System.IO.Directory> 성능 향상을 위해 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-277">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="b540b-278">예를 들어 참조 된 <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b540b-278">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-279"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-279">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-280">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-280">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-281">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-281">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b540b-282">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-282">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b540b-283">지정된 검색 패턴과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-283">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="b540b-284"><paramref name="searchPattern" />과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-284">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-285">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-286">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-287">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-287">Wildcard specifier</span></span>|<span data-ttu-id="b540b-288">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-289">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-289">\* (asterisk)</span></span>|<span data-ttu-id="b540b-290">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-291">?</span><span class="sxs-lookup"><span data-stu-id="b540b-291">?</span></span> <span data-ttu-id="b540b-292">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-292">(question mark)</span></span>|<span data-ttu-id="b540b-293">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-294">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-295">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-295">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-296">".</span><span class="sxs-lookup"><span data-stu-id="b540b-296">".</span></span> <span data-ttu-id="b540b-297">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-298">합니다 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 고 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-299">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.DirectoryInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-300">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>, 전체 배열의 기다려야 <xref:System.IO.DirectoryInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-301">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-302">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b540b-303">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-304"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-304"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-305"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-305">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-306">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-306">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-307">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-307">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b540b-308">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-308">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b540b-309">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-309">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="b540b-310">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-310">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="b540b-311">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-311">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="b540b-312"><paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-312">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-313">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-313">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-314">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-314">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-315">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-315">Wildcard specifier</span></span>|<span data-ttu-id="b540b-316">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-316">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-317">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-317">\* (asterisk)</span></span>|<span data-ttu-id="b540b-318">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-318">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-319">?</span><span class="sxs-lookup"><span data-stu-id="b540b-319">?</span></span> <span data-ttu-id="b540b-320">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-320">(question mark)</span></span>|<span data-ttu-id="b540b-321">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-321">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-322">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-322">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-323">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-323">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-324">".</span><span class="sxs-lookup"><span data-stu-id="b540b-324">".</span></span> <span data-ttu-id="b540b-325">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-325">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-326">합니다 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 고 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-326">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-327">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.DirectoryInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-327">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-328">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>, 전체 배열의 기다려야 <xref:System.IO.DirectoryInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-328">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-329">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-329">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-330">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-330">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b540b-331">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-331">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-332">이 메서드를 사용 하는 다음 예제에서는 지정된 된 디렉터리에서 시작 하며 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 시작 디렉터리 내 디렉터리와 파일을 열거 하 고 모든 세부 정보 표시 방법 개 10MB의에서 파일 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-332">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-333"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-333"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b540b-334"><paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-334"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-335"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-335">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-336">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-336">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-337">현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-337">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-338">현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-338">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="b540b-339">현재 디렉터리에 있는 파일의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-339">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-340">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-340">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-341">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-341">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-342">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-342">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-343">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-343">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-344">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-344">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="b540b-345">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-345">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-346">다음 예제에서는 지정된 된 디렉터리에서 파일을 열거 하 고 LINQ 쿼리를 사용 하 여 값을 확인 하 여 2009 전에 생성 된 모든 파일의 이름을 반환 하는 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-346">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="b540b-347">파일의 이름에만 필요한 경우 사용 하 여 정적 <xref:System.IO.Directory> 성능 향상을 위해 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-347">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="b540b-348">예를 들어 참조 된 <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b540b-348">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="b540b-349">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-349">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="b540b-350">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-350">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-351"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-352">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-353">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-353">The search string to match against the names of files.</span></span>  <span data-ttu-id="b540b-354">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-354">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b540b-355">검색 패턴과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-355">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="b540b-356"><paramref name="searchPattern" />과 일치하는 파일의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-356">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-357">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-357">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-358">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-358">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-359">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-359">Wildcard specifier</span></span>|<span data-ttu-id="b540b-360">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-360">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-361">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-361">\* (asterisk)</span></span>|<span data-ttu-id="b540b-362">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-362">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-363">?</span><span class="sxs-lookup"><span data-stu-id="b540b-363">?</span></span> <span data-ttu-id="b540b-364">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-364">(question mark)</span></span>|<span data-ttu-id="b540b-365">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-365">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-366">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-366">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-367">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-367">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-368">".</span><span class="sxs-lookup"><span data-stu-id="b540b-368">".</span></span> <span data-ttu-id="b540b-369">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-369">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-370">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-370">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-371">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-371">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-372">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-372">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-373">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-373">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-374">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-374">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="b540b-375">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-375">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-376">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-376">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="b540b-377">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-377">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-378"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-378"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-379"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-379">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-380">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-380">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-381">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-381">The search string to match against the names of files.</span></span>  <span data-ttu-id="b540b-382">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-382">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b540b-383">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-383">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="b540b-384">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-384">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="b540b-385">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-385">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="b540b-386"><paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 파일의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-386">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-387">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-387">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-388">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-388">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-389">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-389">Wildcard specifier</span></span>|<span data-ttu-id="b540b-390">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-390">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-391">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-391">\* (asterisk)</span></span>|<span data-ttu-id="b540b-392">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-392">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-393">?</span><span class="sxs-lookup"><span data-stu-id="b540b-393">?</span></span> <span data-ttu-id="b540b-394">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-394">(question mark)</span></span>|<span data-ttu-id="b540b-395">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-395">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-396">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-396">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-397">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-397">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-398">".</span><span class="sxs-lookup"><span data-stu-id="b540b-398">".</span></span> <span data-ttu-id="b540b-399">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-399">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-400">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-400">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-401">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-401">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-402">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-402">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-403">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-403">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-404">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-404">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="b540b-405">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-405">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-406">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-406">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="b540b-407">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-407">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-408"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-408"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b540b-409"><paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-409"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-410"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-410">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-411">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-411">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-412">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-412">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-413">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-413">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="b540b-414">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-414">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-415">합니다 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 고 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-415">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-416">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileSystemInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-416">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-417">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, 전체 배열의 기다려야 <xref:System.IO.FileSystemInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-417">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-418">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-418">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-419">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-419">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b540b-420">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-420">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-421"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-421">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-422">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-422">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-423">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-423">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b540b-424">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-424">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b540b-425">지정된 검색 패턴과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-425">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="b540b-426"><paramref name="searchPattern" />과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-426">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-427">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-427">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-428">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-428">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-429">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-429">Wildcard specifier</span></span>|<span data-ttu-id="b540b-430">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-430">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-431">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-431">\* (asterisk)</span></span>|<span data-ttu-id="b540b-432">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-432">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-433">?</span><span class="sxs-lookup"><span data-stu-id="b540b-433">?</span></span> <span data-ttu-id="b540b-434">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-434">(question mark)</span></span>|<span data-ttu-id="b540b-435">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-435">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-436">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-436">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-437">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-437">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-438">".</span><span class="sxs-lookup"><span data-stu-id="b540b-438">".</span></span> <span data-ttu-id="b540b-439">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-439">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-440">합니다 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 고 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-440">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-441">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileSystemInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-441">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-442">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, 전체 배열의 기다려야 <xref:System.IO.FileSystemInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-442">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-443">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-443">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-444">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-444">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b540b-445">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-445">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-446"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-446"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-447"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-447">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-448">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-448">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-449">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-449">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b540b-450">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-450">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b540b-451">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-451">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="b540b-452">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-452">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="b540b-453">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-453">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="b540b-454"><paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-454">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-455">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-455">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-456">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-456">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-457">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-457">Wildcard specifier</span></span>|<span data-ttu-id="b540b-458">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-458">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-459">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-459">\* (asterisk)</span></span>|<span data-ttu-id="b540b-460">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-460">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-461">?</span><span class="sxs-lookup"><span data-stu-id="b540b-461">?</span></span> <span data-ttu-id="b540b-462">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-462">(question mark)</span></span>|<span data-ttu-id="b540b-463">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-463">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-464">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-464">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-465">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-465">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-466">".</span><span class="sxs-lookup"><span data-stu-id="b540b-466">".</span></span> <span data-ttu-id="b540b-467">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-467">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-468">합니다 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 고 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-468">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-469">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileSystemInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-469">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-470">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, 전체 배열의 기다려야 <xref:System.IO.FileSystemInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-470">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-471">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-471">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-472">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-472">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="b540b-473">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-473">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-474"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-474"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b540b-475"><paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-475"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-476"><see cref="T:System.IO.DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-476">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-477">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-477">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b540b-478">디렉터리가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-478">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="b540b-479">디렉터리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-479"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-480">합니다 <xref:System.IO.DirectoryInfo.Exists%2A> 속성이 반환 `false` 지정한 파일이 있는지 확인 하는 동안 오류가 발생 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b540b-480">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="b540b-481">잘못 된 문자 또는 실패 했거나 누락 된 디스크에 너무 많은 문자를 사용 하 여 파일 이름을 전달할 때 예외를 발생 시키는 상황에서 발생할 수 있습니다 또는 호출자에 게 파일을 읽을 수 있는 사용 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-481">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-482">다음 예제를 사용 하는 방법을 보여 줍니다는 `Exists` 원본 디렉터리가 대상 디렉터리에 복사 하는 컨텍스트의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-482">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-483">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-483">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-484">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-484">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-485">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-485">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-486">현재 디렉터리의 ACL(액세스 제어 목록) 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-486">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-487">사용 하 여 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 액세스를 검색 하는 메서드 현재 파일에 대 한 목록 (ACL) 항목을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-487">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="b540b-488">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b540b-488">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b540b-489">디렉터리의 전체 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-489">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="b540b-490">전체 경로를 포함하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-490">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>        
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-491">현재 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 디렉터리의 ACL(액세스 제어 목록) 항목을 캡슐화하는 <see cref="T:System.IO.DirectoryInfo" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-491">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="b540b-492">디렉터리의 액세스 제어 규칙을 캡슐화하는 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-492">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-493">이 메서드 오버 로드는 호출에 해당 하는 <xref:System.IO.Directory.GetAccessControl%2A> 메서드 오버 로드 액세스를 지정 하 고 제어 섹션 <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> Visual basic에서).</span><span class="sxs-lookup"><span data-stu-id="b540b-493">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="b540b-494">사용 된 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 현재 파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-494">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="b540b-495">ACL에는 개인 및/또는 그룹 했거나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-495">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="b540b-496">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b540b-496">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-497">다음 예제에서는 합니다 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 고 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 디렉터리에서 항목 목록 (ACL)을 제어 하는 메서드를 추가 하 고 다음 액세스를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-497">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="b540b-498">디렉터리를 찾거나 수정할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-498">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b540b-499">디렉터리가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-499">The directory is read-only.</span></span>  
  
<span data-ttu-id="b540b-500">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-500">-or-</span></span> 
<span data-ttu-id="b540b-501">현재 플랫폼이 해당 작업을 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-501">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="b540b-502">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-502">-or-</span></span> 
<span data-ttu-id="b540b-503">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-503">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b540b-504">디렉터리를 여는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-504">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b540b-505">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-505">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-506">디렉터리에 대 한 액세스 제어 목록 (ACL)을 열거할 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-506">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="b540b-507">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-507">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b540b-508">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="b540b-508">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="b540b-509">가져올 ACL(액세스 제어 목록) 정보의 형식을 지정하는 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-509">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="b540b-510">현재 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 디렉터리의 지정된 ACL(액세스 제어 목록) 항목 형식을 캡슐화하는 <see cref="T:System.IO.DirectoryInfo" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-510">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="b540b-511"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> 매개 변수에 설명된 파일의 액세스 제어 규칙을 캡슐화하는 <paramref name="path" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-511">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="b540b-512">예외</span><span class="sxs-lookup"><span data-stu-id="b540b-512">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="b540b-513">예외 형식</span><span class="sxs-lookup"><span data-stu-id="b540b-513">Exception type</span></span> 
 </term><description> <span data-ttu-id="b540b-514">조건</span><span class="sxs-lookup"><span data-stu-id="b540b-514">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="b540b-515">디렉터리를 찾거나 수정할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-515">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="b540b-516">현재 프로세스에 디렉터리를 열 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-516">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="b540b-517">디렉터리를 여는 동안 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-517">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> <span data-ttu-id="b540b-518">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-518">The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="b540b-519">디렉터리가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-519">The directory is read-only.</span></span>  
  
<span data-ttu-id="b540b-520">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-520">-or-</span></span> 
<span data-ttu-id="b540b-521">현재 플랫폼이 해당 작업을 지원하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-521">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="b540b-522">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-522">-or-</span></span> 
<span data-ttu-id="b540b-523">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-523">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-524">사용 된 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 현재 파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-524">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="b540b-525">ACL에는 개인 및/또는 그룹 했거나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-525">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="b540b-526">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b540b-526">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-527">디렉터리에 대 한 액세스 제어 목록 (ACL)을 열거할 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-527">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="b540b-528">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-528">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b540b-529">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="b540b-529">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-530">현재 디렉터리의 하위 디렉터리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-530">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-531">현재 디렉터리의 하위 디렉터리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-531">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="b540b-532"><see cref="T:System.IO.DirectoryInfo" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-532">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-533">하위 디렉터리가 없으면이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-533">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="b540b-534">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-534">This method is not recursive.</span></span>  
  
 <span data-ttu-id="b540b-535">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-535">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-536">다음 예제는 루트 디렉터리에 있는 모든 디렉터리를 검색 하 고 디렉터리 이름을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-536">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-537"><see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 유효하지 않은 경우(예: 매핑되지 않은 드라이브의 경로에 해당하는 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-537">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-538">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-538">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b540b-539">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-539">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-540">디렉터리 읽기.</span><span class="sxs-lookup"><span data-stu-id="b540b-540">for reading directories.</span></span> <span data-ttu-id="b540b-541">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b540b-541">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-542">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-542">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-543">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-543">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-544">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-544">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-545">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-545">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b540b-546">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-546">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b540b-547">주어진 검색 조건에 일치하는 현재 <see cref="T:System.IO.DirectoryInfo" />에 있는 디렉터리의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-547">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="b540b-548"><paramref name="searchPattern" />에 일치하는 <see langword="DirectoryInfo" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-548">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-549">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-549">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-550">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-550">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-551">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-551">Wildcard specifier</span></span>|<span data-ttu-id="b540b-552">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-552">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-553">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-553">\* (asterisk)</span></span>|<span data-ttu-id="b540b-554">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-554">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-555">?</span><span class="sxs-lookup"><span data-stu-id="b540b-555">?</span></span> <span data-ttu-id="b540b-556">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-556">(question mark)</span></span>|<span data-ttu-id="b540b-557">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-557">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-558">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-558">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-559">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-559">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-560">".</span><span class="sxs-lookup"><span data-stu-id="b540b-560">".</span></span> <span data-ttu-id="b540b-561">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-561">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-562">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-562">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-563">다음 예제에서는 지정 된 문자를 포함 하는 경로에 디렉터리를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-563">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-564"><paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-564"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-565"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-565"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-566"><see langword="DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-566">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b540b-567">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-567">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-568">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-568">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b540b-569">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b540b-569">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-570">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-570">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-571">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-571">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-572">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-572">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-573">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-573">The search string to match against the names of directories.</span></span>  <span data-ttu-id="b540b-574">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-574">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b540b-575">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-575">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="b540b-576">하위 디렉터리를 검색할지 여부를 나타내는 값을 사용하여 현재 <see cref="T:System.IO.DirectoryInfo" />에서 지정된 검색 조건과 일치하는 디렉터리의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-576">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="b540b-577"><paramref name="searchPattern" />에 일치하는 <see langword="DirectoryInfo" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-577">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-578">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-578">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-579">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-579">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-580">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-580">Wildcard specifier</span></span>|<span data-ttu-id="b540b-581">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-581">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-582">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-582">\* (asterisk)</span></span>|<span data-ttu-id="b540b-583">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-583">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-584">?</span><span class="sxs-lookup"><span data-stu-id="b540b-584">?</span></span> <span data-ttu-id="b540b-585">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-585">(question mark)</span></span>|<span data-ttu-id="b540b-586">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-586">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-587">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-587">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-588">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-588">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-589">".</span><span class="sxs-lookup"><span data-stu-id="b540b-589">".</span></span> <span data-ttu-id="b540b-590">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-590">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-591">하위 디렉터리가 없는지 또는 하위 디렉터리가 없는지와 일치 하는 경우는 `searchPattern` 매개 변수를이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-591">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b540b-592">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-592">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-593">다음 예제에는 문자 "c"로 시작 하는 파일과 디렉터리 모두 나열 합니다 "c:\\"입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-593">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-594"><paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-594"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-595"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-595"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b540b-596"><paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-596"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-597"><see langword="DirectoryInfo" /> 개체에서 캡슐화된 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-597">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b540b-598">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-598">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-599">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-599">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b540b-600">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b540b-600">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-601">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-601">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-602">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-602">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-603">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-603">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-604">현재 디렉터리에서 파일 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-604">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-605">현재 디렉터리에서 파일 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-605">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="b540b-606"><see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-606">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-607">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-607">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-608">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-608">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-609">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-609">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-610">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-610">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-611">파일이 없을 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-611">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b540b-612">반환 된 파일 이름의 순서를 보장할 수 없습니다. 사용 된 <xref:System.Array.Sort%2A> 메서드는 특정 정렬 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b540b-612">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="b540b-613">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-613">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-614">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-614">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="b540b-615">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-615">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-616">경로가 유효하지 않은 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-616">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-617">디렉터리 읽기.</span><span class="sxs-lookup"><span data-stu-id="b540b-617">for reading directories.</span></span> <span data-ttu-id="b540b-618">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b540b-618">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-619">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-619">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-620">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-620">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-621">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-621">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-622">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-622">The search string to match against the names of files.</span></span>  <span data-ttu-id="b540b-623">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-623">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b540b-624">현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-624">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="b540b-625"><see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-625">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-626">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-626">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-627">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-627">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-628">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-628">Wildcard specifier</span></span>|<span data-ttu-id="b540b-629">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-629">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-630">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-630">\* (asterisk)</span></span>|<span data-ttu-id="b540b-631">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-631">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-632">?</span><span class="sxs-lookup"><span data-stu-id="b540b-632">?</span></span> <span data-ttu-id="b540b-633">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-633">(question mark)</span></span>|<span data-ttu-id="b540b-634">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-634">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-635">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-635">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-636">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-636">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-637">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-637">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-638">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-638">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-639">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-639">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-640">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-640">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-641">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-641">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-642">파일이 없을 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-642">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b540b-643">다음 와일드 카드 지정 자가 허용 되는 `searchPattern` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-643">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="b540b-644">와일드 카드 문자</span><span class="sxs-lookup"><span data-stu-id="b540b-644">Wildcard character</span></span>|<span data-ttu-id="b540b-645">설명</span><span class="sxs-lookup"><span data-stu-id="b540b-645">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="b540b-646">0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-646">Zero or more characters.</span></span>|  
|<span data-ttu-id="b540b-647">?</span><span class="sxs-lookup"><span data-stu-id="b540b-647">?</span></span>|<span data-ttu-id="b540b-648">정확히 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-648">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="b540b-649">반환 된 파일 이름의 순서를 보장할 수 없습니다. 사용 된 <xref:System.Array.Sort%2A> 메서드는 특정 정렬 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b540b-649">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="b540b-650">와일드 카드가 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-650">Wildcards are permitted.</span></span> <span data-ttu-id="b540b-651">예를 들어를 `searchPattern` 모든 파일은 확장명이 "txt" 이름 "\*.txt" 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-651">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="b540b-652">합니다 `searchPattern` 문자열 "s\*" "s" 문자로 시작 하는 이름은 모든 파일을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-652">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="b540b-653">없거나 파일이 없는 경우 일치 하는 파일을 `searchPattern` 문자열는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-653">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b540b-654">별표 와일드 카드 문자를 사용 하는 경우는 `searchPattern` (예를 들어, \* ".txt"), 일치 하는 동작을 지정된 된 파일 확장명의 길이 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-654">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="b540b-655">A `searchPattern` 파일을 정확히 3 자 확장이 반환 확장인 3 개 이상의 문자를 사용 하 여 파일을 처음 세 문자에 지정 된 파일 확장명이 일치 하는 위치는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-655">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="b540b-656">A `searchPattern` 파일을 하나, 둘 또는 세 개 이상의 문자 확장 자에 지정 된 파일 확장명과 일치 하는 확장명을 가진 파일만 반환 하는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-656">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="b540b-657">물음표 와일드 카드 문자를 사용할 경우이 메서드는 지정된 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-657">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="b540b-658">예를 들어, 디렉터리, "file1.txt" 및 "file1.txtother", 검색 패턴은 두 개의 파일이 지정 된 "파일?. txt"반환만 첫 번째 파일인 검색 패턴은 하는 동안" 파일\*.txt "파일을 모두 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-658">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b540b-659">검색 패턴 비슷합니다 8.3 파일 이름 형식 및 긴 파일 이름 형식을 모두 사용 하 여 파일 이름에 대해이 메서드는 확인, 때문에 "\* 1\*.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-659">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="b540b-660">예를 들어, 검색 패턴을 사용 하 여 "\*1\*.txt" 동등한 8.3 파일 이름 형식 "longf~1.txt" 될 수 있으므로 "longfilename.txt"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-660">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="b540b-661">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-661">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-662">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-662">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="b540b-663">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-663">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-664"><paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-664"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-665"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-665"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-666">경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-666">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-667">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-667">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-668">경로 파일 및 디렉터리에서 읽기에 대 한 액세스 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-668">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="b540b-669">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b540b-669">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-670">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-670">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-671">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-671">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-672">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-672">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-673">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-673">The search string to match against the names of files.</span></span>  <span data-ttu-id="b540b-674">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-674">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b540b-675">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-675">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="b540b-676">하위 디렉터리를 검색할지 여부를 나타내는 값을 사용하여 현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-676">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="b540b-677"><see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-677">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-678">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-678">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="b540b-679">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-679">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="b540b-680">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-680">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="b540b-681">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-681">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="b540b-682">파일이 없을 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-682">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b540b-683">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-683">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-684">와일드 카드 문자</span><span class="sxs-lookup"><span data-stu-id="b540b-684">Wildcard character</span></span>|<span data-ttu-id="b540b-685">설명</span><span class="sxs-lookup"><span data-stu-id="b540b-685">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="b540b-686">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-686">\* (asterisk)</span></span>|<span data-ttu-id="b540b-687">0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-687">Zero or more characters.</span></span>|  
|<span data-ttu-id="b540b-688">?</span><span class="sxs-lookup"><span data-stu-id="b540b-688">?</span></span> <span data-ttu-id="b540b-689">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-689">(question mark)</span></span>|<span data-ttu-id="b540b-690">정확히 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-690">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="b540b-691">반환 된 파일 이름의 순서를 보장할 수 없습니다. 사용 된 <xref:System.Array.Sort%2A> 메서드는 특정 정렬 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b540b-691">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="b540b-692">와일드 카드가 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-692">Wildcards are permitted.</span></span> <span data-ttu-id="b540b-693">예를 들어를 `searchPattern` 모든 파일은 확장명이 "txt" 이름 "\*.txt" 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-693">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="b540b-694">합니다 `searchPattern` 문자열 "s\*" "s" 문자로 시작 하는 이름은 모든 파일을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-694">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="b540b-695">없거나 파일이 없는 경우 일치 하는 파일을 `searchPattern` 문자열는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-695">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b540b-696">별표 와일드 카드 문자를 사용 하는 경우는 `searchPattern` (예를 들어, \* ".txt"), 일치 하는 동작을 지정된 된 파일 확장명의 길이 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-696">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="b540b-697">A `searchPattern` 파일을 정확히 3 자 확장이 반환 확장인 3 개 이상의 문자를 사용 하 여 파일을 처음 세 문자에 지정 된 파일 확장명이 일치 하는 위치는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-697">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="b540b-698">A `searchPattern` 파일을 하나, 둘 또는 세 개 이상의 문자 확장 자에 지정 된 파일 확장명과 일치 하는 확장명을 가진 파일만 반환 하는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-698">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="b540b-699">물음표 와일드 카드 문자를 사용할 경우이 메서드는 지정된 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-699">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="b540b-700">예를 들어, 디렉터리, "file1.txt" 및 "file1.txtother", 검색 패턴은 두 개의 파일이 지정 된 "파일?. txt"반환만 첫 번째 파일인 검색 패턴은 하는 동안" 파일\*.txt "파일을 모두 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-700">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="b540b-701">다음 목록에 대 한 서로 다른 길이의 동작을 보여 줍니다.는 `searchPattern` 매개 변수:</span><span class="sxs-lookup"><span data-stu-id="b540b-701">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="b540b-702">"\*.abc"는 확장 of.abc,.abcd,.abcde,.abcdef 파일을 반환 등입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-702">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="b540b-703">"\*.abcd"는 확장 of.abcd을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-703">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="b540b-704">"\*.abcde"는 확장 of.abcde을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-704">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="b540b-705">"\*.abcdef"는 확장 of.abcdef을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-705">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b540b-706">검색 패턴 비슷합니다 8.3 파일 이름 형식 및 긴 파일 이름 형식을 모두 사용 하 여 파일 이름에 대해이 메서드는 확인, 때문에 "\* 1\*.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-706">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="b540b-707">예를 들어, 검색 패턴을 사용 하 여 "\*1\*.txt" 동등한 8.3 파일 이름 형식 "longf~1.txt" 될 수 있으므로 "longfilename.txt"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-707">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="b540b-708">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-708">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-709">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-709">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="b540b-710">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-710">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-711"><paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-711"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-712"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-712"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b540b-713"><paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-713"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-714">경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-714">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-715">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-715">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-716">경로 파일 및 디렉터리에서 읽기에 대 한 액세스 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-716">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="b540b-717">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b540b-717">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-718">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-718">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-719">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-719">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-720">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-720">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b540b-721">현재 디렉터리의 파일과 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-721">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-722">디렉터리의 모든 파일과 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 엔트리 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-722">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="b540b-723">강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 엔트리 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-723">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-724">파일 또는 디렉터리에 없는 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-724">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="b540b-725">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-725">This method is not recursive.</span></span>  
  
 <span data-ttu-id="b540b-726">하위 디렉터리에 대 한 합니다 <xref:System.IO.FileSystemInfo> 파생된 클래스에이 메서드에서 반환 된 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-726">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="b540b-727">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값을 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 여부를 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-727">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="b540b-728">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-728">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-729">다음 예제에서는 파일 및 지정된 된 디렉터리에서 디렉터리를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-729">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-730">경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</span><span class="sxs-lookup"><span data-stu-id="b540b-730">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-731">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-731">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-732">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-732">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-733">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-733">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-734">파일에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-734">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="b540b-735">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-735">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="b540b-736">지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-736">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="b540b-737">검색 기준과 일치하는 강력한 형식의 <see langword="FileSystemInfo" /> 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-737">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-738">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-738">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-739">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-739">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-740">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-740">Wildcard specifier</span></span>|<span data-ttu-id="b540b-741">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-741">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-742">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-742">\* (asterisk)</span></span>|<span data-ttu-id="b540b-743">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-743">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-744">?</span><span class="sxs-lookup"><span data-stu-id="b540b-744">?</span></span> <span data-ttu-id="b540b-745">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-745">(question mark)</span></span>|<span data-ttu-id="b540b-746">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-746">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-747">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-747">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-748">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-748">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-749">".</span><span class="sxs-lookup"><span data-stu-id="b540b-749">".</span></span> <span data-ttu-id="b540b-750">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-750">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-751">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-751">This method is not recursive.</span></span>  
  
 <span data-ttu-id="b540b-752">하위 디렉터리에 대 한 합니다 <xref:System.IO.FileSystemInfo> 파생된 클래스에이 메서드에서 반환 된 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-752">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="b540b-753">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값을 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 여부를 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-753">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="b540b-754">와일드 카드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-754">Wild cards are permitted.</span></span> <span data-ttu-id="b540b-755">예를 들어 합니다 `searchPattern` 문자열 "\* t" 모든 디렉터리 이름에 대 한 검색 `path` 문자 "t"로 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-755">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="b540b-756">합니다 `searchPattern` 문자열 "s\*"의 모든 디렉터리 이름에 대 한 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-756">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-757">문자열 "..."에 사용할 수 있습니다 `searchPattern` 디렉터리 이름에 같은 잘못 된 디렉터리 이름의 일부로 지정 된 경우 "는. 합니다. b "로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-757">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="b540b-758">디렉터리 계층 구조 위로 이동 하려면 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-758">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="b540b-759">파일이 나 디렉터리 또는 파일 또는 디렉터리가 일치 하는 경우는 `searchPattern` 문자열을 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-759">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="b540b-760">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-760">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-761">다음 예제에서는 파일 및 지정된 된 검색 패턴과 일치 하는 디렉터리를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-761">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-762"><paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-762"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-763"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-763"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-764">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span><span class="sxs-lookup"><span data-stu-id="b540b-764">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-765">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-765">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-766">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-766">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b540b-767">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="b540b-767">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-768">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-768">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-769">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-769">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-770">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-770">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="b540b-771">디렉터리 및 파일 이름과 일치하는지 비교할 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-771">The search string to match against the names of directories and filesa.</span></span>  <span data-ttu-id="b540b-772">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-772">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="b540b-773">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-773">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="b540b-774">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-774">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="b540b-775">지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-775">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="b540b-776">검색 조건과 일치하는 파일 시스템 항목의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-776">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-777">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-777">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="b540b-778">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-778">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="b540b-779">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="b540b-779">Wildcard specifier</span></span>|<span data-ttu-id="b540b-780">일치 항목</span><span class="sxs-lookup"><span data-stu-id="b540b-780">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="b540b-781">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="b540b-781">\* (asterisk)</span></span>|<span data-ttu-id="b540b-782">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-782">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="b540b-783">?</span><span class="sxs-lookup"><span data-stu-id="b540b-783">?</span></span> <span data-ttu-id="b540b-784">(물음표)</span><span class="sxs-lookup"><span data-stu-id="b540b-784">(question mark)</span></span>|<span data-ttu-id="b540b-785">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-785">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="b540b-786">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="b540b-786">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="b540b-787">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-787">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="b540b-788">".</span><span class="sxs-lookup"><span data-stu-id="b540b-788">".</span></span> <span data-ttu-id="b540b-789">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-789">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="b540b-790">하위 디렉터리에 대 한 합니다 <xref:System.IO.FileSystemInfo> 파생된 클래스에이 메서드에서 반환 된 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-790">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="b540b-791">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값을 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 여부를 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-791">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="b540b-792">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="b540b-792">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-793"><paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-793"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-794"><paramref name="searchPattern" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-794"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b540b-795"><paramref name="searchOption" />는 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-795"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-796">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span><span class="sxs-lookup"><span data-stu-id="b540b-796">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-797">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-797">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="b540b-798">이 디렉터리를 이동할 곳의 이름과 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-798">The name and path to which to move this directory.</span></span> <span data-ttu-id="b540b-799">대상 디렉터리는 다른 디스크 볼륨이나 동일한 이름의 디렉터리가 될 수는 없지만,</span><span class="sxs-lookup"><span data-stu-id="b540b-799">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="b540b-800">이 디렉터리를 하위 디렉터리로 추가할 기존 디렉터리가 될 수는 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-800">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="b540b-801"><see cref="T:System.IO.DirectoryInfo" /> 인스턴스 및 해당 내용을 새 경로로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-801">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-802">이 메서드가 throw는 <xref:System.IO.IOException> 예를 들어 c:\mydir c:\public를 이동 하려고 하 고 c:\public 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-802">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="b540b-803">지정 해야 합니다 "c:\\\public\\\mydir"로 합니다 `destDirName` 매개 변수를 같은 새 디렉터리 이름을 지정 하거나 "c:\\\newdir"입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-803">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="b540b-804">이 메서드는 읽기 전용 디렉터리에서 디렉터리 이동을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-804">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="b540b-805">읽기/쓰기 특성을 모두 디렉터리의 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-805">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="b540b-806">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-806">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-807">다음 예제에서는 디렉터리를 이동 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-807">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-808"><paramref name="destDirName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-808"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b540b-809"><paramref name="destDirName" />이 빈 문자열("")인 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-809"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b540b-810">디렉터리를 다른 볼륨으로 이동하려고 했습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-810">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="b540b-811">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-811">-or-</span></span> 
 <span data-ttu-id="b540b-812"><paramref name="destDirName" />가 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-812"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="b540b-813">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-813">-or-</span></span> 
<span data-ttu-id="b540b-814">이 경로에 액세스할 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-814">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="b540b-815">또는</span><span class="sxs-lookup"><span data-stu-id="b540b-815">-or-</span></span> 
<span data-ttu-id="b540b-816">이동되는 디렉터리와 대상 디렉터리의 이름이 같은 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-816">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-817">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-817">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="b540b-818">대상 디렉터리를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-818">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-819">대상 디렉터리에 대 한 읽기 및 쓰기 파일 및 디렉터리에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-819">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="b540b-820">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-820">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b540b-821">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b540b-821">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-822">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-822">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-823">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-823">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-824">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-824">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b540b-825">이 <see cref="T:System.IO.DirectoryInfo" /> 인스턴스의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-825">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="b540b-826">디렉터리 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-826">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-827">이 <xref:System.IO.DirectoryInfo.Name%2A> 속성 "Bin" 등 디렉터리의 이름만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-827">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="b540b-828">"C:\public\Bin"와 같은 전체 경로 사용 합니다 <xref:System.IO.FileSystemInfo.FullName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-828">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="b540b-829">합니다 <xref:System.IO.DirectoryInfo.Name%2A> 의 속성을 <xref:System.IO.DirectoryInfo> 권한이 필요 하지 (생성 하는 데 필요한 디렉터리에 읽기 권한 이상의 <xref:System.IO.DirectoryInfo.Exists%2A>) 디렉터리 이름을 제공할 수 있지만.</span><span class="sxs-lookup"><span data-stu-id="b540b-829">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="b540b-830">전달 하는 데 필요한 경우 out을 <xref:System.IO.DirectoryInfo> 암호화 된 보안 이름 사용 하 여 보호 된 디렉터리에 신뢰할 수 없는 코드의 사용에 대 한 더미 디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-830">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="b540b-831">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-831">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-832">다음 예에서는 현재의 이름을 표시 `DirectoryInfo` 인스턴스만 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-832">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-833">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-833">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-834">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-834">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-835">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-835">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b540b-836">지정된 하위 디렉터리의 부모 디렉터리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-836">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="b540b-837">부모 디렉터리 또는 <see langword="null" /> 경로가 null 또는 파일 경로 루트 (같은 "\\", "c:" 또는 \* "\\\server\share").</span><span class="sxs-lookup"><span data-stu-id="b540b-837">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-838">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-838">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-839">다음 예제에서는 지정된 된 디렉터리의 부모 디렉터리를 참조 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-839">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-840">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-840">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-841">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-841">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b540b-842">연관 된 열거형: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="b540b-842">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-843">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-843">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-844">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-844">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-845">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-845">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b540b-846">디렉터리의 루트 부분을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-846">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="b540b-847">디렉터리의 루트를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-847">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b540b-848">다음 예제에서는 지정 된 디렉터리에 대 한 루트 위치를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-848">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b540b-849">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-849">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-850">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-850">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="b540b-851">연관 된 열거형: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="b540b-851">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-852">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-852">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-853">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-853">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-854">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-854">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="b540b-855"><paramref name="path" /> 매개 변수에서 설명하는 디렉터리에 적용할 ACL 항목을 설명하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-855">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b540b-856"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 ACL(액세스 제어 목록) 항목을 현재 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명하는 디렉터리에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-856">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b540b-857">액세스 제어 목록 (ACL)을 개인 및/또는 있거나 없는, 특정된 파일이 나 디렉터리에 대 한 특정 작업에 대 한 권한이 있는 사용자 그룹에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-857">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="b540b-858">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b540b-858">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="b540b-859"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드는 상속 되지 않은 ACL 목록을 표시 하는 파일에 ACL 항목을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-859">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b540b-860">에 지정 된 ACL `directorySecurity` 디렉터리에 대 한 기존 ACL을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-860">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="b540b-861">새 사용자에 대 한 권한을 추가 하려면 사용 된 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 기존 ACL을 가져오고 수정 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-861">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="b540b-862">합니다 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드만 지속 되 면 <xref:System.Security.AccessControl.DirectorySecurity> 개체를 만든 후 수정 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-862">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="b540b-863">경우는 <xref:System.Security.AccessControl.DirectorySecurity> 개체 수정 되지 않은, 파일에 유지 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-863">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="b540b-864">검색할 수 없는 따라서는 <xref:System.Security.AccessControl.DirectorySecurity> 한 파일에서 개체 및 다른 파일에 동일한 개체를 다시 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-864">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="b540b-865">ACL 정보 파일에서 다른 위치로 복사할:</span><span class="sxs-lookup"><span data-stu-id="b540b-865">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="b540b-866">사용 하 여는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 검색 하는 메서드는 <xref:System.Security.AccessControl.DirectorySecurity> 소스 파일에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-866">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="b540b-867">새 <xref:System.Security.AccessControl.DirectorySecurity> 대상 파일에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-867">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="b540b-868">사용 된 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> 또는 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> 원본의 메서드 <xref:System.Security.AccessControl.DirectorySecurity> ACL 정보를 검색할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-868">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="b540b-869">사용 된 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> 또는 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> 대상에 3 단계에서 검색 정보를 복사 하는 메서드 <xref:System.Security.AccessControl.DirectorySecurity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-869">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="b540b-870">대상 설정 <xref:System.Security.AccessControl.DirectorySecurity> 개체를 사용 하 여 대상 파일을 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b540b-870">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b540b-871">다음 예제에서는 합니다 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 고 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 디렉터리에서 항목 목록 (ACL)을 제어 하는 메서드를 추가 하 고 다음 액세스를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-871">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b540b-872"><paramref name="directorySecurity" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-872">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="b540b-873">파일을 찾을 수 없거나 수정할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-873">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="b540b-874">현재 프로세스에 파일을 열 수 있는 액세스 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-874">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b540b-875">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b540b-875">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b540b-876">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-876">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="b540b-877">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-877">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b540b-878">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="b540b-878">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b540b-879">사용자가 통과한 원래의 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-879">Returns the original path that was passed by the user.</span></span></summary>
        <returns><span data-ttu-id="b540b-880">사용자가 통과한 원래의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="b540b-880">The original path that was passed by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="b540b-881">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="b540b-881">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="b540b-882">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b540b-882">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="b540b-883">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b540b-883">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>