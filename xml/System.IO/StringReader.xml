<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8bab362ff7a8f83841e791020042cc19304c40e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58727095" /></Metadata><TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c3e5c-101">문자열에서 읽어오는 <see cref="T:System.IO.TextReader" />를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-102"><xref:System.IO.StringReader> 동기적 또는 비동기적으로 문자열을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="c3e5c-103">사용 하 여 한 번에 문자를 읽을 수는 <xref:System.IO.StringReader.Read%2A> 또는 <xref:System.IO.StringReader.ReadAsync%2A> 메서드를 사용 하 여 시간을 줄을 <xref:System.IO.StringReader.ReadLine%2A> 또는 <xref:System.IO.StringReader.ReadLineAsync%2A> 메서드 및 사용 하는 전체 문자열을 <xref:System.IO.StringReader.ReadToEnd%2A> 또는 <xref:System.IO.StringReader.ReadToEndAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="c3e5c-104">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="c3e5c-105">수행 작업</span><span class="sxs-lookup"><span data-stu-id="c3e5c-105">To do this...</span></span>|<span data-ttu-id="c3e5c-106">참조 항목</span><span class="sxs-lookup"><span data-stu-id="c3e5c-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="c3e5c-107">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-107">Create a text file.</span></span>|[<span data-ttu-id="c3e5c-108">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-109">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-109">Write to a text file.</span></span>|[<span data-ttu-id="c3e5c-110">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-111">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-111">Read from a text file.</span></span>|[<span data-ttu-id="c3e5c-112">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="c3e5c-113">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-113">Append text to a file.</span></span>|[<span data-ttu-id="c3e5c-114">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="c3e5c-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-115">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-116">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-117">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-118">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-119">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-119">Read from a binary file.</span></span>|[<span data-ttu-id="c3e5c-120">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="c3e5c-121">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-121">Write to a binary file.</span></span>|[<span data-ttu-id="c3e5c-122">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="c3e5c-123">다음 예제에서는 전체 문자열을 비동기적으로 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-124">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-124">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-125">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-125">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-126">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-126">How to: Write Text to a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c3e5c-127"><see cref="T:System.IO.StringReader" />가 초기화되어야 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-127">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span></span></param>
        <summary><span data-ttu-id="c3e5c-128">지정된 문자열에서 읽어오는 <see cref="T:System.IO.StringReader" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-128">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-129">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-129">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="c3e5c-130">수행 작업</span><span class="sxs-lookup"><span data-stu-id="c3e5c-130">To do this...</span></span>|<span data-ttu-id="c3e5c-131">참조 항목</span><span class="sxs-lookup"><span data-stu-id="c3e5c-131">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="c3e5c-132">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-132">Create a text file.</span></span>|[<span data-ttu-id="c3e5c-133">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-133">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-134">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-134">Write to a text file.</span></span>|[<span data-ttu-id="c3e5c-135">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-135">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-136">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-136">Read from a text file.</span></span>|[<span data-ttu-id="c3e5c-137">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-137">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="c3e5c-138">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-138">Append text to a file.</span></span>|[<span data-ttu-id="c3e5c-139">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="c3e5c-139">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-140">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-140">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-141">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-141">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-142">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-142">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-143">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-143">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-144">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-144">Read from a binary file.</span></span>|[<span data-ttu-id="c3e5c-145">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-145">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="c3e5c-146">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-146">Write to a binary file.</span></span>|[<span data-ttu-id="c3e5c-147">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-147">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="c3e5c-148">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-148">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3e5c-149"><paramref name="s" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-149">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-150">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-150">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-151">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-151">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-152">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-152">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3e5c-153"><see cref="T:System.IO.StringReader" />를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-153">Closes the <see cref="T:System.IO.StringReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-154">파일을 만들고 파일에 텍스트 쓰기의 예제를 참조 하세요. [방법: 텍스트 파일에 쓸](~/docs/standard/io/how-to-write-text-to-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-154">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="c3e5c-155">파일에서 읽는 텍스트의 예제를 참조 하세요. [방법: 파일에서 텍스트 읽기](~/docs/standard/io/how-to-read-text-from-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-155">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="c3e5c-156">읽기 및 쓰기 이진 파일의 예제를 참조 하세요. [방법: 새로 만든된 데이터 파일에 읽기 및 쓰기](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-156">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="c3e5c-157">이 메서드를 재정의 합니다 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-157">This method overrides the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c3e5c-158">이 구현의 `Close` 호출을 <xref:System.IO.StringReader.Dispose%2A> 전달 하는 메서드를 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-158">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="c3e5c-159">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 `Close`합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-159">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="c3e5c-160">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 에 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태는 플러시되지 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-160">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="c3e5c-161">이 수는 다음 문자 블록을 올바르게 인코딩할 수 있도록 상태로 (부분 자)를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-161">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="c3e5c-162">이 시나리오는 UTF8 및 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩된만 수 있는 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-162">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="c3e5c-163">호출한 다음 `Close`, 다른 메서드 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-163">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-164">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-164">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-165">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-165">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-166">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-166">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="c3e5c-167">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-167"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c3e5c-168"><see cref="T:System.IO.StringReader" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-168">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-169">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.StringReader>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-169">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="c3e5c-170">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-170">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c3e5c-171">
            <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-171">
            <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="c3e5c-172">재정의 하는 경우 <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-172">When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-173">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-173">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-174">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-174">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-175">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-175">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3e5c-176">사용할 수 있는 다음 문자를 반환하지만 사용하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-176">Returns the next available character but does not consume it.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-177">읽을 다음 문자를 나타내는 정수이거나, 사용할 수 있는 문자가 더 이상 없거나 스트림에서 검색을 지원하지 않을 경우 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-177">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-178"><xref:System.IO.StringReader.Peek%2A> 메서드 끝 파일 또는 다른 오류가 발생 했는지 여부를 확인 하기 위해 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-178">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="c3e5c-179">이렇게 하면 사용자는 반환된 값은-1로 캐스팅 하기 전에 먼저 확인 하는 <xref:System.Char> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-179">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="c3e5c-180">이 메서드를 재정의 합니다 <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-180">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c3e5c-181">현재 위치를 `StringReader` 이 작업에 의해 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-181">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="c3e5c-182">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-182">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="c3e5c-183">수행 작업</span><span class="sxs-lookup"><span data-stu-id="c3e5c-183">To do this...</span></span>|<span data-ttu-id="c3e5c-184">참조 항목</span><span class="sxs-lookup"><span data-stu-id="c3e5c-184">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="c3e5c-185">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-185">Create a text file.</span></span>|[<span data-ttu-id="c3e5c-186">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-186">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-187">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-187">Write to a text file.</span></span>|[<span data-ttu-id="c3e5c-188">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-188">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-189">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-189">Read from a text file.</span></span>|[<span data-ttu-id="c3e5c-190">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-190">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="c3e5c-191">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-191">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-192">현재 판독기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-192">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-193">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-193">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-194">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-194">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-195">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-195">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3e5c-196">입력 문자열에서 다음 문자 또는 다음 문자 집합을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-196">Reads the next character or next set of characters from the input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3e5c-197">입력 문자열에서 다음 문자를 읽고 문자 위치를 한 문자씩 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-197">Reads the next character from the input string and advances the character position by one character.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-198">내부 문자열의 다음 문자를 반환하거나, 사용할 수 있는 문자가 더 이상 없으면 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-198">The next character from the underlying string, or -1 if no more characters are available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-199">이 메서드를 재정의 합니다 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-199">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c3e5c-200">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-200">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="c3e5c-201">수행 작업</span><span class="sxs-lookup"><span data-stu-id="c3e5c-201">To do this...</span></span>|<span data-ttu-id="c3e5c-202">참조 항목</span><span class="sxs-lookup"><span data-stu-id="c3e5c-202">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="c3e5c-203">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-203">Create a text file.</span></span>|[<span data-ttu-id="c3e5c-204">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-204">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-205">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-205">Write to a text file.</span></span>|[<span data-ttu-id="c3e5c-206">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-206">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-207">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-207">Read from a text file.</span></span>|[<span data-ttu-id="c3e5c-208">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-208">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="c3e5c-209">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-209">Append text to a file.</span></span>|[<span data-ttu-id="c3e5c-210">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="c3e5c-210">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-211">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-211">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-212">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-212">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-213">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-213">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-214">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-214">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-215">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-215">Read from a binary file.</span></span>|[<span data-ttu-id="c3e5c-216">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-216">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="c3e5c-217">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-217">Write to a binary file.</span></span>|[<span data-ttu-id="c3e5c-218">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-218">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="c3e5c-219">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-219">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-220">현재 판독기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-220">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-221">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-221">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-222">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-222">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-223">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-223">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c3e5c-224">이 메서드는 지정된 문자 배열의 값이 <paramref name="index" />와 (<paramref name="index" /> + <paramref name="count" /> - 1) 사이에서 현재 원본으로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-224">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="c3e5c-225">버퍼의 시작 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-225">The starting index in the buffer.</span></span></param>
        <param name="count"><span data-ttu-id="c3e5c-226">읽을 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-226">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="c3e5c-227">입력 문자열에서 문자 블록을 읽은 다음 문자 위치를 <paramref name="count" />씩 앞으로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-227">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-228">버퍼로 읽어온 총 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-228">The total number of characters read into the buffer.</span></span> <span data-ttu-id="c3e5c-229">이 문자 수는 현재 문자가 충분하지 않은 경우 요청된 문자 수보다 작을 수 있으며 내부 문자열의 끝에 도달하면 0이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-229">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-230">이 메서드는 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-230">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c3e5c-231">메서드는 최대 읽습니다 `count` 에서 문자를 <xref:System.IO.StringReader> 에 `buffer` 위치에서 시작 하는 문자 배열 `index`합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-231">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="c3e5c-232">문자 수가 실제 읽기, 또는 문자열의 끝에 도달 했으며 없는 문자를 읽은 경우 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-232">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="c3e5c-233">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-233">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="c3e5c-234">수행 작업</span><span class="sxs-lookup"><span data-stu-id="c3e5c-234">To do this...</span></span>|<span data-ttu-id="c3e5c-235">참조 항목</span><span class="sxs-lookup"><span data-stu-id="c3e5c-235">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="c3e5c-236">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-236">Create a text file.</span></span>|[<span data-ttu-id="c3e5c-237">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-237">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-238">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-238">Write to a text file.</span></span>|[<span data-ttu-id="c3e5c-239">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-239">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-240">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-240">Read from a text file.</span></span>|[<span data-ttu-id="c3e5c-241">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-241">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="c3e5c-242">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-242">Append text to a file.</span></span>|[<span data-ttu-id="c3e5c-243">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="c3e5c-243">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-244">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-244">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-245">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-245">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-246">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-246">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-247">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-247">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-248">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-248">Read from a binary file.</span></span>|[<span data-ttu-id="c3e5c-249">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-249">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="c3e5c-250">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-250">Write to a binary file.</span></span>|[<span data-ttu-id="c3e5c-251">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-251">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3e5c-252"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-252"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3e5c-253">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-253">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3e5c-254"><paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-254"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-255">현재 판독기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-255">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-256">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-256">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-257">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-257">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-258">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-258">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c3e5c-259">이 메서드는 지정된 문자 배열의 값이 <paramref name="index" />와 (<paramref name="index" /> + <paramref name="count" /> - 1) 사이에서 현재 원본으로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-259">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="c3e5c-260">쓰기를 시작할 <paramref name="buffer" />의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-260">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="c3e5c-261">읽을 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-261">The maximum number of characters to read.</span></span> <span data-ttu-id="c3e5c-262">지정한 문자 수를 버퍼에 기록하기 전에 문자열의 끝에 도달하면 메서드가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-262">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="c3e5c-263">현재 문자열에서 지정된 최대 수의 문자를 비동기적으로 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-263">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-264">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-264">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="c3e5c-265"><paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-265">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="c3e5c-266">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 문자열의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-266">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-267">작업 완료 후 지정 된 문자의 수를 `count` 매개 변수는 읽기 또는 문자열의 끝에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-267">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3e5c-268">다음 예제에서는 문자열의 처음 23 문자를 비동기적으로 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-268">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3e5c-269"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-269"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3e5c-270"><paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-270"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3e5c-271"><paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-271">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-272">문자열 판독기가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-272">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3e5c-273">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-273">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c3e5c-274">이 메서드는 지정된 문자 배열의 값이 <paramref name="index" />와 (<paramref name="index" /> + <paramref name="count" /> - 1) 사이에서 현재 원본으로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-274">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="c3e5c-275">쓰기를 시작할 <paramref name="buffer" />의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-275">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="c3e5c-276">읽을 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-276">The maximum number of characters to read.</span></span> <span data-ttu-id="c3e5c-277">지정한 문자 수를 버퍼에 기록하기 전에 문자열의 끝에 도달하면 메서드가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-277">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="c3e5c-278">현재 문자열에서 지정된 최대 수의 문자를 비동기적으로 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-278">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-279">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-279">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="c3e5c-280"><paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-280">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="c3e5c-281">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 문자열의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-281">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-282">작업이 완료 되지 않으면 될 때까지 지정 된 문자의 수를 `count` 매개 변수를 읽거나 문자열의 끝에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-282">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3e5c-283"><paramref name="buffer" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-283"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3e5c-284"><paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-284"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3e5c-285"><paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-285">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-286">문자열 판독기가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-286">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3e5c-287">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-287">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3e5c-288">현재 문자열에서 한 줄의 문자를 읽고 데이터를 문자열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-288">Reads a line of characters from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-289">현재 문자열의 다음 줄 또는 문자열의 끝에 도달한 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-289">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-290">이 메서드를 재정의 합니다 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-290">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c3e5c-291">줄 뒤에 줄 바꿈 문자 ("\n")의 시퀀스, 캐리지 리턴 ("\r"), 캐리지 리턴 줄 바꿈 바로 뒤에 ("\r\n") 또는 스트림 끝 표식으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-291">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), a carriage return immediately followed by a line feed ("\r\n"), or the end-of-stream marker.</span></span> <span data-ttu-id="c3e5c-292">반환 되는 문자열 종료 캐리지 리턴 또는 줄 바꿈 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-292">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="c3e5c-293">반환된 값은 `null` 스트림의 끝 표식에 도달한 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-293">The returned value is `null` if the end-of-stream marker has been reached.</span></span> <span data-ttu-id="c3e5c-294">즉, 경우 마지막 줄 읽기 및 스트림의 끝 표식 간에, 메서드가 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-294">That is to say, if there is nothing between the last line read and the end-of-stream marker, the method returns `null`.</span></span>  
  
 <span data-ttu-id="c3e5c-295">현재 메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException>, 판독기의 위치는 기본 문자열에서 문자 메서드를 읽을 수 있었습니다. 하지만 내부에 이미 읽은 문자 수로 고급 <xref:System.IO.StringReader.ReadLine%2A> 버퍼 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-295">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="c3e5c-296">이미 읽은 문자 문자열에서 판독기의 위치를 변경할 수 없으므로, 복구할 수 없는 하 고 다시 초기화에 의해서만 액세스할 수 있습니다는 <xref:System.IO.StringReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-296">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="c3e5c-297">이러한 상황을 방지 하려면 사용 된 <xref:System.IO.StringReader.Read%2A> 읽기 미리 할당 된 버퍼의 문자 메서드와 저장소.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-297">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="c3e5c-298">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-298">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="c3e5c-299">수행 작업</span><span class="sxs-lookup"><span data-stu-id="c3e5c-299">To do this...</span></span>|<span data-ttu-id="c3e5c-300">참조 항목</span><span class="sxs-lookup"><span data-stu-id="c3e5c-300">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="c3e5c-301">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-301">Create a text file.</span></span>|[<span data-ttu-id="c3e5c-302">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-302">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-303">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-303">Write to a text file.</span></span>|[<span data-ttu-id="c3e5c-304">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-304">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-305">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-305">Read from a text file.</span></span>|[<span data-ttu-id="c3e5c-306">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-306">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="c3e5c-307">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-307">Append text to a file.</span></span>|[<span data-ttu-id="c3e5c-308">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="c3e5c-308">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-309">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-309">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-310">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-310">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-311">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-311">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-312">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-312">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-313">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-313">Read from a binary file.</span></span>|[<span data-ttu-id="c3e5c-314">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-314">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="c3e5c-315">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-315">Write to a binary file.</span></span>|[<span data-ttu-id="c3e5c-316">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-316">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="c3e5c-317">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-317">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-318">현재 판독기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-318">The current reader is closed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="c3e5c-319">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-319">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-320">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-320">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-321">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-321">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-322">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-322">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3e5c-323">현재 문자열에서 한 줄의 문자를 비동기적으로 읽고 데이터를 문자열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-323">Reads a line of characters asynchronously from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-324">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-324">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="c3e5c-325"><paramref name="TResult" /> 매개 변수의 값은 문자열 판독기의 다음 줄을 포함하거나 모든 문자가 읽혀진 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-325">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c3e5c-326">다음 예제에서는 문자열에서 한 번에 한 줄씩을 비동기적으로 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-326">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3e5c-327">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-327">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-328">문자열 판독기가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-328">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3e5c-329">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-329">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3e5c-330">현재 위치부터 문자열 끝까지의 모든 문자를 읽어서 이를 단일 문자열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-330">Reads all characters from the current position to the end of the string and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-331">내부 문자열의 현재 위치에서 끝까지의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-331">The content from the current position to the end of the underlying string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3e5c-332">이 메서드를 재정의 합니다 <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-332">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c3e5c-333">현재 메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException>, 판독기의 위치는 기본 문자열에서 문자 메서드를 읽을 수 있었습니다. 하지만 내부에 이미 읽은 문자 수로 고급 <xref:System.IO.StringReader.ReadToEnd%2A> 버퍼 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-333">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="c3e5c-334">이미 읽은 문자 문자열에서 판독기의 위치를 변경할 수 없으므로, 복구할 수 없는 하 고 다시 초기화에 의해서만 액세스할 수 있습니다는 <xref:System.IO.StringReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-334">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="c3e5c-335">이러한 상황을 방지 하려면 사용 된 <xref:System.IO.StringReader.Read%2A> 읽기 미리 할당 된 버퍼의 문자 메서드와 저장소.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-335">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="c3e5c-336">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-336">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="c3e5c-337">수행 작업</span><span class="sxs-lookup"><span data-stu-id="c3e5c-337">To do this...</span></span>|<span data-ttu-id="c3e5c-338">참조 항목</span><span class="sxs-lookup"><span data-stu-id="c3e5c-338">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="c3e5c-339">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-339">Create a text file.</span></span>|[<span data-ttu-id="c3e5c-340">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-340">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-341">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-341">Write to a text file.</span></span>|[<span data-ttu-id="c3e5c-342">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-342">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="c3e5c-343">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-343">Read from a text file.</span></span>|[<span data-ttu-id="c3e5c-344">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-344">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="c3e5c-345">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-345">Append text to a file.</span></span>|[<span data-ttu-id="c3e5c-346">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="c3e5c-346">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-347">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-347">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-348">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-348">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-349">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-349">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-350">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-350">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c3e5c-351">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-351">Read from a binary file.</span></span>|[<span data-ttu-id="c3e5c-352">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-352">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="c3e5c-353">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-353">Write to a binary file.</span></span>|[<span data-ttu-id="c3e5c-354">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-354">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="c3e5c-355">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.TextReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-355">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="c3e5c-356">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-356">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-357">현재 판독기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-357">The current reader is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="c3e5c-358">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="c3e5c-358">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="c3e5c-359">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-359">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="c3e5c-360">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="c3e5c-360">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3e5c-361">현재 위치부터 문자열 끝까지의 모든 문자를 비동기적으로 읽어서 이를 단일 문자열로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-361">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="c3e5c-362">비동기 읽기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-362">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="c3e5c-363"><paramref name="TResult" /> 매개 변수의 값은 현재 위치에서 문자열 끝까지의 문자로 이루어진 문자열을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-363">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c3e5c-364">다음 예제에서는 전체 문자열을 비동기적으로 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-364">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3e5c-365">문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-365">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c3e5c-366">문자열 판독기가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="c3e5c-366">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3e5c-367">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="c3e5c-367">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>