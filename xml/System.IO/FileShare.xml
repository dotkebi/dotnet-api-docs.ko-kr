<Type Name="FileShare" FullName="System.IO.FileShare">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fce9ebc7ca1e69ab81f3a4caabedbff38890d4af" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56362296" /></Metadata><TypeSignature Language="C#" Value="public enum FileShare" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FileShare extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileShare" />
  <TypeSignature Language="VB.NET" Value="Public Enum FileShare" />
  <TypeSignature Language="C++ CLI" Value="public enum class FileShare" />
  <TypeSignature Language="F#" Value="type FileShare = " />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e1ae7-101">동일한 파일에 대해 다른 <see cref="T:System.IO.FileStream" /> 개체가 가질 수 있는 액세스 종류를 제어하는 상수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-101">Contains constants for controlling the kind of access other <see cref="T:System.IO.FileStream" /> objects can have to the same file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ae7-102">파일을 만들고 파일에 텍스트 쓰기의 예제를 참조 하세요. [방법: 텍스트 파일에 쓸](~/docs/standard/io/how-to-write-text-to-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-102">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="e1ae7-103">파일에서 읽는 텍스트의 예제를 참조 하세요. [방법: 파일에서 텍스트 읽기](~/docs/standard/io/how-to-read-text-from-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-103">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="e1ae7-104">읽기 및 쓰기 이진 파일의 예제를 참조 하세요. [방법: 새로 만든된 데이터 파일에 읽기 및 쓰기](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-104">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="e1ae7-105">이 열거형의 일반적인 사용 두 프로세스가 동일한 파일에서 동시에 읽을 수 있는지 여부를 정의 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-105">A typical use of this enumeration is to define whether two processes can simultaneously read from the same file.</span></span> <span data-ttu-id="e1ae7-106">예를 들어 파일을 열면 읽기는 지정 된 경우 다른 사용자에 게 쓰기 아니라 읽기에 대 한 파일을 열 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-106">For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.</span></span>  
  
 <span data-ttu-id="e1ae7-107"><xref:System.IO.FileShare.Read> 중 일부에 대 한 생성자의 매개 변수를 지정 하는 <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, 및의 일부를 `Open` 의 메서드 <xref:System.IO.File> 및 <xref:System.IO.FileInfo> 파일을 열면 하는 방법을 제어 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-107">A <xref:System.IO.FileShare.Read> parameter is specified in some of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in some of the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1ae7-108">다음 <xref:System.IO.FileStream> 생성자는 기존 파일을 열고 (읽기) 다른 사용자에 게 읽기 전용 액세스를 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-108">The following <xref:System.IO.FileStream> constructor opens an existing file and grants read-only access to other users (Read).</span></span>  
  
 [!code-cpp[Classic FileAccess Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileAccess Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileAccess Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileAccess Example/CS/source.cs#1)]
 [!code-vb[Classic FileAccess Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileAccess Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.IO.File.Open(System.String,System.IO.FileMode)" />
    <altmember cref="M:System.IO.FileInfo.Open(System.IO.FileMode)" />
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1ae7-109">파일 및 스트림 I/O</span><span class="sxs-lookup"><span data-stu-id="e1ae7-109">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1ae7-110">방법: 파일에서 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="e1ae7-110">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1ae7-111">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="e1ae7-111">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1ae7-112">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="e1ae7-112">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="Delete" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare Delete = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.Delete" />
      <MemberSignature Language="VB.NET" Value="Delete" />
      <MemberSignature Language="C++ CLI" Value="Delete" />
      <MemberSignature Language="F#" Value="Delete = 4" Usage="System.IO.FileShare.Delete" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1ae7-113">파일의 후속 삭제를 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-113">Allows subsequent deleting of a file.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Inheritable">
      <MemberSignature Language="C#" Value="Inheritable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare Inheritable = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.Inheritable" />
      <MemberSignature Language="VB.NET" Value="Inheritable" />
      <MemberSignature Language="C++ CLI" Value="Inheritable" />
      <MemberSignature Language="F#" Value="Inheritable = 16" Usage="System.IO.FileShare.Inheritable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1ae7-114">파일 핸들을 자식 프로세스에서 상속할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-114">Makes the file handle inheritable by child processes.</span></span> <span data-ttu-id="e1ae7-115">Win32에서는 이러한 방식이 직접 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-115">This is not directly supported by Win32.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.IO.FileShare.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1ae7-116">현재 파일의 공유를 거절합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-116">Declines sharing of the current file.</span></span> <span data-ttu-id="e1ae7-117">파일을 닫아야만 이 프로세스나 다른 프로세스에서 파일을 열려는 요청이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-117">Any request to open the file (by this process or another process) will fail until the file is closed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="Read" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare Read = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.Read" />
      <MemberSignature Language="VB.NET" Value="Read" />
      <MemberSignature Language="C++ CLI" Value="Read" />
      <MemberSignature Language="F#" Value="Read = 1" Usage="System.IO.FileShare.Read" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1ae7-118">다음에 파일을 읽기용으로 여는 것을 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-118">Allows subsequent opening of the file for reading.</span></span> <span data-ttu-id="e1ae7-119">이 플래그가 지정되어 있지 않은 경우 파일을 닫아야만 이 프로세스나 다른 프로세스에서 파일을 읽기용으로 열려는 요청이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-119">If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed.</span></span> <span data-ttu-id="e1ae7-120">그러나 이 플래그가 지정되어 있으면 파일에 액세스하는 데 추가 권한이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-120">However, even if this flag is specified, additional permissions might still be needed to access the file.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadWrite">
      <MemberSignature Language="C#" Value="ReadWrite" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare ReadWrite = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.ReadWrite" />
      <MemberSignature Language="VB.NET" Value="ReadWrite" />
      <MemberSignature Language="C++ CLI" Value="ReadWrite" />
      <MemberSignature Language="F#" Value="ReadWrite = 3" Usage="System.IO.FileShare.ReadWrite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1ae7-121">다음에 파일을 읽기용 또는 쓰기용으로 여는 것을 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-121">Allows subsequent opening of the file for reading or writing.</span></span> <span data-ttu-id="e1ae7-122">이 플래그가 지정되어 있지 않은 경우 파일을 닫아야만 이 프로세스나 다른 프로세스에서 파일을 읽기용 또는 쓰기용으로 열려는 요청이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-122">If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed.</span></span> <span data-ttu-id="e1ae7-123">그러나 이 플래그가 지정되어 있으면 파일에 액세스하는 데 추가 권한이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-123">However, even if this flag is specified, additional permissions might still be needed to access the file.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="Write" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileShare Write = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileShare.Write" />
      <MemberSignature Language="VB.NET" Value="Write" />
      <MemberSignature Language="C++ CLI" Value="Write" />
      <MemberSignature Language="F#" Value="Write = 2" Usage="System.IO.FileShare.Write" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e1ae7-124">다음에 파일을 쓰기용으로 여는 것을 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-124">Allows subsequent opening of the file for writing.</span></span> <span data-ttu-id="e1ae7-125">이 플래그가 지정되어 있지 않은 경우 파일을 닫아야만 이 프로세스나 다른 프로세스에서 파일을 쓰기용으로 열려는 요청이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-125">If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed.</span></span> <span data-ttu-id="e1ae7-126">그러나 이 플래그가 지정되어 있으면 파일에 액세스하는 데 추가 권한이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e1ae7-126">However, even if this flag is specified, additional permissions might still be needed to access the file.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>