<Type Name="ExecutionDataflowBlockOptions" FullName="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ceadc4e1a62dd47f47ec0574601bbd174950d9ed" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56365780" /></Metadata><TypeSignature Language="C#" Value="public class ExecutionDataflowBlockOptions : System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExecutionDataflowBlockOptions extends System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ExecutionDataflowBlockOptions&#xA;Inherits DataflowBlockOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutionDataflowBlockOptions : System::Threading::Tasks::Dataflow::DataflowBlockOptions" />
  <TypeSignature Language="F#" Value="type ExecutionDataflowBlockOptions = class&#xA;    inherit DataflowBlockOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.Tasks.Dataflow.DataflowBlockOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("TaskScheduler = {TaskScheduler}, MaxMessagesPerTask = {MaxMessagesPerTask}, BoundedCapacity = {BoundedCapacity}, MaxDegreeOfParallelism = {MaxDegreeOfParallelism}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e8ed9-101">사용자가 제공한 대리자의 호출을 통해 각 메시지를 처리하는 데이터 흐름 블록에 의해 수행되는 처리를 구성하는 데 사용되는 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-101">Provides options used to configure the processing performed by dataflow blocks that process each message through the invocation of a user-provided delegate.</span></span> <span data-ttu-id="e8ed9-102"><see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 및 <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> 등의 데이터 흐름 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-102">These are dataflow blocks such as  <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> and  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 <span data-ttu-id="e8ed9-103"><xref:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions> 변경할 수 있으며 해당 속성을 통해 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-103"><xref:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions> is mutable and can be configured through its properties.</span></span>  
  
 <span data-ttu-id="e8ed9-104">특정 구성 옵션은 설정 되지 않은 경우 다음 기본값이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-104">When specific configuration options are not set, the following defaults are used:</span></span>  
  
|<span data-ttu-id="e8ed9-105">옵션</span><span class="sxs-lookup"><span data-stu-id="e8ed9-105">Options</span></span>|<span data-ttu-id="e8ed9-106">기본</span><span class="sxs-lookup"><span data-stu-id="e8ed9-106">Default</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="e8ed9-107">TaskScheduler</span><span class="sxs-lookup"><span data-stu-id="e8ed9-107">TaskScheduler</span></span>|<xref:System.Threading.Tasks.TaskScheduler.Default%2A>|  
|<span data-ttu-id="e8ed9-108">CancellationToken</span><span class="sxs-lookup"><span data-stu-id="e8ed9-108">CancellationToken</span></span>|<xref:System.Threading.CancellationToken.None%2A>|  
|<span data-ttu-id="e8ed9-109">MaxMessagesPerTask</span><span class="sxs-lookup"><span data-stu-id="e8ed9-109">MaxMessagesPerTask</span></span>|<span data-ttu-id="e8ed9-110">DataflowBlockOptions.Unbounded (-1)</span><span class="sxs-lookup"><span data-stu-id="e8ed9-110">DataflowBlockOptions.Unbounded (-1)</span></span>|  
|<span data-ttu-id="e8ed9-111">BoundedCapacity</span><span class="sxs-lookup"><span data-stu-id="e8ed9-111">BoundedCapacity</span></span>|<span data-ttu-id="e8ed9-112">DataflowBlockOptions.Unbounded (-1)</span><span class="sxs-lookup"><span data-stu-id="e8ed9-112">DataflowBlockOptions.Unbounded (-1)</span></span>|  
|<span data-ttu-id="e8ed9-113">MaxDegreeOfParallelism</span><span class="sxs-lookup"><span data-stu-id="e8ed9-113">MaxDegreeOfParallelism</span></span>|<span data-ttu-id="e8ed9-114">1</span><span class="sxs-lookup"><span data-stu-id="e8ed9-114">1</span></span>|  
  
 <span data-ttu-id="e8ed9-115">데이터 흐름 블록에서 해당 생성 옵션의 상태를 캡처합니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-115">Dataflow block capture the state of the options at their construction.</span></span> <span data-ttu-id="e8ed9-116">제공된 된 후속 변경 <xref:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions> 인스턴스 데이터 흐름 블록의 동작이 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-116">Subsequent changes to the provided <xref:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions> instance should not affect the behavior of a dataflow block.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExecutionDataflowBlockOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExecutionDataflowBlockOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8ed9-117">새 <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-117">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDegreeOfParallelism As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDegreeOfParallelism { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDegreeOfParallelism : int with get, set" Usage="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8ed9-118">블록이 동시에 처리할 수 있는 메시지의 최대 개수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-118">Gets the maximum number of messages that may be processed by the block concurrently.</span></span></summary>
        <value><span data-ttu-id="e8ed9-119">최대 메시지 수입니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-119">The maximum number of messages.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleProducerConstrained">
      <MemberSignature Language="C#" Value="public bool SingleProducerConstrained { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleProducerConstrained" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained" />
      <MemberSignature Language="VB.NET" Value="Public Property SingleProducerConstrained As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleProducerConstrained { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SingleProducerConstrained : bool with get, set" Usage="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8ed9-120">데이터 흐름 블록을 사용하는 코드가 한 번에 하나의 생산자로 제한되어 있는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-120">Gets whether code using the dataflow block is constrained to one producer at a time.</span></span></summary>
        <value><span data-ttu-id="e8ed9-121"><see cref="T:System.Boolean" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-121">Returns  <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ed9-122">이 속성의 기본값은 false, 블록이 여러 생산자가 동시에 사용 될 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-122">This property defaults to false, such that the block may be used by multiple producers concurrently.</span></span> <span data-ttu-id="e8ed9-123">이 속성 블록을 사용 하는 코드는만 사용 되도록 둘 이상의 재생기에서 보장할 수 있으면 true로 설정 해야 합니다 (예: 소스 블록에 연결 됨)는 Post, 완료, 오류 및 OfferMessage와 같은 메서드는 호출 되지 동시 즉 한 번에 ly 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-123">This property should only be set to true if the code using the block can guarantee that it will only ever be used by one producer (e.g. a source linked to the block) at a time, meaning that methods like Post, Complete, Fault, and OfferMessage will never be called concurrently.</span></span> <span data-ttu-id="e8ed9-124">일부 블록이 있습니다만 될 둘 이상의 재생기 한 번에 더 나은 성능을 제공 하기 위해 지식을 활용 하 여 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8ed9-124">Some blocks may choose to capitalize on the knowledge that there will only be one producer at a time in order to provide better performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>