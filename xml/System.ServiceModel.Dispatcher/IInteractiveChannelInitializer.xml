<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="caa788a603083e99a3bcf72be15ec882d1df7898" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56778370" /></Metadata><TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <TypeSignature Language="F#" Value="type IInteractiveChannelInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="348e8-101">클라이언트 애플리케이션에서 채널을 만들기 전에 사용자 인터페이스를 표시하여 ID 정보를 수집할 수 있게 해주는 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-101">Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348e8-102">채널을 열기 전에 애플리케이션 사용자가 자격 증명을 만들거나 선택할 수 있는 사용자 인터페이스를 클라이언트 애플리케이션에서 표시하게 하려면 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-102">Implement the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.</span></span>  
  
 <span data-ttu-id="348e8-103"><xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>를 구현하려면 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>에서 다음 단계를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-103">To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span></span>  
  
1.  <span data-ttu-id="348e8-104">사용자에게 프롬프트를 표시하고 적절한 <xref:System.Net.NetworkCredential?displayProperty=nameWithType>을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-104">Prompt the user and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span></span>  
  
2.  <span data-ttu-id="348e8-105"><xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> 형식의 매개 변수를 사용하여 <xref:System.ServiceModel.IClientChannel> 개체에서 <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType> 메서드에 의해 반환되는 컬렉션에 사용자 지정 채널 매개 변수 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-105">Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span></span> <span data-ttu-id="348e8-106">이 채널 매개 변수 개체는 사용자 지정 <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType>가 채널에 대한 보안 토큰을 설정하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-106">This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> to establish the security tokens for the channel.</span></span>  
  
3.  <span data-ttu-id="348e8-107">반환합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-107">Return.</span></span>  
  
 <span data-ttu-id="348e8-108"><xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>를 삽입하려면 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-108">To insert <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:</span></span>  
  
1.  <span data-ttu-id="348e8-109"><xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> 클래스에서 <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> 메서드를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-109">Override the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> class.</span></span>  
  
2.  <span data-ttu-id="348e8-110">이 메서드에서 엔드포인트에 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>가 필요한지 여부를 확인하고, 필요한 경우 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> 컬렉션에 <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType>를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-110">In that method, determine whether the endpoint requires an <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> and if so, add the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> collection.</span></span>  
  
 <span data-ttu-id="348e8-111">애플리케이션 개발자는 삽입된 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>를 두 가지 방법으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-111">There are two ways application developers can make use of an inserted <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>.</span></span> <span data-ttu-id="348e8-112">클라이언트 애플리케이션이 호출할 수 있습니다 <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> 또는 <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (또는 비동기 버전) 채널을 열기 전에 (합니다 *명시적* 접근 방식을) 첫 번째 작업을 호출 하거나 (의 *암시적* 접근 방식).</span><span class="sxs-lookup"><span data-stu-id="348e8-112">The client application can call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (or an asynchronous version) prior to opening the channel (the *explicit* approach) or simply call the first operation (the *implicit* approach).</span></span>  
  
 <span data-ttu-id="348e8-113">암시적 방법을 사용하는 경우 애플리케이션은 <xref:System.ServiceModel.ClientBase%601> 또는 <xref:System.ServiceModel.IClientChannel> 확장에서 첫 번째 작업을 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-113">If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension.</span></span> <span data-ttu-id="348e8-114">다른 작업을 호출하면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-114">If it calls anything other than the first operation, an exception is thrown.</span></span>  
  
 <span data-ttu-id="348e8-115">명시적 방법을 사용하는 경우 애플리케이션은 다음 단계를 순서대로 수행해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-115">If using the explicit approach, the application must perform the following steps in order:</span></span>  
  
1.  <span data-ttu-id="348e8-116"><xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> 또는 <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType>(또는 비동기 버전)를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-116">Call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (or an asynchronous version).</span></span>  
  
2.  <span data-ttu-id="348e8-117">이니셜라이저가 반환되면 <xref:System.ServiceModel.ICommunicationObject.Open%2A> 개체 또는 <xref:System.ServiceModel.IClientChannel> 속성에서 반환된 <xref:System.ServiceModel.IClientChannel> 개체에서 <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-117">When the initializers have returned, call either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> method on the <xref:System.ServiceModel.IClientChannel> object or on the <xref:System.ServiceModel.IClientChannel> object returned from the <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="348e8-118">작업을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-118">Call operations.</span></span>  
  
 <span data-ttu-id="348e8-119">프로덕션 품질 애플리케이션에서는 명시적 방법을 사용하여 사용자 인터페이스 프로세스를 제어하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-119">It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.</span></span>  
  
 <span data-ttu-id="348e8-120">암시적 방법을 사용하는 애플리케이션은 사용자 인터페이스 이니셜라이저를 호출하지만, 애플리케이션 사용자가 바인딩에 대한 전송 시간 제한 내에 응답하지 않을 경우 사용자 인터페이스가 반환될 때 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-120">Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : System.ServiceModel.IClientChannel * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInteractiveChannelInitializer.BeginDisplayInitializationUI (channel, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="348e8-121">클라이언트 채널입니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-121">The client channel.</span></span></param>
        <param name="callback"><span data-ttu-id="348e8-122">콜백 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-122">The callback object.</span></span></param>
        <param name="state"><span data-ttu-id="348e8-123">상태 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-123">Any state data.</span></span></param>
        <summary><span data-ttu-id="348e8-124">자격 증명 정보를 얻기 위해 사용자 인터페이스를 사용하여 시작할 비동기 호출입니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-124">An asynchronous call to begin using a user interface to obtain credential information.</span></span></summary>
        <returns><span data-ttu-id="348e8-125">처리가 완료되면 콜백하는 데 사용할 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-125">The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="348e8-126"><xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>를 구현하려면 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>에서 다음 단계를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-126">To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span></span>  
  
1.  <span data-ttu-id="348e8-127">적합한 방식으로 사용자에게 프롬프트를 표시하고 적절한 <xref:System.Net.NetworkCredential?displayProperty=nameWithType>을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-127">Prompt the user in what way you see fit and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span></span>  
  
2.  <span data-ttu-id="348e8-128"><xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> 형식의 매개 변수를 사용하여 <xref:System.ServiceModel.IClientChannel> 개체에서 <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType> 메서드에 의해 반환되는 컬렉션에 사용자 지정 채널 매개 변수 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-128">Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span></span> <span data-ttu-id="348e8-129">이 채널 매개 변수 개체는 사용자 지정 <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType>가 채널에 대한 보안 토큰을 설정하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-129">This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> to establish the security tokens for the channel.</span></span>  
  
3.  <span data-ttu-id="348e8-130">반환합니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-130">Return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iInteractiveChannelInitializer.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="348e8-131"><see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="348e8-131">The <see cref="T:System.IAsyncResult" />.</span></span></param>
        <summary><span data-ttu-id="348e8-132"><see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />가 완료되면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="348e8-132">Called when the <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> has finished.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>