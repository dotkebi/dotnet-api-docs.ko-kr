<Type Name="EntityDataSource" FullName="System.Web.UI.WebControls.EntityDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29038d0426488b2b0fcac3a858ff64da1991a988" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58875270" /></Metadata><TypeSignature Language="C#" Value="public class EntityDataSource : System.Web.UI.DataSourceControl, System.Web.DynamicData.IDynamicDataSource, System.Web.UI.WebControls.IQueryableDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityDataSource extends System.Web.UI.DataSourceControl implements class System.Web.DynamicData.IDynamicDataSource, class System.Web.UI.IDataSource, class System.Web.UI.WebControls.IQueryableDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EntityDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityDataSource&#xA;Inherits DataSourceControl&#xA;Implements IDynamicDataSource, IQueryableDataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityDataSource : System::Web::UI::DataSourceControl, System::Web::DynamicData::IDynamicDataSource, System::Web::UI::WebControls::IQueryableDataSource" />
  <TypeSignature Language="F#" Value="type EntityDataSource = class&#xA;    inherit DataSourceControl&#xA;    interface IDynamicDataSource&#xA;    interface IDataSource&#xA;    interface IQueryableDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IQueryableDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("EntitySetName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.EntityDataSource), "EntityDataSource.ico")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c41f5-101">ASP.NET 응용 프로그램에서 데이터 바인딩된 컨트롤의 EDM(엔터티 데이터 모델)을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-101">Represents an Entity Data Model (EDM) to data-bound controls in an ASP.NET application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-102">항목 내용</span><span class="sxs-lookup"><span data-stu-id="c41f5-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="c41f5-103">소개</span><span class="sxs-lookup"><span data-stu-id="c41f5-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="c41f5-104">선언 구문</span><span class="sxs-lookup"><span data-stu-id="c41f5-104">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="c41f5-105">소개</span><span class="sxs-lookup"><span data-stu-id="c41f5-105">Introduction</span></span>  
 <span data-ttu-id="c41f5-106">사용할 수는 <xref:System.Web.UI.WebControls.EntityDataSource> EDM에서 데이터를 검색 및 표시, 편집 및 적거나 없는 코드를 사용 하 여 웹 페이지에서 데이터를 정렬 하려면 데이터 바인딩된 컨트롤을 함께 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-106">You can use the <xref:System.Web.UI.WebControls.EntityDataSource> control together with a data-bound control to retrieve data from an EDM and to display, edit, and sort data on a Web page by using little or no code.</span></span> <span data-ttu-id="c41f5-107">자세한 내용은 [EntityDataSource 웹 서버 컨트롤 개요](https://msdn.microsoft.com/library/1f09af00-9578-4744-a029-765710a3c83f)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-107">For more information, see [EntityDataSource Web Server Control Overview](https://msdn.microsoft.com/library/1f09af00-9578-4744-a029-765710a3c83f).</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="c41f5-108">선언 구문</span><span class="sxs-lookup"><span data-stu-id="c41f5-108">Declarative Syntax</span></span>  
  
```  
<asp:EntityDataSource  
    AutoGenerateOrderByClause="True|False"  
    AutoGenerateWhereClause="True|False"  
    AutoPage="True|False"  
    AutoSort="True|False"  
    CommandText="string"  
    ConnectionString="string"  
    ContextType="typed ObjectContext"  
    ContextTypeName="string"  
    DefaultContainerName="string"  
    EnableDelete="True|False"  
    EnableInsert="True|False"  
    EnableUpdate="True|False"  
    EnableViewState="True|False"  
    EntitySetName="string"  
    EntityTypeFilter="string"  
    GroupBy="string"  
    Include="string"  
    OnContextCreated="ContextCreated event handler"  
    OnContextCreating="ContextCreating event handler"  
    OnContextDisposing="ContextDisposing event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnException="IDynamicDataSource.Exception event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    OrderBy="string"  
    runat="server"  
    Select="string"  
    StoreOriginalValuesInViewState="True|False"  
    Where="string"  
>  
        <CommandParameters />  
        <DeleteParameters />  
        <GroupByParameters />  
        <InsertParameters />  
        <OrderByParameters />  
        <SelectParameters />  
        <UpdateParameters />  
        <WhereParameters />  
</asp:EntityDataSource>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a2166b3d-d8ba-4a0a-8552-6ba1e3eaaee0"><span data-ttu-id="c41f5-109">Entity Framework 소개</span><span class="sxs-lookup"><span data-stu-id="c41f5-109">Introducing the Entity Framework</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9"><span data-ttu-id="c41f5-110">개체 작업</span><span class="sxs-lookup"><span data-stu-id="c41f5-110">Working with Objects</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c41f5-111"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-111">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c41f5-112"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-112">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityDataSource (System.Data.EntityClient.EntityConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.EntityClient.EntityConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As EntityConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityDataSource(System::Data::EntityClient::EntityConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EntityDataSource : System.Data.EntityClient.EntityConnection -&gt; System.Web.UI.WebControls.EntityDataSource" Usage="new System.Web.UI.WebControls.EntityDataSource connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.EntityClient.EntityConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="c41f5-113">EDM(엔터티 데이터 모델)에 대한 <see cref="T:System.Data.EntityClient.EntityConnection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-113">An <see cref="T:System.Data.EntityClient.EntityConnection" /> to the Entity Data Model (EDM).</span></span></param>
        <summary><span data-ttu-id="c41f5-114">제공된 연결로 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-114">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> class with the provided connection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateOrderByClause : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-115"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤이 <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" /> 컬렉션의 값에 따라 ORDER BY 절을 동적으로 만드는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-115">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control dynamically creates an ORDER BY clause based on values in the <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" /> collection.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-116">경우는 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤이 ORDER BY 절을 만들면이 고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-116">if the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control creates the ORDER BY clause; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c41f5-117">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-117">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-118">때를 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 로 설정 되어 `true`, 컨트롤에서 매개 변수에서 ORDER BY 절을 자동으로 생성를 <xref:System.Web.UI.WebControls.ParameterCollection> 에 할당 된를 <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-118">When the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control is set to `true`, the control automatically generates an ORDER BY clause from the parameter in the <xref:System.Web.UI.WebControls.ParameterCollection> assigned to the <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> property.</span></span> <span data-ttu-id="c41f5-119">이 ORDER BY 절을 명시적으로 할당할 필요가 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-119">This eliminates the need to explicitly assign an ORDER BY clause to the <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> property.</span></span>  
  
 <span data-ttu-id="c41f5-120">설정 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 속성을 `true`에 값을 명시적으로 할당 되지 해야를 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-120">If you set the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> property to `true`, you should not explicitly assign a value to the <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-121">다음 예제에서는 자동으로 ORDER BY 절을 생성 하 고 값을 사용 합니다 `OrderByDropDownList` 매개 변수의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-121">The following example automatically generates the ORDER BY clause and uses the value of the `OrderByDropDownList` to set the value of the parameter.</span></span>  
  
```  
<asp:DropDownList AutoPostBack="true" ID="OrderByDropDownList" runat="server">  
    <asp:ListItem Value="TotalDue"></asp:ListItem>  
    <asp:ListItem Value="OrderDate"></asp:ListItem>  
</asp:DropDownList>  
  
<asp:EntityDataSource ID="EntityDataSourceWithAutoGenOrderBy" runat="server"   
ConnectionString="name=AdventureWorksEntities"   
DefaultContainerName="AdventureWorksEntities"   
EntitySetName="SalesOrderHeaders"   
Select="it.SalesOrderID, it.TotalDue, it.OrderDate"  
AutoGenerateOrderByClause="True">  
<OrderByParameters>  
    <asp:ControlParameter  
    ControlID="OrderByDropDownList"/>  
</OrderByParameters>  
</asp:EntityDataSource>  
```  
  
 <span data-ttu-id="c41f5-122">다음 예제에서는 자동으로 ORDER BY 절을 생성 하 고 사용 합니다 `DefaultValue` 특성을 `Parameter` 매개 변수의 값을 설정 하는 요소.</span><span class="sxs-lookup"><span data-stu-id="c41f5-122">The following example automatically generates the ORDER BY clause and uses the `DefaultValue` attribute of the `Parameter` element to set the value of the parameter.</span></span>  
  
```  
<asp:EntityDataSource ID="EntityDataSourceWithAutoGenOrderBy" runat="server"   
ConnectionString="name=AdventureWorksEntities"   
DefaultContainerName="AdventureWorksEntities"   
EntitySetName="SalesOrderHeaders"   
Select="it.SalesOrderID, it.TotalDue, it.OrderDate"  
AutoGenerateOrderByClause="True">  
<OrderByParameters>  
    <asp:Parameter  
    DefaultValue="TotalDue"/>  
</OrderByParameters>  
</asp:EntityDataSource>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c41f5-123"><see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" /> 속성이 <see langword="true" />로 설정되고 <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" /> 속성이 null이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c41f5-123">When the <see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" /> property is set to <see langword="true" /> and the <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" /> property is not null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateWhereClause : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-124"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤이 <see cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" /> 컬렉션에 정의된 값을 기준으로 WHERE 절을 동적으로 만드는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-124">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control dynamically creates a WHERE clause based on values defined in the <see cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" /> collection.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-125">경우는 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤이 WHERE 절을 만들면이 고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-125">if the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control creates the WHERE clause; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c41f5-126">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-126">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-127">식에 엔터티 형식 속성을 연결 하 여 쿼리 결과 필터링 하려면 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-127">To filter query results by equating an entity type property to an expression, you can use the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> property.</span></span> <span data-ttu-id="c41f5-128">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 로 설정 되어 `true`, 컨트롤이 자동으로 생성 합니다.를 `WHERE` 절에서 매개 변수에서는 <xref:System.Web.UI.WebControls.ParameterCollection> 의 <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-128">When the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control is set to `true`, the control automatically generates a `WHERE` clause from the parameters in the <xref:System.Web.UI.WebControls.ParameterCollection> of the <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> property.</span></span> <span data-ttu-id="c41f5-129"><xref:System.Web.UI.WebControls.Parameter.Name%2A> 각 매개 변수의 속성을 쿼리 결과에 포함 된 엔터티 형식 속성 이름과 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-129">The <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of each parameter has to match an entity type property name that is included in the query results.</span></span> <span data-ttu-id="c41f5-130">설정 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 속성을 `true`를 명시적으로 할당 하지 말아야를 `WHERE` 절을는 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-130">If you set the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> property to `true`, you should not explicitly assign a `WHERE` clause to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.</span></span>  
  
## <a name="example"></a><span data-ttu-id="c41f5-131">예제</span><span class="sxs-lookup"><span data-stu-id="c41f5-131">Example</span></span>  
 <span data-ttu-id="c41f5-132">다음 예제에서는 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-132">In the following example the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> property is set to `true`.</span></span> <span data-ttu-id="c41f5-133">따라서는 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 속성에 쿼리 결과에 포함 된 엔터티 형식 속성 이름과 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-133">Therefore, the <xref:System.Web.UI.WebControls.Parameter.Name%2A> of the property has to match an entity type property name that is included in the query results.</span></span> <span data-ttu-id="c41f5-134">쿼리는 SalesOrderHeader 엔터티 형식의 SalesOrderID 및 TotalDue 속성을 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-134">The query selects the SalesOrderID and TotalDue properties of the SalesOrderHeader entity type.</span></span> <span data-ttu-id="c41f5-135">자동으로 생성 된 `WHERE` 절 TotalDueList 목록 상자 컨트롤에서 선택한 값으로 열 값을 비교 하 여 쿼리 결과 필터링 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-135">The automatically generated `WHERE` clause will filter the query results by comparing the TotalDue value to a value selected in the TotalDueList list box control.</span></span>  
  
```  
<asp:EntityDataSource ID="SalesOrderHeaderWithAutoParam" runat="server"   
   ConnectionString="name=AdventureWorksEntities"   
   DefaultContainerName="AdventureWorksEntities"   
   EntitySetName="SalesOrderHeaders"   
   Select="it.SalesOrderID, it.TotalDue"  
    AutoGenerateWhereClause="True">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="TotalDueList"   
           Name="TotalDue" PropertyName="SelectedValue" DbType="Decimal" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
## <a name="example"></a><span data-ttu-id="c41f5-136">예제</span><span class="sxs-lookup"><span data-stu-id="c41f5-136">Example</span></span>  
 <span data-ttu-id="c41f5-137">기본적으로 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 속성은 `false`로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-137">By default, the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> property is set to `false`.</span></span> <span data-ttu-id="c41f5-138">즉, 제공할 수 있다는 것을 `WHERE` 절.</span><span class="sxs-lookup"><span data-stu-id="c41f5-138">This means that we have to supply the `WHERE` clause.</span></span> <span data-ttu-id="c41f5-139">다음 예제에서는 `WHERE` 절은 `Where="it.TotalDue < @totalDueParam"` totalDueParam는 매개 변수 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-139">In the following example, the `WHERE` clause is `Where="it.TotalDue < @totalDueParam"` and totalDueParam is the parameter name.</span></span>  
  
```  
<asp:EntityDataSource ID="SalesOrderHeaderWithOutAutoParam" runat="server"   
   ConnectionString="name=AdventureWorksEntities"   
   DefaultContainerName="AdventureWorksEntities"   
   EntitySetName="SalesOrderHeaders"   
   Where="it.TotalDue < @totalDueParam"   
    Select="it.SalesOrderID, it.TotalDue">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="TotalDueList"   
           Name="totalDueParam" PropertyName="SelectedValue" DbType="Decimal" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c41f5-140"><see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" /> 속성이 <see langword="true" />로 설정되고 <see cref="P:System.Web.UI.WebControls.EntityDataSource.Where" /> 속성이 null이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c41f5-140">When the <see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" /> property is set to <see langword="true" /> and the <see cref="P:System.Web.UI.WebControls.EntityDataSource.Where" /> property is not null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPage : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.AutoPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-141"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤이 런타임에 데이터의 섹션 탐색을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-141">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control supports navigation through sections of the data at run time.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-142">사용자가 데이터 통해 페이징할 수 있으면 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-142">if the user can page through the data; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c41f5-143">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-143">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-144"><xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤이 자동으로 쿼리에서 반환한 데이터를 통한 페이징을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-144">The <xref:System.Web.UI.WebControls.EntityDataSource> control supports automatically paging through the data returned by queries.</span></span> <span data-ttu-id="c41f5-145"><xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> 속성은 데이터 컨트롤에 바인딩할 쿼리에 의해 반환 되는 데이터에 대 한 페이징이 사용 되는지 여부를 나타내는 부울 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-145">The <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> property is a Boolean property that indicates whether paging is enabled for data that is returned by queries bound to data controls.</span></span> <span data-ttu-id="c41f5-146">이 속성 설정 된 경우 `true`, <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤은 적절 한 쿼리 작성기 메서드를 추가 합니다 <xref:System.Data.Objects.ObjectQuery%601> 에 제공 된 정보를 기반으로 <xref:System.Web.UI.WebControls.EntityDataSourceView> 데이터 바인딩된 컨트롤에서.</span><span class="sxs-lookup"><span data-stu-id="c41f5-146">When this property is set to `true`, the <xref:System.Web.UI.WebControls.EntityDataSource> control adds the appropriate query builder methods to the <xref:System.Data.Objects.ObjectQuery%601> based on the information supplied to the <xref:System.Web.UI.WebControls.EntityDataSourceView> by the data-bound control.</span></span>  
  
 <span data-ttu-id="c41f5-147">값을 <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> 속성에 따라 결정 하는지 여부를 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceView> 컨트롤이 데이터 소스를 지 원하는 `true` 또는 `false`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-147">The value of the <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> property determines whether the <xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceView> control that supports the data source is `true` or `false`.</span></span>  
  
 <span data-ttu-id="c41f5-148">프로젝션 페이징을 사용을 정의할 때 결과 정렬 하는 속성을 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-148">When you define a projection with paging enabled, you must define the property by which to order the results.</span></span> <span data-ttu-id="c41f5-149">즉, 설정 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 속성을 프로젝션을 정의 하 고 있는 <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> 로 설정 `true`, 설정 해야 합니다 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> 순서를 정의 하거나 설정 하려면 속성을 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 속성을 `true` 주문을 추가 하 고 매개 변수에 <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-149">This means that when you set the <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> property to define a projection and have <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> set to `true`, you must also set the <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> property to define the order or set the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> property to `true` and add an ORDER BY parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSort : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.AutoSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-150"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤이 런타임에 데이터 정렬을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-150">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control supports sorting the data at run time.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-151">사용자가 데이터를 정렬할 수 있습니다 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-151">if the user can sort the data; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c41f5-152">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-152">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-153"><xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤이 자동으로 쿼리에 의해 반환 되는 데이터 정렬을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-153">The <xref:System.Web.UI.WebControls.EntityDataSource> control supports automatically sorting the data returned by queries.</span></span> <span data-ttu-id="c41f5-154">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤은 데이터 컨트롤에 바인딩되어 있는 쿼리에 의해 반환 되는 데이터 정렬을 사용할지 여부를 나타내는 부울 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-154">The <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control is a Boolean property that indicates whether sorting is enabled for data that is returned by queries that are bound to data controls.</span></span> <span data-ttu-id="c41f5-155">이 속성 설정 된 경우 `true`, <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤은 적절 한 쿼리 작성기 메서드를 추가 합니다 <xref:System.Data.Objects.ObjectQuery%601> 에 제공 된 정보를 기반으로 <xref:System.Web.UI.WebControls.EntityDataSourceView> 데이터 바인딩된 컨트롤에서.</span><span class="sxs-lookup"><span data-stu-id="c41f5-155">When this property is set to `true`, the <xref:System.Web.UI.WebControls.EntityDataSource> control adds the appropriate query builder methods to the <xref:System.Data.Objects.ObjectQuery%601> based on the information supplied to the <xref:System.Web.UI.WebControls.EntityDataSourceView> by the data-bound control.</span></span>  
  
 <span data-ttu-id="c41f5-156">값을 <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A> 속성에 따라 결정 여부를 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A> 및 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceView> 컨트롤이 데이터 소스를 지 원하는 `true` 또는 `false`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-156">The value of the <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A> property determines whether the <xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A> and <xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A> properties of the <xref:System.Web.UI.WebControls.EntityDataSourceView> control that supports the data source is `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection CommandParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection CommandParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.CommandParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ CommandParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.CommandParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-157">쿼리에 대한 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-157">Gets the parameter collection for the query.</span></span></summary>
        <value><span data-ttu-id="c41f5-158">쿼리 명령에 전달되는 매개 변수가 들어 있는 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-158">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters that are passed to the query command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-159"><xref:System.Web.UI.WebControls.EntityDataSource.CommandParameters%2A> 속성을 사용 액세스는 <xref:System.Web.UI.WebControls.ParameterCollection> 를 사용 하 여 지정 된 엔터티 SQL 쿼리를 명시적으로 전달 되는 매개 변수는 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-159">The <xref:System.Web.UI.WebControls.EntityDataSource.CommandParameters%2A> property is used to access the <xref:System.Web.UI.WebControls.ParameterCollection> of parameters that are passed to an explicit Entity SQL query that is specified using the <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-160">다음 예에서는 제품 개체의 컬렉션을 반환 하는 Entity SQL 명령 텍스트를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-160">The following example supplies Entity SQL command text that returns a collection of Product objects.</span></span>  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT value p FROM Products AS p  
        WHERE p.ProductID  
        BETWEEN @OrderIdMin AND @OrderIdMax"  
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" >  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIdMin"   
            ControlID="ProductIdMin" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIdMax"   
            ControlID="ProductIdMax" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 <span data-ttu-id="c41f5-161">다음 예제에서는 프로젝션 된 일련의 열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-161">The following example returns a projected series of columns:</span></span>  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  
         FROM Products AS p   
         WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax"   
         ContextTypeName="AdventureWorksModel. AdventureWorksEntities">  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIDMin"   
               ControlID="ProductIDMinTextBox" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIDMax"   
               ControlID="ProductIDMaxTextBox" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-162">쿼리를 정의하는 Entity SQL 명령을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-162">Gets or sets an Entity SQL command that defines the query.</span></span></summary>
        <value><span data-ttu-id="c41f5-163">Entity SQL 쿼리인 <see langword="string" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-163">A <see langword="string" /> value that is the Entity SQL query.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-164">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤을 사용 하면 사용자 지정 Entity SQL 식을 사용 하는 쿼리를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-164">The <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control enables you to specify a query that uses a custom Entity SQL expression.</span></span> <span data-ttu-id="c41f5-165">SELECT 문에서 같은 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 업데이트할 수 없는 원래 데이터의 예측을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-165">Like the SELECT statement, <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> creates a projection of the original data that is not updatable.</span></span>  
  
 <span data-ttu-id="c41f5-166">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 속성이 할당 되 면 업데이트, 삽입 및 삭제 기능이 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-166">When the <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> property is assigned, update, insert, and delete functionalities are disabled.</span></span> <span data-ttu-id="c41f5-167">이 예에서 메서드 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>, <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>, 및 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> 관련 된 <xref:System.Web.UI.WebControls.EntityDataSourceView> 컨트롤을 모두 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-167">In this case, the methods <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>, <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>, and <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> of the related <xref:System.Web.UI.WebControls.EntityDataSourceView> control all return `false`.</span></span>  
  
 <span data-ttu-id="c41f5-168">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 속성을 설정할 때 예외가 throw 됩니다는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 에 바인딩된 데이터에 있는 컨트롤 메서드는 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤의 값 <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>, <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>, 또는 <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> 로 설정 되어 `true`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-168">When the <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> property is set, an exception is thrown when the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method is called by a control that is data bound to an <xref:System.Web.UI.WebControls.EntityDataSource> control if the value of <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>, <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>, or <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c41f5-169">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 프로젝션 속성을 반환 하는 쿼리로 설정 됩니다 (예를 들어, "`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`"), <xref:System.Data.Common.DbDataRecord> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-169">If the <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> is set to a query that returns a projection of properties (for example, "`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`"), a <xref:System.Data.Common.DbDataRecord> will be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-170">다음 예제에서는 제공 된 Entity SQL 명령을 제품 개체의 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-170">The following example uses the supplied Entity SQL command to returns a collection of Product objects.</span></span>  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT value p FROM Products AS p  
        WHERE p.ProductID  
        BETWEEN @OrderIdMin AND @OrderIdMax"  
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" >  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIdMin"   
            ControlID="ProductIdMin" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIdMax"   
            ControlID="ProductIdMax" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 <span data-ttu-id="c41f5-171">다음 예제에서는 프로젝션 된 일련의 열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-171">The following example returns a projected series of columns:</span></span>  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  
          FROM Products AS p   
          WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax"   
          ContextTypeName="AdventureWorksModel. AdventureWorksEntities">  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIDMin"   
                ControlID="ProductIDMinTextBox" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIDMax"   
                ControlID="ProductIDMaxTextBox" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-172">쿼리를 실행하는 데 사용되는 연결 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-172">Gets or sets the connection string that is used to execute the query.</span></span></summary>
        <value><span data-ttu-id="c41f5-173">쿼리에 대한 연결 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-173">The connection string for the query.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-174">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 응용 프로그램 구성 파일의 요소에 저장 된 명명 된 EDM 연결 문자열에서 컨트롤을 초기화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-174">The <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control can be initialized from a named EDM connection string stored in the  element of the application configuration file.</span></span> <span data-ttu-id="c41f5-175">EDM 엔터티 데이터 모델 마법사를 사용 하 여 만들어질 때 명명된 된 EDM 연결 응용 프로그램 구성 파일에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-175">When the EDM is created by using the Entity Data Model Wizard, a named EDM connection is created in the application configuration file.</span></span> <span data-ttu-id="c41f5-176">명명 된 EDM 연결 문자열을 응용 프로그램 구성 파일에서 발견 되 면 연결이 EntityDataSource 디자이너의 데이터 소스 구성 마법사에서 옵션으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-176">When a named EDM connection string is found in the application configuration file, the connection is visible as an option in the Configure Data Source wizard of the EntityDataSource designer.</span></span> <span data-ttu-id="c41f5-177">자세한 내용은 [데이터 소스 구성 마법사 (EntityDataSource 컨트롤)](https://msdn.microsoft.com/library/263976a5-2406-47c0-8919-c6af6e76d78e)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-177">For more information, see [Configure Data Source Wizard (EntityDataSource Control)](https://msdn.microsoft.com/library/263976a5-2406-47c0-8919-c6af6e76d78e).</span></span>  
  
 <span data-ttu-id="c41f5-178">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> 속성이 지정 되지 않은 모두를 <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> 및 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> 만들려는 컨트롤의 속성을 설정 해야 합니다는 <xref:System.Data.Objects.ObjectContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-178">If the <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> property is not specified, both the <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> and <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> properties must be set for the control to create the <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of EntityDataSourceContextCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextCreatedEventArgs ^&gt; ^ ContextCreated;" />
      <MemberSignature Language="F#" Value="member this.ContextCreated : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; " Usage="member this.ContextCreated : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-179"><see cref="T:System.Web.UI.WebControls.EntityDataSource" />가 엔터티 데이터 개체로 작업하는 데 사용되는 <see cref="T:System.Data.Objects.ObjectContext" /> 작성을 완료할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-179">Occurs when the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> has finished creating the <see cref="T:System.Data.Objects.ObjectContext" /> that is used to work with entity data objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-180">에 액세스 하려면이 이벤트를 처리 합니다 <xref:System.Data.Objects.ObjectContext> 에서 사용 되는 <xref:System.Web.UI.WebControls.EntityDataSource> 쿼리가 실행 되 고 변경 내용을 추적 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-180">Handle this event to access the <xref:System.Data.Objects.ObjectContext> that is used by the <xref:System.Web.UI.WebControls.EntityDataSource> control to execute the query and track changes.</span></span> <span data-ttu-id="c41f5-181">이 컨텍스트 개체를 저장 하 고 외부 후속 작업에 사용할 수는 <xref:System.Web.UI.WebControls.EntityDataSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-181">This context object can be stored and used for successive operations outside the <xref:System.Web.UI.WebControls.EntityDataSource>.</span></span> <span data-ttu-id="c41f5-182">합니다 <xref:System.Data.Objects.ObjectContext> 에서 가져온 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> 에서 반환 하는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-182">The <xref:System.Data.Objects.ObjectContext> is obtained from the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> that is returned by the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> event.</span></span> <span data-ttu-id="c41f5-183">자세한 내용은 [개체 컨텍스트 수명 주기 관리 (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-183">For more information, see [Object Context Life-Cycle Management (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160).</span></span> <span data-ttu-id="c41f5-184">개체 컨텍스트에 대 한 자세한 내용은 참조 하세요. [Id 확인, 상태 관리 및 변경 내용 추적](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-184">For more information about the object context, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="c41f5-185"><xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> 이벤트를 사용 하면 할당할 수 있습니다 합니다 <xref:System.Data.Objects.ObjectContext> 외부 연속 작업에 대 한 변수를 만든를 <xref:System.Web.UI.WebControls.EntityDataSource>입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-185">The <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> event allows you to assign the <xref:System.Data.Objects.ObjectContext> that has been created to a variable for successive operations outside the <xref:System.Web.UI.WebControls.EntityDataSource>.</span></span> <span data-ttu-id="c41f5-186"><xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType> 속성에서 만들어진 컨텍스트를 포함 하는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-186">The <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType> property contains the context that has been created in the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> event.</span></span> <span data-ttu-id="c41f5-187">사용자 중의 컨텍스트를 할당 하지 않습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> 이벤트에 컨텍스트 인스턴스에 포함 된 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType> 에 의해 생성 되는 <xref:System.Web.UI.WebControls.EntityDataSource> 기반으로 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=nameWithType>, 또는 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-187">If the user does not assign a context during the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> event, the context instance contained in <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType> is the one created by the <xref:System.Web.UI.WebControls.EntityDataSource> based on the <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=nameWithType>, or <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=nameWithType> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of EntityDataSourceContextCreatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextCreatingEventArgs ^&gt; ^ ContextCreating;" />
      <MemberSignature Language="F#" Value="member this.ContextCreating : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; " Usage="member this.ContextCreating : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-188"><see cref="T:System.Web.UI.WebControls.EntityDataSource" />가 엔터티 데이터 개체 작업에 사용되는 <see cref="T:System.Data.Objects.ObjectContext" />를 만들 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-188">Occurs when the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> creates the <see cref="T:System.Data.Objects.ObjectContext" /> that is used to work with entity data objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-189">처리를 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> 이벤트를 직접 제공 하려면 <xref:System.Data.Objects.ObjectContext> 새 대신 <xref:System.Data.Objects.ObjectContext> 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-189">Handle the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> event to supply your own <xref:System.Data.Objects.ObjectContext> instead of having a new <xref:System.Data.Objects.ObjectContext> created.</span></span> <span data-ttu-id="c41f5-190">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> 이벤트가 처리 되지 않은 또는 처리기를 제공 하지 않습니다는 <xref:System.Data.Objects.ObjectContext>는 <xref:System.Web.UI.WebControls.EntityDataSource> 해당 구성에 따라 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-190">If the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> event is not handled or the handler does not provide an <xref:System.Data.Objects.ObjectContext>, the <xref:System.Web.UI.WebControls.EntityDataSource> creates one according to its configuration.</span></span> <span data-ttu-id="c41f5-191">경우는 <xref:System.Data.Objects.ObjectContext> 제공 됩니다는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> 이벤트를 동일한 인스턴스를 할당 됩니다는 `Context` 연속 이벤트의 이벤트 개체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-191">When an <xref:System.Data.Objects.ObjectContext> is provided to the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> event, the same instance is assigned to the `Context` property of the event object of successive events.</span></span> <span data-ttu-id="c41f5-192">자세한 내용은 [개체 컨텍스트 수명 주기 관리 (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-192">For more information, see [Object Context Life-Cycle Management (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160).</span></span> <span data-ttu-id="c41f5-193">개체 컨텍스트에 대 한 자세한 내용은 참조 하세요. [Id 확인, 상태 관리 및 변경 내용 추적](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-193">For more information about the object context, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-194">다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Data.Objects.ObjectContext> 변수를 <xref:System.Web.UI.Page> 개체에 할당 하는 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> 개체.</span><span class="sxs-lookup"><span data-stu-id="c41f5-194">The following example shows how to create an <xref:System.Data.Objects.ObjectContext> variable of the <xref:System.Web.UI.Page> object and assign it to the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> object.</span></span>  
  
```csharp  
public partial class _Default : System.Web.UI.Page  
    {  
        AdventureWorksModel.AdventureWorksEntities objCtx =  
            new AdventureWorksModel.AdventureWorksEntities();  
  
        protected void EntityDataSource2_ContextCreating(object sender,   
            EntityDataSourceContextCreatingEventArgs e)  
        {  
            e.Context = objCtx;  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of EntityDataSourceContextDisposingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextDisposingEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberSignature Language="F#" Value="member this.ContextDisposing : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; " Usage="member this.ContextDisposing : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-195"><see cref="T:System.Data.Objects.ObjectContext" />가 삭제되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-195">Occurs before an <see cref="T:System.Data.Objects.ObjectContext" /> is disposed of.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-196">방지 하기 위해이 이벤트를 처리 합니다 <xref:System.Data.Objects.ObjectContext> 에서 사용 하는 <xref:System.Web.UI.WebControls.EntityDataSource> 삭제 되 고 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-196">Handle this event to prevent the <xref:System.Data.Objects.ObjectContext> used by the <xref:System.Web.UI.WebControls.EntityDataSource> control from being disposed of.</span></span> <span data-ttu-id="c41f5-197">단일을 사용 하려는 경우이 작업을 수행할 <xref:System.Data.Objects.ObjectContext> 여러 컨트롤 또는 인스턴스를 사용 하 여 페이지에서 인스턴스는 <xref:System.Web.UI.WebControls.EntityDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-197">Do this when you want to use a single <xref:System.Data.Objects.ObjectContext> instance in your page with several controls or instances of the <xref:System.Web.UI.WebControls.EntityDataSource> control.</span></span> <span data-ttu-id="c41f5-198">방지 하기 위해를 <xref:System.Data.Objects.ObjectContext> 집합에서 삭제 하는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> 개체를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-198">To prevent the <xref:System.Data.Objects.ObjectContext> from being disposed of, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> object to `true`.</span></span> <span data-ttu-id="c41f5-199">자세한 내용은 [개체 컨텍스트 수명 주기 관리 (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-199">For more information, see [Object Context Life-Cycle Management (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160).</span></span> <span data-ttu-id="c41f5-200">개체 컨텍스트에 대 한 자세한 내용은 참조 하세요. [Id 확인, 상태 관리 및 변경 내용 추적](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-200">For more information about the object context, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-201">기존 되도록 <xref:System.Data.Objects.ObjectContext> 나중에 참조할 취소에 대 한 인스턴스 멤버는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> 다음 코드와 같이 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-201">To keep an existing <xref:System.Data.Objects.ObjectContext> instance member for future reference cancel the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> event as shown by the following code.</span></span>  
  
```csharp  
protected void EntityDataSource2_ContextDisposing(object sender,   
    EntityDataSourceContextDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public Type ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.ContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.ContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-202"><see cref="T:System.Data.Objects.ObjectContext" />에서 사용하는 형식화된 <see cref="T:System.Web.UI.WebControls.EntityDataSource" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-202">Gets or sets the typed <see cref="T:System.Data.Objects.ObjectContext" /> used by the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="c41f5-203"><see cref="T:System.Data.Objects.ObjectContext" />에서 파생되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-203">An object that derives from <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-204"><xref:System.Data.Objects.ObjectContext> 사용한 합니다 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤에서 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextType%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-204">The <xref:System.Data.Objects.ObjectContext> used by the <xref:System.Web.UI.WebControls.EntityDataSource> control can be accessed from the <xref:System.Web.UI.WebControls.EntityDataSource.ContextType%2A> property.</span></span> <span data-ttu-id="c41f5-205">자세한 내용은 [개체 컨텍스트 수명 주기 관리 (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-205">For more information, see [Object Context Life-Cycle Management (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-206"><see cref="T:System.Data.Objects.ObjectContext" /> 컨트롤에서 사용하는 형식화된 <see cref="T:System.Web.UI.WebControls.EntityDataSource" />의 정규화된 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-206">Gets or sets the fully qualified name of the typed <see cref="T:System.Data.Objects.ObjectContext" /> that is used by the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="c41f5-207">형식의 정규화된 이름인 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-207">A <see cref="T:System.String" /> that is the fully qualified name of the type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-208"><xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤은 형식화 된 정규화 된 형식 이름을 지정 하는 문자열 <xref:System.Data.Objects.ObjectContext> 에서 사용 되는 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="c41f5-208">The <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control is a string that specifies the fully qualified type name of the typed <xref:System.Data.Objects.ObjectContext> that is used by the <xref:System.Web.UI.WebControls.EntityDataSource> control.</span></span> <span data-ttu-id="c41f5-209">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> 속성이 지정 되지 않은 모두를 <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> 및 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> 만들려는 컨트롤의 속성을 설정 해야 합니다는 <xref:System.Data.Objects.ObjectContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-209">If the <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> property is not specified, both the <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> and <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> properties must be set for the control to create the <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.EntityDataSourceView CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.EntityDataSourceView CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.CreateView" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateView () As EntityDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::EntityDataSourceView ^ CreateView();" />
      <MemberSignature Language="F#" Value="abstract member CreateView : unit -&gt; System.Web.UI.WebControls.EntityDataSourceView&#xA;override this.CreateView : unit -&gt; System.Web.UI.WebControls.EntityDataSourceView" Usage="entityDataSource.CreateView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.EntityDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c41f5-210">이 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" />의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-210">Creates a new instance of the <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> that is associated with this control.</span></span></summary>
        <returns><span data-ttu-id="c41f5-211">데이터 바인딩된 컨트롤에 대한 인터페이스로 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-211">An object that acts as the interface for data-bound controls.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-212">사용자 지정 보기를 제공 하려면 파생된 클래스에서이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-212">To provide a custom view, you can override this method in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultContainerName">
      <MemberSignature Language="C#" Value="public string DefaultContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultContainerName : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.DefaultContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-213">기본 컨테이너 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-213">Gets or sets the default container name.</span></span></summary>
        <value><span data-ttu-id="c41f5-214">기본 컨테이너 이름인 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-214">A <see cref="T:System.String" /> that is the default container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-215">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> 속성이 지정 되지 않은 모두를 <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> 및 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> 만들려는 컨트롤의 속성을 설정 해야 합니다는 <xref:System.Data.Objects.ObjectContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-215">If the <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> property is not specified, both the <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> and <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> properties must be set for the control to create the <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " Usage="member this.Deleted : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-216">개체가 데이터 소스에서 삭제된 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-216">Occurs after an object has been deleted from the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-217"><xref:System.Web.UI.WebControls.EntityDataSource.Deleted> 후 이벤트가 발생 합니다 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드가 성공적으로 호출한에 <xref:System.Data.Objects.ObjectContext> 개체를 삭제 하.</span><span class="sxs-lookup"><span data-stu-id="c41f5-217">The <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> event is raised after the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method has just been successfully called on the <xref:System.Data.Objects.ObjectContext> to delete an object.</span></span> <span data-ttu-id="c41f5-218">합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체를 사용 하 여 삭제 된 개체를 액세스 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-218">The <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object is used to access the deleted object.</span></span> <span data-ttu-id="c41f5-219">이 개체는 <xref:System.Data.EntityState.Detached> 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-219">This object is in a <xref:System.Data.EntityState.Detached> state.</span></span>  
  
 <span data-ttu-id="c41f5-220">개체가 삭제 될 때 오류가 발생 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> 이벤트가 발생를 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> 개체가 설정 된 반환 된 <xref:System.Exception>, 및 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> 속성 `null`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-220">If an error occurs when an object is deleted, the <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> event is raised, the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> object is set to the returned <xref:System.Exception>, and the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> property is set to `null`.</span></span> <span data-ttu-id="c41f5-221">예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> 이벤트 처리기를 설정 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-221">If you handle the exception in the <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> event handler, set the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="c41f5-222">이렇게 하면 예외가 다시 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-222">This prevents the exception from being raised again.</span></span> <span data-ttu-id="c41f5-223">값을 지정 하는 경우 `false` 에 대 한 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 속성인은 <xref:System.Web.UI.WebControls.EntityDataSource> 다시 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-223">When you specify a value of `false` for the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> property, the <xref:System.Web.UI.WebControls.EntityDataSource> re-raises the exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-224">삭제 작업 중에 사용되는 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-224">Gets the collection of parameters that are used during a delete operation.</span></span></summary>
        <value><span data-ttu-id="c41f5-225">삭제 작업 중에 사용되는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-225">The parameters that are used during a delete operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-226">ASP.NET 4 또는 이전 버전을 대상으로 하는 웹 응용 프로그램에 대 한 속성 값 뷰 상태에 저장 되 고 다시 게시할 때마다 자동으로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-226">For web applications that target ASP.NET 4 or earlier, the property value is stored in view state and is automatically maintained between postbacks.</span></span> <span data-ttu-id="c41f5-227">ASP.NET 4.5를 대상으로 하는 웹 응용 프로그램에 대 한 속성 값이 뷰 상태에 저장 되지 및 각 HTTP 요청에 대 한 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-227">For web applications that target ASP.NET 4.5, the property value is not stored in view state, and you must set the value for each HTTP request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " Usage="member this.Deleting : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-228">개체가 데이터 소스에서 삭제되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-228">Occurs before an object is deleted from the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-229"><xref:System.Web.UI.WebControls.EntityDataSource.Deleting> 이벤트가 발생 하기 전에 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 메서드를 호출 합니다 <xref:System.Data.Objects.ObjectContext> 개체를 삭제 하려면.</span><span class="sxs-lookup"><span data-stu-id="c41f5-229">The <xref:System.Web.UI.WebControls.EntityDataSource.Deleting> event is raised before the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method is called on the <xref:System.Data.Objects.ObjectContext> to delete an object.</span></span> <span data-ttu-id="c41f5-230">합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체를 사용 하 여 삭제할 개체를 액세스 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-230">The <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object is used to access the object to be deleted.</span></span> <span data-ttu-id="c41f5-231">이 개체의 속성을 완벽 하 게 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-231">The properties of this object may not be fully set.</span></span> <span data-ttu-id="c41f5-232">개체를 식별 하는 데 필요한 속성에 대해서만 설정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-232">Only the properties required to identify the object must be set.</span></span>  
  
 <span data-ttu-id="c41f5-233">삭제할 개체를 중지 하려면 설정 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체를 `true`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-233">To stop the object from being deleted, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="c41f5-234">개체를 삭제 하려고 준비할 때 오류가 발생 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Deleting> 이벤트가 발생 및 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체가 설정 된 반환 된 <xref:System.Exception>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-234">If an error occurs when preparing to delete an object, the <xref:System.Web.UI.WebControls.EntityDataSource.Deleting> event is raised and the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object is set to the returned <xref:System.Exception>.</span></span>  
  
 <span data-ttu-id="c41f5-235">예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Deleting> 이벤트 처리기를 설정 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-235">When you handle the exception in the <xref:System.Web.UI.WebControls.EntityDataSource.Deleting> event handler, set the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="c41f5-236">이렇게 하면 예외가 다시 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-236">This prevents the exception from being raised again.</span></span> <span data-ttu-id="c41f5-237">값을 지정 하는 경우 `false` 에 대 한 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 속성인은 <xref:System.Web.UI.WebControls.EntityDataSource> 다시 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-237">When you specify a value of `false` for the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> property, the <xref:System.Web.UI.WebControls.EntityDataSource> re-raises the exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EnableDelete" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableDelete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-238"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤을 통해 개체를 삭제할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-238">Gets or sets a value that indicates whether objects can be deleted through the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-239">자동 삭제 작업을 사용 합니다. 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-239">if automatic delete operations are enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c41f5-240">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-240">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> <span data-ttu-id="c41f5-241">경우에 설정할 수 없습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-241">cannot be set if the <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> property is enabled.</span></span>  
  
 <span data-ttu-id="c41f5-242">`false` 에 할당 된 값을 <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> 속성에는 <xref:System.Web.UI.WebControls.EntityDataSource> 강제로 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A> 관련 된 속성 <xref:System.Web.UI.WebControls.EntityDataSourceView> 반환할 개체 `false`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-242">A `false` value assigned to the <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> property on the <xref:System.Web.UI.WebControls.EntityDataSource> forces the <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A> property of the related <xref:System.Web.UI.WebControls.EntityDataSourceView> object to return `false`.</span></span> <span data-ttu-id="c41f5-243">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> 속성이로 설정 되어 `false`, <xref:System.NotSupportedException> 데이터 바인딩된 컨트롤을 호출 하는 경우 발생 합니다 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 메서드를를 <xref:System.Web.UI.WebControls.EntityDataSourceView>.</span><span class="sxs-lookup"><span data-stu-id="c41f5-243">When the <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> property is set to `false`, a <xref:System.NotSupportedException> is raised if the data-bound control calls the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method on the <xref:System.Web.UI.WebControls.EntityDataSourceView>.</span></span>  
  
 <span data-ttu-id="c41f5-244">업데이트 가능성에 대 한 조건 중 하나라도 충족 하지는 경우와 <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> 속성이 `true`, <xref:System.Web.UI.WebControls.EntityDataSource> 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-244">If any of the conditions for updatability are not met and the <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.EntityDataSource> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFlattening">
      <MemberSignature Language="C#" Value="public bool EnableFlattening { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFlattening" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableFlattening" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFlattening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFlattening { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableFlattening : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EnableFlattening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-245">래퍼 생성을 해제할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-245">Gets or sets the value that indicates whether you want to turn off wrapper creation.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-246">속성; 병합할 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-246">if the properties will be flattened; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-247">초기화 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource> 제어를 사용 하 여는 <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> 속성을는 <xref:System.Web.UI.WebControls.EntityDataSource> 개체에 결과의 각 엔터티 인스턴스를 래핑하는 <xref:System.ComponentModel.ICustomTypeDescriptor> 형식.</span><span class="sxs-lookup"><span data-stu-id="c41f5-247">When you initialize the <xref:System.Web.UI.WebControls.EntityDataSource> control by using the <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> property, the <xref:System.Web.UI.WebControls.EntityDataSource> wraps each entity instance in the results in an object of the <xref:System.ComponentModel.ICustomTypeDescriptor> type.</span></span> <span data-ttu-id="c41f5-248">자세한 내용은 [평면화 개체 (EntityDataSource)](https://msdn.microsoft.com/library/08a30ef3-1132-4ac4-856c-5ed3d65eaf16)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-248">For more information, see [Flattening Objects (EntityDataSource)](https://msdn.microsoft.com/library/08a30ef3-1132-4ac4-856c-5ed3d65eaf16).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EnableInsert" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableInsert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-249"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤을 통해 개체를 추가할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-249">Gets or sets a value that indicates whether objects can be added through the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-250">자동 삽입 작업을 사용 하면 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-250">if automatic insert operations are enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c41f5-251">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-251">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> <span data-ttu-id="c41f5-252">경우에 설정할 수 없습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-252">cannot be set if the <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="c41f5-253">`false` 에 할당 된 값을 <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> 속성에는 <xref:System.Web.UI.WebControls.EntityDataSource> 강제로 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> 관련 된 속성 <xref:System.Web.UI.WebControls.EntityDataSourceView> 반환할 개체 `false`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-253">A `false` value assigned to the <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> property on the <xref:System.Web.UI.WebControls.EntityDataSource> forces the <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> property of the related <xref:System.Web.UI.WebControls.EntityDataSourceView> object to return `false`.</span></span> <span data-ttu-id="c41f5-254">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> 속성이로 설정 되어 `false`, <xref:System.NotSupportedException> 데이터 바인딩된 컨트롤을 호출 하는 경우 발생 합니다 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 메서드를를 <xref:System.Web.UI.WebControls.EntityDataSourceView>.</span><span class="sxs-lookup"><span data-stu-id="c41f5-254">When the <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> property is set to `false`, a <xref:System.NotSupportedException> is raised if the data-bound control calls the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method on the <xref:System.Web.UI.WebControls.EntityDataSourceView>.</span></span>  
  
 <span data-ttu-id="c41f5-255">업데이트 가능성에 대 한 조건 중 하나라도 충족 하지는 경우와 <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> 속성이 `true`, <xref:System.Web.UI.WebControls.EntityDataSource> 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-255">If any of the conditions for updatability are not met and the <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.EntityDataSource> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-256"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤을 통해 개체를 수정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-256">Gets or sets a value that indicates whether objects can be modified through the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-257">자동 업데이트 작업을 사용 합니다. 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-257">if automatic update operations are enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c41f5-258">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-258">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> <span data-ttu-id="c41f5-259">경우에 설정할 수 없습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-259">cannot be set if the <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="c41f5-260">`false` 에 할당 된 값을 <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> 속성 강제로 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> 관련 된 속성 <xref:System.Web.UI.WebControls.EntityDataSourceView> 반환할 개체 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-260">A `false` value assigned to the <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> property forces the <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> property of the related <xref:System.Web.UI.WebControls.EntityDataSourceView> object to return `false`.</span></span> <span data-ttu-id="c41f5-261">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> 속성이로 설정 되어 `false`, <xref:System.NotSupportedException> 데이터 바인딩된 컨트롤을 호출 하는 경우 발생 합니다 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 메서드를를 <xref:System.Web.UI.WebControls.EntityDataSourceView>.</span><span class="sxs-lookup"><span data-stu-id="c41f5-261">When the <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> property is set to `false`, a <xref:System.NotSupportedException> is raised if the data-bound control calls the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method on the <xref:System.Web.UI.WebControls.EntityDataSourceView>.</span></span>  
  
 <span data-ttu-id="c41f5-262">설정 된 <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> 속성을 `true` 업데이트 가능성을 보장 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-262">Setting the <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> property to `true` does not guarantee updatability.</span></span>  
  
 <span data-ttu-id="c41f5-263">업데이트 가능성에 대 한 조건 중 하나라도 충족 하지는 경우와 <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> 속성이 `true`, <xref:System.Web.UI.WebControls.EntityDataSource> 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-263">If any of the conditions for updatability are not met and the <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.EntityDataSource> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EntitySetName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EntitySetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-264"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤에서 사용하는 엔터티 집합의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-264">Gets or sets the name of the entity set used by the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="c41f5-265">엔터티 집합 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-265">The entity set name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-266"><xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤 컨트롤에 의해 액세스 되는 개체 유형의 엔터티 집합을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-266">The <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control is used to specify the entity set of the type of the objects that are accessed by the control.</span></span> <span data-ttu-id="c41f5-267">값을 <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> 속성이 컨트롤에서 사용 되는 기본 SELECT 문입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-267">The value of the <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> property is the default SELECT statement that is used by the control.</span></span> <span data-ttu-id="c41f5-268">제공 되는 Entity SQL 식으로 쿼리를 지정할 경우에 설정이 필요 하지 않습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-268">The setting is not required if the query is specified as an Entity SQL expression that is supplied to the <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> property.</span></span> <span data-ttu-id="c41f5-269">자세한 내용은 [사용자 지정 명령 텍스트 (EntityDataSource)](https://msdn.microsoft.com/library/d42e90d0-1443-474e-8940-53f504d6fc91)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-269">For more information, see [Custom Command Text (EntityDataSource)](https://msdn.microsoft.com/library/d42e90d0-1443-474e-8940-53f504d6fc91).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeFilter">
      <MemberSignature Language="C#" Value="public string EntityTypeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityTypeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTypeFilter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityTypeFilter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityTypeFilter : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-270">특정 파생 형식에 대한 결과만으로 쿼리를 제한하는 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-270">Gets or sets the expression that limits the query to only results of a specific derived type.</span></span></summary>
        <value><span data-ttu-id="c41f5-271">필터 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-271">The filter expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-272">경우는 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤에는 특정 파생된 형식에 반환 해야 합니다는 <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> 도이 파생 형식의 이름을 지정 하려면 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-272">When the <xref:System.Web.UI.WebControls.EntityDataSource> control must return a specific derived type, the <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> property must also be set to specify the name of this derived type.</span></span> <span data-ttu-id="c41f5-273">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> 다형적 결과 생성할 수 있는 엔터티 집합을 지정 하는 속성은 <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> 속성 데이터를 편집할 수 있게 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-273">If the <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> property specifies an entity set that can generate polymorphic results, the <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> property is required to be able to edit data.</span></span> <span data-ttu-id="c41f5-274">적용 하는 것과 동일한 효과가 합니다 <xref:System.Data.Objects.ObjectQuery%601.OfType%60%601?displayProperty=nameWithType> 메서드를는 <xref:System.Data.Objects.ObjectQuery%601?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-274">This has the same effect as applying the <xref:System.Data.Objects.ObjectQuery%601.OfType%60%601?displayProperty=nameWithType> method to the <xref:System.Data.Objects.ObjectQuery%601?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c41f5-275">데이터 바인딩은 읽기 전용 이면 해당 <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> 속성이 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-275">If the data binding is read-only, then the <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A> property is not required.</span></span> <span data-ttu-id="c41f5-276">이 경우 엔터티 집합에 대 한 기본 엔터티 형식의 속성이 쿼리에 의해 반환 되는 개체의 속성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-276">In this case, the properties of the object returned by the query will be those of the default entity type for the entity set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="entityDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName"><span data-ttu-id="c41f5-277">검색할 뷰의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-277">The name of the view to retrieve.</span></span> <span data-ttu-id="c41f5-278"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤은 한 개의 뷰만 지원하기 때문에 <paramref name="viewName" />은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-278">Because the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control supports only one view, <paramref name="viewName" /> is ignored.</span></span></param>
        <summary><span data-ttu-id="c41f5-279">데이터 소스 컨트롤과 연결된 명명된 데이터 소스 뷰를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-279">Gets the named data source view that is associated with the data source control.</span></span></summary>
        <returns><span data-ttu-id="c41f5-280"><see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.EntityDataSource" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-280">The <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> that is associated with the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-281"><xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤은 하나의 데이터 원본 뷰를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-281">The <xref:System.Web.UI.WebControls.EntityDataSource> control supports only one data source view.</span></span> <span data-ttu-id="c41f5-282">모든 데이터 원본 뷰 개체와 마찬가지로 <xref:System.Web.UI.WebControls.EntityDataSourceView> 개체 데이터 소스 컨트롤과 연결 된 해당 기능을 정의 기본 데이터베이스에서 데이터를 검색 하는 데 필요한 이며 정렬과 같은 작업을 수행 하는 모든 작업을 수행 합니다. 삽입, 삭제 및 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-282">Like all data source view objects, the <xref:System.Web.UI.WebControls.EntityDataSourceView> object that is associated with the data source control defines its capabilities, performs all work that is necessary to retrieve data from the underlying database, and performs operations, such as sorting, inserting, deleting, and updating.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="entityDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c41f5-283"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤과 연결된 뷰 개체 목록을 나타내는 이름의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-283">Gets a collection of names representing the list of view objects that are associated with the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <returns><span data-ttu-id="c41f5-284"><see cref="T:System.Collections.ICollection" /> 컨트롤과 연결된 뷰의 이름이 들어 있는 <see cref="T:System.Web.UI.WebControls.EntityDataSource" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-284">An <see cref="T:System.Collections.ICollection" /> that contains the names of the views associated with the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-285"><xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤은 해당 기본 데이터에 대해 하나의 뷰만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-285">The <xref:System.Web.UI.WebControls.EntityDataSource> control supports only one view on its underlying data.</span></span> <span data-ttu-id="c41f5-286"><xref:System.Web.UI.WebControls.EntityDataSource.GetViewNames%2A> 메서드를 문자열로이 한 보기 이름의 단일 요소 컬렉션을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-286">The <xref:System.Web.UI.WebControls.EntityDataSource.GetViewNames%2A> method returns a single-element collection of this one-view name as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.GroupBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-287">쿼리 결과를 그룹화하는 방법을 지정하는 Entity SQL 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-287">Gets or sets the Entity SQL expression that specifies how to group the query results.</span></span></summary>
        <value><span data-ttu-id="c41f5-288">GROUP BY 절입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-288">The GROUP BY clause.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public string Include { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Include" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Include" />
      <MemberSignature Language="VB.NET" Value="Public Property Include As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Include { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Include : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.Include" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-289">쿼리 결과에 포함할 관련 개체를 지정하는 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-289">Gets or sets the expression that specifies the related objects to include in the query results.</span></span></summary>
        <value><span data-ttu-id="c41f5-290">쿼리 결과에 반환할 쉼표로 구분된 쿼리 경로 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-290">Comma-separated list of query paths to return in the query results.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-291">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 제어 하면 특정 쿼리 개체와 함께 반환 되는 개체를 정의 하는 쿼리 경로의 쉼표로 구분 된 목록을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-291">The <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control specifies a comma-separated list of query paths that define the objects that are returned together with the specifically queried object.</span></span> <span data-ttu-id="c41f5-292">별도 호출으로 수정 하지 않고 문자열에서 각 쉼표로 구분 된 값이 전달 합니다 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드는 <xref:System.Data.Objects.ObjectQuery%601> 에서 실행 되는 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c41f5-292">Each comma-separated value in the string is passed, without modification, as a separate call to the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method of an <xref:System.Data.Objects.ObjectQuery%601> that is executed by the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)].</span></span> <span data-ttu-id="c41f5-293">이 쿼리를 통해 조정 된 데이터의 소스는 <xref:System.Web.UI.WebControls.EntityDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-293">This query is the source of the data regulated by the <xref:System.Web.UI.WebControls.EntityDataSource> control.</span></span> <span data-ttu-id="c41f5-294">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> 속성은 적용할 인수를 <xref:System.Data.Objects.ObjectQuery%601> 실행 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-294">The <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> property is the argument applied to the <xref:System.Data.Objects.ObjectQuery%601> before it is executed.</span></span>  
  
 <span data-ttu-id="c41f5-295">에 제공 된 문자열을 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> 속성에 전달 되는 문자열로 동일한 형식을 사용 합니다 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> 메서드의 <xref:System.Data.Objects.ObjectQuery%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-295">The string supplied to the <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> property uses the same format as the string that is passed to the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method of <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="c41f5-296">쿼리 경로 사용 하 여 자동으로 관련된 개체를 로드 하는 방법의 예제를 참조 하세요. [방법: 쿼리 경로 셰이프 결과를 사용 하 여](https://msdn.microsoft.com/library/100bf7f5-00ba-4c17-8e27-7a8a14831093)입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-296">For examples of how to use query paths to automatically load related objects, see [How to: Use Query Paths to Shape Results](https://msdn.microsoft.com/library/100bf7f5-00ba-4c17-8e27-7a8a14831093).</span></span>  
  
 <span data-ttu-id="c41f5-297">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> 속성 쿼리 경로 지정 하는, 관련된 엔터티 속성을 읽기 전용 데이터 바인딩에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-297">When the <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> property is used to specify query paths, the properties of the related entities can only be used for read-only data-binding.</span></span> <span data-ttu-id="c41f5-298">쿼리 경로에서 관련된 개체를 명시적으로 포함 되지 않은 경우 데이터 바인딩에 대 한 속성 설명자를 계속 사용할 수 있지만 자체 속성을 null 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-298">If related objects are not explicitly included in the query path, the property descriptors are still available for data binding, but the properties themselves return null values.</span></span> <span data-ttu-id="c41f5-299">이 경우 해당 값을 표시할 관련된 개체를 명시적으로 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-299">In this case, the related objects must be explicitly loaded to display their values.</span></span> <span data-ttu-id="c41f5-300">자세한 내용은 [관련 개체 로드](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-300">For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-301">다음 XML 태그를 반환 하는 쿼리 경로 정의 `SalesOrderHeader` 반환 된 개체와 관련 된 `Contact` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-301">The following XML markup defines a query path that returns `SalesOrderHeader` objects related to the returned `Contact` object.</span></span> <span data-ttu-id="c41f5-302">상호 `SalesOrderHeader`, 관련 `SalesOrderDetail` 고 `Address` 개체도 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-302">With each `SalesOrderHeader`, the related `SalesOrderDetail` and `Address` objects are also returned.</span></span>  
  
```  
<asp:EntityDataSource ID="ContactDataSource" runat="server"   
    AutoGenerateWhereClause="True" ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
    EnableInsert="True" EnableUpdate="True" EntitySetName="Contact"   
    Include="SalesOrderHeader.SalesOrderDetail, SalesOrderHeader.Address">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="customerId" Name="ContactID"   
            PropertyName="Text" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
 <span data-ttu-id="c41f5-303">이전 XML 예제는 다음과 같습니다 <xref:System.Data.Objects.ObjectQuery%601> 라는 `customers`:</span><span class="sxs-lookup"><span data-stu-id="c41f5-303">The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `customers`:</span></span>  
  
```  
ObjectQuery<Contact> customers =  
      context.Contact  
       .Where("it.ContactID = @ContactID",  
         new ObjectParameter("ContactID", customerId))  
        .Include("SalesOrderHeader.SalesOrderDetail")  
        .Include("SalesOrderHeader.Address");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " Usage="member this.Inserted : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-304">데이터 소스에서 새 개체가 만들어진 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-304">Occurs after a new object is created at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-305"><xref:System.Web.UI.WebControls.EntityDataSource.Inserted> 데이터 원본에 추가 된 개체가 만들어질 때 또는 데이터 원본에 개체 데이터를 유지 하는 경우 오류가 발생 하는 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-305">The <xref:System.Web.UI.WebControls.EntityDataSource.Inserted> event is raised when the added object is created in the data source or if an error has occurred when the object data is persisted to the data source.</span></span> <span data-ttu-id="c41f5-306">합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> 개체를 사용 하 여 추가 된 개체를 액세스 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-306">The <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> object is used to access the added object.</span></span>  
  
 <span data-ttu-id="c41f5-307">이 개체의 속성을 데이터 소스에서 생성 된 값을 포함 한 데이터 원본에서 반환 되는 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-307">The properties of this object contain values that are returned from the data source, including any data source-generated values.</span></span>  
  
 <span data-ttu-id="c41f5-308">개체 데이터 원본에 유지 하는 경우 오류가 발생 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Inserted> 이벤트가 발생 및 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> 개체가 설정 된 반환 된 <xref:System.Exception>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-308">If an error occurs when an object is persisted to the data source, the <xref:System.Web.UI.WebControls.EntityDataSource.Inserted> event is raised and the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> object is set to the returned <xref:System.Exception>.</span></span> <span data-ttu-id="c41f5-309">예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Inserted> 이벤트 처리기를 설정 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-309">If you handle the exception in the <xref:System.Web.UI.WebControls.EntityDataSource.Inserted> event handler, set the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="c41f5-310">이렇게 하면 예외가 다시 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-310">This prevents the exception from being raised again.</span></span> <span data-ttu-id="c41f5-311">값을 지정 하는 경우 `false` 에 대 한 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 속성인은 <xref:System.Web.UI.WebControls.EntityDataSource> 다시 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-311">When you specify a value of `false` for the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> property, the <xref:System.Web.UI.WebControls.EntityDataSource> re-raises the exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " Usage="member this.Inserting : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-312">데이터 소스에 새 개체가 유지되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-312">Occurs before a new object is persisted to the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-313"><xref:System.Web.UI.WebControls.EntityDataSource.Inserting> 새 개체를 데이터 원본에 유지 되기 전에 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-313">The <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> event is raised before a new object is persisted to the data source.</span></span> <span data-ttu-id="c41f5-314"><xref:System.Web.UI.WebControls.EntityDataSource.Inserting> 이벤트 수정 또는 추가 되는 개체를 확인, 다른 개체에 추가 작업을 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-314">The <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> event enables you to modify or verify the object being added, add a different object, or cancel the operation.</span></span> <span data-ttu-id="c41f5-315">추가할 개체에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-315">You can access the object to be added from the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object.</span></span> <span data-ttu-id="c41f5-316">다른 개체를 제공 하는 경우 사용자가에서 올바른 엔터티 형식을 설정 하는 일을 담당 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-316">If supplying a different object, the user is responsible for setting the correct entity type in the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> property.</span></span>  
  
 <span data-ttu-id="c41f5-317">추가할 개체를 중지 하려면 설정 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체를 `true`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-317">To stop the object from being added, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="c41f5-318">새 개체를 만들 때 오류가 발생 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> 이벤트가 발생 및 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체가 설정 된 반환 된 <xref:System.Exception>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-318">If an error occurs when creating a new object, the <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> event is raised and the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object is set to the returned <xref:System.Exception>.</span></span>  
  
 <span data-ttu-id="c41f5-319">예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> 이벤트 처리기를 설정 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-319">When you handle the exception in the <xref:System.Web.UI.WebControls.EntityDataSource.Inserting> event handler, set the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="c41f5-320">이렇게 하면 예외가 다시 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-320">This prevents the exception from being raised again.</span></span> <span data-ttu-id="c41f5-321">값을 지정 하는 경우 `false` 에 대 한 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 속성인은 <xref:System.Web.UI.WebControls.EntityDataSource> 다시 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-321">When you specify a value of `false` for the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> property, the <xref:System.Web.UI.WebControls.EntityDataSource> re-raises the exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-322">삽입 작업 중에 사용되는 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-322">Gets the collection of parameters that are used during an insert operation.</span></span></summary>
        <value><span data-ttu-id="c41f5-323">삽입 작업 중에 사용되는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-323">The parameters that are used during an insert operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-324">ASP.NET 4 또는 이전 버전을 대상으로 하는 웹 응용 프로그램에 대 한 속성 값 뷰 상태에 저장 되 고 다시 게시할 때마다 자동으로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-324">For web applications that target ASP.NET 4 or earlier, the property value is stored in view state and is automatically maintained between postbacks.</span></span> <span data-ttu-id="c41f5-325">ASP.NET 4.5를 대상으로 하는 웹 응용 프로그램에 대 한 속성 값이 뷰 상태에 저장 되지 및 각 HTTP 요청에 대 한 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-325">For web applications that target ASP.NET 4.5, the property value is not stored in view state, and you must set the value for each HTTP request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="entityDataSource.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="c41f5-326">상태 정보를 포함하는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-326">The <see cref="T:System.Object" /> that contains state information.</span></span></param>
        <summary><span data-ttu-id="c41f5-327">유지해야 하는 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤에 있는 속성의 상태를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-327">Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control that need to be persisted.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="entityDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c41f5-328">이벤트 데이터가 들어 있는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-328">An <see cref="T:System.EventArgs" /> object that contains event data.</span></span></param>
        <summary><span data-ttu-id="c41f5-329"><see cref="E:System.Web.UI.Page.LoadComplete" /> 이벤트 처리기를 <see cref="T:System.Web.UI.Page" /> 컨트롤이 포함된 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-329">Adds a <see cref="E:System.Web.UI.Page.LoadComplete" /> event handler to the <see cref="T:System.Web.UI.Page" /> control that contains the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="entityDataSource.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c41f5-330">이벤트 데이터가 들어 있는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-330">An <see cref="T:System.EventArgs" /> object that contains event data.</span></span></param>
        <summary><span data-ttu-id="c41f5-331"><see cref="E:System.Web.UI.Control.Unload" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-331">Raises the <see cref="E:System.Web.UI.Control.Unload" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-332">쿼리 결과를 정렬하는 방법을 지정하는 Entity SQL 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-332">Gets or sets the Entity SQL expression that specifies how to order the query results.</span></span></summary>
        <value><span data-ttu-id="c41f5-333">ORDER BY 절입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-333">The ORDER BY clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-334">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤은 Entity SQL 쿼리 식을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-334">The <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control is a string that represents an  expression of an Entity SQL query.</span></span> <span data-ttu-id="c41f5-335">이 문자열을 전달 수정 하지 않고에 <xref:System.Data.Objects.ObjectQuery%601> 에서 실행 되는 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-335">This string is passed, without modification, to an <xref:System.Data.Objects.ObjectQuery%601> that is executed by the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)].</span></span> <span data-ttu-id="c41f5-336">이 쿼리를 통해 조정 된 데이터의 소스는 <xref:System.Web.UI.WebControls.EntityDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-336">This query is the source of the data regulated by the <xref:System.Web.UI.WebControls.EntityDataSource> control.</span></span> <span data-ttu-id="c41f5-337">에 제공 된 문자열을 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> 속성에 전달 되는 문자열로 동일한 형식을 사용 합니다 <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> 메서드의 <xref:System.Data.Objects.ObjectQuery%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-337">The string supplied to the <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> property uses the same format as the string that is passed to the <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> method of <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="c41f5-338">쿼리 결과 정렬 하려면 절을 사용 하는 방법의 예제를 참조 하세요. [방법: 데이터 정렬](https://msdn.microsoft.com/library/c05f2506-cb9d-4ebc-822b-300042ad53e7)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-338">For examples of how to use the  clause to order query results, see [How to: Sort Data](https://msdn.microsoft.com/library/c05f2506-cb9d-4ebc-822b-300042ad53e7).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-339">.Aspx 파일에 다음 예제에서는 XML 태그 컨트롤에서 값을 검색 하 고 매개 변수로 전달 된 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-339">The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.</span></span>  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 <span data-ttu-id="c41f5-340">이전 XML 예제는 다음과 같습니다 <xref:System.Data.Objects.ObjectQuery%601> 라는 `onlineOrders`:</span><span class="sxs-lookup"><span data-stu-id="c41f5-340">The previous XML example is equivalent to the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:</span></span>  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.OrderByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-341">ORDER BY 절을 만드는 데 사용되는 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-341">Gets the collection of parameters that are used to create the ORDER BY clause.</span></span></summary>
        <value><span data-ttu-id="c41f5-342">ORDER BY 절을 만드는 데 사용되는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-342">The parameters that are used for creating the ORDER BY clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-343">때를 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 로 설정 되어 `true`, 컨트롤에서 매개 변수에서 ORDER BY 절을 자동으로 생성를 <xref:System.Web.UI.WebControls.ParameterCollection> 에 할당 된를 <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-343">When the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control is set to `true`, the control automatically generates an ORDER BY clause from the parameter in the <xref:System.Web.UI.WebControls.ParameterCollection> assigned to the <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> property.</span></span> <span data-ttu-id="c41f5-344">이 ORDER BY 절을 명시적으로 할당할 필요가 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-344">This eliminates the need to explicitly assign an ORDER BY clause to the <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="c41f5-345">ORDER BY 절에서 생성 합니다 <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> 속성에서는 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 쿼리에서 반환 되는 항목의 단일 속성을 식별 하는 컬렉션에 있는 매개 변수 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-345">The construction of the ORDER BY clause from the <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> property requires that the <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of the parameter in the collection identifies a single property of the item that is returned from the query.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-346">다음 예제에서는 자동으로 ORDER BY 절을 생성 하 고 값을 사용 합니다 `orderByDropDownList` 매개 변수의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-346">The following example automatically generates the ORDER BY clause and uses the value of the `orderByDropDownList` to set the value of the parameter.</span></span>  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
    ConnectionString="name=AdventureWorksEntities"  
    DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
    EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
    Where="it.OnlineOrderFlag = true" AutoGenerateOrderByClause="True">  
    <OrderByParameters>  
        <asp:ControlParameter Name="OrderByParameter"   
            ControlID="orderByDropDownList" Type="String" />  
    </OrderByParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt; QueryCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.QueryCreatedEventArgs&gt; QueryCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.QueryCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCreated As EventHandler(Of QueryCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::Web::UI::WebControls::QueryCreatedEventArgs ^&gt; ^ QueryCreated;" />
      <MemberSignature Language="F#" Value="member this.QueryCreated : EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt; " Usage="member this.QueryCreated : System.EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IQueryableDataSource.QueryCreated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-347"><see cref="T:System.Web.UI.WebControls.EntityDataSource" />가 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤을 구성하는 동안 지정된 엔터티 SQL 쿼리를 만든 이후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-347">Occurs after the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> creates an Entity SQL query that was specified during the configuration of the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-348">자세한 내용은 [EntityDataSource LINQ 쿼리에 적용](https://msdn.microsoft.com/library/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-348">For more information, see [Applying LINQ Queries to EntityDataSource](https://msdn.microsoft.com/library/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="entityDataSource.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c41f5-349"><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> 컨트롤에서 유지해야 하는 특성의 상태를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-349">Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> control that need to be persisted.</span></span></summary>
        <returns><span data-ttu-id="c41f5-350">상태 정보를 포함하는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-350">The <see cref="T:System.Object" /> that contains state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Select : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-351">쿼리 결과에 포함할 속성을 정의하는 프로젝션을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-351">Gets or sets the projection that defines the properties to include in the query results.</span></span></summary>
        <value><span data-ttu-id="c41f5-352">ORDER BY 절을 만드는 데 사용되는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-352">The parameters that are used for creating the ORDER BY clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-353">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> Entity SQL 쿼리 문을 나타내는 문자열을 포함 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-353">The <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control contains a string that represents the  statement of an Entity SQL query.</span></span> <span data-ttu-id="c41f5-354">그러면 지정된 된 집합이 쿼리에서 반환 된 개체의 속성을 프로젝션 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-354">This enables you to project a specified set of properties from the objects returned by the query.</span></span>  
  
 <span data-ttu-id="c41f5-355">이 문자열은 수정 하지 않고로 전달 된 <xref:System.Data.Objects.ObjectQuery%601> 에서 실행 되는 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-355">This string is passed, without modification, to the <xref:System.Data.Objects.ObjectQuery%601> that is executed by the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)].</span></span> <span data-ttu-id="c41f5-356">이 쿼리를 통해 조정 된 데이터의 소스는 <xref:System.Web.UI.WebControls.EntityDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-356">This query is the source of the data regulated by the <xref:System.Web.UI.WebControls.EntityDataSource> control.</span></span> <span data-ttu-id="c41f5-357">에 제공 된 문자열을 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 속성에 전달 되는 문자열로 동일한 형식을 사용 합니다 <xref:System.Data.Objects.ObjectQuery%601.Select%2A> 메서드의 <xref:System.Data.Objects.ObjectQuery%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-357">The string supplied to the <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> property uses the same format as the string that is passed to the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method of <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="c41f5-358">절을 사용 하 여 쿼리에 대 한 프로젝션을 정의 하는 방법의 예제를 참조 하세요. [방법: 익명 형식 개체를 반환 하는 쿼리 실행](https://msdn.microsoft.com/library/3b264025-e911-4d73-90ce-992d2b9d189d)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-358">For examples of how to use the  clause to define a projection for a query, see [How to: Execute a Query that Returns Anonymous Type Objects](https://msdn.microsoft.com/library/3b264025-e911-4d73-90ce-992d2b9d189d).</span></span>  
  
 <span data-ttu-id="c41f5-359">프로젝션 된 데이터에 대 한 업데이트가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-359">Updates are not supported for projected data.</span></span> <span data-ttu-id="c41f5-360">즉, 사용 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 데이터 바인딩에 프로젝션을 지정 하는 속성 업데이트를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-360">This means that when you use the <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> property to specify a projection, the bound data binding does not support updates.</span></span>  
  
 <span data-ttu-id="c41f5-361">프로젝션 페이징을 사용을 정의할 때 결과 정렬 하는 속성을 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-361">When you define a projection with paging enabled, you must define the property by which to order the results.</span></span> <span data-ttu-id="c41f5-362">즉, when 설정한를 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 속성을 프로젝션 정의 했으며 <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> 로 설정 `true`를 설정 해야를 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> 순서를 정의 하거나 설정 하려면 속성을 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 속성을 `true` 주문을 추가 하 고 매개 변수에 <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-362">This means the when you set the <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> property to defined a projection and have <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A> set to `true`, you must also set the <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> property to define the order or set the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> property to `true` and add an ORDER BY parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> collection.</span></span>  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> <span data-ttu-id="c41f5-363">경우에 설정할 수 없습니다 <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>, <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>, 또는 <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> 사용 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-363">cannot be set if <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>, <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>, or <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> is enabled.</span></span>  
  
 <span data-ttu-id="c41f5-364">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 프로젝션 속성을 반환 하는 쿼리로 설정 됩니다 (예를 들어 `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`), <xref:System.Data.Common.DbDataRecord> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-364">If the <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> is set to a query that returns a projection of properties (for example, `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`), a <xref:System.Data.Common.DbDataRecord> will be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-365">다음 XML 태그를 사용 하 여 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 제품 형식의 속성 중 6 개를 사용 하 여 프로젝션을 지정 하는 속성:</span><span class="sxs-lookup"><span data-stu-id="c41f5-365">The following XML markup uses the <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> property to specify a projection with six of the properties of the Product type:</span></span>  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities"   
    EntitySetName="Product" OrderBy="it.[ProductID]"   
    Select="it.[ProductID], it.[Name], it.[ListPrice],   
    it.[Size], it.[Style], it.[Weight]">  
</asp:EntityDataSource>  
  
```  
  
 <span data-ttu-id="c41f5-366">이전 XML 예제는 다음과 같습니다 <xref:System.Data.Objects.ObjectQuery%601> 라는 `products`:</span><span class="sxs-lookup"><span data-stu-id="c41f5-366">The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `products`:</span></span>  
  
```  
ObjectQuery<Product> products = context.Product  
    .Select(it.[ProductID], it.[Name], it.[ListPrice],   
      it.[Size], it.[Style], it.[Weight])  
    .OrderBy("it.[ProductID]");  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c41f5-367"><see cref="P:System.Web.UI.WebControls.EntityDataSource.Select" /> 속성이 <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />의 쿼리 프로젝션 및 값을 지정하면 <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" /> 또는 <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" />는 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-367">When the <see cref="P:System.Web.UI.WebControls.EntityDataSource.Select" /> property specifies a query projection and the value of <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />, <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" />, or <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" /> is <see langword="true" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of EntityDataSourceSelectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceSelectedEventArgs ^&gt; ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; " Usage="member this.Selected : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-368">쿼리가 실행된 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-368">Occurs after a query has been executed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-369"><xref:System.Web.UI.WebControls.EntityDataSource.Selected> 쿼리가 실행 된 후 데이터가 반환 된 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-369">The <xref:System.Web.UI.WebControls.EntityDataSource.Selected> event is raised after a query has been executed and data has been returned.</span></span> <span data-ttu-id="c41f5-370">쿼리 준비 또는 실행 하는 동안 오류가 발생 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-370">It is also raised if an error occurred during query preparation or execution.</span></span>  
  
 <span data-ttu-id="c41f5-371"><xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> 개체에 포함 되어는 <xref:System.Collections.IEnumerable> 쿼리에서 반환 되는 개체의 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-371">The <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> object contains an <xref:System.Collections.IEnumerable> of objects that are returned from the query.</span></span> <span data-ttu-id="c41f5-372">처리를 <xref:System.Web.UI.WebControls.EntityDataSource.Selected> 반환 된 엔터티를 검색 하 고 저장 하는 이벤트를 <xref:System.Web.UI.Control.ViewState%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-372">Handle the <xref:System.Web.UI.WebControls.EntityDataSource.Selected> event to retrieve and store returned entities in the <xref:System.Web.UI.Control.ViewState%2A>.</span></span> <span data-ttu-id="c41f5-373">페이지의 개체 변경 내용을 유지 하려면이 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-373">Do this to persist object changes on the page.</span></span>  
  
 <span data-ttu-id="c41f5-374"><xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> 개체 페이징이 데이터 바인딩된 컨트롤에 의해 전달 된 값에 관계 없이 모든 페이지에서 개체의 총 수를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-374">The <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> object shows the total number of objects in all pages, regardless of the values passed by the data-bound control for paging.</span></span> <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> <span data-ttu-id="c41f5-375">페이징이 사용 되는지 같은 경우에만 데이터 바인딩된 컨트롤에서 필요한 경우를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-375">is only retrieved if the data-bound control needs it, such as if paging is enabled.</span></span>  
  
 <span data-ttu-id="c41f5-376">쿼리 준비 하거나 실행할 때 오류가 발생 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Selected> 이벤트가 발생를 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> 개체가 설정 된 반환 된 <xref:System.Exception>, 및 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> 속성 `null`.</span><span class="sxs-lookup"><span data-stu-id="c41f5-376">If an error occurs when the query is prepared or executed, the <xref:System.Web.UI.WebControls.EntityDataSource.Selected> event is raised, the <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> object is set to the returned <xref:System.Exception>, and the <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> property is set to `null`.</span></span> <span data-ttu-id="c41f5-377">예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Selected> 이벤트 처리기를 설정 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-377">If you handle the exception in the <xref:System.Web.UI.WebControls.EntityDataSource.Selected> event handler, set the <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="c41f5-378">이렇게 하면 예외가 다시 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-378">This prevents the exception from being raised again.</span></span> <span data-ttu-id="c41f5-379">값을 지정 하는 경우 `false` 에 대 한 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 속성인은 <xref:System.Web.UI.WebControls.EntityDataSource> 다시 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-379">When you specify a value of `false` for the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> property, the <xref:System.Web.UI.WebControls.EntityDataSource> re-raises the exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of EntityDataSourceSelectingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceSelectingEventArgs ^&gt; ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; " Usage="member this.Selecting : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-380">쿼리가 생성 및 실행되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-380">Occurs before a query is constructed and executed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-381"><xref:System.Web.UI.WebControls.EntityDataSource.Selecting> 이벤트는 쿼리를 생성 및 실행 되기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-381">The <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> event is raised before a query is constructed and executed.</span></span> <span data-ttu-id="c41f5-382">처리를 <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> 이벤트의 구성을 수정 하는 <xref:System.Web.UI.WebControls.EntityDataSource> 읽기 또는 쿼리에 생성 및 실행 되기 전에 데이터 바인딩된 컨트롤에서 인수를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-382">Handle the <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> event to modify the configuration of the <xref:System.Web.UI.WebControls.EntityDataSource> or read or change the arguments from the data-bound control before the query is constructed and executed.</span></span>  
  
 <span data-ttu-id="c41f5-383">설정 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> 개체를 `true` 쿼리를 취소 하려면.</span><span class="sxs-lookup"><span data-stu-id="c41f5-383">Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> object to `true` to cancel the query.</span></span> <span data-ttu-id="c41f5-384">작업을 선택 취소 되 면 데이터 바인딩된 컨트롤에 데이터가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-384">When the SELECT operation is canceled, no data is returned to the data-bound control.</span></span>  
  
 <span data-ttu-id="c41f5-385">경우 `AllowPaging` 로 설정 된 `true` 데이터 바인딩된 컨트롤에서는 <xref:System.Web.UI.WebControls.EntityDataSource> 를 호출 하는 <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> 및 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> 쿼리 작성기 메서드를 <xref:System.Data.Objects.ObjectQuery%601> 의 값을 사용 하는 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> 및 <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> 의 속성 <xref:System.Web.UI.DataSourceSelectArguments> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-385">If `AllowPaging` is set to `true` in the data-bound control, the <xref:System.Web.UI.WebControls.EntityDataSource> invokes the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> and <xref:System.Data.Objects.ObjectQuery%601.Top%2A> query builder methods on <xref:System.Data.Objects.ObjectQuery%601> using the values of the <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> and <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> properties of the <xref:System.Web.UI.DataSourceSelectArguments> object.</span></span>  
  
 <span data-ttu-id="c41f5-386">경우 `AllowSorting` 로 설정 된 `true` 데이터 바인딩된 컨트롤에서 합니다 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 의 <xref:System.Web.UI.DataSourceSelectArguments> 개체 수를 변경할 때를 <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-386">If `AllowSorting` is set to `true` in the data-bound control, the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> of the <xref:System.Web.UI.DataSourceSelectArguments> object can be changed when the <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> event is handled.</span></span> <span data-ttu-id="c41f5-387">위치 등의 다른 쿼리 연산자 또는 ORDER BY, 페이지 태그에 지정 된 후 적용 되는 <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-387">Any other query operators, such as WHERE or ORDER BY, that are specified in the page markup are applied after the <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-388">프로젝션을 만드는 데 사용되는 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-388">Gets the collection of parameters that are used to create the projection.</span></span></summary>
        <value><span data-ttu-id="c41f5-389">프로젝션을 만드는 데 사용되는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-389">The parameters that are used for creating the projection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-390">같은 합니다 <xref:System.Data.Objects.ObjectQuery%601.Select%2A> 메서드를 <xref:System.Data.Objects.ObjectQuery%601> 클래스 매개 변수에서 정의 된 프로젝션에 전달할 수 있습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-390">Like the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method of the <xref:System.Data.Objects.ObjectQuery%601> class, parameters can be passed to the projection that is defined by the <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> property.</span></span> <span data-ttu-id="c41f5-391"><xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤 지정를 <xref:System.Web.UI.WebControls.ParameterCollection> 쿼리의 SELECT 문에 입력 매개 변수를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-391">The <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control specifies a <xref:System.Web.UI.WebControls.ParameterCollection> that contains the parameters to supply to the SELECT statement of the query.</span></span> <span data-ttu-id="c41f5-392">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> 속성 명명 된 인수를 사용 하 여 제공 되는 문자열에 지정 된 매개 변수를 참조 합니다 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-392">The <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> property uses named arguments to refer to the parameters that are specified in the string that is supplied to the <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> property.</span></span>  
  
 <span data-ttu-id="c41f5-393">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> 속성이 설정 되지 않은, 매개 변수 대체 단어가 없는 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-393">If the <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> property is not set, no parameter substitution is made.</span></span> <span data-ttu-id="c41f5-394">접두사로 SELECT 문의 모든 매개 변수 이름을 "`@"` 기호`,` 에 일치 하는 이름이 있어야 합니다 <xref:System.Web.UI.WebControls.ParameterCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-394">All the parameter names in the SELECT statement, prefixed by the "`@"` symbol`,` must have a matching name in the <xref:System.Web.UI.WebControls.ParameterCollection>.</span></span> <span data-ttu-id="c41f5-395">매개 변수에 대해 null 값이 허용 되지 않습니다는 <xref:System.Web.UI.WebControls.ParameterCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-395">Null values are not allowed for parameters in a <xref:System.Web.UI.WebControls.ParameterCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StoreOriginalValuesInViewState : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-396">데이터를 업데이트 또는 삭제하기 전에 다른 프로세스에서 변경하지 않았음을 확인하기 위해 데이터 소스의 데이터를 뷰 상태에 저장해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-396">Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="c41f5-397">상태 값 보기에 저장 되는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-397">if the values will be stored in view state; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c41f5-398">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-398">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-399">변경 내용을 추적 하려면 경우 업데이트 및 삭제 작업을 사용 하는 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤에 로드 된 개체의 원래 값에 대 한 정보를 저장 해야 합니다는 <xref:System.Web.UI.PageStatePersister.ControlState%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-399">To track changes when update and delete operations are enabled, the <xref:System.Web.UI.WebControls.EntityDataSource> control must store information about original values of loaded objects in the <xref:System.Web.UI.PageStatePersister.ControlState%2A>.</span></span> <span data-ttu-id="c41f5-400">뷰 상태에 필요한 정보를 저장 합니다. 페이지 크기가 늘어납니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-400">Storing this required information in the view state will increase the page size.</span></span> <span data-ttu-id="c41f5-401">원래 값을 설정 하 여 뷰 상태에 저장 하지 않으려면 합니다 <xref:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-401">You can disable storing original values in the view state by setting the <xref:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState%2A> property to `false`.</span></span> <span data-ttu-id="c41f5-402">이 작업을 수행 하는 경우는 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] 업데이트 된 개체의 동시성을 추적할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-402">If you do this, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] cannot track concurrency in updated objects.</span></span> <span data-ttu-id="c41f5-403">자세한 내용은 [업데이트 데이터 (EntityDataSource)](https://msdn.microsoft.com/library/ca153eec-6817-4c1d-b262-efd6d35b0246)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-403">For more information, see [Updating Data (EntityDataSource)](https://msdn.microsoft.com/library/ca153eec-6817-4c1d-b262-efd6d35b0246).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.System#Web#DynamicData#IDynamicDataSource#Exception" />
      <MemberSignature Language="VB.NET" Value="Custom Event Exception As EventHandler(Of DynamicValidatorEventArgs) Implements System.Web.DynamicData.IDynamicDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.DynamicData.IDynamicDataSource.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-404">유효성 검사가 부분 메서드에서 실패하거나 예외가 일어날 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-404">Occurs when validation fails in a partial methods or when an exception is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-405"><xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception> 이벤트는 ASP.NET Dynamic Data를 사용 하 여 호환성을 위해 제공 하기 위해 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-405">The <xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception> event is implemented to provide for compatibility with ASP.NET Dynamic Data.</span></span> <span data-ttu-id="c41f5-406">이 이벤트를 정의한 합니다 <xref:System.Web.DynamicData.IDynamicDataSource> 인터페이스를 명시적으로 구현한는 <xref:System.Web.UI.WebControls.EntityDataSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-406">This event, defined by the <xref:System.Web.DynamicData.IDynamicDataSource> interface, is explicitly implemented by the <xref:System.Web.UI.WebControls.EntityDataSource>.</span></span> <span data-ttu-id="c41f5-407">태그에서이 이벤트에 대 한 처리기를 등록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-407">A handler for this event cannot be registered in markup.</span></span> <span data-ttu-id="c41f5-408"><xref:System.Web.UI.WebControls.EntityDataSource> 인스턴스가 <xref:System.Web.DynamicData.IDynamicDataSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-408">It can be used only when the <xref:System.Web.UI.WebControls.EntityDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 <span data-ttu-id="c41f5-409">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception> 이벤트 제공는 <xref:System.Web.DynamicData.DynamicValidatorEventArgs> 반환 하는 개체는 <xref:System.Exception>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-409">The <xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception> event provides an <xref:System.Web.DynamicData.DynamicValidatorEventArgs> object that returns the <xref:System.Exception>.</span></span> <span data-ttu-id="c41f5-410"><xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception> 이벤트는 다음과 같은 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-410">The <xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception> event may be raised in the following cases:</span></span>  
  
-   <span data-ttu-id="c41f5-411">개체를 만들 때.</span><span class="sxs-lookup"><span data-stu-id="c41f5-411">When an object is created.</span></span> <span data-ttu-id="c41f5-412">이 속성 설정의 유효성을 검사 하는 동안 예외를 발생 시키는 개체의 부분 메서드를 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-412">This enables the partial methods on the object to raise exceptions during validation of property settings.</span></span>  
  
-   <span data-ttu-id="c41f5-413">쿼리를 실행 하는 동안 예외가 발생 하면</span><span class="sxs-lookup"><span data-stu-id="c41f5-413">When an exception occurs during the execution of the query.</span></span>  
  
-   <span data-ttu-id="c41f5-414">모든 INSERT 실행 하는 동안 예외가 발생 하는 경우 업데이트 또는 삭제 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-414">When an exception occurs during the execution of any INSERT, UPDATE, or DELETE operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged">
      <MemberSignature Language="C#" Value="void IQueryableDataSource.RaiseViewChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseViewChanged () Implements IQueryableDataSource.RaiseViewChanged" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged() = System::Web::UI::WebControls::IQueryableDataSource::RaiseViewChanged;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c41f5-415">매개 변수 개체가 변경되었고 데이터 바인딩 컨트롤을 새로 고쳐야 함을 데이터 바인딩 컨트롤에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-415">Notifies the data-bound control that a parameter object has changed and the data-bound control needs to refresh.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="entityDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c41f5-416">서버 컨트롤의 뷰 상태 변경 사항 추적 작업을 실행하여 서버 컨트롤의 <see cref="T:System.Web.UI.StateBag" /> 개체에 변경 사항이 저장되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-416">Causes tracking of view-state changes to the server control so they can be stored in the server control's <see cref="T:System.Web.UI.StateBag" /> object.</span></span> <span data-ttu-id="c41f5-417">이 개체는 <see cref="P:System.Web.UI.Control.ViewState" /> 속성을 통해 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-417">This object is accessible through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-418">자세한 내용은 <xref:System.Web.UI.Control.TrackViewState%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="c41f5-418">For more information, see <xref:System.Web.UI.Control.TrackViewState%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " Usage="member this.Updated : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-419">개체에 대한 변경 사항이 데이터 소스에 유지된 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-419">Occurs after changes to an object have been persisted to the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-420"><xref:System.Web.UI.WebControls.EntityDataSource.Updated> 수정 된 개체의 변경 내용을 데이터 원본에 유지 됩니다 하거나 변경 내용을 적용할 때 오류가 발생 하는 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-420">The <xref:System.Web.UI.WebControls.EntityDataSource.Updated> event is raised when changes to a modified object are persisted to the data source or if an error has occurred when applying changes.</span></span> <span data-ttu-id="c41f5-421">합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> 개체를 사용 하 여 수정된 된 개체를 액세스 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-421">The <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> object is used to access the modified object.</span></span>  
  
 <span data-ttu-id="c41f5-422">이 개체의 속성을 서버에서 생성 된 값을 포함 한 데이터 원본에서 반환 되는 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-422">The properties of this object contain values returned from the data source, including any server-generated values.</span></span>  
  
 <span data-ttu-id="c41f5-423">데이터 원본에 변경 내용이 유지 되는 동안 오류가 발생 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Updated> 이벤트가 발생 및 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> 개체가 설정 된 반환 된 <xref:System.Exception>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-423">If an error occurs when changes are persisted to the data source, the <xref:System.Web.UI.WebControls.EntityDataSource.Updated> event is raised and the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> object is set to the returned <xref:System.Exception>.</span></span> <span data-ttu-id="c41f5-424">예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Updated> 이벤트 처리기를 설정 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-424">If you handle the exception in the <xref:System.Web.UI.WebControls.EntityDataSource.Updated> event handler, set the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="c41f5-425">이렇게 하면 예외가 다시 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-425">This prevents the exception from being raised again.</span></span> <span data-ttu-id="c41f5-426">값을 지정 하는 경우 `false` 에 대 한 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> 속성인은 <xref:System.Web.UI.WebControls.EntityDataSource> 다시 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-426">When you specify a value of `false` for the <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> property, the <xref:System.Web.UI.WebControls.EntityDataSource> re-raises the exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-427">업데이트 작업 중에 사용되는 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-427">Gets the collection of parameters that are used during an update operation.</span></span></summary>
        <value><span data-ttu-id="c41f5-428">업데이트 작업 중에 사용되는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-428">The parameters that are used during an update operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-429">ASP.NET 4 또는 이전 버전을 대상으로 하는 웹 응용 프로그램에 대 한 속성 값 뷰 상태에 저장 되 고 다시 게시할 때마다 자동으로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-429">For web applications that target ASP.NET 4 or earlier, the property value is stored in view state and is automatically maintained between postbacks.</span></span> <span data-ttu-id="c41f5-430">ASP.NET 4.5를 대상으로 하는 웹 응용 프로그램에 대 한 속성 값이 뷰 상태에 저장 되지 및 각 HTTP 요청에 대 한 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-430">For web applications that target ASP.NET 4.5, the property value is not stored in view state, and you must set the value for each HTTP request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " Usage="member this.Updating : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-431">개체에 대한 변경 사항이 데이터 소스에 유지되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-431">Occurs before changes to an object are persisted to the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-432"><xref:System.Web.UI.WebControls.EntityDataSource.Updating> 개체의 속성 변경 내용을 데이터 원본에 유지 되기 전에 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-432">The <xref:System.Web.UI.WebControls.EntityDataSource.Updating> event is raised before changes to the properties of an object are persisted to the data source.</span></span> <span data-ttu-id="c41f5-433"><xref:System.Web.UI.WebControls.EntityDataSource.Updating> 이벤트 수정 하거나 개체에 대 한 변경 내용을 확인, 다른 개체에 제공 또는 변경 내용이 유지 되기 전에 작업을 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-433">The <xref:System.Web.UI.WebControls.EntityDataSource.Updating> event enables you to modify or verify changes to the object, supply a different object, or cancel the operation before the changes are persisted.</span></span> <span data-ttu-id="c41f5-434">수정 된 개체에 액세스할 수는 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-434">You can access the modified object from the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object.</span></span> <span data-ttu-id="c41f5-435">다른 개체를 제공 하는 경우 사용자가에서 올바른 엔터티 형식을 설정 하는 일을 담당 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-435">If supplying a different object, the user is responsible for setting the correct entity type in the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> property.</span></span>  
  
 <span data-ttu-id="c41f5-436">처리를 <xref:System.Web.UI.WebControls.EntityDataSource.Updating> 수정 해야 하는 경우 이벤트는 <xref:System.Data.Objects.ObjectStateEntry> 동시성 제어에 대 한 다양 한 원래 값을 설정 하는 개체에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-436">Handle the <xref:System.Web.UI.WebControls.EntityDataSource.Updating> event if you must modify the <xref:System.Data.Objects.ObjectStateEntry> for the object to set different original values for concurrency control.</span></span> <span data-ttu-id="c41f5-437">자세한 내용은 [변경 내용 저장 및 동시성 관리](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-437">For more information, see [Saving Changes and Managing Concurrency](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).</span></span>  
  
 <span data-ttu-id="c41f5-438">유지 되 고 변경 내용의 중지 하려면를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-438">To stop the changes from being persisted, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="c41f5-439">개체를 인스턴스화할 때 오류가 발생 하는 경우 속성 수정, 또는 <xref:System.Web.UI.WebControls.EntityDataSource.Updating> 이벤트가 발생 및 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 개체가 설정 된 반환 된 <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="c41f5-439">If an error occurs when instantiating an object or modifying properties, the <xref:System.Web.UI.WebControls.EntityDataSource.Updating> event is raised and the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> object is set to the returned <xref:System.Exception>.</span></span>  
  
 <span data-ttu-id="c41f5-440">예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.EntityDataSource.Updating> 이벤트 처리기를 설정 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-440">When you handle the exception in the <xref:System.Web.UI.WebControls.EntityDataSource.Updating> event handler, set the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="c41f5-441">이렇게 하면 예외가 다시 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-441">This prevents the exception from being raised again.</span></span> <span data-ttu-id="c41f5-442">값을 지정 하는 경우 `false` 에 대 한 합니다 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> 속성인은 <xref:System.Web.UI.WebControls.EntityDataSource> 다시 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-442">When you specify a value of `false` for the <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> property, the <xref:System.Web.UI.WebControls.EntityDataSource> re-raises the exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.Where" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.Where</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-443">쿼리 결과를 필터링하는 방법을 지정하는 Entity SQL 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-443">Gets or sets the Entity SQL expression that specifies how to filter the query results.</span></span></summary>
        <value><span data-ttu-id="c41f5-444">WHERE 절입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-444">The WHERE clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-445">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 제어 되는 Entity SQL 쿼리 조건자는 절을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-445">The <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control is a string that represents a  clause that is the predicate of an Entity SQL query.</span></span> <span data-ttu-id="c41f5-446">이 문자열을 전달 수정 하지 않고에 <xref:System.Data.Objects.ObjectQuery%601> 에서 실행 되는 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-446">This string is passed, without modification, to an <xref:System.Data.Objects.ObjectQuery%601> that is executed by the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)].</span></span> <span data-ttu-id="c41f5-447">이 쿼리를 통해 조정 된 데이터의 소스는 <xref:System.Web.UI.WebControls.EntityDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-447">This query is the source of the data regulated by the <xref:System.Web.UI.WebControls.EntityDataSource> control.</span></span> <span data-ttu-id="c41f5-448">에 제공 된 문자열을 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> 속성에 전달 되는 문자열로 동일한 형식을 사용 합니다 <xref:System.Data.Objects.ObjectQuery%601.Where%2A> 메서드의 <xref:System.Data.Objects.ObjectQuery%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-448">The string supplied to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property uses the same format as the string that is passed to the <xref:System.Data.Objects.ObjectQuery%601.Where%2A> method of <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="c41f5-449">절을 사용 하 여 쿼리를 필터링 하는 방법의 예제를 참조 하세요. [방법: 데이터 필터링](https://msdn.microsoft.com/library/776f8556-3350-4572-804a-b1513515c1b2)합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-449">For examples of how to use the  clause to filter a query, see [How to: Filter Data](https://msdn.microsoft.com/library/776f8556-3350-4572-804a-b1513515c1b2).</span></span>  
  
 <span data-ttu-id="c41f5-450">식에 엔터티 형식 속성을 연결 하 여 쿼리 결과 필터링 하려면에 대 한 정보를 참조 합니다 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-450">To filter query results by equating an entity type property to an expression, see information about the <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-451">.Aspx 파일에 다음 예제에서는 XML 태그 컨트롤에서 값을 검색 하 고 매개 변수로 전달 된 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-451">The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.</span></span>  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 <span data-ttu-id="c41f5-452">이전 XML 예제는 다음과 같습니다 <xref:System.Data.Objects.ObjectQuery%601> 라는 `onlineOrders`:</span><span class="sxs-lookup"><span data-stu-id="c41f5-452">The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:</span></span>  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.WhereParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c41f5-453">WHERE 절을 만드는 데 사용되는 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-453">Gets the collection of parameters that are used to create the WHERE clause.</span></span></summary>
        <value><span data-ttu-id="c41f5-454">WHERE 절을 만드는 데 사용되는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-454">The parameters that are used for creating the WHERE clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c41f5-455">같은 합니다 <xref:System.Data.Objects.ObjectQuery%601.Where%2A> 메서드를 <xref:System.Data.Objects.ObjectQuery%601> 클래스 매개 변수를 할당 하는 조건자에 전달할 수 있습니다는 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c41f5-455">Like the <xref:System.Data.Objects.ObjectQuery%601.Where%2A> method of the <xref:System.Data.Objects.ObjectQuery%601> class, parameters can be passed to the predicate assigned to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.</span></span> <span data-ttu-id="c41f5-456"><xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> 의 속성을 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤 지정를 <xref:System.Web.UI.WebControls.ParameterCollection> 쿼리의 WHERE 절에 제공 하는 매개 변수가 포함 된.</span><span class="sxs-lookup"><span data-stu-id="c41f5-456">The <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSource> control specifies a <xref:System.Web.UI.WebControls.ParameterCollection> that contains the parameters to supply to the WHERE clause of the query.</span></span> <span data-ttu-id="c41f5-457">합니다 <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> 속성 명명 된 인수를 사용 하 여 제공 되는 문자열에 지정 된 매개 변수를 참조 합니다 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-457">The <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> property uses named arguments to refer to the parameters that are specified in the string that is supplied to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.</span></span>  
  
 <span data-ttu-id="c41f5-458">경우는 <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> 속성이 설정 되지 않은, 매개 변수 대체 단어가 없는 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-458">If the <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> property is not set, no parameter substitution is made.</span></span> <span data-ttu-id="c41f5-459">WHERE 절에서 모든 매개 변수 이름은 기호 앞에 "`@"` 에 일치 하는 이름이 있어야 합니다 <xref:System.Web.UI.WebControls.ParameterCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-459">All the parameter names in the WHERE clause preceded by the symbol "`@"` must have a matching name in the <xref:System.Web.UI.WebControls.ParameterCollection>.</span></span> <span data-ttu-id="c41f5-460">매개 변수에 대해 null 값이 허용 되지 않습니다는 <xref:System.Web.UI.WebControls.ParameterCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-460">Null values are not allowed for parameters in a <xref:System.Web.UI.WebControls.ParameterCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c41f5-461">.Aspx 파일에 다음 예제에서는 XML 태그 컨트롤에서 값을 검색 하 고 매개 변수로 전달 된 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c41f5-461">The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.</span></span>  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 <span data-ttu-id="c41f5-462">이전 XML 예제는 다음과 같습니다 <xref:System.Data.Objects.ObjectQuery%601> 라는 `onlineOrders`:</span><span class="sxs-lookup"><span data-stu-id="c41f5-462">The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:</span></span>  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>