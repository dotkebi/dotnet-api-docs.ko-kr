<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7d5dc7d9209bc454de702e7d77fec188384e2c1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55352546" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f101-101">다중 계층 웹 애플리케이션 아키텍처의 데이터 바인딩된 컨트롤에 데이터를 제공하는 비즈니스 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-101">Represents a business object that provides data to data-bound controls in multitier Web application architectures.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="2f101-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="2f101-103">소개</span><span class="sxs-lookup"><span data-stu-id="2f101-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="2f101-104">용도</span><span class="sxs-lookup"><span data-stu-id="2f101-104">Purpose</span></span>](#purpose)  
  
-   [<span data-ttu-id="2f101-105">데이터 검색</span><span class="sxs-lookup"><span data-stu-id="2f101-105">Retrieving Data</span></span>](#retrieving_data)  
  
-   [<span data-ttu-id="2f101-106">데이터 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-106">Performing Data Operations</span></span>](#performing_data_operations)  
  
-   [<span data-ttu-id="2f101-107">데이터 필터링</span><span class="sxs-lookup"><span data-stu-id="2f101-107">Filtering Data</span></span>](#filtering_data)  
  
-   [<span data-ttu-id="2f101-108">캐싱</span><span class="sxs-lookup"><span data-stu-id="2f101-108">Caching</span></span>](#caching)  
  
-   [<span data-ttu-id="2f101-109">기능</span><span class="sxs-lookup"><span data-stu-id="2f101-109">Features</span></span>](#features)  
  
-   [<span data-ttu-id="2f101-110">데이터 뷰</span><span class="sxs-lookup"><span data-stu-id="2f101-110">Data View</span></span>](#data_view)  
  
-   [<span data-ttu-id="2f101-111">LINQ to SQL 사용</span><span class="sxs-lookup"><span data-stu-id="2f101-111">Using LINQ to SQL</span></span>](#using_linq_to_sql)  
  
-   [<span data-ttu-id="2f101-112">선언 구문</span><span class="sxs-lookup"><span data-stu-id="2f101-112">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="2f101-113">소개</span><span class="sxs-lookup"><span data-stu-id="2f101-113">Introduction</span></span>  
 <span data-ttu-id="2f101-114"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤의 사용자가 만든 클래스를 사용 하 여 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-114">An <xref:System.Web.UI.WebControls.ObjectDataSource> control works with a class that you create.</span></span> <span data-ttu-id="2f101-115">검색 하 고 데이터를 업데이트 하는 메서드를 만들고 해당 메서드의 이름을 제공 하는 <xref:System.Web.UI.WebControls.ObjectDataSource> 태그에서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-115">You create methods that retrieve and update data, and you provide the names of those methods to the <xref:System.Web.UI.WebControls.ObjectDataSource> control in markup.</span></span> <span data-ttu-id="2f101-116">렌더링 또는 포스트백 처리 하는 동안는 <xref:System.Web.UI.WebControls.ObjectDataSource> 지정한 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-116">During rendering or postback processing, the <xref:System.Web.UI.WebControls.ObjectDataSource> calls the methods that you have specified.</span></span>  
  
 <span data-ttu-id="2f101-117">시각적으로 렌더링 되지 있는지는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-117">There is no visual rendering of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-118">결과적으로 <xref:System.Web.UI.WebControls.ObjectDataSource> 와 같은 시각적 기능 지원 하지 않습니다는 <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> 또는 <xref:System.Web.UI.DataSourceControl.SkinID%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-118">As a result, the <xref:System.Web.UI.WebControls.ObjectDataSource> does not support visual features such as the <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> or <xref:System.Web.UI.DataSourceControl.SkinID%2A> property.</span></span>  
  
<a name="purpose"></a>   
## <a name="purpose"></a><span data-ttu-id="2f101-119">용도</span><span class="sxs-lookup"><span data-stu-id="2f101-119">Purpose</span></span>  
 <span data-ttu-id="2f101-120">매우 일반적인 애플리케이션 디자인 방법은 프레젠테이션 계층 비즈니스 논리에서 분리 하는 데 비즈니스 개체의 비즈니스 논리를 캡슐화 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-120">A very common application design practice is to separate the presentation layer from business logic and to encapsulate the business logic in business objects.</span></span> <span data-ttu-id="2f101-121">이러한 비즈니스 개체는 프레젠테이션 계층과 데이터 계층에는 3 계층 애플리케이션 아키텍처에서 결과 사이는 고유한 계층을 형성 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-121">These business objects form a distinct layer between the presentation layer and the data tier, resulting in a three-tier application architecture.</span></span> <span data-ttu-id="2f101-122"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 사용 하면 개발자가 자신의 3 계층 애플리케이션 아키텍처를 유지 하는 동안 ASP.NET 데이터 소스 컨트롤을 사용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-122">The <xref:System.Web.UI.WebControls.ObjectDataSource> control enables developers to use an ASP.NET data source control while retaining their three-tier application architecture.</span></span>  
  
 <span data-ttu-id="2f101-123"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 리플렉션을 사용 하 여 비즈니스 개체의 인스턴스 만들기 및를 검색 하도록의 메서드를 호출, 삽입, 데이터 업데이트 및 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-123">The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses reflection to create instances of business objects and to call methods on them to retrieve, update, insert, and delete data.</span></span> <span data-ttu-id="2f101-124">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 클래스의 이름을 식별 하는 <xref:System.Web.UI.WebControls.ObjectDataSource> 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-124">The <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property identifies the name of the class that the <xref:System.Web.UI.WebControls.ObjectDataSource> works with.</span></span> <span data-ttu-id="2f101-125"><xref:System.Web.UI.WebControls.ObjectDataSource> ; 보유 하지 않는 개체가 메모리에 웹 요청 수명에 대 한 제어를 만들고 각 메서드 호출에 대 한 클래스의 인스턴스를 소멸 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-125">The <xref:System.Web.UI.WebControls.ObjectDataSource> control creates and destroys an instance of the class for each method call; it does not hold the object in memory for the lifetime of the Web request.</span></span> <span data-ttu-id="2f101-126">사용 하는 비즈니스 개체는 많은 리소스가 필요 하거나 만들고 제거 하는 비용이 많이 소요 되는 경우 심각한 고려 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-126">This is a serious consideration if the business object that you use requires many resources or is otherwise expensive to create and destroy.</span></span> <span data-ttu-id="2f101-127">비용이 많이 드는 개체를 사용 하는 최적의 디자인 선택 되지 않을 수 있습니다 하지만 사용 하 여 개체의 수명 주기를 제어할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-127">Using an expensive object might not be an optimal design choice, but you can control the life cycle of the object by using the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f101-128">로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-128">The methods that are identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, and <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> properties can be instance methods or `static` (`Shared` in Visual Basic) methods.</span></span> <span data-ttu-id="2f101-129">메서드는 경우 `static` (`Shared` Visual Basic에서), 비즈니스 개체의 인스턴스가 만들어지지 않습니다 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-129">If the methods are `static` (`Shared` in Visual Basic), an instance of the business object is not created, and the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> events are not raised.</span></span>  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a><span data-ttu-id="2f101-130">데이터 검색</span><span class="sxs-lookup"><span data-stu-id="2f101-130">Retrieving Data</span></span>  
 <span data-ttu-id="2f101-131">비즈니스 개체에서 데이터를 검색할 설정의 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성 데이터를 검색 하는 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-131">To retrieve data from a business object, set the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to the name of the method that retrieves data.</span></span> <span data-ttu-id="2f101-132">메서드를 반환 하지 않는 경우는 <xref:System.Collections.IEnumerable> 또는 <xref:System.Data.DataSet> 런타임에서 개체를 래핑할 개체는 <xref:System.Collections.IEnumerable> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-132">If the method does not return an <xref:System.Collections.IEnumerable> or <xref:System.Data.DataSet> object, the object is wrapped by the runtime in an <xref:System.Collections.IEnumerable> collection.</span></span> <span data-ttu-id="2f101-133">메서드 시그니처가 있는지 매개 변수를 추가할 수 있습니다 <xref:System.Web.UI.WebControls.Parameter> 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 컬렉션 다음에 의해 지정 된 메서드에 전달 하려는 값에 바인딩합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-133">If the method signature has parameters, you can add <xref:System.Web.UI.WebControls.Parameter> objects to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection, and then bind them to the values that you want to pass to the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-134">에 대 한 순서로 된 <xref:System.Web.UI.WebControls.ObjectDataSource> 매개 변수를 사용 하 여 컨트롤, 매개 변수 이름 및 메서드 시그니처에서 매개 변수의 형식과 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-134">In order for the <xref:System.Web.UI.WebControls.ObjectDataSource> control to use the parameters, the parameters must match the names and types of the parameters in the method signature.</span></span> <span data-ttu-id="2f101-135">자세한 내용은 [ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-135">For more information, see [Using Parameters with the ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).</span></span>  
  
 <span data-ttu-id="2f101-136"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터를 검색할 때마다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-136">The <xref:System.Web.UI.WebControls.ObjectDataSource> control retrieves data whenever the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method is called.</span></span> <span data-ttu-id="2f101-137">이 메서드는 지정 된 메서드에 프로그래밍 방식 액세스를 제공 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-137">This method provides programmatic access to the method that is specified by <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-138">지정 된 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에 바인딩되는 컨트롤에 의해 자동으로 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> 때 해당 `DataBind` 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-138">The method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property is called automatically by controls that are bound to the <xref:System.Web.UI.WebControls.ObjectDataSource> when their `DataBind` method is called.</span></span> <span data-ttu-id="2f101-139">설정 하는 경우는 `DataSourceID` 데이터 바인딩된 컨트롤의 속성을 컨트롤 자동으로 데이터에 바인딩하는 데이터 원본에서 필요에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-139">If you set the `DataSourceID` property of a data-bound control, the control automatically binds to data from the data source, as needed.</span></span> <span data-ttu-id="2f101-140">설정 합니다 `DataSourceID` 속성은 바인딩에 대 한 권장 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 데이터 바인딩된 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-140">Setting the `DataSourceID` property is the recommended method for binding an <xref:System.Web.UI.WebControls.ObjectDataSource> control to a data-bound control.</span></span> <span data-ttu-id="2f101-141">설정할 수 있습니다 합니다 `DataSource` 속성인 있지만 명시적으로 호출 해야 합니다 `DataBind` 데이터 바인딩된 컨트롤의 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-141">Alternatively, you can set the `DataSource` property, but then you must explicitly call the `DataBind` method of the data-bound control.</span></span> <span data-ttu-id="2f101-142">호출할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드 프로그래밍 방식으로 언제 든 지 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-142">You can call the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method programmatically at any time to retrieve data.</span></span>  
  
 <span data-ttu-id="2f101-143">바인딩 데이터 바인딩된 컨트롤을 데이터 소스 컨트롤에 대 한 자세한 내용은 참조 하세요. [데이터 소스 컨트롤을 사용 하 여 데이터에 바인딩](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-143">For more information about binding data-bound controls to data source controls, see [Binding to Data Using a Data Source Control](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).</span></span>  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a><span data-ttu-id="2f101-144">데이터 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-144">Performing Data Operations</span></span>  
 <span data-ttu-id="2f101-145">개체는 비즈니스 기능에 따라는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤과 함께, 업데이트, 삽입 및 삭제와 같은 데이터 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-145">Depending on the capabilities of the business object that the <xref:System.Web.UI.WebControls.ObjectDataSource> control works with, you can perform data operations, such as updates, insertions, and deletions.</span></span> <span data-ttu-id="2f101-146">이러한 데이터 작업을 수행 하려면 적절 한 메서드 이름 및 수행 하려는 작업에 대 한 모든 연결된 매개 변수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-146">To perform these data operations, set the appropriate method name and any associated parameters for the operation that you want to perform.</span></span> <span data-ttu-id="2f101-147">예를 들어, 업데이트 작업을 설정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성을 추가 및 업데이트를 수행 하는 비즈니스 개체 메서드의 이름에 필요한 매개 변수가 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-147">For example, for an update operation, set the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property to the name of the business object method that performs updates and add any required parameters to the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="2f101-148">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어와 데이터 바인딩된 컨트롤을 연결 된 매개 변수는 데이터 바인딩된 컨트롤에 의해 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-148">If the <xref:System.Web.UI.WebControls.ObjectDataSource> control is associated with a data-bound control, the parameters are added by the data-bound control.</span></span> <span data-ttu-id="2f101-149">이 경우 메서드의 매개 변수 이름은 데이터 바인딩된 컨트롤의 필드 이름이 일치 하는지 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-149">In this case, you need to ensure that the parameter names of the method match the field names in the data-bound control.</span></span> <span data-ttu-id="2f101-150">업데이트가 수행 되는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 메서드가 호출 되는 데이터 바인딩된 컨트롤에 의해 코드에서 명시적으로 또는 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-150">The update is performed when the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method is called, either explicitly by your code or automatically by a data-bound control.</span></span> <span data-ttu-id="2f101-151">동일한 일반 패턴에 대 한 뒤 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 고 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-151">The same general pattern is followed for <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> and <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operations.</span></span> <span data-ttu-id="2f101-152">비즈니스 개체는 일괄 처리 되지 않고 한 번에 이러한 유형의 데이터 작업에 대 한 하나의 레코드를 수행할 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-152">Business objects are assumed to perform these types of data operations one record at a time, rather than batched.</span></span>  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a><span data-ttu-id="2f101-153">데이터 필터링</span><span class="sxs-lookup"><span data-stu-id="2f101-153">Filtering Data</span></span>  
 <span data-ttu-id="2f101-154"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에서 검색 된 데이터를 필터링 할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 데이터로 반환 되 면 속성을 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-154">The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, if the data is returned as a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="2f101-155">설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성 형식을 사용 하 여 필터링 식에 구문 문자열 및 값에 지정 된 매개 변수 식에 바인딩하는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-155">You can set the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property to a filtering expression by using a format string syntax and bind values in the expression to parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection.</span></span>  
  
<a name="caching"></a>   
## <a name="caching"></a><span data-ttu-id="2f101-156">캐싱</span><span class="sxs-lookup"><span data-stu-id="2f101-156">Caching</span></span>  
 <span data-ttu-id="2f101-157">하지만 <xref:System.Web.UI.WebControls.ObjectDataSource> 인스턴스를 유지 하지 않는 여러 요청에서 비즈니스 개체의으로 식별 되는 메서드 호출의 결과 캐시할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-157">Although the <xref:System.Web.UI.WebControls.ObjectDataSource> does not retain the instance of the business object across multiple requests, it can cache the result of calling the method identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-158">데이터는 캐시에서 후속 호출을 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 비즈니스 개체를 만들고 호출 하는 대신 캐시 된 데이터를 반환 하는 메서드 해당 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 리플렉션을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-158">While the data is cached, subsequent calls to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method return the cached data instead of creating the business object and calling its <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> using reflection.</span></span> <span data-ttu-id="2f101-159">개체를 만들고 웹 서버의 메모리 데이터 메서드를 호출을 방지할 수 캐싱 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-159">Caching lets you avoid creating the object and calling its data method at the expense of memory on the Web server.</span></span> <span data-ttu-id="2f101-160"><xref:System.Web.UI.WebControls.ObjectDataSource> 자동으로 데이터를 캐시 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> 속성이로 설정 되어 `true`, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성 캐시 삭제 되기 전에 캐시 데이터를 저장 하는 시간 (초) 수로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-160">The <xref:System.Web.UI.WebControls.ObjectDataSource> automatically caches data when the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true`, and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property is set to the number of seconds that the cache stores data before the cache is discarded.</span></span> <span data-ttu-id="2f101-161">지정할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성과 선택적 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-161">You can also specify a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> property and an optional <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> property.</span></span> <span data-ttu-id="2f101-162">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 사용 하면 모든 유형의 데이터를 캐시할 수 있지만 리소스 또는 여러 요청에 서비스를 공유할 수 없는 상태를 유지 하는 개체를 캐시 하지 않을 (예를 들어, 개방적이 고 <xref:System.Data.SqlClient.SqlDataReader> 개체) 이므로 개체의 동일한 인스턴스 여러 요청을 서비스에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-162">The <xref:System.Web.UI.WebControls.ObjectDataSource> control allows you to cache all types of data, but you should not cache objects that retain resources or state that cannot be shared to service multiple requests (for example, an open <xref:System.Data.SqlClient.SqlDataReader> object), because the same instance of the object will be used to service multiple requests.</span></span>  
  
<a name="features"></a>   
## <a name="features"></a><span data-ttu-id="2f101-163">기능</span><span class="sxs-lookup"><span data-stu-id="2f101-163">Features</span></span>  
 <span data-ttu-id="2f101-164">다음 표에서의 기능을 설명 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-164">The following table describes the features of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
|<span data-ttu-id="2f101-165">기능</span><span class="sxs-lookup"><span data-stu-id="2f101-165">Capability</span></span>|<span data-ttu-id="2f101-166">요구 사항</span><span class="sxs-lookup"><span data-stu-id="2f101-166">Requirements</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="2f101-167">선택</span><span class="sxs-lookup"><span data-stu-id="2f101-167">Selecting</span></span>|<span data-ttu-id="2f101-168">설정 된 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 비즈니스의 이름으로 속성의 데이터를 선택 하는 메서드를 개체 및에 필요한 매개 변수를 포함할는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 컬렉션 프로그래밍 방식으로 또는 데이터 바인딩된 컨트롤을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-168">Set the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to the name of the business object method that selects data, and include any necessary parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection either programmatically or by using a data-bound control.</span></span>|  
|<span data-ttu-id="2f101-169">정렬</span><span class="sxs-lookup"><span data-stu-id="2f101-169">Sorting</span></span>|<span data-ttu-id="2f101-170">설정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> 속성에 있는 매개 변수의 이름으로는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 정렬 조건을 전달 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-170">Set the <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> property to the name of the parameter in the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> method that carries the sort criteria.</span></span>|  
|<span data-ttu-id="2f101-171">필터링</span><span class="sxs-lookup"><span data-stu-id="2f101-171">Filtering</span></span>|<span data-ttu-id="2f101-172">설정를 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성을 필터링 식 및 필요에 따라 모든 매개 변수를 추가 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션 데이터를 필터링 할 때를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드는.</span><span class="sxs-lookup"><span data-stu-id="2f101-172">Set the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property to a filtering expression and optionally add any parameters to the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection to filter the data when the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method is called.</span></span> <span data-ttu-id="2f101-173">지정 된 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성을 반환 해야 합니다는 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-173">The method specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property must return a <xref:System.Data.DataSet> or <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="2f101-174">페이징</span><span class="sxs-lookup"><span data-stu-id="2f101-174">Paging</span></span>|<span data-ttu-id="2f101-175">데이터 소스 페이징을 지원 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 메서드는 검색할 레코드의 최대 수와 검색할 첫 번째 레코드의 인덱스에 대 한 매개 변수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-175">Data source paging is supported, if the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> method contains parameters for the maximum number of records to retrieve and the index of the first record to retrieve.</span></span> <span data-ttu-id="2f101-176">이러한 매개 변수의 이름을 설정 해야 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> 속성을 각각.</span><span class="sxs-lookup"><span data-stu-id="2f101-176">The names of those parameters must be set in the  <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> and <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> properties, respectively.</span></span> <span data-ttu-id="2f101-177">데이터 바인딩된 컨트롤을 자체적으로 페이징을 수행할 수 있습니다 경우에 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 페이징으로 지정한 메서드의에서 직접 지원 하지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-177">A data-bound control might be able to perform paging itself, even if the <xref:System.Web.UI.WebControls.ObjectDataSource> control does not support paging directly in the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-178">이 작업을 수행 하려면 데이터 바인딩된 컨트롤에 대 한 요구 사항인 하 여 지정 된 메서드가 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성을 구현 하는 개체를 반환 합니다 <xref:System.Collections.ICollection> 인터페이스.</span><span class="sxs-lookup"><span data-stu-id="2f101-178">The requirement for the data-bound control to be able to do this is that the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property return an object that implements the <xref:System.Collections.ICollection> interface.</span></span>|  
|<span data-ttu-id="2f101-179">업데이트하는 중</span><span class="sxs-lookup"><span data-stu-id="2f101-179">Updating</span></span>|<span data-ttu-id="2f101-180">설정 된 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 비즈니스의 이름으로 데이터를 업데이트 하는 메서드를 개체 속성과에 필요한 매개 변수를 포함할는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-180">Set the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property to the name of the business object method that updates data, and include any necessary parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection.</span></span>|  
|<span data-ttu-id="2f101-181">삭제</span><span class="sxs-lookup"><span data-stu-id="2f101-181">Deleting</span></span>|<span data-ttu-id="2f101-182">설정 된 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 비즈니스의 이름으로 속성 메서드 또는 데이터를 삭제 하는 함수 개체 및에 필요한 매개 변수를 포함할는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-182">Set the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property to the name of the business object method or function that deletes data, and include any necessary parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection.</span></span>|  
|<span data-ttu-id="2f101-183">삽입</span><span class="sxs-lookup"><span data-stu-id="2f101-183">Inserting</span></span>|<span data-ttu-id="2f101-184">설정 된 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 비즈니스의 이름으로 속성 메서드 또는 데이터를 삽입 하는 함수 개체 및에 필요한 매개 변수를 포함할는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-184">Set the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property to the name of the business object method or function that inserts data, and include any necessary parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection.</span></span>|  
|<span data-ttu-id="2f101-185">캐싱</span><span class="sxs-lookup"><span data-stu-id="2f101-185">Caching</span></span>|<span data-ttu-id="2f101-186">설정 된 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> 속성을 `true`, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 캐시 된 데이터에 대해 원하는 캐싱 동작에 따라 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-186">Set the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property to `true`, and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> properties according to the caching behavior you want for your cached data.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="2f101-187">사용 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 데이터, 클라이언트에서 입력 된 문자열을 삽입 하거나 업데이트할 클래스는으로 자동 변환 되지 클라이언트 culture 형식에서 서버 문화권 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-187">When you use the <xref:System.Web.UI.WebControls.ObjectDataSource> class to update or insert data, strings that are entered at the client are not automatically converted from the client culture format to the server culture format.</span></span> <span data-ttu-id="2f101-188">예를 들어, 클라이언트 culture의 날짜 형식으로 DD/MM/YYYY를 지정할 수 있습니다 및 서버에서의 날짜 형식은 MM/DD/YYYY를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-188">For example, the client culture might specify DD/MM/YYYY as the date format, and the date format on the server might be MM/DD/YYYY.</span></span> <span data-ttu-id="2f101-189">이런 경우 2009 년 10 월 5 일은에 입력을 <xref:System.Web.UI.WebControls.TextBox> 2009 년 5 월 10으로 제어 하지만 2009 년 5 월 10 일으로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-189">In that case, October 5, 2009 would be entered in a <xref:System.Web.UI.WebControls.TextBox> control as 5/10/2009 but would be interpreted as May 10, 2009.</span></span> <span data-ttu-id="2f101-190">2009 년 10 월 15 일은 15/10/2009을 입력 하 고 잘못 된 날짜로 거부 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-190">October 15, 2009 would be entered as 15/10/2009, and would be rejected as an invalid date.</span></span>  
  
<a name="data_view"></a>   
## <a name="data-view"></a><span data-ttu-id="2f101-191">데이터 뷰</span><span class="sxs-lookup"><span data-stu-id="2f101-191">Data View</span></span>  
 <span data-ttu-id="2f101-192">모든 데이터 소스 컨트롤과 마찬가지로 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 데이터 소스 뷰 클래스와 연결 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-192">As with all data source controls, the <xref:System.Web.UI.WebControls.ObjectDataSource> control is associated with a data source view class.</span></span> <span data-ttu-id="2f101-193">동안 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤은 데이터를 사용 하는 데 사용 하는 페이지 개발자는 인터페이스를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스는 데이터 바인딩된 컨트롤을 사용 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-193">While the <xref:System.Web.UI.WebControls.ObjectDataSource> control is the interface that the page developer uses to work with data, the <xref:System.Web.UI.WebControls.ObjectDataSourceView> class is the interface that data-bound controls work with.</span></span> <span data-ttu-id="2f101-194">또한는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스는 데이터 소스 컨트롤의 기능을 설명 하 고 실제 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-194">Additionally, the <xref:System.Web.UI.WebControls.ObjectDataSourceView> class describes the capabilities of the data source control, and performs the actual work.</span></span> <span data-ttu-id="2f101-195"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에 연결 된 하나만 <xref:System.Web.UI.WebControls.ObjectDataSourceView>, 이름은 항상 및 `DefaultView`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-195">The <xref:System.Web.UI.WebControls.ObjectDataSource> control has only one associated <xref:System.Web.UI.WebControls.ObjectDataSourceView>, and it is always named `DefaultView`.</span></span> <span data-ttu-id="2f101-196">하는 동안 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> 메서드를 다양 한 해당 속성과 메서드에 래핑되고에서 직접 노출 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-196">While the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object is exposed by the <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> method, many of its properties and methods are wrapped and exposed directly by the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-197">내부적으로 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체 검색, 삽입, 업데이트, 삭제, 필터링 및 데이터 정렬 등의 모든 데이터 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-197">Behind the scenes, the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object performs all data operations, including retrieving, inserting, updating, deleting, filtering, and sorting the data.</span></span> <span data-ttu-id="2f101-198">자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2f101-198">For more information, see <xref:System.Web.UI.WebControls.ObjectDataSourceView>.</span></span>  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a><span data-ttu-id="2f101-199">LINQ to SQL 사용</span><span class="sxs-lookup"><span data-stu-id="2f101-199">Using LINQ to SQL</span></span>  
 <span data-ttu-id="2f101-200">사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> LINQ to SQL 클래스를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-200">You can use the <xref:System.Web.UI.WebControls.ObjectDataSource> control with a LINQ to SQL class.</span></span> <span data-ttu-id="2f101-201">그렇게 하려면 설정의 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성을 데이터 컨텍스트 클래스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-201">To do so, you set the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property to the name of the data-context class.</span></span> <span data-ttu-id="2f101-202">설정할 수도 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>를 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 해당 작업을 수행 하는 데이터 컨텍스트 클래스의 메서드에 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-202">You also set the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, and <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> methods to the methods in the data-context class that perform the corresponding operations.</span></span> <span data-ttu-id="2f101-203">에 대 한 이벤트 처리기를 만들어야 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 데이터 컨텍스트 클래스의 삭제를 취소 하기 위해 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-203">You must create an event handler for the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event in order to cancel disposing of the data-context class.</span></span> <span data-ttu-id="2f101-204">이 단계는 필요한 LINQ to SQL에서는 지연 된 실행을 지원 하기 때문에 반면는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 선택 작업 후 데이터 컨텍스트를 삭제 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-204">This step is necessary because LINQ to SQL supports deferred execution, whereas the <xref:System.Web.UI.WebControls.ObjectDataSource> control tries to dispose the data context after the Select operation.</span></span> <span data-ttu-id="2f101-205">LINQ to SQL 클래스 만들기 방법에 대 한 자세한 내용은 참조 하세요. [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-205">For more information about how to create LINQ to SQL classes, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span> <span data-ttu-id="2f101-206">데이터 컨텍스트 클래스의 삭제를 취소 하는 방법의 예 참조는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-206">For an example of how to cancel the disposing of a data context class, see the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event.</span></span>  
  
## <a name="using-the-entity-framework"></a><span data-ttu-id="2f101-207">Entity Framework를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-207">Using the Entity Framework</span></span>  
 <span data-ttu-id="2f101-208">사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> Entity Framework를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-208">You can also use the <xref:System.Web.UI.WebControls.ObjectDataSource> control with the Entity Framework.</span></span> <span data-ttu-id="2f101-209">자세한 내용은 [Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여](https://go.microsoft.com/fwlink/?LinkId=209117)입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-209">For more information, see [Using the Entity Framework and the ObjectDataSource Control](https://go.microsoft.com/fwlink/?LinkId=209117).</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="2f101-210">선언 구문</span><span class="sxs-lookup"><span data-stu-id="2f101-210">Declarative Syntax</span></span>  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 <span data-ttu-id="2f101-211">소스 코드를 사용 하 여 Visual Studio 웹 사이트 프로젝트는 다음이 항목과 함께 사용할 수 있습니다: [다운로드](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-211">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).</span></span>  
  
 <span data-ttu-id="2f101-212">이 섹션에서는 <xref:System.Web.UI.WebControls.ObjectDataSource> 태그는.aspx에서 페이지 표시에서 작동 하는 비즈니스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-212">This section shows an <xref:System.Web.UI.WebControls.ObjectDataSource> in markup in an .aspx page and it shows the business objects that it works with.</span></span> <span data-ttu-id="2f101-213">이 예제에서는.aspx 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-213">The example is the .aspx page.</span></span> <span data-ttu-id="2f101-214">포함을 <xref:System.Web.UI.WebControls.GridView> 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-214">It contains a <xref:System.Web.UI.WebControls.GridView> control that is bound to an <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-215"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 태그 지정 비즈니스 개체의 이름 및 데이터를 검색 하기 위해 호출할 비즈니스 개체 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-215">The <xref:System.Web.UI.WebControls.ObjectDataSource> control markup specifies the name of the business object and the name of the business object method to call in order to retrieve data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 <span data-ttu-id="2f101-216">다음 예에서는 비즈니스 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> .aspx 페이지에서 컨트롤을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-216">The following example shows the business object that the <xref:System.Web.UI.WebControls.ObjectDataSource> control in the .aspx page uses.</span></span> <span data-ttu-id="2f101-217">(다른 많은 <xref:System.Web.UI.WebControls.ObjectDataSource> 코드 예제도이 비즈니스 개체를 사용 합니다.) 이 예제에서는 다음 두 개의 기본 클래스로 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-217">(Many other <xref:System.Web.UI.WebControls.ObjectDataSource> code examples use this business object also.) The example consists of the following two basic classes:</span></span>  
  
-   <span data-ttu-id="2f101-218">합니다 `EmployeeLogic` 클래스는 비즈니스 논리 클래스는 <xref:System.Web.UI.WebControls.ObjectDataSource> 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-218">The `EmployeeLogic` class is the business logic class that the <xref:System.Web.UI.WebControls.ObjectDataSource> uses.</span></span>  
  
-   <span data-ttu-id="2f101-219">`NorthwindEmployee` 클래스에서 반환 되는 데이터 개체를 정의 합니다 `GetAllEmployees` 메서드를 `EmployeeLogic` 클래스.</span><span class="sxs-lookup"><span data-stu-id="2f101-219">The `NorthwindEmployee` class defines the data object that is returned by the `GetAllEmployees` method of the `EmployeeLogic` class.</span></span>  
  
 <span data-ttu-id="2f101-220">추가 `NorthwindDataException` 클래스는 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-220">An additional `NorthwindDataException` class is provided as a convenience.</span></span>  
  
 <span data-ttu-id="2f101-221">이 예제에서는 클래스이 집합을 Microsoft SQL Server 및 Microsoft Access를 사용 하 여 사용할 수 있는 여 Northwind 데이터베이스를 사용 하 여 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-221">This set of example classes works with the Northwind Traders database, which is available with Microsoft SQL Server and Microsoft Access.</span></span> <span data-ttu-id="2f101-222">전체 작업 예제를 컴파일 및 제공 되는.aspx 페이지 예제를 사용 하 여 이러한 클래스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-222">For a complete working example, you must compile and use these classes with the .aspx page example that is provided.</span></span> <span data-ttu-id="2f101-223">Northwind 데이터베이스를 설치 하는 방법에 대 한 정보를 참조 하세요 [방법: 샘플 데이터베이스 설치](https://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-223">For information about how to install the Northwind Traders database, see [How to: Install Sample Databases](https://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea"><span data-ttu-id="2f101-224">연습: 데이터를 사용자 지정 비즈니스 개체에 바인딩</span><span class="sxs-lookup"><span data-stu-id="2f101-224">Walkthrough: Data Binding to a Custom Business Object</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-225">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-225">Data Source Web Server Controls</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-226">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-226">ObjectDataSource Control Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-227">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-227">Creating an ObjectDataSource Control Source Object</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011"><span data-ttu-id="2f101-228">Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-228">Using the Entity Framework and the ObjectDataSource Control</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f101-229"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-229">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-230">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-230">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-231">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-231">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-232">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-232">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f101-233"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-233">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-234">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-234">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-235">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-235">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-236">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-236">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="2f101-237"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />와 작동하는 클래스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-237">The name of the class that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> works with.</span></span></param>
        <param name="selectMethod"><span data-ttu-id="2f101-238"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />가 데이터를 검색하기 위해 호출하는 메서드 또는 함수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-238">The name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> invokes to retrieve data.</span></span></param>
        <summary><span data-ttu-id="2f101-239">지정된 형식 이름과 데이터 검색 메서드 이름을 사용하여 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-239">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> class with the specified type name and data retrieval method name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-240">값을 `typeName` Bin 디렉터리나 App_Code 디렉터리에서에 있는 코드는 부분적으로 정규화 된 형식 또는 전역 어셈블리 캐시에 등록 되어 있는 코드에 대 한 정규화 된 형식 이름을 매개 변수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-240">The value of the `typeName` parameter can be a partially qualified type for code that is located in the Bin or App_Code directory or a fully qualified type name for code that is registered in the global assembly cache.</span></span> <span data-ttu-id="2f101-241">전역 어셈블리 캐시를 사용 하는 경우에 대 한 적절 한 참조를 추가 해야 합니다는 `assemblies` 합니다 Machine.config 또는 Web.config 구성 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-241">If you use the global assembly cache, you must add the appropriate reference to the `assemblies` section of the Machine.config or Web.config configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-242">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-242">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-243">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-243">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-244">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-244">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-245"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 속성으로 검색된 데이터를 데이터 소스 컨트롤에서 캐시하는 시간(초)을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-245">Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> property.</span></span></summary>
        <value><span data-ttu-id="2f101-246"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 속성 호출의 결과를 캐시하는 시간(초)입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-246">The number of seconds that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> caches the results of a <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> property invocation.</span></span> <span data-ttu-id="2f101-247">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-247">The default is 0.</span></span> <span data-ttu-id="2f101-248">값은 음수일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-248">The value cannot be negative.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-249"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-249">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports data caching.</span></span> <span data-ttu-id="2f101-250">데이터 캐시 되어 있는 동안에 호출을 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드 검색 데이터 캐시에서 아닌 비즈니스 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource> 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-250">While data is cached, calls to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method retrieve data from the cache rather than from the business object that the <xref:System.Web.UI.WebControls.ObjectDataSource> works with.</span></span> <span data-ttu-id="2f101-251">캐시가 만료 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드는 비즈니스 개체에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-251">When the cache expires, the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method retrieves data from the business object, and then caches the data again.</span></span>  
  
 <span data-ttu-id="2f101-252"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> 속성이 `true` 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성 캐시에 캐시 엔트리 이전의 데이터가 저장 되는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-252">The <xref:System.Web.UI.WebControls.ObjectDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</span></span> <span data-ttu-id="2f101-253">값이 0 무한정 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-253">A value of 0 indicates an infinitely long cache.</span></span>  
  
 <span data-ttu-id="2f101-254">캐시 기간을 결합 하 여 규제 되 고 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-254">The cache is regulated by a combination of the duration and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> setting.</span></span> <span data-ttu-id="2f101-255">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성이 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 값을 <xref:System.Web.UI.WebControls.ObjectDataSource> 첫 번째 호출에서 데이터를 캐시는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드 최대 시간으로 지정 된 기간 동안 메모리에 보관 하 고는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-255">If the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> value, the <xref:System.Web.UI.WebControls.ObjectDataSource> caches data on the first call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method and holds it in memory for, at most, the amount of time that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property.</span></span> <span data-ttu-id="2f101-256">메모리가 필요한 경우 데이터를 기간, 이전 해제 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-256">The data might be released before the duration time, if the memory is needed.</span></span> <span data-ttu-id="2f101-257">다음 호출 하는 동안 캐시는 다음을 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-257">The cache is then refreshed during the next call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="2f101-258">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성이 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 값을 데이터 소스 컨트롤의 첫 번째 호출에서 데이터를 캐시 합니다를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드를 하지만 이후 각 호출의 캐시를 보관 하는 기간을 다시 설정는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-258">If the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> property is set to <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> value, the data source control caches data on the first call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method, but resets the time window for which it holds the cache on each subsequent call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="2f101-259">해당 시간 동안 활동이 없는 경우 캐시가 만료 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성에 대 한 마지막 호출 이후를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-259">The cache expires if there is no activity for a time that is equal to the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property since the last call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-260">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-260">This section contains two code examples.</span></span> <span data-ttu-id="2f101-261">첫 번째 코드 예제에서는 어떻게는 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체에서 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-261">The first code example demonstrates how an <xref:System.Web.UI.WebControls.ObjectDataSource> object supports caching.</span></span> <span data-ttu-id="2f101-262">두 번째 코드 예제에는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <xref:System.Data.DataSet> 캐싱을 사용 하도록 설정 하는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-262">The second code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching with an <xref:System.Web.UI.WebControls.ObjectDataSource> object.</span></span>  
  
 <span data-ttu-id="2f101-263">다음 코드 예제에서는 어떻게는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-263">The following code example demonstrates how an <xref:System.Web.UI.WebControls.ObjectDataSource> control supports caching.</span></span> <span data-ttu-id="2f101-264">캐싱을 사용 하도록 설정, 식별 된 데이터를 검색 하는 메서드를 구현 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성으로 데이터를 반환 하는 <xref:System.Data.DataSet> 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-264">To enable caching, you must implement the method that retrieves data, which is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, to return the data as a <xref:System.Data.DataSet> object.</span></span> <span data-ttu-id="2f101-265">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> 속성이 `true`, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성이 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-265">In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true`, and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> properties are set.</span></span> <span data-ttu-id="2f101-266">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 에서 반환 되는 데이터를 캐시 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 30 초에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-266">The <xref:System.Web.UI.WebControls.ObjectDataSource> caches data that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property for 30 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 <span data-ttu-id="2f101-267">다음 코드 예제에는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <xref:System.Data.DataSet> 캐싱을 사용 하도록 설정 하는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-267">The following code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching with an <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-268">기본 구현에서 합니다 `EmployeeLogic` 클래스를 `GetAllEmployees` 메서드가 반환 되는 <xref:System.Collections.ArrayList> 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-268">In the base implementation of the `EmployeeLogic` class, the `GetAllEmployees` method returns an <xref:System.Collections.ArrayList> object.</span></span> <span data-ttu-id="2f101-269">완전히 사용 하려면 개체를 리팩터링 하는 대신를 <xref:System.Web.UI.WebControls.ObjectDataSource> 래퍼 메서드 라는 Web Forms 페이지에서 `GetAllEmployeesAsDataSet` 집합을 반환 하는 항목이 `NorthwindEmployee` 데이터를 <xref:System.Data.DataSet>입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-269">Instead of refactoring the object completely to work with the <xref:System.Web.UI.WebControls.ObjectDataSource> on a Web Forms page, a wrapper method named `GetAllEmployeesAsDataSet` is added that returns a set of `NorthwindEmployee` data as a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="2f101-270">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-270">This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ObjectDataSource> class.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-271">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-271">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-272">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-272">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-273">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-273">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-274">기간과 결합될 때 데이터 소스 컨트롤에서 사용하는 캐시의 동작을 설명하는 캐시 만료 동작을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-274">Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</span></span></summary>
        <value><span data-ttu-id="2f101-275"><see cref="T:System.Web.UI.DataSourceCacheExpiry" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-275">One of the <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> values.</span></span> <span data-ttu-id="2f101-276">기본값은 <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-276">The default is <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-277"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-277">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports data caching.</span></span> <span data-ttu-id="2f101-278">데이터 캐시 되어 있는 동안에 호출을 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드 검색 데이터 캐시에서 아닌 비즈니스 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource> 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-278">While data is cached, calls to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method retrieve data from the cache rather than from the business object that the <xref:System.Web.UI.WebControls.ObjectDataSource> works with.</span></span> <span data-ttu-id="2f101-279">캐시가 만료 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드는 비즈니스 개체에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-279">When the cache expires, the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method retrieves data from the business object, and then caches the data again.</span></span>  
  
 <span data-ttu-id="2f101-280"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> 속성이 `true` 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성 캐시에 캐시 엔트리 이전의 데이터가 저장 되는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-280">The <xref:System.Web.UI.WebControls.ObjectDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</span></span> <span data-ttu-id="2f101-281">값이 0 무한정 캐시 기간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-281">A value of 0 indicates an infinitely long cache period.</span></span>  
  
 <span data-ttu-id="2f101-282">캐시 기간을 결합 하 여 규제 되 고 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-282">The cache is regulated by a combination of the duration and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> setting.</span></span> <span data-ttu-id="2f101-283">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성이 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 값을 <xref:System.Web.UI.WebControls.ObjectDataSource> 첫 번째 호출에서 데이터를 캐시는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드 최대 시간으로 지정 된 기간 동안 메모리에 보관 하 고는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-283">If the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> value, the <xref:System.Web.UI.WebControls.ObjectDataSource> caches data on the first call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method and holds it in memory for, at most, the amount of time that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property.</span></span> <span data-ttu-id="2f101-284">메모리가 필요한 경우 데이터를 기간, 이전 해제 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-284">The data might be released before the duration time, if the memory is needed.</span></span> <span data-ttu-id="2f101-285">다음 호출 하는 동안 캐시는 다음을 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-285">The cache is then refreshed during the next call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="2f101-286">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 값을 데이터 소스 컨트롤의 첫 번째 호출에서 데이터를 캐시 합니다를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드, 하지만 이후 각 호출에 대 한 캐시를 보관 하는 기간을 다시 설정는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-286">If the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> value, the data source control caches data on the first call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method, but resets the time window for which it holds the cache for each subsequent call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="2f101-287">해당 시간 동안 활동이 없는 경우 캐시가 만료 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성에 대 한 마지막 호출 이후를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-287">The cache expires if there is no activity for a time that is equal to the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property since the last call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-288">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-288">This section contains two code examples.</span></span> <span data-ttu-id="2f101-289">첫 번째 코드 예제에서는 어떻게는 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체 필터링 및 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-289">The first code example demonstrates how an <xref:System.Web.UI.WebControls.ObjectDataSource> object supports filtering and caching.</span></span> <span data-ttu-id="2f101-290">두 번째 코드 예제에는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <xref:System.Data.DataSet> 캐싱 및 필터링을 사용 하는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-290">The second code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching and filtering with an <xref:System.Web.UI.WebControls.ObjectDataSource> object.</span></span>  
  
 <span data-ttu-id="2f101-291">다음 코드 예제에서는 어떻게는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 필터링 및 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-291">The following code example demonstrates how an <xref:System.Web.UI.WebControls.ObjectDataSource> control supports filtering and caching.</span></span> <span data-ttu-id="2f101-292">필터링 및 캐시를 사용 하 여 식별 되는 데이터를 검색 하는 메서드를 구현 해야 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에 데이터를 반환 하는 <xref:System.Data.DataSet> 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-292">To enable filtering and caching, you must implement the method that retrieves data, which is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, to return the data as a <xref:System.Data.DataSet> object.</span></span> <span data-ttu-id="2f101-293">이 예제에서는 캐싱이 설정 되어 있으므로 `EmployeeLogic` 개체에 데이터를 반환 합니다는 <xref:System.Data.DataSet>, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> 속성이로 설정 되어 `true`, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성이 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-293">In this example, caching is enabled because the `EmployeeLogic` object returns data as a <xref:System.Data.DataSet>, the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true`, and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> properties are set.</span></span> <span data-ttu-id="2f101-294">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 에서 반환 되는 데이터를 캐시 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 30 초에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-294">The <xref:System.Web.UI.WebControls.ObjectDataSource> caches data that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property for 30 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 <span data-ttu-id="2f101-295">다음 코드 예제에는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <xref:System.Data.DataSet> 캐싱 및 필터링을 사용 하는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-295">The following code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching and filtering with an <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-296">기본 구현에서 합니다 `EmployeeLogic` 클래스를 `GetAllEmployees` 메서드가 반환 되는 <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="2f101-296">In the base implementation of the `EmployeeLogic` class, the `GetAllEmployees` method returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="2f101-297">완전히 사용 하려면 개체를 리팩터링 하는 대신를 <xref:System.Web.UI.WebControls.ObjectDataSource> 래퍼 메서드 라는 Web Forms 페이지에서 `GetAllEmployeesAsDataSet` 집합을 반환 하는 항목이 `NorthwindEmployee` 데이터를 <xref:System.Data.DataSet>입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-297">Instead of refactoring the object completely to work with the <xref:System.Web.UI.WebControls.ObjectDataSource> on a Web Forms page, a wrapper method named `GetAllEmployeesAsDataSet` is added that returns a set of `NorthwindEmployee` data as a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="2f101-298">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-298">This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ObjectDataSource> class.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-299">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-299">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-300">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-300">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-301">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-301">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-302">데이터 소스 컨트롤에서 만든 모든 데이터 캐시 개체에 링크된 사용자 정의 키 종속성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-302">Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control.</span></span></summary>
        <value><span data-ttu-id="2f101-303"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 만든 모든 캐시 개체를 식별하는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-303">A key that identifies all cache objects created by the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-304"><xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 임의의 문자열 값으로 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-304">The <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> property can be set to any arbitrary string value.</span></span>  
  
 <span data-ttu-id="2f101-305">이 키가 만료되면 모든 캐시 개체도 명시적으로 만료됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-305">All cache objects are explicitly expired when the key is expired.</span></span> <span data-ttu-id="2f101-306">이렇게 하면 하 여 만든 캐시 항목이 무효화 될 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> 고유한 페이지 코드에서 프로그래밍 방식으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-306">This allows you to invalidate cache entries that are created by the <xref:System.Web.UI.WebControls.ObjectDataSource> from your own page code programmatically.</span></span>  
  
 <span data-ttu-id="2f101-307"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-307">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports data caching.</span></span> <span data-ttu-id="2f101-308">데이터 캐시 되어 있는 동안에 호출을 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드 검색 데이터 캐시에서 아닌 비즈니스 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource> 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-308">While data is cached, calls to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method retrieve data from the cache rather than from the business object that the <xref:System.Web.UI.WebControls.ObjectDataSource> works with.</span></span> <span data-ttu-id="2f101-309">캐시가 만료 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드는 비즈니스 개체에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-309">When the cache expires, the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method retrieves data from the business object, and then caches the data again.</span></span>  
  
 <span data-ttu-id="2f101-310"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> 속성이 `true` 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성 캐시에 캐시 엔트리 이전의 데이터가 저장 되는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-310">The <xref:System.Web.UI.WebControls.ObjectDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</span></span> <span data-ttu-id="2f101-311">값이 0 무한정 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-311">A value of 0 indicates an infinitely long cache.</span></span>  
  
 <span data-ttu-id="2f101-312">설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 속성에서 만든 모든 캐시 항목 간의 종속성을 만들려면는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤과 키입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-312">You can set the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> property to create a dependency between all cache entries that are created by the <xref:System.Web.UI.WebControls.ObjectDataSource> control and the key.</span></span> <span data-ttu-id="2f101-313">하면 만료 될 수 있습니다 모든 캐시 항목을 프로그래밍 방식으로 언제 든 지 키를 만료 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-313">You can expire all the cache entries programmatically at any time by expiring the key.</span></span> <span data-ttu-id="2f101-314">키를 사용 하 여 만료 합니다 <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> 메서드는 현재 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 매개 변수로 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-314">Expire the key by using the <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> method with the current <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> value as the parameter.</span></span>  
  
 <span data-ttu-id="2f101-315">모든 조합에 대 한 고유 캐시 엔트리 만들어집니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-315">A unique cache entry is created for every combination of the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, and <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> properties.</span></span> <span data-ttu-id="2f101-316">여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 같은 캐시 엔트리 시나리오에서 사용할 수 있는 동일한 형식, 메서드 및 매개 변수를 사용 하 여 데이터 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-316">Multiple <xref:System.Web.UI.WebControls.ObjectDataSource> controls can use the same cache entries in scenarios where they load data using the same type, method, and parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-317">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 Northwind 데이터베이스의 Employees 테이블에서 레코드를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-317">The following three examples show a Web page, a code-behind page class, and a data-access class that retrieve records from the Employees table in the Northwind database.</span></span>  
  
 <span data-ttu-id="2f101-318">첫 번째 예제 두 개가 포함 된 웹 페이지를 보여 줍니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-318">The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2f101-319">첫 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DropDownList> 검색 하 고 데이터베이스에서 직원 이름이 표시 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-319">The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database.</span></span> <span data-ttu-id="2f101-320">두 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 검색 하 고 사용자가 선택한 직원 레코드를 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-320">The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve and display the employee record that is selected by the user.</span></span>  
  
 <span data-ttu-id="2f101-321">캐싱을 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-321">Caching is enabled for the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-322">따라서 각 레코드는 한 번만 데이터베이스에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-322">Therefore, each record is retrieved only one time from the database.</span></span> <span data-ttu-id="2f101-323"><xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> "EmployeeDetails" 속성이 있지만 임의의 문자열 값을 키로 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-323">The <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> property is set to "EmployeeDetails", but any string value can work as the key.</span></span> <span data-ttu-id="2f101-324">웹 페이지도 포함 되어 있습니다를 <xref:System.Web.UI.WebControls.Button> 캐시 된 데이터를 만료 하기 위해 클릭할 수 있는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-324">The Web page also includes a <xref:System.Web.UI.WebControls.Button> control that the user can click to expire the cached data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 <span data-ttu-id="2f101-325">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <xref:System.Web.UI.Control.Load> 이벤트 및 처리기는 <xref:System.Web.UI.WebControls.Button.Click> 의 이벤트는 <xref:System.Web.UI.WebControls.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-325">The second example shows a handler for the <xref:System.Web.UI.Control.Load> event and a handler for the <xref:System.Web.UI.WebControls.Button.Click> event of the <xref:System.Web.UI.WebControls.Button> control.</span></span> <span data-ttu-id="2f101-326">합니다 <xref:System.Web.UI.Control.Load> 이벤트 처리기로 키를 사용 하 여 캐시 항목을 만듭니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-326">The <xref:System.Web.UI.Control.Load> event handler creates a cache item with a key set to the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> value.</span></span> <span data-ttu-id="2f101-327">합니다 <xref:System.Web.UI.WebControls.Button.Click> 키가 같은 캐시 항목을 제거 하는 이벤트 처리기는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-327">The <xref:System.Web.UI.WebControls.Button.Click> event handler removes the cache item whose key is equal to the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> value.</span></span> <span data-ttu-id="2f101-328">캐시 항목이 제거 되 면 키에 종속 된 모든 캐시 된 데이터가 만료 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-328">When the cache item is removed, all the cached data that is dependent on the key is expired.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 <span data-ttu-id="2f101-329">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-329">The third example shows the data access class that interacts with the Northwind database.</span></span> <span data-ttu-id="2f101-330">클래스는 LINQ를 사용 하 여 직원 테이블을 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-330">The class uses LINQ to query the Employees table.</span></span> <span data-ttu-id="2f101-331">이 예제에서는 LINQ to SQL 클래스는 Northwind 데이터베이스를 나타내고 Employees 테이블에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-331">The example requires a LINQ to SQL class that represents the Northwind database and the Employees table.</span></span> <span data-ttu-id="2f101-332">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-332">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-333">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-333">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-334">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-334">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-335">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-335">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-336">새 값만 <see langword="Update" /> 메서드에 전달되는지 아니면 기존 값과 새 값이 모두 <see langword="Update" /> 메서드에 전달되는지를 확인하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-336">Gets or sets a value that determines whether or not just the new values are passed to the <see langword="Update" /> method or both the old and new values are passed to the <see langword="Update" /> method.</span></span></summary>
        <value><span data-ttu-id="2f101-337"><see cref="T:System.Web.UI.ConflictOptions" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-337">One of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span></span> <span data-ttu-id="2f101-338">기본값은 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-338">The default is <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-339">이 속성으로 지정한 메서드의 매개 변수 값 이전 및 새 값에 대 한 적용 되었는지 여부를 결정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-339">This property determines whether parameters for old and new values are applied to the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property.</span></span> <span data-ttu-id="2f101-340">예를 들어 메서드는 지정 된를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 반환을 <xref:System.Data.DataTable> 열을 사용 하 여 컨트롤 `Name` 및 `Number`, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> 속성는 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 필드, 매개 변수는에 대 한 생성 `Name` 하 고 `Number` 에 대 한는 `Update` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-340">For example, if the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property returns a <xref:System.Data.DataTable> control with the columns `Name` and `Number`, and the <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.OverwriteChanges> field, parameters are created for `Name` and `Number` for the `Update` method.</span></span> <span data-ttu-id="2f101-341">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 에 대 한 매개 변수는 생성 값 `Name`, `Number`, `original_Name`, 및 `original_Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-341">If the <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`.</span></span> <span data-ttu-id="2f101-342">(원래 값에 대 한 정확한 매개 변수 이름에 따라 달라 집니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> 속성입니다.) 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 다음 여부를 확인 메서드는에 지정 된는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성이 일치 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-342">(The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> property.) The <xref:System.Web.UI.WebControls.ObjectDataSource> then determines whether the method that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property has parameters that match.</span></span>  
  
 <span data-ttu-id="2f101-343">동시성 제어에는 데이터는 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 하는 방법을 제어 하려면 데이터 저장소를 사용 하는 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-343">Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="2f101-344">예를 들어, 하나의 클라이언트 데이터를 읽고 다른 클라이언트가 동일한 데이터를 읽고 다른 사용자에 게 제공 하는 동안 사용자에 게 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-344">For example, one client reads data and presents it to a user, while another client reads the same data and presents it to a different user.</span></span> <span data-ttu-id="2f101-345">두 사용자가 데이터를 업데이트하여 데이터 스토리지에 제출하는 경우 두 클라이언트가 동일한 데이터에 대해 다른 값을 제공할 수 있으므로 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-345">If both users update the data and submit it to the data storage, an unexpected result might occur, because both clients might provide different values for the same data.</span></span> <span data-ttu-id="2f101-346">이 충돌로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-346">This is considered a conflict.</span></span> <span data-ttu-id="2f101-347">설정 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> 속성을를 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값을 `Update` 메서드 수 충돌을 감지 하 고 필요에 따라 처리에 원래 데이터 원본에 이전 및 새 값을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-347">By setting the <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> property to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the `Update` method can then compare the old and new values to the original data source to detect conflicts and handle them as necessary.</span></span>  
  
 <span data-ttu-id="2f101-348"><xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-348">The <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-349">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-349">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-350">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-350">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-351">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-351">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-352">업데이트, 삽입 또는 삭제 작업에 전달되는 <see cref="T:System.Web.UI.WebControls.Parameter" /> 값이 <see cref="F:System.DBNull.Value" /> 컨트롤에 의해 <see langword="null" />에서 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 값으로 자동으로 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-352">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.Parameter" /> values that are passed to an update, insert, or delete operation are automatically converted from <see langword="null" /> to the <see cref="F:System.DBNull.Value" /> value by the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="2f101-353"><see cref="T:System.Web.UI.WebControls.Parameter" /> 컨트롤에 전달된 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 개체의 <see langword="true" /> 값이 자동으로 <see cref="F:System.DBNull.Value" /> 값으로 변환되면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-353"><see langword="true" />, if any <see langword="null" /> values in <see cref="T:System.Web.UI.WebControls.Parameter" /> objects passed to the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control are automatically converted to <see cref="F:System.DBNull.Value" /> values; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2f101-354">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-354">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-355">변환 하지 않았습니다 `null` 에 <xref:System.DBNull.Value> 값 런타임 시 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-355">Not converting `null` to the <xref:System.DBNull.Value> value can result in errors at run time.</span></span> <span data-ttu-id="2f101-356">사용 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> 나타내는 속성을 여부를 <xref:System.Web.UI.WebControls.Parameter> 에서 업데이트, 삽입 또는 삭제 작업에 전달 되는 값은 자동으로 변환 `null` 에 <xref:System.DBNull.Value> 값는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-356">Use the <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> property to indicate whether <xref:System.Web.UI.WebControls.Parameter> values that are passed to an update, insert, or delete operation are automatically converted from `null` to the <xref:System.DBNull.Value> value by the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-357">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-357">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-358">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-358">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-359">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-359">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-360">데이터 바인딩된 컨트롤의 개별 값을 전달하는 대신 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤에서 데이터 업데이트, 삽입 또는 삭제 작업의 매개 변수로 사용할 클래스의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-360">Gets or sets the name of a class that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control uses for a parameter in an update, insert, or delete data operation, instead of passing individual values from the data-bound control.</span></span></summary>
        <value><span data-ttu-id="2f101-361"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 또는 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 작업의 매개 변수로 사용할 수 있는 개체의 형식을 식별하는 정규화된 또는 부분적으로 정규화된 클래스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-361">A partially or fully qualified class name that identifies the type of the object that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can use as a parameter for an <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />, or a <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> operation.</span></span> <span data-ttu-id="2f101-362">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-362">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-363">에 전달 되는 여러 매개 변수를 지정 하는 대신 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드를 여러 데이터 필드 값을 집계 하는 하나의 개체를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-363">Instead of specifying several parameters that are passed to the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> methods, you can create one object that aggregates several data field values.</span></span> <span data-ttu-id="2f101-364">이 개체는 한 방법에 몇 가지 매개 변수 대신 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-364">This one object is passed to the methods, instead of several parameters.</span></span>  
  
 <span data-ttu-id="2f101-365">기본 동작을 <xref:System.Web.UI.WebControls.ObjectDataSource> 데이터 바인딩된 컨트롤에 바인딩되는 컨트롤은 데이터 바인딩된 컨트롤을 만듭니다는 <xref:System.Web.UI.WebControls.Parameter> 데이터 소스의 각 매개 변수에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-365">The default behavior of an <xref:System.Web.UI.WebControls.ObjectDataSource> control that is bound to a data-bound control is that the data-bound control creates a <xref:System.Web.UI.WebControls.Parameter> object for each parameter in the data source.</span></span> <span data-ttu-id="2f101-366">비즈니스 개체에 많은 필드가 있으면 결과 메서드에 많은 필드가 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-366">If the business object has many fields, the resulting method also has many fields.</span></span> <span data-ttu-id="2f101-367"><xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성을 사용 하면 각 데이터 필드에 대 한 속성을 갖는 형식에 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-367">The <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property allows you to specify a type that has a property for each data field.</span></span> <span data-ttu-id="2f101-368">그런 다음 여러 매개 변수를 메서드에 전달 하는 대신 런타임에 하나의 개체를 만들고 모든 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-368">Then, instead of passing several parameters to the method, the runtime creates one object and sets all of its properties.</span></span> <span data-ttu-id="2f101-369">이 개체는 메서드 호출에 대 한 매개 변수 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-369">This one object is added to the parameters collection for the method call.</span></span>  
  
 <span data-ttu-id="2f101-370">지정 된 형식을 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성 매개 변수가 있는 기본 생성자가 있어야 하므로 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 형식의 인스턴스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-370">The type that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property must have a default constructor that has no parameters, so the <xref:System.Web.UI.WebControls.ObjectDataSource> control can create an instance of the type.</span></span> <span data-ttu-id="2f101-371">형식에는 사용할 수 있는 속성을 설정할 수 있어야 합니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 데이터 바인딩된 컨트롤에서 전달 되는 값을 사용 하 여 개체를 채울 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-371">The type must also have settable properties that allow the <xref:System.Web.UI.WebControls.ObjectDataSource> control to populate the object with values that are passed from the data-bound control.</span></span> <span data-ttu-id="2f101-372">속성 이름이 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터 바인딩된 컨트롤에 의해 전달 되는 값의 매개 변수 이름과 정확히 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-372">The property names on the <xref:System.Web.UI.WebControls.ObjectDataSource> control are expected to exactly match the parameter names of values that are passed by the data-bound control.</span></span>  
  
 <span data-ttu-id="2f101-373">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성을 설정 및 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤은 데이터 바인딩된 컨트롤에서 지정 된 메서드를 사용 하 여 연결 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 각각 한 개의 매개 변수만 는에지정된형식의<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-373">When the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property is set and the <xref:System.Web.UI.WebControls.ObjectDataSource> control is associated with a data-bound control, the methods that are specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> and <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> properties must each have one parameter of the type that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-374">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 값을 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성에 지정 된 형식의 매개 변수 하나 있어야 합니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-374">If the <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.OverwriteChanges> value, the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property must have one parameter of the type that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-375">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값을 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성에 지정 된 형식의 두 매개 변수가 있어야 합니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-375">If the <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property must have two parameters of the type that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-376">원래 값을 포함 하는 첫 번째 매개 변수 두 번째 매개 변수 새 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-376">The first parameter contains the original values; the second parameter contains the new values.</span></span>  
  
 <span data-ttu-id="2f101-377"><xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-377">The <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-378">섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-378">The section contains two code examples.</span></span> <span data-ttu-id="2f101-379">첫 번째 코드 예제에는 모든 매개 변수 값을 하나 이상의 개체를 결합 하는 형식을 구현 하는 방법을 보여 줍니다.를 사용 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-379">The first code example demonstrates how to implement a type that combines all parameter values into one object, using the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-380">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 두 개의 클래스를 사용 하는 웹 페이지를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-380">The second code example shows the Web page that uses the two classes that are used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-381">다음 코드 예제에는 모든 매개 변수 값을 하나 이상의 개체를 결합 하는 형식을 구현 하는 방법을 보여 줍니다.를 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-381">The following code example demonstrates how to implement a type that combines all parameter values into one object, using the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-382">select 메서드를 `AggregateData` 반환 클래스를 <xref:System.Data.DataTable> 이라는 두 개의 열을 사용 하 여 개체 `Name` 및 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-382">The select method of the `AggregateData` class returns a <xref:System.Data.DataTable> object with two columns named `Name` and `Number`.</span></span> <span data-ttu-id="2f101-383">마찬가지로, 합니다 `NewData` 클래스에는 두 개의 읽기/쓰기 속성을 정의 `Name` 고 `Number`입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-383">Similarly, the `NewData` class defines two read/write properties, `Name` and `Number`.</span></span> <span data-ttu-id="2f101-384">합니다 `Insert` 메서드를 `AggregateData` 형식의 매개 변수 하나를 사용 하는 클래스가 `NewData`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-384">The `Insert` method of the `AggregateData` class takes one parameter of type `NewData`.</span></span> <span data-ttu-id="2f101-385">`TypeName` 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 로 설정 된 `AggregateData` 및 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성 `NewData`.</span><span class="sxs-lookup"><span data-stu-id="2f101-385">The `TypeName` property of the <xref:System.Web.UI.WebControls.ObjectDataSource> is set to `AggregateData` and the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property is set to `NewData`.</span></span>  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 <span data-ttu-id="2f101-386">다음 코드 예제에서는 앞의 코드 예제에 사용 되는 두 개의 클래스를 사용 하는 웹 페이지를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-386">The following code example shows the Web page that uses the two classes that are used in the preceding code example.</span></span>  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-387">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-387">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-388">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-388">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-389">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-389">Creating an ObjectDataSource Control Source Object</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4"><span data-ttu-id="2f101-390">ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-390">Using Parameters with the ObjectDataSource Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f101-391"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> 컬렉션의 매개 변수를 사용하여 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" /> 속성으로 식별되는 메서드를 호출하는 방식으로 삭제 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-391">Performs a delete operation by calling the method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> property with any parameters that are in the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2f101-392"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />의 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> 속성이 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> 이벤트에 설정되어 있으면 내부 데이터 스토리지에서 삭제된 행 수를 나타내는 값이며, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-392">A value that represents the number of rows deleted from the underlying data storage, if the <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> property of the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> is set in the <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> event; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-393">전에 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업을 수행할를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-393">Before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event.</span></span> <span data-ttu-id="2f101-394">처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 이벤트 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-394">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event to examine the values of the parameters and to perform any preprocessing before a <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation.</span></span> <span data-ttu-id="2f101-395">삭제 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 로 식별 되는 개체의 인스턴스를 만들 하기 위해는 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-395">To perform a delete operation, the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object uses reflection to create an instance of the object that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property.</span></span> <span data-ttu-id="2f101-396">다음으로 식별 되는 메서드를 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성에 연결 된 모든를 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-396">It then calls the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property, using any associated <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> properties.</span></span> <span data-ttu-id="2f101-397">매개 변수의 이름을 삭제 매개 변수를 연결된 된 데이터 바인딩된 컨트롤에서 가져오는, 경우에 따라 만들어집니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-397">If the deletion parameters come from an associated data-bound control, the name of the parameters is created according to the <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> property.</span></span> <span data-ttu-id="2f101-398">후는 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-398">After the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation completes, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event.</span></span> <span data-ttu-id="2f101-399">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 이벤트 모든 반환 값과 출력 매개 변수 예외를 검사 하 고 후 처리를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-399">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="2f101-400"><xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-400">The <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> method delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> method of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
## <a name="data-bound-controls"></a><span data-ttu-id="2f101-401">데이터 바인딩된 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-401">Data-Bound Controls</span></span>  
 <span data-ttu-id="2f101-402">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어와 같은 데이터 바인딩된 컨트롤을 사용 하 여 연결 된 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤 필요 없는 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 페이지 코드에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-402">When the <xref:System.Web.UI.WebControls.ObjectDataSource> control is associated with a data-bound control, such as the <xref:System.Web.UI.WebControls.GridView> control, it is not necessary to call the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> method from page code.</span></span> <span data-ttu-id="2f101-403"><xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드 대신 데이터 바인딩된 컨트롤에서 직접 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-403">The <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> method is invoked directly by the data-bound control instead.</span></span>  
  
 <span data-ttu-id="2f101-404">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-404">For more information about parameter merging, object lifetime, and method resolution, see <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-405">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-405">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-406">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-406">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-407">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-407">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-408"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 작업이 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-408">Occurs when a <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-409">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 반환 값 또는 출력 매개 변수의 값을 확인 하거나 후 예외가 throw 되었는지 여부를 확인 하려면 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업이 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-409">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after a <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed.</span></span> <span data-ttu-id="2f101-410">반환 값, 출력 매개 변수 및 예외 처리 속성에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-410">The return value, output parameters, and exception handling properties are available from the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2f101-411">사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 에서 삭제 된 행의 수를 반환 하는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-411">You can use the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> object to return the number of rows that were deleted from the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> method.</span></span> <span data-ttu-id="2f101-412">이 위해 설정 된 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-412">To do this, set the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> property.</span></span> <span data-ttu-id="2f101-413">삭제 된 행 수가 지정 된 메서드에서 반환 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 값은에서 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-413">If you return the number of deleted rows from the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property, the value is available from the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> object.</span></span>  
  
 <span data-ttu-id="2f101-414">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-414">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-415">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-415">This section contains two code examples.</span></span> <span data-ttu-id="2f101-416">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-416">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data.</span></span> <span data-ttu-id="2f101-417">두 번째 코드 예에서는 `EmployeeLogic` 첫 번째 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-417">The second code example shows the `EmployeeLogic` class that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-418">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-418">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data.</span></span> <span data-ttu-id="2f101-419">처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤 집합에 지정 된 메서드를 사용 하 여 모든 직원을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-419">Initially, the <xref:System.Web.UI.WebControls.GridView> control displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object.</span></span> <span data-ttu-id="2f101-420">때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-420">Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.</span></span>  
  
 <span data-ttu-id="2f101-421">클릭할 경우는 **삭제** 단추를 삭제 작업에 지정 된 메서드를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 및 지정 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-421">If you click the **Delete** button, the delete operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="2f101-422">이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-422">In this code example, some preprocessing and post-processing steps are also performed.</span></span> <span data-ttu-id="2f101-423">`NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 작업을 수행 하기 전에 이벤트 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 예외 처리를 수행 하는 작업이 완료 된 후 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-423">The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the operation is performed and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the operation has completed to perform exception handling.</span></span> <span data-ttu-id="2f101-424">이 코드 예제에서는 하는 경우는 `NorthwindDataException` 는 의해 처리 될 throw를 `NorthwindEmployeeDeleted` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-424">In this code example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindEmployeeDeleted` method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 <span data-ttu-id="2f101-425">다음 코드 예제는 `EmployeeLogic` 앞의 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-425">The following code example shows the `EmployeeLogic` class that is used in the preceding code example.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-426">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-426">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-427">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-427">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-428">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-428">Creating an ObjectDataSource Control Source Object</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011"><span data-ttu-id="2f101-429">Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-429">Using the Entity Framework and the ObjectDataSource Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-430"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤에서 데이터 삭제를 위해 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-430">Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control invokes to delete data.</span></span></summary>
        <value><span data-ttu-id="2f101-431"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 데이터를 삭제할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-431">A string that represents the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> uses to delete data.</span></span> <span data-ttu-id="2f101-432">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-432">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-433">비즈니스 개체는 한 번에 아닌 일괄 처리 데이터 하나의 레코드를 삭제로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-433">The business object is assumed to delete data one record at a time, rather than in a batch.</span></span>  
  
 <span data-ttu-id="2f101-434"><xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-434">The <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-435">매개 변수 이름에 대 한 구성 되었는지 확인 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 에서 제어를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션 select 메서드에 의해 반환 되는 열 이름과 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-435">Make sure that the parameter names configured for the <xref:System.Web.UI.WebControls.ObjectDataSource> control in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection match the column names that are returned by the select method.</span></span>  
  
## <a name="object-lifetime"></a><span data-ttu-id="2f101-436">개체 수명</span><span class="sxs-lookup"><span data-stu-id="2f101-436">Object Lifetime</span></span>  
 <span data-ttu-id="2f101-437">로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-437">The method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property can be an instance method or a `static` (`Shared` in Visual Basic) method.</span></span> <span data-ttu-id="2f101-438">비즈니스 개체가 만들어지고 제거 될 때마다 인스턴스 메서드인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-438">If it is an instance method, the business object is created and destroyed each time the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-439">처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 하기 전에 비즈니스 개체를 사용 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-439">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> events to work with the business object before the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-440">처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 후에 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-440">You can also handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event that is raised after the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-441">비즈니스 개체를 구현 하는 경우는 <xref:System.IDisposable> 인터페이스는 <xref:System.IDisposable.Dispose%2A> 개체를 제거 하기 전에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-441">If the business object implements the <xref:System.IDisposable> interface, the <xref:System.IDisposable.Dispose%2A> method is called before the object is destroyed.</span></span> <span data-ttu-id="2f101-442">메서드가 `static` (`Shared` Visual Basic의) 메서드를 비즈니스 개체가 생성 되지 않고 처리할 수 없는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-442">If the method is a `static` (`Shared` in Visual Basic) method, the business object is never created and you cannot handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> events.</span></span>  
  
## <a name="parameter-merging"></a><span data-ttu-id="2f101-443">병합 하는 매개 변수</span><span class="sxs-lookup"><span data-stu-id="2f101-443">Parameter Merging</span></span>  
 <span data-ttu-id="2f101-444">매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 다음 세 가지 소스의 컬렉션:</span><span class="sxs-lookup"><span data-stu-id="2f101-444">Parameters are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection from three sources:</span></span>  
  
-   <span data-ttu-id="2f101-445">런타임에 데이터 바인딩된 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-445">From the data-bound control, at run time.</span></span>  
  
-   <span data-ttu-id="2f101-446">`DeleteParameters` 요소를 선언적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-446">From the `DeleteParameters` element, declaratively.</span></span>  
  
-   <span data-ttu-id="2f101-447">`Deleting` 메서드를 선언적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-447">From the `Deleting` method, declaratively.</span></span>  
  
 <span data-ttu-id="2f101-448">데이터 바인딩된 컨트롤에서 생성 된 모든 매개 변수가 먼저 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-448">First, any parameters that are generated from data-bound controls are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="2f101-449">예를 들어 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 바인딩되는 <xref:System.Web.UI.WebControls.GridView> 열이 있는 컨트롤 `Name` 및 `Number`에 대 한 매개 변수 `Name` 및 `Number` 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-449">For example, if the <xref:System.Web.UI.WebControls.ObjectDataSource> control is bound to a <xref:System.Web.UI.WebControls.GridView> control that has the columns `Name` and `Number`, parameters for `Name` and `Number` are added to the collection.</span></span> <span data-ttu-id="2f101-450">매개 변수가의 정확한 이름은 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-450">The exact name of the parameter depends on the <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> property.</span></span> <span data-ttu-id="2f101-451">이러한 매개 변수의 데이터 형식은 `string`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-451">The data type of these parameters is `string`.</span></span> <span data-ttu-id="2f101-452">다음으로에 나와 있는 매개 변수는 `DeleteParameters` 요소가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-452">Next, the parameters that are listed in the `DeleteParameters` element are added.</span></span> <span data-ttu-id="2f101-453">경우에 매개 변수를 `DeleteParameters` 에 이미 있는 매개 변수로 동일한 이름을 가진 요소가 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 기존 매개 변수 컬렉션에 지정 된 매개 변수와 일치 하도록 수정 됩니다는 `DeleteParameters` 요소.</span><span class="sxs-lookup"><span data-stu-id="2f101-453">If a parameter in the `DeleteParameters` element is found with the same name as a parameter that is already in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection, the existing parameter is modified to match the parameter that is specified in the `DeleteParameters` element.</span></span> <span data-ttu-id="2f101-454">일반적으로이 매개 변수의 데이터 형식을 수정 하려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-454">Typically, this is used to modify the type of the data in the parameter.</span></span> <span data-ttu-id="2f101-455">마지막으로 프로그래밍 방식으로 추가 및 제거할 수의 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 하기 전에 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-455">Finally, you can programmatically add and remove parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event, which occurs before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> method is run.</span></span> <span data-ttu-id="2f101-456">메서드는 매개 변수를 병합 된 후 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-456">The method is resolved after the parameters are merged.</span></span> <span data-ttu-id="2f101-457">메서드 확인은 다음 섹션에 설명 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-457">Method resolution is discussed in the next section.</span></span>  
  
## <a name="method-resolution"></a><span data-ttu-id="2f101-458">메서드 확인</span><span class="sxs-lookup"><span data-stu-id="2f101-458">Method Resolution</span></span>  
 <span data-ttu-id="2f101-459">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드를 호출할 매개 변수에서 선언적으로 생성 된 데이터 바인딩된 컨트롤에서 데이터 필드를 `DeleteParameters` 요소 및에 추가 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 이벤트 처리기 모두 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-459">When the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the `DeleteParameters` element, and the parameters that were added in the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event handler are all merged.</span></span> <span data-ttu-id="2f101-460">(자세한 내용은 이전 섹션 참조). <xref:System.Web.UI.WebControls.ObjectDataSource> 개체 호출할 메서드를 찾으려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-460">(For more information, see the preceding section.) The <xref:System.Web.UI.WebControls.ObjectDataSource> object then attempts to find a method to call.</span></span> <span data-ttu-id="2f101-461">에 지정 된 이름 가진 하나 이상의 메서드를 찾습니다 먼저는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-461">First, it looks for one or more methods with the name that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property.</span></span> <span data-ttu-id="2f101-462">일치 하는 항목이 없으면는 <xref:System.InvalidOperationException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-462">If no match is found, an <xref:System.InvalidOperationException> exception is thrown.</span></span> <span data-ttu-id="2f101-463">일치 하는 항목이 있으면 매개 변수 이름과 일치 하는 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-463">If a match is found, it then looks for matching parameter names.</span></span> <span data-ttu-id="2f101-464">예를 들어 지정 된 형식 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성이 라는 두 개의 메서드도 `DeleteARecord`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-464">For example, suppose the type that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property has two methods named `DeleteARecord`.</span></span> <span data-ttu-id="2f101-465">하나의 `DeleteARecord` 하나의 매개 변수가 `ID`, 및 다른 `DeleteARecord` 두 매개 변수가 `Name` 및 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-465">One `DeleteARecord` has one parameter, `ID`, and the other `DeleteARecord` has two parameters, `Name` and `Number`.</span></span> <span data-ttu-id="2f101-466">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션에 명명 된 매개 변수만 `ID`의 `DeleteARecord` 메서드를만 `ID` 매개 변수 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-466">If the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection has only one parameter named `ID`, the `DeleteARecord` method with just the `ID` parameter is called.</span></span> <span data-ttu-id="2f101-467">메서드를 확인 하는 데 매개 변수의 형식을 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-467">The type of the parameter is not checked in resolving the methods.</span></span> <span data-ttu-id="2f101-468">매개 변수의 순서는 중요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-468">The order of the parameters does not matter.</span></span>  
  
 <span data-ttu-id="2f101-469">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성, 메서드를 다른 방식으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-469">If the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property is set, the method is resolved in a different way.</span></span> <span data-ttu-id="2f101-470"><xref:System.Web.UI.WebControls.ObjectDataSource> 에 지정 된 이름의 메서드를 찾습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 는 매개 변수 형식 중 하나를 사용 하는 속성에 지정 된 된 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-470">The <xref:System.Web.UI.WebControls.ObjectDataSource> looks for a method with the name that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property that takes one parameter of the type that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-471">이 경우 매개 변수의 이름을 중요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-471">In this case, the name of the parameter does not matter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-472">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-472">This section contains two code examples.</span></span> <span data-ttu-id="2f101-473">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-473">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data.</span></span> <span data-ttu-id="2f101-474">두 번째 코드 예에서는 `EmployeeLogic` 첫 번째 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-474">The second code example shows the `EmployeeLogic` class that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-475">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-475">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data.</span></span> <span data-ttu-id="2f101-476">처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤 집합에 지정 된 메서드를 사용 하 여 모든 직원을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-476">Initially, the <xref:System.Web.UI.WebControls.GridView> control displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object.</span></span> <span data-ttu-id="2f101-477">때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-477">Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.</span></span>  
  
 <span data-ttu-id="2f101-478">클릭할 경우는 **삭제** 단추를 삭제 작업에 지정 된 메서드를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 및 지정 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-478">If you click the **Delete** button, the delete operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="2f101-479">이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-479">In this code example, some preprocessing and post-processing steps are also performed.</span></span> <span data-ttu-id="2f101-480">`NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 작업을 수행 하려면 먼저 이벤트 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 예외 처리를 수행 하는 작업이 완료 된 후 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-480">The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the operation has completed to perform exception handling.</span></span> <span data-ttu-id="2f101-481">이 예제의 경우는 `NorthwindDataException` 는 의해 처리 될 throw는 `NorthwindDataException` 대리자.</span><span class="sxs-lookup"><span data-stu-id="2f101-481">In this example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindDataException` delegate.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 <span data-ttu-id="2f101-482">다음 코드 예제는 `EmployeeLogic` 앞의 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-482">The following code example shows the `EmployeeLogic` class that is used in the preceding code example.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-483">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-483">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-484">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-484">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-485">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-485">Creating an ObjectDataSource Control Source Object</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011"><span data-ttu-id="2f101-486">Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-486">Using the Entity Framework and the ObjectDataSource Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-487"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> 메서드에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-487">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> method.</span></span></summary>
        <value><span data-ttu-id="2f101-488"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 메서드에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-488">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-489">이름 및 형식에 포함 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션 이름 및 매개 변수 형식과 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 메서드 시그니처입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-489">The names and types of the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection must match the names and types of the parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> method signature.</span></span> <span data-ttu-id="2f101-490">매개 변수 이름은 영향을 받지는 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> 속성 및 대/소문자 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-490">The parameter names are affected by the <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> property and are case-sensitive.</span></span> <span data-ttu-id="2f101-491">컬렉션의 매개 변수는 데이터 바인딩된 컨트롤을 선언적으로 지정 된 매개 변수 및 프로그래밍 방식으로 추가 되는 매개 변수는 데이터에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-491">The parameters in the collection depend on the data that is in the data-bound control, the parameters that are specified declaratively, and the parameters that are added programmatically.</span></span> <span data-ttu-id="2f101-492">자세한 내용은 "매개 변수가 병합"의 참조 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 하 고 [ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-492">For more information, see "Parameter Merging" in <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> and [Using Parameters with the ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).</span></span>  
  
 <span data-ttu-id="2f101-493"><xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-493">The <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-494">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-494">For more information about parameter merging, object lifetime, and method resolution, see <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-495">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-495">This section contains two code examples.</span></span> <span data-ttu-id="2f101-496">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-496">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data.</span></span> <span data-ttu-id="2f101-497">두 번째 코드 예에서는 `EmployeeLogic` 첫 번째 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-497">The second code example shows the `EmployeeLogic` class that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-498">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 데이터를 삭제 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-498">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data.</span></span> <span data-ttu-id="2f101-499">처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤 집합에 지정 된 메서드를 사용 하 여 모든 직원을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-499">Initially, the <xref:System.Web.UI.WebControls.GridView> control displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object.</span></span> <span data-ttu-id="2f101-500">때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-500">Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.</span></span>  
  
 <span data-ttu-id="2f101-501">클릭할 경우 합니다 **삭제** 단추를 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 이벤트는 두 개의 매개 변수를 사용 하 여 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-501">If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event is called with two parameters.</span></span> <span data-ttu-id="2f101-502">하나의 매개 변수 `EmpID`에서 제공 되는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤을 기반으로 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-502">One parameter, `EmpID`, comes from the <xref:System.Web.UI.WebControls.DataGrid> control, and is based on the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property.</span></span> <span data-ttu-id="2f101-503">선언적에서 제공 되는 다른 매개 변수가 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-503">The other parameter comes from the declarative <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> property.</span></span> <span data-ttu-id="2f101-504">합니다 `EmployeeLogic` 오버 로드 클래스를 `DeleteEmployee` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-504">The `EmployeeLogic` class overloads the `DeleteEmployee` method.</span></span> <span data-ttu-id="2f101-505">하나의 오버 로드는를 `NorthwindEmployee` 매개 변수 및 다른 하나는 <xref:System.Int32> 라는 매개 변수 `anID`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-505">One overload takes a `NorthwindEmployee` parameter, and the other takes an <xref:System.Int32> parameter named `anID`.</span></span> <span data-ttu-id="2f101-506">에 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 이벤트, 항목을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성 이라는 하나의 매개 변수를 포함 하도록 조정 됩니다 `anID` 에서 값을 사용 하 여 `original_EmpID`.</span><span class="sxs-lookup"><span data-stu-id="2f101-506">In the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event, the entries in the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> property are adjusted to include only one parameter named `anID` with the value from `original_EmpID`.</span></span> <span data-ttu-id="2f101-507">경우 이벤트 처리기가 일치 하는 `DeleteEmployee` 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-507">When the event handler exists, the matching `DeleteEmployee` method is called.</span></span>  
  
 <span data-ttu-id="2f101-508">다음 코드 예제를 표시 하는 웹 페이지를 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤과 핸들을 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-508">The following code example shows the Web page that displays the <xref:System.Web.UI.WebControls.DataGrid> control and handles the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 <span data-ttu-id="2f101-509">다음 코드 예제는 `EmployeeLogic` 앞의 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-509">The following code example shows the `EmployeeLogic` class that is used in the preceding code example.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-510">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-510">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-511">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-511">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-512">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-512">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-513"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-513">Occurs before a <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-514">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화를 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 삭제 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-514">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.ObjectDataSource> control performs the delete operation.</span></span> <span data-ttu-id="2f101-515">매개 변수를 사용할 수는 <xref:System.Collections.IDictionary> 액세스 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-515">The parameters are available as an <xref:System.Collections.IDictionary> collection that is accessed by the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> property, which is exposed by the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> object.</span></span>  
  
 <span data-ttu-id="2f101-516">설정 하 여 삭제 작업을 취소할 수 있습니다는 <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-516">You can cancel the delete operation by setting the <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="2f101-517">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-517">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-518">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-518">This section contains two code examples.</span></span> <span data-ttu-id="2f101-519">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-519">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data.</span></span> <span data-ttu-id="2f101-520">두 번째 코드 예에서는 `EmployeeLogic` 첫 번째 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-520">The second code example shows the `EmployeeLogic` class that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-521">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-521">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data.</span></span> <span data-ttu-id="2f101-522">처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤 집합에 지정 된 메서드를 사용 하 여 모든 직원을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-522">Initially, the <xref:System.Web.UI.WebControls.GridView> control displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object.</span></span> <span data-ttu-id="2f101-523">때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-523">Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.</span></span>  
  
 <span data-ttu-id="2f101-524">클릭할 경우는 **삭제** 단추를 삭제 작업에 지정 된 메서드를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 및 지정 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-524">If you click the **Delete** button, the delete operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="2f101-525">이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-525">In this code example, some preprocessing and post-processing steps are also performed.</span></span> <span data-ttu-id="2f101-526">`NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 작업을 수행 하려면 먼저 이벤트 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 예외 처리를 수행 하는 작업이 완료 된 후 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-526">The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the operation has completed to perform exception handling.</span></span> <span data-ttu-id="2f101-527">이 코드 예제에서는 하는 경우는 `NorthwindDataException` 는 의해 처리 될 throw를 `NorthwindEmployeeDeleted` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-527">In this code example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindEmployeeDeleted` method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 <span data-ttu-id="2f101-528">다음 코드 예제는 `EmployeeLogic` 앞의 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-528">The following code example shows the `EmployeeLogic` class that is used in the preceding code example.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-529">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-529">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-530">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-530">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-531">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-531">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-532"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤에서 데이터 캐싱이 활성화되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-532">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control has data caching enabled.</span></span></summary>
        <value><span data-ttu-id="2f101-533">데이터 소스 컨트롤에서 데이터 캐싱을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-533"><see langword="true" /> if data caching is enabled for the data source control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2f101-534">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-534">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-535"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-535">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports data caching.</span></span> <span data-ttu-id="2f101-536">데이터 캐시 되어 있는 동안에 호출을 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 캐시에서 데이터를 검색 하는 메서드 대신 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체의 인스턴스를 만들고 데이터 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-536">While data is cached, calls to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method retrieve data from the cache rather than the <xref:System.Web.UI.WebControls.ObjectDataSource> creating an instance of the business object and calling its data method.</span></span> <span data-ttu-id="2f101-537">캐시가 만료 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드는 비즈니스 개체에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-537">When the cache expires, the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method retrieves data from the business object, and then caches the data again.</span></span>  
  
 <span data-ttu-id="2f101-538"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> 속성이 `true` 및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 속성 캐시에 캐시 엔트리 이전의 데이터가 저장 되는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-538">The <xref:System.Web.UI.WebControls.ObjectDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</span></span> <span data-ttu-id="2f101-539">값이 0 무한정 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-539">A value of 0 indicates an infinitely long cache.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-540">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 Northwind 데이터베이스의 Employees 테이블에서 레코드를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-540">The following three examples show a Web page, a code-behind page class, and a data-access class that retrieve records from the Employees table in the Northwind database.</span></span>  
  
 <span data-ttu-id="2f101-541">첫 번째 예제 두 개가 포함 된 웹 페이지를 보여 줍니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-541">The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2f101-542">첫 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DropDownList> 검색 하 고 데이터베이스에서 직원 이름이 표시 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-542">The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database.</span></span> <span data-ttu-id="2f101-543">두 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 검색 하 고 사용자가 선택한 직원 레코드를 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-543">The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve and display the employee record that is selected by the user.</span></span>  
  
 <span data-ttu-id="2f101-544">캐싱을 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-544">Caching is enabled for the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-545">따라서 각 레코드는 한 번만 데이터베이스에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-545">Therefore, each record is retrieved only one time from the database.</span></span> <span data-ttu-id="2f101-546"><xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> "EmployeeDetails" 속성이 있지만 임의의 문자열 값을 키로 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-546">The <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> property is set to "EmployeeDetails", but any string value can work as the key.</span></span> <span data-ttu-id="2f101-547">웹 페이지도 포함 되어 있습니다를 <xref:System.Web.UI.WebControls.Button> 캐시 된 데이터를 만료 하기 위해 클릭할 수 있는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-547">The Web page also includes a <xref:System.Web.UI.WebControls.Button> control that the user can click to expire the cached data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 <span data-ttu-id="2f101-548">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <xref:System.Web.UI.Control.Load> 이벤트 및 처리기는 <xref:System.Web.UI.WebControls.Button.Click> 의 이벤트는 <xref:System.Web.UI.WebControls.Button> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-548">The second example shows a handler for the <xref:System.Web.UI.Control.Load> event and a handler for the <xref:System.Web.UI.WebControls.Button.Click> event of the <xref:System.Web.UI.WebControls.Button> control.</span></span> <span data-ttu-id="2f101-549">합니다 <xref:System.Web.UI.Control.Load> 이벤트 처리기로 키를 사용 하 여 캐시 항목을 만듭니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-549">The <xref:System.Web.UI.Control.Load> event handler creates a cache item with a key set to the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> value.</span></span> <span data-ttu-id="2f101-550">합니다 <xref:System.Web.UI.WebControls.Button.Click> 키가 같은 캐시 항목을 제거 하는 이벤트 처리기는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-550">The <xref:System.Web.UI.WebControls.Button.Click> event handler removes the cache item whose key is equal to the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> value.</span></span> <span data-ttu-id="2f101-551">캐시 항목이 제거 되 면 키에 종속 된 모든 캐시 된 데이터가 만료 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-551">When the cache item is removed, all the cached data that is dependent on the key is expired.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 <span data-ttu-id="2f101-552">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-552">The third example shows the data access class that interacts with the Northwind database.</span></span> <span data-ttu-id="2f101-553">클래스는 LINQ를 사용 하 여 직원 테이블을 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-553">The class uses LINQ to query the Employees table.</span></span> <span data-ttu-id="2f101-554">이 예제에서는 LINQ to SQL 클래스는 Northwind 데이터베이스를 나타내고 Employees 테이블에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-554">The example requires a LINQ to SQL class that represents the Northwind database and the Employees table.</span></span> <span data-ttu-id="2f101-555">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-555">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f101-556"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> 속성으로 지정된 메서드가 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />를 반환할 때 <see cref="T:System.Data.Common.DbDataReader" /> 속성이 <see langword="true" />로 설정되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="2f101-556">The <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> property is set to <see langword="true" /> when the method specified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> property returns a <see cref="T:System.Data.Common.DbDataReader" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-557">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-557">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-558">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-558">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-559">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-559">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-560">데이터 소스 컨트롤에서 검색된 데이터 집합을 통해 페이징을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-560">Gets or sets a value that indicates whether the data source control supports paging through the set of data that it retrieves.</span></span></summary>
        <value><span data-ttu-id="2f101-561">데이터 소스 컨트롤에서 검색된 데이터에 대해 페이징을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-561"><see langword="true" /> if the data source control supports paging through the data it retrieves; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-562">페이징 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 설정 하 여 처리 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 적절 한 매개 변수를 사용 하 여 비즈니스 개체에서 선택 메서드를 정의 하 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-562">Paging by the <xref:System.Web.UI.WebControls.ObjectDataSource> control is handled by setting the <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, and <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> properties of the <xref:System.Web.UI.WebControls.ObjectDataSource> and defining a select method in the business object with the proper parameters.</span></span> <span data-ttu-id="2f101-563">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> 속성이 `true`, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 컬렉션은 요청 되는 첫 번째 행 및 요청 된 행의 수에 대 한 두 개의 추가 매개 변수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-563">When the <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection includes two additional parameters for the first row that is requested and the number of rows that are requested.</span></span> <span data-ttu-id="2f101-564">이러한 두 매개 변수 이름이 정의 된 대로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-564">These two parameters are named as defined by the <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> and <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> properties.</span></span> <span data-ttu-id="2f101-565">`Select` 메서드 요청된 수가 지정된 된 인덱스에서 시작 하는 행을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-565">The `Select` method should return the requested number of rows, starting at the specified index.</span></span> <span data-ttu-id="2f101-566">데이터 페이지 크기에 따라 균등 하 게 나누지 수 있으므로 마지막 페이지 적은 수의 행을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-566">Because the data might not divide evenly by the page size, the last page might contain fewer rows.</span></span> <span data-ttu-id="2f101-567">따라서 요청 된 행의 수는 실제로 반환 되는 행의 최대 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-567">Thus, the number of rows that are requested is actually the maximum number of rows that are returned.</span></span>  
  
 <span data-ttu-id="2f101-568">데이터 바인딩된 컨트롤을 호출 하는 페이징 연결된 된 데이터 바인딩된 컨트롤에 사용 되는 경우는 `Select` 요청 된 행의 수와 시작 인덱스를 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-568">When paging is enabled on the associated data-bound control, the data-bound control calls the `Select` method with the start index and number of rows that are required.</span></span> <span data-ttu-id="2f101-569">또한 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 속성이 설정 되 면 데이터 바인딩된 컨트롤의 페이저 컨트롤을 렌더링 하기 전에 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-569">Additionally, if the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set, the data-bound control calls the method before rendering the pager controls.</span></span> <span data-ttu-id="2f101-570">예를 들어 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 페이징을 사용 하 여 지정 된 메서드와 5, 페이지 크기가 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 20을 반환 하는 속성, 호출기에 4 개의 페이지만 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-570">For example, if a <xref:System.Web.UI.WebControls.GridView> control has paging enabled with a page size of 5, and the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property returns 20, only 4 pages are displayed in the pager.</span></span>  
  
 <span data-ttu-id="2f101-571"><xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-571">The <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-572">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자는 페이지에 표시 된 레코드 수를 선택할 수 있도록 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-572">The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.</span></span>  
  
 <span data-ttu-id="2f101-573">웹 페이지에는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-573">The Web page contains an <xref:System.Web.UI.WebControls.ObjectDataSource> control whose <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`.</span></span> <span data-ttu-id="2f101-574"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 쿼리에서 레코드의 총 수를 반환 하는 메서드의 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-574">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set to the name of a method that returns the total number of records in the query.</span></span> <span data-ttu-id="2f101-575">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> 속성 및 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> 속성 선택 메서드에서 사용 되는 매개 변수의 이름으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-575">The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property and the <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property are set to the names of the parameters that are used in the Select method.</span></span> <span data-ttu-id="2f101-576">페이지는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-576">The page also contains a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 <span data-ttu-id="2f101-577">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> 의 이벤트는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-577">The second example shows a handler for the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> event of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2f101-578">처리기 집합의 코드는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 속성을 사용자의 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-578">The code in the handler sets the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property to the user's selection.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 <span data-ttu-id="2f101-579">세 번째 예제에서는 Customers 테이블에서 데이터를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-579">The third example shows the data access class that retrieves data from the Customers table.</span></span> <span data-ttu-id="2f101-580">라는 메서드를 포함 `GetSubsetOfEmployees`에 할당 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-580">It includes a method named `GetSubsetOfEmployees`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-581">예제에는 또한 라는 메서드 `GetEmployeeCount`에 할당 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-581">The example also includes a method named `GetEmployeeCount`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-582">LINQ를 사용 하 여 Customers 테이블을 쿼리 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-582">The class uses LINQ to query the Customers table.</span></span> <span data-ttu-id="2f101-583">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스와 Customers 테이블을 나타내는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-583">The example requires a LINQ to SQL class that represents the Northwind database and Customers table.</span></span> <span data-ttu-id="2f101-584">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-584">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-585">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-585">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-586">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-586">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-587">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-587">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-588"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 속성으로 지정된 메서드가 호출될 때 적용되는 필터링 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-588">Gets or sets a filtering expression that is applied when the method that is specified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> property is called.</span></span></summary>
        <value><span data-ttu-id="2f101-589"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 속성으로 식별된 메서드나 함수를 사용하여 데이터를 검색할 때 적용되는 필터링 식을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-589">A string that represents a filtering expression that is applied when data is retrieved by using the method or function identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-590"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터 필터링을 지원 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-590">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports filtering data only when the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method returns a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object.</span></span>  
  
 <span data-ttu-id="2f101-591">에 사용 되는 구문을 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성은 형식 문자열 스타일 식입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-591">The syntax that is used for the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property is a format string-style expression.</span></span> <span data-ttu-id="2f101-592">필터 식 구문은에 허용 되는 동일한 구문을 <xref:System.Data.DataColumn.Expression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-592">The filter expression syntax is the same syntax that is accepted by the <xref:System.Data.DataColumn.Expression%2A> property.</span></span> <span data-ttu-id="2f101-593">매개 변수를 추가 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션 형식 문자열 자리 표시자를 포함할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-593">If you add parameters to the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection, you can also include format string placeholders.</span></span> <span data-ttu-id="2f101-594">예를 들어 `"{0}"` 식 매개 변수 값으로 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-594">For example, include `"{0}"` in the expression to substitute for parameter values.</span></span> <span data-ttu-id="2f101-595">매개 변수의 인덱스에 따라 자리 표시자는는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-595">The placeholders are replaced according to the index of the parameter in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection.</span></span>  
  
 <span data-ttu-id="2f101-596">매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-596">You can include parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property.</span></span> <span data-ttu-id="2f101-597">매개 변수 형식의 문자열 또는 문자 형식이 면 매개 변수를 작은따옴표로 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-597">If the type of the parameter is a string or character type, enclose the parameter in single quotation marks.</span></span> <span data-ttu-id="2f101-598">매개 변수가 숫자 형식인 경우에 따옴표 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-598">Quotation marks are not required if the parameter is a numeric type.</span></span>  
  
 <span data-ttu-id="2f101-599">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션에 있는 자리 표시자에 대 한 계산 되는 매개 변수를 포함 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-599">The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property.</span></span>  
  
 <span data-ttu-id="2f101-600"><xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-600">The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f101-601">클라이언트에서 받은 모든 필터 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-601">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-602">매개 변수 값은 필터 식으로 대체 및에 적용 하기만 하면 런타임에서 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-602">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="2f101-603">사용 중인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-603">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-604">다음 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-604">The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results.</span></span> <span data-ttu-id="2f101-605">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어로 데이터를 검색 하는 메서드를 검색 하는 경우에 데이터를 필터링 할 수는 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-605">The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="2f101-606">이러한 이유로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 데이터를 검색 하는 비즈니스 개체 메서드를 식별 하는 속성을 <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="2f101-606">For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="2f101-607">코드 예제에서는 구성를 <xref:System.Web.UI.WebControls.TextBox> 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 **제출** 단추.</span><span class="sxs-lookup"><span data-stu-id="2f101-607">The code example consists of a <xref:System.Web.UI.WebControls.TextBox> control, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button.</span></span> <span data-ttu-id="2f101-608">기본적으로 <xref:System.Web.UI.WebControls.TextBox> Northwind Traders 직원 중 하나의 이름으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-608">By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees.</span></span> <span data-ttu-id="2f101-609">합니다 <xref:System.Web.UI.WebControls.GridView> 에서 이름으로 식별 되는 직원에 대 한 정보를 표시 합니다 <xref:System.Web.UI.WebControls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-609">The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>.</span></span> <span data-ttu-id="2f101-610">다른 직원에 대 한 데이터를 검색 하려면 직원의 전체 이름을 입력 합니다 <xref:System.Web.UI.WebControls.TextBox>를 클릭 하 고는 **제출** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-610">To retrieve data on another employee, enter the full name of the employee in the <xref:System.Web.UI.WebControls.TextBox>, and then click the **Submit** button.</span></span>  
  
 <span data-ttu-id="2f101-611">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성에 지정 된 메서드에 의해 검색 되는 데이터를 필터링 하는 데 사용 되는 식을 지정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-611">The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-612">에 포함 된 매개 변수를 계산 되는 매개 변수 자리 표시자를 사용 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-612">It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="2f101-613">이 예제에서는 매개 변수 자리 표시자는 공백을 포함할 수 있는 문자열 형식 매개 변수 형식의 작은따옴표 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-613">In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces.</span></span> <span data-ttu-id="2f101-614">매개 변수 형식의 숫자 또는 날짜 형식인 경우에 따옴표가 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-614">If the type of the parameter is a numeric or date type, bounding quotation marks are not required.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-615">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-615">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="2f101-616">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-616">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="2f101-617">자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2f101-617">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 <span data-ttu-id="2f101-618">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예제를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-618">The following code example provides an example of a middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="2f101-619">코드 예제에서는 두 개의 기본 클래스로 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-619">The code example consists of two basic classes:</span></span>  
  
-   <span data-ttu-id="2f101-620">`EmployeeLogic` 클래스는 비즈니스 논리를 캡슐화 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-620">The `EmployeeLogic` class, which is a class that encapsulates business logic.</span></span>  
  
-   <span data-ttu-id="2f101-621">`NorthwindEmployee` 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-621">The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.</span></span>  
  
 <span data-ttu-id="2f101-622">간단히 하기 위해는 `EmployeeLogic` 클래스는 데이터 계층에서 데이터를 검색 하는 것이 아니라 데이터의 정적 집합을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-622">For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier.</span></span> <span data-ttu-id="2f101-623">필터링을 보여 주기 위해 Northwind Traders 직원의 전체 이름을 제공 하는 샘플을 실행 하기 때문에 예를 들어도 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-623">It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.</span></span> <span data-ttu-id="2f101-624">전체 작업 예제를 컴파일 및 제공 되는 Web Forms 코드 예제를 사용 하 여 이러한 클래스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-624">For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f101-625"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> 속성이 설정되어 있고 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 메서드가 <see cref="T:System.Data.DataSet" /> 또는 <see cref="T:System.Data.DataTable" />를 반환하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="2f101-625">The <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> property was set and the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> method does not return a <see cref="T:System.Data.DataSet" /> or <see cref="T:System.Data.DataTable" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-626">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-626">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-627">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-627">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-628">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-628">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-629">필터 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-629">Occurs before a filter operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-630">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> 하기 전에 필터 매개 변수 값에 대 한 유효성 검사 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 필터 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-630">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.ObjectDataSource> control performs a filter operation.</span></span> <span data-ttu-id="2f101-631">설정 하 여 선택한 작업을 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-631">You can cancel the selected operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> to `true`.</span></span> <span data-ttu-id="2f101-632">경우에 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-632">The event is raised only if the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property is set.</span></span>  
  
 <span data-ttu-id="2f101-633"><xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> 에 위임 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-633">The <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> event delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> event of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-634">클라이언트에서 받은 모든 필터 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-634">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-635">매개 변수 값은 필터 식으로 대체 및에 적용 하기만 하면 런타임에서 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-635">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="2f101-636">사용 중인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-636">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
 <span data-ttu-id="2f101-637">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-637">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-638">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-638">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-639">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-639">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-640">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-640">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-641"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> 문자열의 모든 매개 변수 자리 표시자와 연결된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-641">Gets a collection of parameters that are associated with any parameter placeholders in the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> string.</span></span></summary>
        <value><span data-ttu-id="2f101-642"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에 있는 모든 매개 변수 자리 표시자와 연결된 매개 변수 집합을 포함하는 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-642">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains a set of parameters associated with any parameter placeholders found in the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-643"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터 필터링을 지원 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-643">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports filtering data only when the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method returns a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object.</span></span>  
  
 <span data-ttu-id="2f101-644">에 사용 되는 구문을 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 형식 문자열 스타일 식입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-644">The syntax that is used for the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> is a format string-style expression.</span></span> <span data-ttu-id="2f101-645">필터 식 구문은에 허용 되는 동일한 구문을 <xref:System.Data.DataColumn.Expression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-645">The filter expression syntax is the same syntax that is accepted by the <xref:System.Data.DataColumn.Expression%2A> property.</span></span> <span data-ttu-id="2f101-646">매개 변수를 추가 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션 형식 문자열 자리 표시자를 포함할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-646">If you add parameters to the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection, you can also include format string placeholders.</span></span> <span data-ttu-id="2f101-647">예를 들어 `"{0}"` 식 매개 변수 값으로 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-647">For example, include `"{0}"` in the expression to substitute for parameter values.</span></span> <span data-ttu-id="2f101-648">매개 변수의 인덱스에 따라 자리 표시자는는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-648">The placeholders are replaced according to the index of the parameter in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection.</span></span>  
  
 <span data-ttu-id="2f101-649">매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-649">You can include parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property.</span></span> <span data-ttu-id="2f101-650">매개 변수 문자열 또는 문자 형식이 면 매개 변수를 작은따옴표로 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-650">If the parameter is a string or character type, enclose the parameter in single quotation marks.</span></span> <span data-ttu-id="2f101-651">매개 변수가 숫자 형식인 경우에 따옴표 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-651">Quotation marks are not required if the parameter is a numeric type.</span></span>  
  
 <span data-ttu-id="2f101-652"><xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-652">The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-653">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-653">This section contains two code examples.</span></span> <span data-ttu-id="2f101-654">첫 번째 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 개체 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-654">The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> object to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results.</span></span> <span data-ttu-id="2f101-655">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예제를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-655">The second code example provides an example of a middle-tier business object that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-656">다음 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-656">The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results.</span></span> <span data-ttu-id="2f101-657">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어로 데이터를 검색 하는 메서드를 검색 하는 경우에 데이터를 필터링 할 수는 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-657">The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="2f101-658">이러한 이유로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 데이터를 검색 하는 비즈니스 개체 메서드를 식별 하는 속성을 <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="2f101-658">For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="2f101-659">코드 예제에서는 구성를 <xref:System.Web.UI.WebControls.TextBox> 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 **제출** 단추.</span><span class="sxs-lookup"><span data-stu-id="2f101-659">The code example consists of a <xref:System.Web.UI.WebControls.TextBox> control, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button.</span></span> <span data-ttu-id="2f101-660">기본적으로 <xref:System.Web.UI.WebControls.TextBox> Northwind Traders 직원 중 하나의 이름으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-660">By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees.</span></span> <span data-ttu-id="2f101-661">합니다 <xref:System.Web.UI.WebControls.GridView> 에서 이름으로 식별 되는 직원에 대 한 정보를 표시 합니다 <xref:System.Web.UI.WebControls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-661">The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>.</span></span> <span data-ttu-id="2f101-662">다른 직원에 대 한 데이터를 검색할 합니다 <xref:System.Web.UI.WebControls.TextBox>해당 직원의 전체 이름을 입력 하 고 클릭 합니다 **제출** 단추.</span><span class="sxs-lookup"><span data-stu-id="2f101-662">To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.</span></span>  
  
 <span data-ttu-id="2f101-663">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성에서 검색 된 데이터를 필터링 하는 데 사용 되는 식을 지정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-663">The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-664">에 포함 된 매개 변수를 계산 되는 매개 변수 자리 표시자를 사용 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-664">It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="2f101-665">이 예제에서는 매개 변수 자리 표시자는 공백을 포함할 수 있는 문자열 형식 매개 변수 형식의 작은따옴표 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-665">In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces.</span></span> <span data-ttu-id="2f101-666">매개 변수 형식의 숫자 또는 날짜 형식인 경우에 따옴표가 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-666">If the type of the parameter is a numeric or date type, bounding quotation marks are not required.</span></span> <span data-ttu-id="2f101-667"><xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 하나의 매개 변수를 포함 하는 컬렉션을 <xref:System.Web.UI.WebControls.FormParameter> 바인딩되는 개체는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-667">The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> object that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-668">클라이언트에서 받은 모든 필터 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-668">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-669">매개 변수 값은 필터 식으로 대체 및에 적용 하기만 하면 런타임에서 <xref:System.Data.DataView> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-669">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="2f101-670">사용 중인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-670">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 <span data-ttu-id="2f101-671">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예제를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-671">The following code example provides an example of a middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="2f101-672">코드 예제에서는 두 개의 기본 클래스로 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-672">The code example consists of two basic classes:</span></span>  
  
-   <span data-ttu-id="2f101-673">`EmployeeLogic` 클래스는 비즈니스 논리를 캡슐화 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-673">The `EmployeeLogic` class, which is a class that encapsulates business logic.</span></span>  
  
-   <span data-ttu-id="2f101-674">`NorthwindEmployee` 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-674">The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.</span></span>  
  
 <span data-ttu-id="2f101-675">간단히 하기 위해는 `EmployeeLogic` 클래스는 데이터 계층에서 데이터를 검색 하는 것이 아니라 데이터의 정적 집합을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-675">For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier.</span></span> <span data-ttu-id="2f101-676">필터링을 보여 주기 위해 Northwind Traders 직원의 전체 이름을 제공 하는 샘플을 실행 하기 때문에 예를 들어도 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-676">It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.</span></span> <span data-ttu-id="2f101-677">전체 작업 예제를 컴파일 및 제공 되는 Web Forms 코드 예제를 사용 하 여 이러한 클래스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-677">For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f101-678"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> 속성이 설정되어 있고 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 메서드에서 <see cref="T:System.Data.DataSet" /> 또는 <see cref="T:System.Data.DataTable" />을 반환하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="2f101-678">You set the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> property and the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> method does not return a <see cref="T:System.Data.DataSet" /> or <see cref="T:System.Data.DataTable" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-679">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-679">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-680">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-680">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-681">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-681">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName"><span data-ttu-id="2f101-682">검색할 뷰의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-682">The name of the view to retrieve.</span></span> <span data-ttu-id="2f101-683"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />는 한 개의 뷰만 지원하기 때문에 <paramref name="viewName" />은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-683">Because the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> supports only one view, <paramref name="viewName" /> is ignored.</span></span></param>
        <summary><span data-ttu-id="2f101-684">데이터 소스 컨트롤이 연결된 명명된 데이터 소스 뷰를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-684">Retrieves the named data source view that is associated with the data source control.</span></span></summary>
        <returns><span data-ttu-id="2f101-685"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />와 연결된 <see langword="DefaultView" />라는 이름의 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-685">The <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> named <see langword="DefaultView" /> that is associated with the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-686"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤은 하나의 데이터 원본 뷰를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-686">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports only one data source view.</span></span> <span data-ttu-id="2f101-687">모든 데이터 원본 보기 개체와 마찬가지로 데이터 원본 컨트롤과 연결된 <xref:System.Web.UI.WebControls.ObjectDataSourceView>은 해당 기능을 정의하고 기본 데이터 스토리지에서 데이터를 검색하는 데 필요한 모든 작업을 수행하고 정렬, 삽입, 삭제 및 업데이트와 같은 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-687">As with all data source view objects, the <xref:System.Web.UI.WebControls.ObjectDataSourceView> that is associated with the data source control defines its capabilities, performs all the work that is necessary to retrieve data from the underlying data storage, and performs operations such as sorting, inserting, deleting, and updating.</span></span>  
  
 <span data-ttu-id="2f101-688"><xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> 메서드 페이지 코드가 아니라 데이터 바인딩된 컨트롤에서 호출 될 것입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-688">The <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> method is intended to be called by data-bound controls, not by page code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2f101-689">지정된 <paramref name="viewName" />이 <see langword="null" />이거나 <see langword="DefaultView" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="2f101-689">The specified <paramref name="viewName" /> is <see langword="null" /> or something other than <see langword="DefaultView" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-690">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-690">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-691">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-691">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-692">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-692">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f101-693"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 개체와 연결된 뷰 개체의 목록을 나타내는 이름의 컬렉션을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-693">Retrieves a collection of names representing the list of view objects that are associated with the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f101-694"><see cref="T:System.Collections.ICollection" />와 연결된 뷰의 이름이 들어 있는 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-694">An <see cref="T:System.Collections.ICollection" /> that contains the names of the views associated with the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-695">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 라는 하나의 뷰만 지원 `DefaultView`, 해당 기본 데이터에 대해 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-695">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports only one view, named `DefaultView`, on its underlying data.</span></span> <span data-ttu-id="2f101-696"><xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> 메서드는이 보기 이름의 단일 요소 컬렉션을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-696">The <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> method returns a single-element collection of this one view name.</span></span>  
  
 <span data-ttu-id="2f101-697"><xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> 메서드 페이지 코드가 아니라 데이터 바인딩된 컨트롤에서 호출 될 것입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-697">The <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> method is intended to be called by data-bound controls, not by page code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-698">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-698">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-699">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-699">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-700">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-700">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f101-701"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> 속성으로 식별되는 메서드와 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" /> 컬렉션의 매개 변수를 호출하여 삽입 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-701">Performs an insert operation by calling the method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> property and any parameters in the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2f101-702">내부 데이터 스토리지로 삽입되는 행 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-702">A value that represents the number of rows inserted into the underlying data storage.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-703">전에 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업을 수행할를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-703">Before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation is performed, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event.</span></span> <span data-ttu-id="2f101-704">처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 이벤트 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-704">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event to examine the values of the parameters and to perform any preprocessing before an <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation.</span></span> <span data-ttu-id="2f101-705">삽입 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 로 식별 되는 개체의 인스턴스를 만들 하기 위해는 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-705">To perform an insert operation, the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object uses reflection to create an instance of the object that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property.</span></span> <span data-ttu-id="2f101-706">다음으로 식별 되는 메서드를 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성에 연결 된 모든를 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-706">It then calls the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property, using any associated <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> properties.</span></span> <span data-ttu-id="2f101-707">후는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-707">After the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation completes, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> event.</span></span> <span data-ttu-id="2f101-708">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> 이벤트 모든 반환 값과 출력 매개 변수 예외를 검사 하 고 후 처리를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-708">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="2f101-709"><xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-709">The <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-710">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-710">For more information about parameter merging, object lifetime, and method resolution, see <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</span></span>  
  
## <a name="data-bound-controls"></a><span data-ttu-id="2f101-711">데이터 바인딩된 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-711">Data-Bound Controls</span></span>  
 <span data-ttu-id="2f101-712">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체와 같은 데이터 바인딩된 컨트롤을 사용 하 여 연결 된 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤 필요 없는 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 페이지 코드에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-712">When the <xref:System.Web.UI.WebControls.ObjectDataSource> object is associated with a data-bound control, such as the <xref:System.Web.UI.WebControls.GridView> control, it is not necessary to call the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method from page code.</span></span> <span data-ttu-id="2f101-713"><xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 메서드 대신 데이터 바인딩된 컨트롤에서 직접 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-713">The <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method is invoked directly by the data-bound control instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea"><span data-ttu-id="2f101-714">연습: 데이터를 사용자 지정 비즈니스 개체에 바인딩</span><span class="sxs-lookup"><span data-stu-id="2f101-714">Walkthrough: Data Binding to a Custom Business Object</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-715">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-715">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-716">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-716">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-717">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-717">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-718"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> 작업이 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-718">Occurs when an <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-719">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> 반환 값 또는 출력 매개 변수의 값을 확인 하거나 후 예외가 throw 되었는지 여부를 확인 하려면 이벤트는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업이 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-719">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after an <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation has completed.</span></span> <span data-ttu-id="2f101-720">반환 값, 출력 매개 변수 및 예외 처리 속성에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-720">The return value, output parameters, and exception handling properties are available from the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2f101-721">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-721">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-722">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-722">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-723">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-723">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-724">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-724">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-725"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-725">Occurs before an <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-726">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화를 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 삽입 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-726">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.ObjectDataSource> control performs the insert operation.</span></span> <span data-ttu-id="2f101-727">매개 변수를 사용할 수는 <xref:System.Collections.IDictionary> 액세스 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-727">The parameters are available as an <xref:System.Collections.IDictionary> collection that is accessed by the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> property, which is exposed by the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> object.</span></span>  
  
 <span data-ttu-id="2f101-728">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-728">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-729">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-729">This section contains two code examples.</span></span> <span data-ttu-id="2f101-730">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-730">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data.</span></span> <span data-ttu-id="2f101-731">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예제를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-731">The second code example provides an example of the middle-tier business object that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-732">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-732">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data.</span></span> <span data-ttu-id="2f101-733">처음에 <xref:System.Web.UI.WebControls.DetailsView> 새 표시 `NorthwindEmployee` 와 함께 자동으로 생성 된 레코드 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-733">Initially, the <xref:System.Web.UI.WebControls.DetailsView> displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button.</span></span> <span data-ttu-id="2f101-734">데이터의 필드에 입력 한 후 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭 합니다 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-734">After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button.</span></span> <span data-ttu-id="2f101-735"><xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 삽입 작업을 수행 하는 메서드를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-735">The <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property identifies which method performs the insert operation.</span></span>  
  
 <span data-ttu-id="2f101-736">이 예제에서는 합니다 `UpdateEmployeeInfo` 그러나; 메서드는 삽입을 수행 하는 `NorthwindEmployee` 데이터를 삽입 하려면 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-736">In this example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data.</span></span> <span data-ttu-id="2f101-737">따라서 컬렉션 하는 문자열을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 전달 자동으로 충분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-737">For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient.</span></span> <span data-ttu-id="2f101-738">`NorthwindEmployeeInserting` 대리자가는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 처리 하는 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 이벤트 이전 입력된 매개 변수를 조작할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업 진행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-738">The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation proceeds.</span></span> <span data-ttu-id="2f101-739">때문에 합니다 `UpdateEmployeeInfo` 메서드를 사용 하려면를 `NorthwindEmployee` 개체를 매개 변수로 하나 문자열의 컬렉션을 사용 하 여 추가할 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 매개 변수 이름을 사용 하 여 컬렉션 (`ne`) 메서드에 필요한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-739">Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects.</span></span> <span data-ttu-id="2f101-740">형식 및 사용에 맞게 설계 되지 않은 메서드를 사용 하 여 데이터 원본으로 기존 중간 계층 개체를 사용 하는 경우에 다음과 같은 단계를 수행할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-740">You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-741">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업을 수행할로 식별 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-741">When the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-742">경우는 `Insert` 개체의 메서드가 매개 변수를 포함 하는 메서드 시그니처를 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름 가진 매개 변수가 포함 되어야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 성공적으로 완료 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-742">If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method to complete successfully.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 <span data-ttu-id="2f101-743">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예제를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-743">The following code example provides an example of a middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="2f101-744">코드 예제에서는 두 개의 기본 클래스로 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-744">The code example consists of two basic classes:</span></span>  
  
-   <span data-ttu-id="2f101-745">`EmployeeLogic` 비즈니스 논리를 캡슐화 하는 상태 비저장 클래스 클래스.</span><span class="sxs-lookup"><span data-stu-id="2f101-745">The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.</span></span>  
  
-   <span data-ttu-id="2f101-746">`NorthwindEmployee` 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-746">The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.</span></span>  
  
 <span data-ttu-id="2f101-747">추가 `NorthwindDataException` 클래스는 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-747">An additional `NorthwindDataException` class is provided as a convenience.</span></span> <span data-ttu-id="2f101-748">전체 작업 예제를 컴파일 및 이러한 클래스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-748">For a complete working example, you must compile and use these classes.</span></span> <span data-ttu-id="2f101-749">`UpdateEmployeeInfo` 메서드 구현 되지 않은 완전히 하지 삽입할 데이터 Northwind Traders 데이터베이스이 예제를 테스트할 때 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-749">The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-750">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-750">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-751">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-751">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-752">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-752">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-753"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤에서 데이터 삽입을 위해 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-753">Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control invokes to insert data.</span></span></summary>
        <value><span data-ttu-id="2f101-754"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 데이터를 삽입할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-754">A string that represents the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> uses to insert data.</span></span> <span data-ttu-id="2f101-755">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-755">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-756">비즈니스 개체는 한 번에 아닌 일괄 처리 데이터 하나의 레코드를 삽입으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-756">The business object is assumed to insert data one record at a time, rather than in a batch.</span></span>  
  
 <span data-ttu-id="2f101-757"><xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-757">The <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> object.</span></span>  
  
## <a name="object-lifetime"></a><span data-ttu-id="2f101-758">개체 수명</span><span class="sxs-lookup"><span data-stu-id="2f101-758">Object Lifetime</span></span>  
 <span data-ttu-id="2f101-759">로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-759">The method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property can be an instance method or a `static` (`Shared` in Visual Basic) method.</span></span> <span data-ttu-id="2f101-760">인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-760">If it is an instance method, the business object is created and destroyed each time the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-761">처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 하기 전에 비즈니스 개체를 사용 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-761">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> events to work with the business object before the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-762">처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 메서드를 지정 된 후 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-762">You can also handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event that is raised after the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-763">비즈니스 개체를 구현 하는 경우는 <xref:System.IDisposable> 인터페이스는 <xref:System.IDisposable.Dispose%2A> 개체를 제거 하기 전에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-763">If the business object implements the <xref:System.IDisposable> interface, the <xref:System.IDisposable.Dispose%2A> method is called before the object is destroyed.</span></span> <span data-ttu-id="2f101-764">방법이 `static` (`Shared` Visual Basic의), 비즈니스 개체 생성 되지 않고 처리할 수 없는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-764">If the method is `static` (`Shared` in Visual Basic), the business object is never created and you cannot handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> events.</span></span>  
  
## <a name="parameter-merging"></a><span data-ttu-id="2f101-765">병합 하는 매개 변수</span><span class="sxs-lookup"><span data-stu-id="2f101-765">Parameter Merging</span></span>  
 <span data-ttu-id="2f101-766">매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 다음 세 가지 소스의 컬렉션:</span><span class="sxs-lookup"><span data-stu-id="2f101-766">Parameters are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection from three sources:</span></span>  
  
-   <span data-ttu-id="2f101-767">런타임에 데이터 바인딩된 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-767">From the data-bound control, at run time.</span></span>  
  
-   <span data-ttu-id="2f101-768">`InsertParameters` 요소를 선언적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-768">From the `InsertParameters` element, declaratively.</span></span>  
  
-   <span data-ttu-id="2f101-769">`Inserting` 메서드를 프로그래밍 방식으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-769">From the `Inserting` method, programmatically.</span></span>  
  
 <span data-ttu-id="2f101-770">데이터 바인딩된 컨트롤에서 생성 된 모든 매개 변수가 먼저 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-770">First, any parameters that are generated from data-bound controls are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection.</span></span> <span data-ttu-id="2f101-771">예를 들어 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 바인딩되는 <xref:System.Web.UI.WebControls.GridView> 열이 있는 컨트롤 `Name` 및 `Number`에 대 한 매개 변수 `Name` 및 `Number` 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-771">For example, if the <xref:System.Web.UI.WebControls.ObjectDataSource> control is bound to a <xref:System.Web.UI.WebControls.GridView> control that has the columns `Name` and `Number`, the parameters for `Name` and `Number` are added to the collection.</span></span> <span data-ttu-id="2f101-772">이러한 매개 변수의 데이터 형식은 `string`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-772">The data type of these parameters is `string`.</span></span> <span data-ttu-id="2f101-773">다음으로에 나와 있는 매개 변수는 `InsertParameters` 요소가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-773">Next, the parameters that are listed in the `InsertParameters` element are added.</span></span> <span data-ttu-id="2f101-774">경우에 매개 변수를 `InsertParameters` 에 이미 있는 매개 변수로 동일한 이름을 가진 요소가 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 기존 매개 변수 컬렉션에 지정 된 매개 변수와 일치 하도록 수정 됩니다는 `InsertParameters` 요소.</span><span class="sxs-lookup"><span data-stu-id="2f101-774">If a parameter in the `InsertParameters` element is found with the same name as a parameter that is already in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection, the existing parameter is modified to match the parameter that is specified in the `InsertParameters` element.</span></span> <span data-ttu-id="2f101-775">일반적으로이 매개 변수의 데이터 형식을 수정 하려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-775">Typically, this is used to modify the type of the data in the parameter.</span></span> <span data-ttu-id="2f101-776">마지막으로 프로그래밍 방식으로 추가 및 제거할 수의 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 하기 전에 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-776">Finally, you can programmatically add and remove parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event, which occurs before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method is run.</span></span> <span data-ttu-id="2f101-777">메서드는 매개 변수를 병합 된 후 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-777">The method is resolved after the parameters are merged.</span></span> <span data-ttu-id="2f101-778">메서드 확인은 다음 섹션에 설명 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-778">Method resolution is discussed in the next section.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-779">클라이언트에서 받은 모든 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-779">You should validate any parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-780">런타임에 매개 변수 값을 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-780">The runtime simply substitutes the parameter value into the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property.</span></span>  
  
## <a name="method-resolution"></a><span data-ttu-id="2f101-781">메서드 확인</span><span class="sxs-lookup"><span data-stu-id="2f101-781">Method Resolution</span></span>  
 <span data-ttu-id="2f101-782">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 메서드를 호출할 매개 변수에서 선언적으로 생성 된 데이터 바인딩된 컨트롤에서 데이터 필드를 `InsertParameters` 요소 및에 추가 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 이벤트 처리기 모두 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-782">When the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the `InsertParameters` element, and the parameters that were added in the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event handler are all merged.</span></span> <span data-ttu-id="2f101-783">(자세한 내용은 이전 섹션 참조). <xref:System.Web.UI.WebControls.ObjectDataSource> 개체 호출할 메서드를 찾으려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-783">(For more information, see the preceding section.) The <xref:System.Web.UI.WebControls.ObjectDataSource> object then attempts to find a method to call.</span></span> <span data-ttu-id="2f101-784">에 지정 된 이름 가진 하나 이상의 메서드를 찾습니다 먼저는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-784">First, it looks for one or more methods with the name that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property.</span></span> <span data-ttu-id="2f101-785">일치 하는 항목이 없으면는 <xref:System.InvalidOperationException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-785">If no match is found, an <xref:System.InvalidOperationException> exception is thrown.</span></span> <span data-ttu-id="2f101-786">일치 하는 항목이 있으면 매개 변수 이름과 일치 하는 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-786">If a match is found, it then looks for matching parameter names.</span></span> <span data-ttu-id="2f101-787">예를 들어 지정 된 형식 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성이 라는 두 개의 메서드도 `InsertARecord`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-787">For example, suppose a type that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property has two methods named `InsertARecord`.</span></span> <span data-ttu-id="2f101-788">하나의 `InsertARecord` 하나의 매개 변수가 `ID`, 및 다른 `InsertARecord` 두 매개 변수가 `Name` 및 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-788">One `InsertARecord` has one parameter, `ID`, and the other `InsertARecord` has two parameters, `Name` and `Number`.</span></span> <span data-ttu-id="2f101-789">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 컬렉션에 명명 된 매개 변수만 `ID`의 `InsertARecord` 메서드를만 `ID` 매개 변수 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-789">If the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection has only one parameter named `ID`, the `InsertARecord` method with just the `ID` parameter is called.</span></span> <span data-ttu-id="2f101-790">메서드를 확인 하는 데 매개 변수의 형식을 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-790">The type of the parameter is not checked in resolving the methods.</span></span> <span data-ttu-id="2f101-791">매개 변수의 순서는 중요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-791">The order of the parameters does not matter.</span></span>  
  
 <span data-ttu-id="2f101-792">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성, 메서드를 다른 방식으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-792">If the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property is set, the method is resolved in a different way.</span></span> <span data-ttu-id="2f101-793"><xref:System.Web.UI.WebControls.ObjectDataSource> 에 지정 된 이름의 메서드를 찾습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 는 매개 변수 형식 중 하나를 사용 하는 속성에 지정 된 된 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-793">The <xref:System.Web.UI.WebControls.ObjectDataSource> looks for a method with the name that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property that takes one parameter of the type that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-794">이 경우 매개 변수의 이름을 중요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-794">In this case, the name of the parameter does not matter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-795">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-795">This section contains two code examples.</span></span> <span data-ttu-id="2f101-796">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-796">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data.</span></span> <span data-ttu-id="2f101-797">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예제를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-797">The second code example provides an example of the middle-tier business object that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-798">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-798">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data.</span></span> <span data-ttu-id="2f101-799">처음에 <xref:System.Web.UI.WebControls.DetailsView> 새 표시 `NorthwindEmployee` 와 함께 자동으로 생성 된 레코드 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-799">Initially, the <xref:System.Web.UI.WebControls.DetailsView> displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button.</span></span> <span data-ttu-id="2f101-800">데이터의 필드에 입력 한 후 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭 합니다 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-800">After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button.</span></span> <span data-ttu-id="2f101-801"><xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 삽입 작업을 수행 하는 메서드를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-801">The <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property identifies which method performs the insert operation.</span></span>  
  
 <span data-ttu-id="2f101-802">이 예제에서는 합니다 `UpdateEmployeeInfo` 그러나; 메서드는 삽입을 수행 하는 `NorthwindEmployee` 데이터를 삽입 하려면 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-802">In this example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data.</span></span> <span data-ttu-id="2f101-803">따라서 컬렉션 하는 문자열을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 전달 자동으로 충분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-803">For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient.</span></span> <span data-ttu-id="2f101-804">`NorthwindEmployeeInserting` 대리자가는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 처리 하는 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 이벤트 이전 입력된 매개 변수를 조작할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업 진행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-804">The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation proceeds.</span></span> <span data-ttu-id="2f101-805">때문에 합니다 `UpdateEmployeeInfo` 메서드를 사용 하려면를 `NorthwindEmployee` 개체를 매개 변수로 하나 문자열의 컬렉션을 사용 하 여 추가할 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 매개 변수 이름을 사용 하 여 컬렉션 (`ne`) 메서드에 필요한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-805">Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects.</span></span> <span data-ttu-id="2f101-806">형식 및 사용에 맞게 설계 되지 않은 메서드를 사용 하 여 데이터 원본으로 기존 중간 계층 개체를 사용 하는 경우에 다음과 같은 단계를 수행할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-806">You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-807">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업을 수행할로 식별 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-807">When the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-808">경우는 `Insert` 개체의 메서드가 매개 변수를 포함 하는 메서드 시그니처를 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름 가진 매개 변수가 포함 되어야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 성공적으로 완료 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-808">If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method to complete successfully.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 <span data-ttu-id="2f101-809">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예제를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-809">The following code example provides an example of a middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="2f101-810">코드 예제에서는 두 개의 기본 클래스로 이루어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-810">The code example consists of two basic classes:</span></span>  
  
-   <span data-ttu-id="2f101-811">`EmployeeLogic` 비즈니스 논리를 캡슐화 하는 상태 비저장 클래스 클래스.</span><span class="sxs-lookup"><span data-stu-id="2f101-811">The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.</span></span>  
  
-   <span data-ttu-id="2f101-812">`NorthwindEmployee` 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-812">The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.</span></span>  
  
 <span data-ttu-id="2f101-813">추가 `NorthwindDataException` 클래스는 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-813">An additional `NorthwindDataException` class is provided as a convenience.</span></span> <span data-ttu-id="2f101-814">전체 작업 예제를 컴파일 및 이러한 클래스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-814">For a complete working example, you must compile and use these classes.</span></span> <span data-ttu-id="2f101-815">`UpdateEmployeeInfo` 메서드 구현 되지 않은 완전히 하지 삽입할 데이터 Northwind Traders 데이터베이스이 예제를 테스트할 때 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-815">The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-816">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-816">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-817">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-817">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-818">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-818">Creating an ObjectDataSource Control Source Object</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011"><span data-ttu-id="2f101-819">Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-819">Using the Entity Framework and the ObjectDataSource Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-820"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-820">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> property.</span></span></summary>
        <value><span data-ttu-id="2f101-821"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성으로 식별되는 메서드에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-821">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the method identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-822">이름 및 형식에 포함 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 컬렉션 이름 및에 매개 변수의 형식과 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 서명 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-822">The names and types of the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection must match the names and types of the parameters that are in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property signature.</span></span> <span data-ttu-id="2f101-823">매개 변수 이름은 대/소문자를 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-823">The parameter names are case sensitive.</span></span> <span data-ttu-id="2f101-824">와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 사용 하는 경우는 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 되는 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 데이터 바인딩된 컨트롤에서 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-824">When working with data-bound controls that supply parameters, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls, the <xref:System.Web.UI.WebControls.ObjectDataSource> control automatically merges any parameters that are explicitly specified in the collection with the parameters that are provided by the data-bound control.</span></span> <span data-ttu-id="2f101-825">데이터 바인딩된 컨트롤에는 항상 해당 매개 변수를 제공 하기 때문에이 중요 <xref:System.String> 형식이 있고 메서드 시그니처에 숫자 또는 날짜 형식을 명시적으로 지정 해야 하는 경우의 매개 변수를 포함 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 에 올바른 형식의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-825">This is important because data-bound controls always supply their parameters as <xref:System.String> types, and if the method signature includes numeric or date types, you must explicitly include a parameter in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection with the correct type.</span></span> <span data-ttu-id="2f101-826">그렇지 않은 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 컬렉션에서 매개 변수로 정의 된 형식에 따라 매개 변수를 캐스팅 하 려 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-826">Otherwise, the <xref:System.Web.UI.WebControls.ObjectDataSource> control attempts to cast the parameters according to the type that is defined by the parameters in the collection.</span></span> <span data-ttu-id="2f101-827">자세한 내용은 [ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-827">For more information, see [Using Parameters with the ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).</span></span>  
  
 <span data-ttu-id="2f101-828"><xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-828">The <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.ObjectDataSourceView> that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-829">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-829">For more information about parameter merging, object lifetime, and method resolution, see <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-830">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-830">This section contains two code examples.</span></span> <span data-ttu-id="2f101-831">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-831">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data.</span></span> <span data-ttu-id="2f101-832">두 번째 코드 예의 예제 구현을 제공 합니다 `Insert` 첫 번째 코드 예제에 사용 되는 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-832">The second code example provides an example implementation of the `Insert` method that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-833">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-833">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data.</span></span> <span data-ttu-id="2f101-834">처음에 <xref:System.Web.UI.WebControls.DetailsView> 새 데이터를 입력할 수 있는 텍스트 상자를 표시 `NorthwindEmployee` 와 함께 자동으로 생성 된 레코드 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-834">Initially, the <xref:System.Web.UI.WebControls.DetailsView> displays text boxes in which you can enter data for a new `NorthwindEmployee` record, along with an automatically generated **Insert** button.</span></span> <span data-ttu-id="2f101-835">데이터의 필드에 입력 한 후 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭 합니다 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-835">After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button.</span></span> <span data-ttu-id="2f101-836"><xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 삽입 작업을 수행 하는 메서드를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-836">The <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property identifies which method performs the insert operation.</span></span>  
  
 <span data-ttu-id="2f101-837">클릭 하면를 **삽입** 단추를 작업으로 지정 된 메서드를 사용 하 여 수행 됩니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 컬렉션.</span><span class="sxs-lookup"><span data-stu-id="2f101-837">If you click the **Insert** button, the operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection.</span></span> <span data-ttu-id="2f101-838">이 코드 예제에서는 하나의 매개 변수는에 지정 된 된 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 감독자의 ID에 해당 하는 컬렉션</span><span class="sxs-lookup"><span data-stu-id="2f101-838">In this code example, one parameter is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection that corresponds to the supervisor's ID.</span></span> <span data-ttu-id="2f101-839">ID에 표시 되는 경우에 이므로이 <xref:System.Web.UI.WebControls.GridView.Rows%2A> 컬렉션에 대 한는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.BoundField> 개체에 문자열로 전달 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-839">This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it is passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-840">명시적으로 추가 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 속성이로 설정는 <xref:System.TypeCode.Int32> 값으로 전달 됩니다에서 올바르게를 <xref:System.Web.UI.WebControls.ObjectDataSource> 메서드에으로 <xref:System.Int32>아니라 문자열.</span><span class="sxs-lookup"><span data-stu-id="2f101-840">By adding it explicitly to the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property set to the <xref:System.TypeCode.Int32> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an <xref:System.Int32>, not as a string.</span></span>  
  
 <span data-ttu-id="2f101-841">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 작업을 수행할로 식별 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-841">When the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-842">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 개체의 메서드가 매개 변수를 포함 하는 메서드 시그니처를 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름의 매개 변수가 포함 되어야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 성공적으로 완료 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-842">If the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection must contain parameters that have names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method to complete successfully.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-843">클라이언트에서 받은 모든 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-843">You should validate any parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-844">런타임에 매개 변수 값을 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-844">The runtime simply substitutes the parameter value into the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 <span data-ttu-id="2f101-845">다음 코드 예제에서는의 예제 구현을 제공 합니다 `Insert` 앞의 코드 예제를 사용 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-845">The following code example provides an example implementation of the `Insert` method that the preceding code example uses.</span></span> <span data-ttu-id="2f101-846">`InsertNewEmployeeWrapper` 메서드가 추가 되는 `EmployeeLogic` 에서 제공 되는 중간 계층 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체를 보다 쉽게 작업할 수 있도록 클래스 개요를 <xref:System.Web.UI.WebControls.ObjectDataSource> 실제 쓰지 않고도 웹 시나리오에서 비즈니스 논리입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-846">The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object that is provided in the <xref:System.Web.UI.WebControls.ObjectDataSource> class overview to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.</span></span>  
  
 <span data-ttu-id="2f101-847">예제를 실행 하려면 해야 합니다 `NorthwindEmployee` 에서 제공 되는 클래스는 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-847">To run the example, you must have the `NorthwindEmployee` class that is provided in the <xref:System.Web.UI.WebControls.ObjectDataSource> class overview.</span></span> <span data-ttu-id="2f101-848">연결 하는 방법만 보여 주는이 예제는 <xref:System.Web.UI.WebControls.ObjectDataSource> 하는 비즈니스 개체 메서드 매개 변수를 사용 하 여 새 데이터베이스 레코드에 대 한 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-848">This example illustrates only how to connect the <xref:System.Web.UI.WebControls.ObjectDataSource> to a business object method that gets data for a new database record by using parameters.</span></span> <span data-ttu-id="2f101-849">예제 추가 하지 않습니다 레코드를 데이터베이스에 있으므로 합니다 `Save` 메서드는 `NorthwindEmployee` 클래스는 데이터베이스를 업데이트 하는 코드를 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-849">The example does not add records to the database, because the `Save` method of the `NorthwindEmployee` class does not include code to update the database.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-850">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-850">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-851">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-851">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-852">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-852">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="2f101-853">해당 컨트롤에 저장된 뷰 상태 값이 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-853">An object that contains the saved view state values for the control.</span></span></param>
        <summary><span data-ttu-id="2f101-854">이전에 저장된 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤의 뷰 상태를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-854">Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-855">이 메서드는.NET Framework 인프라에서 기본적으로 사용 하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-855">This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="2f101-856">그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-856">However, control developers can override this method to specify how a custom server control restores its view state.</span></span> <span data-ttu-id="2f101-857">자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-857">For more information, see [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).</span></span>  
  
 <span data-ttu-id="2f101-858">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> 메서드를 사용 하 여 이전에 저장 된 뷰 상태를 로드 하는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-858">The <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> method is used to load the previously saved view state of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2f101-859"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> 메서드는 주로 컨트롤 개발자가 확장할 때 사용 합니다 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-859">The <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> method is used primarily by control developers when extending the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-860">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-860">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-861">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-861">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-862">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-862">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-863">데이터 소스 페이징을 지원하게 위해 검색할 레코드의 수를 나타내는 데 사용되는 비즈니스 개체 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-863">Gets or sets the name of the business object data retrieval method parameter that is used to indicate the number of records to retrieve for data source paging support.</span></span></summary>
        <value><span data-ttu-id="2f101-864">검색할 레코드의 수를 나타내는 데 사용되는 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 매개 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-864">The name of the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> parameter that is used to indicate the number of records to retrieve.</span></span> <span data-ttu-id="2f101-865">기본값은 <c>"maximumRows"</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-865">The default is <c>"maximumRows"</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-866"><xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> 속성은 데이터 소스 페이징을 지원 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-866">The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property is used to support data source paging.</span></span> <span data-ttu-id="2f101-867">페이징을 지 원하는 방법에 대 한 자세한 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어를 참조 하십시오 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-867">For information about how paging is supported by the <xref:System.Web.UI.WebControls.ObjectDataSource> control, see <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</span></span>  
  
 <span data-ttu-id="2f101-868"><xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-868">The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-869">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자는 페이지에 표시 된 레코드 수를 선택할 수 있도록 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-869">The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.</span></span>  
  
 <span data-ttu-id="2f101-870">웹 페이지에는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-870">The Web page contains an <xref:System.Web.UI.WebControls.ObjectDataSource> control whose <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`.</span></span> <span data-ttu-id="2f101-871"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 쿼리에서 레코드의 총 수를 반환 하는 메서드의 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-871">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set to the name of a method that returns the total number of records in the query.</span></span> <span data-ttu-id="2f101-872">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> 속성 및 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> 속성 선택 메서드에서 사용 되는 매개 변수의 이름으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-872">The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property and the <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property are set to the names of the parameters that are used in the Select method.</span></span> <span data-ttu-id="2f101-873">페이지는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-873">The page also contains a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 <span data-ttu-id="2f101-874">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> 의 이벤트는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-874">The second example shows a handler for the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> event of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2f101-875">처리기 집합의 코드는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 속성을 사용자의 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-875">The code in the handler sets the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property to the user's selection.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 <span data-ttu-id="2f101-876">세 번째 예제에서는 Customers 테이블에서 데이터를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-876">The third example shows the data access class that retrieves data from the Customers table.</span></span> <span data-ttu-id="2f101-877">라는 메서드를 포함 `GetSubsetOfEmployees`에 할당 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-877">It includes a method named `GetSubsetOfEmployees`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-878">예제에는 또한 라는 메서드 `GetEmployeeCount`에 할당 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-878">The example also includes a method named `GetEmployeeCount`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-879">LINQ를 사용 하 여 Customers 테이블을 쿼리 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-879">The class uses LINQ to query the Customers table.</span></span> <span data-ttu-id="2f101-880">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스와 Customers 테이블을 나타내는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-880">The example requires a LINQ to SQL class that represents the Northwind database and Customers table.</span></span> <span data-ttu-id="2f101-881">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-881">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-882">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-882">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-883">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-883">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-884">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-884">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-885"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> 속성으로 식별되는 개체가 만들어진 후 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-885">Occurs after the object that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> property is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-886">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 비즈니스 개체의 다른 메서드를 호출 하는 이벤트 속성을 설정 또는 먼저 비즈니스 개체에 관련 된 다른 초기화를 수행 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체 데이터 작업을 수행할 비즈니스 개체 데이터 메서드를 호출 합니다. .</span><span class="sxs-lookup"><span data-stu-id="2f101-886">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> event to call other methods on the business object, set properties, or perform other initialization that is specific to the business object before the <xref:System.Web.UI.WebControls.ObjectDataSource> object calls the business object data method to perform a data operation.</span></span> <span data-ttu-id="2f101-887">개체에 대 한 참조를 통해 액세스 하는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-887">A reference to the object is accessed by the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property, which is exposed by the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object.</span></span>  
  
 <span data-ttu-id="2f101-888">경우 데이터 작업을 수행 하려면 식별 되는 메서드는 `static` (`Shared` Visual Basic에서), <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 고 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 이벤트는 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-888">If the method that is identified to perform the data operation is `static` (`Shared` in Visual Basic), the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> events are never raised.</span></span>  
  
 <span data-ttu-id="2f101-889">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-889">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-890">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-890">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-891">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-891">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-892">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-892">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-893"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> 속성으로 식별되는 개체가 만들어지기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-893">Occurs before the object that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> property is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-894">경우 데이터 작업을 수행 하려면 식별 되는 메서드는 `static` (`Shared` Visual Basic에서), <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 고 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 이벤트는 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-894">If the method that is identified to perform the data operation is `static` (`Shared` in Visual Basic), the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> events are never raised.</span></span>  
  
 <span data-ttu-id="2f101-895"><xref:System.Web.UI.WebControls.ObjectDataSource> 리플렉션을 사용 하 여 해당 인스턴스를 만들려면 비즈니스 개체의 기본 생성자를 자동으로 호출 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-895">The <xref:System.Web.UI.WebControls.ObjectDataSource> control automatically calls the default constructor of a business object to create an instance of it using reflection.</span></span> <span data-ttu-id="2f101-896">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 이벤트를 명시적으로 다른 생성자를 호출 하 고 결과 개체의 인스턴스를 설정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 속성은 연결 된 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-896">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to explicitly call another constructor, and set the instance of the object that results to the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property of the associated <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object.</span></span>  
  
 <span data-ttu-id="2f101-897">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-897">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-898">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-898">This section contains two code examples.</span></span> <span data-ttu-id="2f101-899">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-899">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="2f101-900">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-900">The second code example provides the middle-tier business object that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-901">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-901">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="2f101-902">웹 페이지에서 수행 하는 모든 데이터 작업에 대 한 만들기 (시간 또는 리소스) 측면에서 비용이 많이 하는 비즈니스 개체를 사용 하 여 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-902">You might work with a business object that is very expensive to create (in terms of time or resources) for every data operation your Web page performs.</span></span> <span data-ttu-id="2f101-903">비용이 많이 드는 개체를 사용 하는 한 가지 방법은 해당 인스턴스를 한 번 만들어를 만들고 모든 데이터 작업에 대 한 제거 하는 대신 다음 작업에 캐시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-903">One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f101-904">프로덕션 애플리케이션에서는 여러 요청이 동시에 동일한 인스턴스를 사용 하 여 생길 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-904">In a production application, multiple requests might end up simultaneously using the same instance.</span></span> <span data-ttu-id="2f101-905">따라서 개체는 스레드로부터 안전한 방식으로 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-905">Therefore, the object needs to be implemented in a thread-safe manner.</span></span>  
  
 <span data-ttu-id="2f101-906">이 코드 예제에서는이 패턴을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-906">This code example demonstrates this pattern.</span></span> <span data-ttu-id="2f101-907">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 이벤트 개체에 대 한 캐시를 먼저 확인 하 고 이미 캐시 되지 않으면만 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-907">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and only create an instance of the object, if one is not already cached.</span></span> <span data-ttu-id="2f101-908">그런 다음 처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트를 제거 하는 대신 나중에 사용할 비즈니스 개체를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-908">Then, handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it.</span></span> <span data-ttu-id="2f101-909">이 코드 예제에서는 <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 개체로 설정 됩니다 `true` 보내기 위해는 <xref:System.Web.UI.WebControls.ObjectDataSource> 를 호출 하지 않도록 <xref:System.IDisposable.Dispose%2A> 개체의 메서드를.</span><span class="sxs-lookup"><span data-stu-id="2f101-909">In this code example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> object is set to `true` to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> method on the object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 <span data-ttu-id="2f101-910">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-910">The following code example provides the example middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="2f101-911">정의한 기본 비즈니스 개체의 코드 예제는는 `EmployeeLogic` 비즈니스 논리를 캡슐화 하는 상태 저장 클래스 클래스.</span><span class="sxs-lookup"><span data-stu-id="2f101-911">The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a stateful class that encapsulates business logic.</span></span> <span data-ttu-id="2f101-912">전체 작업 예제를 보려면이 코드를 라이브러리로 컴파일하고 ASP.NET 페이지 (.aspx 파일)에서 이러한 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-912">For a complete working example, you must compile this code as a library and use these classes from an ASP.NET page (.aspx file).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-913">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-913">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-914">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-914">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-915">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-915">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-916"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> 속성으로 식별되는 개체가 삭제되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-916">Occurs before the object that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> property is discarded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-917"><xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트는 비즈니스 개체의 인스턴스가 삭제 되기 전에 항상 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-917">The <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event is always raised before the instance of the business object is discarded.</span></span> <span data-ttu-id="2f101-918">비즈니스 개체를 구현 하는 경우는 <xref:System.IDisposable> 인터페이스는 <xref:System.IDisposable.Dispose%2A> 이 이벤트가 발생 한 후 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-918">If the business object implements the <xref:System.IDisposable> interface, the <xref:System.IDisposable.Dispose%2A> method is called after this event is raised.</span></span>  
  
 <span data-ttu-id="2f101-919">처리는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 개체에서 다른 메서드를 호출 하는 이벤트 속성을 설정 또는 개체를 제거 하기 전에 개체에 관련 된 정리를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-919">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to call other methods on the object, set properties, or perform clean-up that is specific to the object before the object is destroyed.</span></span> <span data-ttu-id="2f101-920">개체에 대 한 참조를 통해 액세스 하는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-920">A reference to the object is accessed by the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property, which is exposed by the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object.</span></span>  
  
 <span data-ttu-id="2f101-921">사용 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에 대 한 처리기에서 데이터 컨텍스트 클래스의 삭제 취소 해야 합니다는 LINQ to SQL 클래스를 사용 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-921">When you use a <xref:System.Web.UI.WebControls.ObjectDataSource> control with a LINQ to SQL class, you must cancel the disposing of the data-context class in an handler for the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event.</span></span> <span data-ttu-id="2f101-922">이 단계는 필요한 LINQ to SQL에서는 지연 된 실행을 지원 하기 때문에 반면는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 선택 작업 후 데이터 컨텍스트를 삭제 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-922">This step is necessary because LINQ to SQL supports deferred execution, whereas the <xref:System.Web.UI.WebControls.ObjectDataSource> control tries to dispose the data context after the Select operation.</span></span>  
  
 <span data-ttu-id="2f101-923">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-923">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-924">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-924">This section contains two code examples.</span></span> <span data-ttu-id="2f101-925">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 개체 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-925">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="2f101-926">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-926">The second code example provides the middle-tier business object that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-927">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-927">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="2f101-928">웹 페이지에서 수행 하는 모든 데이터 작업에 대 한 만들기 (시간 또는 리소스) 측면에서 비용이 많이 하는 비즈니스 개체를 사용 하 여 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-928">You might work with a business object that is very expensive to create (in terms of time or resources) for every data operation your Web page performs.</span></span> <span data-ttu-id="2f101-929">비용이 많이 드는 개체를 사용 하는 한 가지 방법은 해당 인스턴스를 한 번 만들어를 만들고 모든 데이터 작업에 대 한 제거 하는 대신 다음 작업에 캐시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-929">One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</span></span> <span data-ttu-id="2f101-930">이 예제에서는이 패턴을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-930">This example demonstrates this pattern.</span></span> <span data-ttu-id="2f101-931">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 이벤트 개체에 대 한 캐시를 먼저 확인 하 고 이미 캐시 되지 않으면만의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-931">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and only create an instance of it, if one is not already cached.</span></span> <span data-ttu-id="2f101-932">그런 다음 처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트를 제거 하는 대신 나중에 사용할 비즈니스 개체를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-932">Then, handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it.</span></span> <span data-ttu-id="2f101-933">이 코드 예제에서는 <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 개체로 설정 됩니다 `true` 보내기 위해를 <xref:System.Web.UI.WebControls.ObjectDataSource> 를 호출 하지 않도록를 <xref:System.IDisposable.Dispose%2A> 개체의 메서드를.</span><span class="sxs-lookup"><span data-stu-id="2f101-933">In this code example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> object is set to `true` to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call the <xref:System.IDisposable.Dispose%2A> method on the object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 <span data-ttu-id="2f101-934">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-934">The following code example provides the example middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="2f101-935">정의한 기본 비즈니스 개체의 코드 예제는는 `EmployeeLogic` 비즈니스 논리를 캡슐화 하는 상태 저장 클래스 클래스.</span><span class="sxs-lookup"><span data-stu-id="2f101-935">The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a stateful class that encapsulates business logic.</span></span> <span data-ttu-id="2f101-936">전체 작업 예제를 보려면이 코드를 라이브러리로 컴파일하고 ASP.NET 페이지 (.aspx 파일)에서 이러한 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-936">For a complete working example, you must compile this code as a library and use these classes from an ASP.NET page (.aspx file).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 <span data-ttu-id="2f101-937">다음 예제에서는 처리 하는 방법을 보여 줍니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트를 사용 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> LINQ to SQL 클래스를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-937">The following example shows how to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event when using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a LINQ to SQL class.</span></span>  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-938">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-938">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-939">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-939">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-940">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-940">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-941"><see langword="Delete" /> 또는 <see langword="Update" /> 메서드에 전달된 원래 값에 대한 매개 변수의 이름에 적용할 서식 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-941">Gets or sets a format string to apply to the names of the parameters for original values that are passed to the <see langword="Delete" /> or <see langword="Update" /> methods.</span></span></summary>
        <value><span data-ttu-id="2f101-942"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 또는 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 메서드에 전달된 모든 <paramref name="oldValues" /> 또는 키 매개 변수의 이름에 적용된 서식 문자열을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-942">A string that represents a format string applied to the names of any <paramref name="oldValues" /> or key parameters passed to the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> or <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> methods.</span></span> <span data-ttu-id="2f101-943">기본값은 <c>"{0}"</c>, 필드 이름은 매개 변수 이름을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-943">The default is <c>"{0}"</c>, which means the parameter name is the field name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-944">값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 속성으로 표시 된 것과 같은 기본 키에 적용 됩니다를 `DataKeyNames` 삭제 또는 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성를 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 및 원래 값 집합과 해당 하는 데이터 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-944">The value of the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> property is applied to primary keys only, such as those that are identified with the `DataKeyNames` property of a data-bound control, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, and the set of original values are passed to the corresponding data method.</span></span>  
  
 <span data-ttu-id="2f101-945">다음은 변경할 수 있는 두 가지 일반적인 시나리오는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 속성:</span><span class="sxs-lookup"><span data-stu-id="2f101-945">The following are two common scenarios where you might change the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> property:</span></span>  
  
-   <span data-ttu-id="2f101-946">업데이트의 이전 및 새 값을 구분 하는 속성을 변경 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-946">You might want to change the property to differentiate between old and new values in updates.</span></span> <span data-ttu-id="2f101-947">경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값, 매개 변수는 원래 및 새 값에 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션.</span><span class="sxs-lookup"><span data-stu-id="2f101-947">When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters for both the original and new values are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="2f101-948">서식 문자열을 사용 하지 않고 이름이 같은 두 개의 매개 변수는 각 데이터 필드에 대해 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-948">Without the formatting string, two parameters with the same name would be created for each data field.</span></span> <span data-ttu-id="2f101-949">원래 값 매개 변수의 이름을 변경 하 여 충돌을 감지 하 고 키 값을 비교 하 여 원래 데이터 원본에 데이터를 비교할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-949">By changing the name of the original value parameter, you can compare the data to the original data source to detect conflicts and compare key values.</span></span>  
  
-   <span data-ttu-id="2f101-950">일부 비주얼 디자이너에는 원래 값 및 키에 대 한 특정 명명 체계를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-950">Some visual designers implement a particular naming scheme for original values and keys.</span></span>  
  
 <span data-ttu-id="2f101-951"><xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-951">The <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-952">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-952">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-953">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-953">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-954">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-954">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2f101-955">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-955">An <see cref="T:System.EventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="2f101-956"><see cref="E:System.Web.UI.Page.LoadComplete" /> 이벤트 처리기를 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤이 포함된 페이지에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-956">Adds a <see cref="E:System.Web.UI.Page.LoadComplete" /> event handler to the page that contains the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-957">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-957">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2f101-958">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-958">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2f101-959">또한 <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-959">The <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2f101-960">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-960">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2f101-961">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-961">When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-962">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-962">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-963">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-963">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-964">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-964">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-965"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />이 나타내는 형식의 개체를 생성하기 위해 문자열 값을 실제 속성 형식으로 변환할 때 사용되는 문화권 정보를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-965">Gets a or sets a value that indicates what culture information is used when converting string values to actual property types in order to construct an object of the type indicated by <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</span></span></summary>
        <value><span data-ttu-id="2f101-966">문화권 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-966">The culture information.</span></span> <span data-ttu-id="2f101-967">기본값은 <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-967">The default value is <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f101-968"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />컨트롤의 상태를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-968">Saves the state of the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</span></span></summary>
        <returns><span data-ttu-id="2f101-969">서버 컨트롤의 현재 뷰 상태를 반환합니다. 컨트롤과 연결된 뷰 상태가 없는 경우에는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-969">Returns the server control's current view state; otherwise, returns <see langword="null" />, if there is no view state associated with the control.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-970">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-970">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-971">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-971">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-972">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-972">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f101-973"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 속성으로 식별되는 메서드를 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" /> 컬렉션의 매개 변수와 함께 호출하여 내부 데이터 스토리지에서 데이터를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-973">Retrieves data from the underlying data storage by calling the method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> property with the parameters in the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2f101-974">데이터 행의 <see cref="T:System.Collections.IEnumerable" /> 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-974">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-975">지정된 된 메서드는 모든 메서드 시그니처를 가질 수 있지만 반환 하거나에 대 한 다음 표에 나열 된 형식 중 하나에서 파생 되어야 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 성공적으로 호출할 수는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-975">The specified method might have any method signature, but it must return or be derived from one of the types listed in the following table for the <xref:System.Web.UI.WebControls.ObjectDataSource> control to call it successfully.</span></span>  
  
|<span data-ttu-id="2f101-976">반환 형식</span><span class="sxs-lookup"><span data-stu-id="2f101-976">Return type</span></span>|<span data-ttu-id="2f101-977">작업</span><span class="sxs-lookup"><span data-stu-id="2f101-977">Action</span></span>|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<span data-ttu-id="2f101-978">합니다 <xref:System.Collections.IEnumerable> 에서 반환 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-978">The <xref:System.Collections.IEnumerable> is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
|<xref:System.Data.DataTable>|<span data-ttu-id="2f101-979"><xref:System.Data.DataView> 사용 하 여 만들어집니다 합니다 <xref:System.Data.DataTable> 반환한는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-979">A <xref:System.Data.DataView> is created by using the <xref:System.Data.DataTable> and returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
|<xref:System.Data.DataView>|<span data-ttu-id="2f101-980">합니다 <xref:System.Data.DataView> 에서 반환 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-980">The <xref:System.Data.DataView> is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
|<xref:System.Data.DataSet>|<span data-ttu-id="2f101-981">첫 번째 <xref:System.Data.DataTable> 의 합니다 <xref:System.Data.DataSet> 추출 및 <xref:System.Data.DataView> 만들어지고 반환한는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-981">The first <xref:System.Data.DataTable> of the <xref:System.Data.DataSet> is extracted and a <xref:System.Data.DataView> is created and returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
|<xref:System.Object>|<span data-ttu-id="2f101-982">개체 단일 요소에 래핑됩니다 <xref:System.Collections.IEnumerable> 컬렉션에서 반환 된 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-982">The object is wrapped in a one-element <xref:System.Collections.IEnumerable> collection and returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
  
 <span data-ttu-id="2f101-983">로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-983">The method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property can be an instance method or a `static` (`Shared` in Visual Basic) method.</span></span> <span data-ttu-id="2f101-984">인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 제외 하 고 동일한 인스턴스에 의해 지정 된 메서드를 호출 하는 속성은 호출 된 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성 및 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-984">If it is an instance method, the business object is created and destroyed each time the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property is called, except that the same instance is used to call the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property and the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property.</span></span> <span data-ttu-id="2f101-985">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드가 반환 되는 <xref:System.Collections.IEnumerable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-985">The <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method returns an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="2f101-986">그러나 캐싱 및 필터링 시나리오를 사용 하려면 반환 값 이어야 합니다는 <xref:System.Data.DataSet> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-986">However, to enable caching and filtering scenarios, the return value must be a <xref:System.Data.DataSet> object.</span></span> <span data-ttu-id="2f101-987">하는 동안를 <xref:System.Data.DataSet> 클래스를 구현 하지 않습니다는 <xref:System.Collections.IEnumerable> 인터페이스는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 자동으로 기본값을 추출 <xref:System.Data.DataView> 컨트롤을 구현 하는 <xref:System.Collections.IEnumerable>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-987">While the <xref:System.Data.DataSet> class does not implement the <xref:System.Collections.IEnumerable> interface, the <xref:System.Web.UI.WebControls.ObjectDataSource> control automatically extracts the default <xref:System.Data.DataView> control, which implements the <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="2f101-988">전에 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 작업을 수행할를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-988">Before the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operation is performed, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event.</span></span> <span data-ttu-id="2f101-989">처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-989">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event to examine the values of the parameters and to perform any preprocessing before a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operation.</span></span> <span data-ttu-id="2f101-990">데이터 검색 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 로 식별 되는 개체의 인스턴스를 만들 하기 위해는 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-990">To perform a data retrieval operation, the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object uses reflection to create an instance of the object that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property.</span></span> <span data-ttu-id="2f101-991">다음으로 식별 되는 메서드를 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에 연결 된 모든를 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-991">It then calls the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, using any associated <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> properties.</span></span> <span data-ttu-id="2f101-992">후는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-992">After the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operation completes, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> event.</span></span> <span data-ttu-id="2f101-993">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 이벤트 모든 반환 값과 출력 매개 변수 예외를 검사 하 고 후 처리를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-993">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="2f101-994">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 반환을 <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, 또는 <xref:System.Data.DataView> 개체 및 캐싱을 사용 하도록 설정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 에서 데이터를 검색 하는 동안 캐시에 데이터를 저장 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 작업.</span><span class="sxs-lookup"><span data-stu-id="2f101-994">If the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property returns a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView> object and caching is enabled, the <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves data from and saves data to the cache during the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operation.</span></span> <span data-ttu-id="2f101-995">캐시가 만들어지는, 삭제 또는 새로 고침의 조합에 의해 지정 된 캐싱 동작을 기반으로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 고 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-995">The cache is created, discarded, or refreshed based on the caching behavior that is specified by the combination of the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> properties.</span></span>  
  
 <span data-ttu-id="2f101-996">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성이 반환을 <xref:System.Data.DataSet> 또는 <xref:System.Data.DataTable> 개체 및 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성이 지정 된, 제공 된를 사용 하 여 계산 됩니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 속성 및 결과 필터 목록 중에 데이터에 적용 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-996">If the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property returns a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object, and a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property has been specified, it is evaluated with any supplied <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> properties and the resulting filter is applied to the list of data during the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="2f101-997"><xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-997">The <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> method of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-998">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-998">For more information about parameter merging, object lifetime, and method resolution, see <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.</span></span>  
  
## <a name="data-bound-controls"></a><span data-ttu-id="2f101-999">데이터 바인딩된 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-999">Data-Bound Controls</span></span>  
 <span data-ttu-id="2f101-1000">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어와 같은 데이터 바인딩된 컨트롤을 사용 하 여 연결 된 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤 필요 없는 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 페이지 코드에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1000">When the <xref:System.Web.UI.WebControls.ObjectDataSource> control is associated with a data-bound control, such as the <xref:System.Web.UI.WebControls.GridView> control, it is not necessary to call the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method from page code.</span></span> <span data-ttu-id="2f101-1001"><xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드 대신 데이터 바인딩된 컨트롤에서 직접 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1001">The <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method is invoked directly by the data-bound control instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1002">코드 예제를 보려면 <xref:System.Web.UI.WebControls.ObjectDataSource>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2f101-1002">For a code example, see <xref:System.Web.UI.WebControls.ObjectDataSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1003">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1003">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1004">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1004">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1005">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1005">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1006"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤이 행 수를 검색할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1006">Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control invokes to retrieve a row count.</span></span></summary>
        <value><span data-ttu-id="2f101-1007"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />가 행 수를 검색할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1007">A string that represents the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> uses to retrieve a row count.</span></span> <span data-ttu-id="2f101-1008">이 메서드는 정수(<see cref="T:System.Int32" />)를 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1008">The method must return an integer (<see cref="T:System.Int32" />).</span></span> <span data-ttu-id="2f101-1009">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1009">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1010"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 속성은 데이터 소스 페이징을 지원 하기 위해 총 행 수를 검색 하는 데 사용 되는 비즈니스 개체 메서드를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1010">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property identifies a business object method that is used to retrieve a total row count, to support data source paging.</span></span> <span data-ttu-id="2f101-1011"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 속성은 경우에 평가 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> 속성이 `true`.</span><span class="sxs-lookup"><span data-stu-id="2f101-1011">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is evaluated only if the <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="2f101-1012"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-1012">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-1013">페이징을 지 원하는 방법에 대 한 자세한 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어를 참조 하십시오 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1013">For information about how paging is supported by the <xref:System.Web.UI.WebControls.ObjectDataSource> control, see <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1014">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자는 페이지에 표시 된 레코드 수를 선택할 수 있도록 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1014">The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.</span></span>  
  
 <span data-ttu-id="2f101-1015">웹 페이지에는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1015">The Web page contains an <xref:System.Web.UI.WebControls.ObjectDataSource> control whose <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`.</span></span> <span data-ttu-id="2f101-1016"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 쿼리에서 레코드의 총 수를 반환 하는 메서드의 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1016">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set to the name of a method that returns the total number of records in the query.</span></span> <span data-ttu-id="2f101-1017">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> 속성 및 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> 속성 선택 메서드에서 사용 되는 매개 변수의 이름으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1017">The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property and the <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property are set to the names of the parameters that are used in the Select method.</span></span> <span data-ttu-id="2f101-1018">페이지는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1018">The page also contains a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 <span data-ttu-id="2f101-1019">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> 의 이벤트는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1019">The second example shows a handler for the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> event of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2f101-1020">처리기 집합의 코드는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 속성을 사용자의 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1020">The code in the handler sets the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property to the user's selection.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 <span data-ttu-id="2f101-1021">세 번째 예제에서는 Customers 테이블에서 데이터를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1021">The third example shows the data access class that retrieves data from the Customers table.</span></span> <span data-ttu-id="2f101-1022">라는 메서드를 포함 `GetSubsetOfEmployees`에 할당 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1022">It includes a method named `GetSubsetOfEmployees`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-1023">예제에는 또한 라는 메서드 `GetEmployeeCount`에 할당 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1023">The example also includes a method named `GetEmployeeCount`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-1024">LINQ를 사용 하 여 Customers 테이블을 쿼리 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1024">The class uses LINQ to query the Customers table.</span></span> <span data-ttu-id="2f101-1025">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스와 Customers 테이블을 나타내는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1025">The example requires a LINQ to SQL class that represents the Northwind database and Customers table.</span></span> <span data-ttu-id="2f101-1026">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1026">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1027">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1027">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1028">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1028">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1029">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1029">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1030"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 작업이 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1030">Occurs when a <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1031">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 반환 값 또는 출력 매개 변수의 값을 확인 하거나 후 예외가 throw 되었는지 여부를 확인 하려면 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 작업이 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1031">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operation has completed.</span></span> <span data-ttu-id="2f101-1032">반환 값, 출력 매개 변수 및 예외 처리 속성에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1032">The return value, output parameters, and exception handling properties are available from the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2f101-1033">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1033">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1034">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자를 검색 하 고 Northwind 데이터베이스의 Employees 테이블의 레코드를 업데이트할 수 있도록 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1034">The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.</span></span>  
  
 <span data-ttu-id="2f101-1035">첫 번째 예제 두 개가 포함 된 웹 페이지를 보여 줍니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1035">The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2f101-1036">첫 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DropDownList> 검색 하 고 데이터베이스에서 직원 이름이 표시 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1036">The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database.</span></span> <span data-ttu-id="2f101-1037">두 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 검색, 표시 및 사용자가 선택 되어 직원 레코드의 데이터를 수정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1037">The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 <span data-ttu-id="2f101-1038">두 번째 예제에 대 한 처리기를 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1038">The second example shows handlers for the <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> and <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> events.</span></span> <span data-ttu-id="2f101-1039"><xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 이벤트 처리기는 Employee 테이블 로부터 검색 된 데이터를 포함 하는 개체를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1039">The <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> event handler serializes the object that contains data that was retrieved from the Employee table.</span></span> <span data-ttu-id="2f101-1040">직렬화 된 개체는 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1040">The serialized object is stored in view state.</span></span> <span data-ttu-id="2f101-1041"><xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 업데이트 되는 데이터 레코드에 대 한 원본 데이터가 포함 된 뷰 상태에 개체를 역직렬화 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1041">The <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event handler deserializes the object in view state that contains the original data for the data record that is being updated.</span></span> <span data-ttu-id="2f101-1042">원래 데이터를 포함 하는 개체는 Update 메서드를 매개 변수로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1042">The object that contains the original data is passed as a parameter to the Update method.</span></span> <span data-ttu-id="2f101-1043">다른 프로세스에서 데이터를 수정 되었는지 여부를 검사할 수 있도록 원래 데이터를 데이터베이스에 전달 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1043">The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 <span data-ttu-id="2f101-1044">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1044">The third example shows the data access class that interacts with the Northwind database.</span></span> <span data-ttu-id="2f101-1045">클래스는 LINQ를 사용 하 여 쿼리하고 Employees 테이블을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1045">The class uses LINQ to query and update the Employees table.</span></span> <span data-ttu-id="2f101-1046">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스 및 직원 테이블을 나타내는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1046">The example requires a LINQ to SQL class that represents the Northwind database and Employees table.</span></span> <span data-ttu-id="2f101-1047">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1047">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1048">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1048">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1049">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1049">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1050">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1050">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1051"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1051">Occurs before a <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1052">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화를 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 데이터 검색 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1052">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.ObjectDataSource> control performs the data retrieval operation.</span></span> <span data-ttu-id="2f101-1053">매개 변수를 사용할 수는 <xref:System.Collections.IDictionary> 액세스 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1053">The parameters are available as an <xref:System.Collections.IDictionary> collection that is accessed by the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> property, which is exposed by the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> object.</span></span>  
  
 <span data-ttu-id="2f101-1054">에 대 한 단일 호출 하기 위해이 이벤트를 발생 시킬 수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드를 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1054">This event can be fired twice for a single call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method, if the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set.</span></span> <span data-ttu-id="2f101-1055">합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> 개체 선택 된를 호출 하 여 데이터를 검색 하거나 검색할 수를 결정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1055">The <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> object is used to determine if select was called to retrieve data or retrieve the count.</span></span>  
  
 <span data-ttu-id="2f101-1056">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1056">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1057">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1057">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1058">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1058">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1059">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1059">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1060"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤이 데이터를 검색할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1060">Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control invokes to retrieve data.</span></span></summary>
        <value><span data-ttu-id="2f101-1061"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 데이터를 검색할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1061">A string that represents the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> uses to retrieve data.</span></span> <span data-ttu-id="2f101-1062">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1062">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1063">지정된 된 메서드는 모든 메서드 시그니처를 가질 수 있지만 다음 표에 나온 형식 중 하나를 반환 하는 <xref:System.Web.UI.WebControls.ObjectDataSource> 성공적으로 호출할 수는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1063">The specified method can have any method signature, but it must return one of the types shown in the following table for the <xref:System.Web.UI.WebControls.ObjectDataSource> control to call it successfully.</span></span>  
  
|<span data-ttu-id="2f101-1064">반환 형식</span><span class="sxs-lookup"><span data-stu-id="2f101-1064">Return type</span></span>|<span data-ttu-id="2f101-1065">작업</span><span class="sxs-lookup"><span data-stu-id="2f101-1065">Action</span></span>|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<span data-ttu-id="2f101-1066">합니다 <xref:System.Collections.IEnumerable> 에서 반환 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1066">The <xref:System.Collections.IEnumerable> is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
|<xref:System.Data.DataTable>|<span data-ttu-id="2f101-1067">A <xref:System.Data.DataView> 사용 하 여 만들어집니다 합니다 <xref:System.Data.DataTable> 반환한 및는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1067">A <xref:System.Data.DataView> is created using the <xref:System.Data.DataTable> and returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
|<xref:System.Data.DataView>|<span data-ttu-id="2f101-1068">A <xref:System.Data.DataView> 에서 반환 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1068">A <xref:System.Data.DataView> is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
|<xref:System.Data.DataSet>|<span data-ttu-id="2f101-1069">첫 번째 <xref:System.Data.DataTable> 의 합니다 <xref:System.Data.DataSet> 추출 됩니다 및 <xref:System.Data.DataView> 만들어지고 반환한는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1069">The first <xref:System.Data.DataTable> of the <xref:System.Data.DataSet> is extracted, and a <xref:System.Data.DataView> is created and returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
|<xref:System.Object>|<span data-ttu-id="2f101-1070">개체 단일 요소에 래핑됩니다 <xref:System.Collections.IEnumerable> 컬렉션에서 반환 된 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1070">The object is wrapped in a one-element <xref:System.Collections.IEnumerable> collection and returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span>|  
  
 <span data-ttu-id="2f101-1071"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-1071">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-1072">사용 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스를 삭제 하거나 데이터를 업데이트, 매개 변수 이름에 대 한 구성 되었는지 확인 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 에서 제어할 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션 select 메서드에 의해 반환 되는 열 이름과 일치 .</span><span class="sxs-lookup"><span data-stu-id="2f101-1072">When you use the <xref:System.Web.UI.WebControls.ObjectDataSource> class to delete or update data, make sure that the parameter names configured for the <xref:System.Web.UI.WebControls.ObjectDataSource> control in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection or <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection match the column names that are returned by the select method.</span></span>  
  
## <a name="object-lifetime"></a><span data-ttu-id="2f101-1073">개체 수명</span><span class="sxs-lookup"><span data-stu-id="2f101-1073">Object Lifetime</span></span>  
 <span data-ttu-id="2f101-1074">로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1074">The method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property can be an instance method or a `static` (`Shared` in Visual Basic) method.</span></span> <span data-ttu-id="2f101-1075">인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1075">If it is an instance method, the business object is created and destroyed each time the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-1076">처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 에 지정 된 메서드 앞에 비즈니스 개체를 사용 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1076">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> events to work with the business object before the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-1077">처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 메서드를 지정 된 후 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1077">You can also handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event that is raised after the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-1078">비즈니스 개체를 구현 하는 경우는 <xref:System.IDisposable> 인터페이스는 <xref:System.IDisposable.Dispose%2A> 개체를 제거 하기 전에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1078">If the business object implements the <xref:System.IDisposable> interface, the <xref:System.IDisposable.Dispose%2A> method is called before the object is destroyed.</span></span> <span data-ttu-id="2f101-1079">방법이 `static` (`Shared` Visual Basic의), 비즈니스 개체 생성 되지 않고 처리할 수 없는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1079">If the method is `static` (`Shared` in Visual Basic), the business object is never created and you cannot handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> events.</span></span>  
  
## <a name="parameter-merging"></a><span data-ttu-id="2f101-1080">병합 하는 매개 변수</span><span class="sxs-lookup"><span data-stu-id="2f101-1080">Parameter Merging</span></span>  
 <span data-ttu-id="2f101-1081">매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 이러한 원본에서 컬렉션:</span><span class="sxs-lookup"><span data-stu-id="2f101-1081">Parameters are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection from these sources:</span></span>  
  
-   <span data-ttu-id="2f101-1082">선언적으로 `SelectParameters` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1082">Declaratively from the `SelectParameters` element.</span></span>  
  
-   <span data-ttu-id="2f101-1083">프로그래밍 방식으로 `Selecting` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1083">Programmatically from the `Selecting` method.</span></span>  
  
 <span data-ttu-id="2f101-1084">먼저에 나열 된 매개 변수는 `SelectParameters` 요소가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1084">First, the parameters listed in the `SelectParameters` element are added.</span></span> <span data-ttu-id="2f101-1085">둘째, 매개 변수는 프로그래밍 방식으로 추가 및 제거에 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 하기 전에 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1085">Second, parameters are programmatically added and removed in the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event, which occurs before the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method is run.</span></span> <span data-ttu-id="2f101-1086">메서드는 매개 변수를 병합 된 후 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1086">The method is resolved after the parameters are merged.</span></span> <span data-ttu-id="2f101-1087">메서드 확인은 다음 섹션에 설명 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1087">Method resolution is discussed in the next section.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-1088">클라이언트에서 받은 모든 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1088">You should validate any parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-1089">런타임에 매개 변수 값을 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1089">The runtime simply substitutes the parameter value into the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span>  
  
## <a name="method-resolution"></a><span data-ttu-id="2f101-1090">메서드 확인</span><span class="sxs-lookup"><span data-stu-id="2f101-1090">Method Resolution</span></span>  
 <span data-ttu-id="2f101-1091">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드를 호출할 매개 변수에서 선언적으로 생성 된 데이터 바인딩된 컨트롤에서 데이터 필드를 `SelectParameters` 요소 및에 추가 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트 처리기 모두 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1091">When the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the `SelectParameters` element, and the parameters that were added in the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event handler are all merged.</span></span> <span data-ttu-id="2f101-1092">(자세한 내용은 이전 섹션 참조). <xref:System.Web.UI.WebControls.ObjectDataSource> 호출할 메서드를 찾으려면 다음 시도 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1092">(For more information, see the preceding section.) The <xref:System.Web.UI.WebControls.ObjectDataSource> control then attempts to find a method to call.</span></span> <span data-ttu-id="2f101-1093">에 지정 된 이름 가진 하나 이상의 메서드를 찾습니다 먼저는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1093">First, it looks for one or more methods with the name that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-1094">일치 하는 항목이 없으면는 <xref:System.InvalidOperationException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1094">If no match is found, an <xref:System.InvalidOperationException> exception is thrown.</span></span> <span data-ttu-id="2f101-1095">일치 하는 항목이 있으면 매개 변수 이름과 일치 하는 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1095">If a match is found, it then looks for matching parameter names.</span></span> <span data-ttu-id="2f101-1096">예를 들어 지정 된 형식 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성이 라는 두 개의 메서드도 `SelectARecord`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1096">For example, suppose a type that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property has two methods named `SelectARecord`.</span></span> <span data-ttu-id="2f101-1097">하나의 `SelectARecord` 하나의 매개 변수가 `ID`, 및 다른 `SelectARecord` 두 매개 변수가 `Name` 및 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1097">One `SelectARecord` has one parameter, `ID`, and the other `SelectARecord` has two parameters, `Name` and `Number`.</span></span> <span data-ttu-id="2f101-1098">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 컬렉션에 명명 된 매개 변수만 `ID`의 `SelectARecord` 메서드를만 `ID` 매개 변수 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1098">If the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection has only one parameter named `ID`, the `SelectARecord` method with just the `ID` parameter is called.</span></span> <span data-ttu-id="2f101-1099">메서드를 확인 하는 데 매개 변수의 형식을 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1099">The type of the parameter is not checked in resolving the methods.</span></span> <span data-ttu-id="2f101-1100">매개 변수의 순서는 중요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1100">The order of the parameters does not matter.</span></span>  
  
 <span data-ttu-id="2f101-1101">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성, 메서드를 다른 방식으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1101">If the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property is set, the method is resolved in a different way.</span></span> <span data-ttu-id="2f101-1102"><xref:System.Web.UI.WebControls.ObjectDataSource> 에 지정 된 이름의 메서드를 찾습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 는 매개 변수 형식 중 하나를 사용 하는 속성에 지정 된 된 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-1102">The <xref:System.Web.UI.WebControls.ObjectDataSource> looks for a method with the name that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property that takes one parameter of the type that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-1103">이 경우 매개 변수의 이름을 중요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1103">In this case, the name of the parameter does not matter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1104">다음 코드 예제에서는 어떻게를 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 사용 하 여 데이터를 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> Web Forms 페이지에 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1104">The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page.</span></span> <span data-ttu-id="2f101-1105"><xref:System.Web.UI.WebControls.ObjectDataSource> 식별 하는 부분적으로 또는 완전히 정규화 된 클래스 이름을 해당 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성과 메서드를 사용 하 여 데이터를 검색 하기 위해 호출 됩니다 해당 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1105">The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-1106">런타임 시 개체를 만든 및 리플렉션을 사용 하 여 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1106">At run time, the object is created and the method is called using reflection.</span></span> <span data-ttu-id="2f101-1107"><xref:System.Web.UI.WebControls.GridView> 컨트롤을 열거 합니다 <xref:System.Collections.IEnumerable> 컬렉션에서 지정 된 메서드에 의해 반환 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성 및 해당 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1107">The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, and displays the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1108">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1108">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1109">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1109">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1110">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1110">Creating an ObjectDataSource Control Source Object</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011"><span data-ttu-id="2f101-1111">Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-1111">Using the Entity Framework and the ObjectDataSource Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1112"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 속성에 지정된 메서드에서 사용하는 매개 변수의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1112">Gets a collection of parameters that are used by the method specified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> property.</span></span></summary>
        <value><span data-ttu-id="2f101-1113"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 속성에 지정된 메서드에서 사용하는 매개 변수의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1113">A collection of parameters that are used by the method specified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1114"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 속성을 가져옵니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-1114">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> property gets the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-1115">매개 변수를 추가 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 선언적으로 사용 하 여 컬렉션을 `SelectParameters` 요소 또는 처리기에서 프로그래밍 방식으로 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-1115">You add parameters to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection declaratively by using the `SelectParameters` element or programmatically in the handler for the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event.</span></span> <span data-ttu-id="2f101-1116">런타임 시에 나열 된 매개 변수는 `SelectParameters` 먼저 요소를 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1116">At run time, parameters listed in the `SelectParameters` element are added to the collection first.</span></span> <span data-ttu-id="2f101-1117">매개 변수 컬렉션에 다음 추가 또는 제거에 대 한 처리기를 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1117">Parameters in the collection are then added or removed by the handler for the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event.</span></span> <span data-ttu-id="2f101-1118">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트가 발생 하기 전에 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1118">The <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event is raised before the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method is run.</span></span>  
  
 <span data-ttu-id="2f101-1119">전에 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 이름 및에 포함 된 매개 변수의 형식에 메서드가 실행 될를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 컬렉션에 지정 된 메서드의 시그니처와 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1119">Before the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method is run, the names and types of the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection must match the signature of the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-1120">예를 들어 라는 선택 메서드 `GetEmployeesByStateAndAge` 사용을 `string` 및 매개 변수로 정수를 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 컬렉션에는 두 개의 매개 변수가 포함 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1120">For example, if a select method named `GetEmployeesByStateAndAge` takes a `string` and an integer as parameters, the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> collection must contain two parameters.</span></span> <span data-ttu-id="2f101-1121">첫 번째 매개 변수를 문자열로 해결 해야 하 고 두 번째 매개 변수는 정수를 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1121">The first parameter must resolve to a string and the second parameter must resolve to an integer.</span></span> <span data-ttu-id="2f101-1122">태그에서 두 매개 변수를 지정할 수 있습니다는 `SelectParameters` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1122">Both parameters can be specified in markup in the `SelectParameters` element.</span></span> <span data-ttu-id="2f101-1123">수 또는 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트 처리기 또는 1 개의 매개 변수가 태그에 추가 될 수 있으며 다른 하나는 프로그래밍 방식으로 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1123">Alternatively, they can be can be added in the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event handler, or one parameter can be added in markup and the other one can be added programmatically.</span></span>  
  
 <span data-ttu-id="2f101-1124">자세한 내용은 [ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) 하며 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1124">For more information, see [Using Parameters with the ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) and the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-1125">코드에 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트 처리기 또는 지정 된 메서드에서 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성을 클라이언트에서 수신 되는 모든 매개 변수 값의 유효성을 검사 하는 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1125">In the code for the <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> event handler or in the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, make sure that you validate any parameter value that is received from the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1126">다음 코드 예제에 사용 하 여 단일 데이터 레코드를 검색 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에 표시 하는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1126">The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control and display it in a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2f101-1127"><xref:System.Web.UI.WebControls.ObjectDataSource> 제어를 호출 하 여 특정 직원 레코드를 검색 합니다 `GetEmployee` 메서드의 `EmployeeLogic` 클래스.</span><span class="sxs-lookup"><span data-stu-id="2f101-1127">The <xref:System.Web.UI.WebControls.ObjectDataSource> control retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class.</span></span> <span data-ttu-id="2f101-1128">`GetEmployee` 메서드는 직원 ID 매개 변수가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1128">The `GetEmployee` method requires an employee ID parameter.</span></span> <span data-ttu-id="2f101-1129"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 사용 하는 `QueryStringParameter` 만들려는 태그 요소에에서는 <xref:System.Web.UI.WebControls.QueryStringParameter> URL에서 지정 된 쿼리 문자열 매개 변수의 값을 검색 하 고에 전달 하는 개체는 `GetEmployee` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1129">The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a `QueryStringParameter` element in markup to create a <xref:System.Web.UI.WebControls.QueryStringParameter> object that will retrieve the value of a specified query-string parameter from the URL and pass it to the `GetEmployee` method.</span></span>  
  
 <span data-ttu-id="2f101-1130">컨트롤 속성, 폼 필드, 쿠키, ASP.NET 프로필 데이터를 세션 상태와 같은 다른 원본에서 값을 검색 하려면 다른 매개 변수 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1130">Other parameter classes can be used to retrieve values from other sources, such as control properties, form fields, cookies, ASP.NET profile data, or session state.</span></span> <span data-ttu-id="2f101-1131">또한 select 메서드에 하드 코드 된 값을 전달 하기 위해 태그에 정의 된 매개 변수 개체를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1131">You can also use a parameter object that is defined in markup in order to pass a hard-coded value to the select method.</span></span> <span data-ttu-id="2f101-1132">사용할 수 있는 매개 변수 클래스에 대 한 자세한 내용은 참조 하세요. [필터링에 대 한 데이터 소스 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100))입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1132">For more information about parameter classes that are available, see [Using Parameters with Data Source Controls for Filtering](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)).</span></span>  
  
 <span data-ttu-id="2f101-1133">이 예제를 실행 하려면 다음이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1133">To run this example, you will need the following:</span></span>  
  
-   <span data-ttu-id="2f101-1134">명명 된 연결 문자열을 포함 하는 웹 사이트 `NorthwindConnection` 는 Northwind 데이터베이스에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1134">A Web site that has a connection string named `NorthwindConnection` that connects to the Northwind Traders database.</span></span> <span data-ttu-id="2f101-1135">자세한 내용은 참조는 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1135">For more information, see the <xref:System.Web.UI.WebControls.ObjectDataSource> class overview.</span></span>  
  
-   <span data-ttu-id="2f101-1136">합니다 `EmployeeLogic` 코드 예제에 대 한 중 하나로 표시 되는 클래스는 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1136">The `EmployeeLogic` class that is shown as one of the code examples for the <xref:System.Web.UI.WebControls.ObjectDataSource> class overview.</span></span> <span data-ttu-id="2f101-1137">클래스 파일을 App_Code 폴더에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1137">The class file must be located in the App_Code folder.</span></span>  
  
-   <span data-ttu-id="2f101-1138">.Aspx 페이지와 샘플 코드를 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1138">The sample code can be run as an .aspx page.</span></span> <span data-ttu-id="2f101-1139">쿼리 문자열 매개 변수 없이 페이지를 요청 하면 오류 메시지가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1139">If you request the page without a query-string parameter, an error message is displayed.</span></span> <span data-ttu-id="2f101-1140">같은 쿼리 문자열을 사용 하 여 페이지를 요청 하는 경우 `?empid=1` .aspx 파일의 이름 뒤 요청한 직원에 대 한 세부 정보가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1140">If you request the page using a query string such as `?empid=1` after the name of the .aspx file, you will see the details for the requested employee.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1141">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1141">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1142">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1142">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1143">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1143">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1144"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> 매개 변수에서 데이터 소스 정렬을 지원하기 위해 정렬 식을 지정하는 데 사용하는 비즈니스 개체의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1144">Gets or sets the name of the business object that the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> parameter used to specify a sort expression for data source sorting support.</span></span></summary>
        <value><span data-ttu-id="2f101-1145">데이터 정렬에 사용되는 매개 변수를 나타내는 데 사용되는 메서드 매개 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1145">The name of the method parameter used to indicate the parameter which is used to sort the data.</span></span> <span data-ttu-id="2f101-1146">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1146">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1147"><xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> 속성은 데이터 소스 정렬을 지원 하기 위해 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1147">The <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> property is used to support data source sorting.</span></span> <span data-ttu-id="2f101-1148">경우는 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 속성이 설정 되어를 <xref:System.Web.UI.DataSourceSelectArguments> 개체를 전달할를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드를를 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> 값의 매개 변수 이름을 식별는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 기준인 데이터 정렬 하는 비즈니스 개체 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1148">When a <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is set on the <xref:System.Web.UI.DataSourceSelectArguments> object and passed to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method, the <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> value identifies the parameter name of the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> business object method according to which the data is sorted.</span></span>  
  
 <span data-ttu-id="2f101-1149">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 뒤에 형식으로 쉼표로 구분 된 필드 값이 매개 변수 사용에 전달 되는 값을 데이터 바인딩된 컨트롤과 관련이 `"ASC"` 또는 `"DESC"`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1149">If the <xref:System.Web.UI.WebControls.ObjectDataSource> is associated with a data-bound control, the values that are passed to this parameter take the form of comma-separated field values followed by `"ASC"` or `"DESC"`.</span></span> <span data-ttu-id="2f101-1150">예를 들어, 값에 오름차순 정렬 `Name` 것 `"Name ASC"`입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1150">For example, the value for an ascending sort on `Name` would be `"Name ASC"`.</span></span>  
  
 <span data-ttu-id="2f101-1151"><xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-1151">The <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1152">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1152">This section contains two code examples.</span></span> <span data-ttu-id="2f101-1153">첫 번째 코드 예제에는 정렬을 지 원하는 형식을 구현 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1153">The first code example demonstrates how to implement a type that supports sorting.</span></span> <span data-ttu-id="2f101-1154">두 번째 코드 예제에는 정렬 식을 구현 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1154">The second code example demonstrates how to implement a sort expression.</span></span>  
  
 <span data-ttu-id="2f101-1155">다음 코드 예제에는 정렬을 지 원하는 형식을 구현 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1155">The following code example demonstrates how to implement a type that supports sorting.</span></span> <span data-ttu-id="2f101-1156">합니다 `SelectMethod` 의 합니다 `SortingData` 매개 변수를 사용 하는 클래스가 `sortExpression`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1156">The `SelectMethod` of the `SortingData` class takes a parameter, `sortExpression`.</span></span> <span data-ttu-id="2f101-1157">에 전달 되는 문자열 `SelectMethod` 에 사용 되는 <xref:System.Data.DataView.Sort%2A> 의 속성을 <xref:System.Data.DataView> 에서 반환 되는 개체 `SelectMethod`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1157">The string that is passed to `SelectMethod` is used for the <xref:System.Data.DataView.Sort%2A> property of the <xref:System.Data.DataView> object that is returned by `SelectMethod`.</span></span>  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 <span data-ttu-id="2f101-1158">다음 코드 예제에는 정렬 식을 구현 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1158">The following code example demonstrates how to implement a sort expression.</span></span> <span data-ttu-id="2f101-1159">인스턴스를 만들고 웹 페이지의 코드는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1159">The code in the Web page creates an instance of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-1160"><xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성이로 설정 되어 `SortingData` 하며 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> 속성이 `sortExpression`.</span><span class="sxs-lookup"><span data-stu-id="2f101-1160">The <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property is set to `SortingData` and the <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> property is set to `sortExpression`.</span></span> <span data-ttu-id="2f101-1161">합니다 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> 의 속성을 <xref:System.Web.UI.WebControls.GridView> 로 설정 되어 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1161">The <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true`.</span></span> <span data-ttu-id="2f101-1162">클릭할 때 합니다 **정렬** 단추, 필드 이름을 `Name` 또는 `Number`, 전달 됩니다 `SelectMethod` 정렬 매개 변수에서.</span><span class="sxs-lookup"><span data-stu-id="2f101-1162">When the user clicks the **Sort** button, the field name, `Name` or `Number`, is passed to `SelectMethod` in the sort parameter.</span></span>  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1163">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1163">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1164">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1164">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1165">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1165">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1166">Microsoft SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 세미콜론으로 구분된 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1166">Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</span></span></summary>
        <value><span data-ttu-id="2f101-1167">SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1167">A string that indicates which databases and tables to use for the SQL Server cache dependency.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1168">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 지원의 기반이 되는 선택적 만료 정책을 <xref:System.Web.Caching.SqlCacheDependency> (데이터베이스 서버에 대 한 서비스를 구성 해야 합니다) 데이터 캐시에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1168">The <xref:System.Web.UI.WebControls.ObjectDataSource> control supports an optional expiration policy that is based on the <xref:System.Web.Caching.SqlCacheDependency> object for the data cache (the service must be configured for the database server).</span></span>  
  
 <span data-ttu-id="2f101-1169">SQL Server는 캐시 무효화에 대 한 두 가지 메커니즘을 지원 합니다: 폴링 및 알림.</span><span class="sxs-lookup"><span data-stu-id="2f101-1169">SQL Server supports two mechanisms for cache invalidation: polling and notification.</span></span> <span data-ttu-id="2f101-1170">각 메커니즘에 대 한 다른 구문이 <xref:System.Web.Caching.SqlCacheDependency> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1170">Each mechanism has a different syntax for the <xref:System.Web.Caching.SqlCacheDependency> object.</span></span>  
  
 <span data-ttu-id="2f101-1171"><xref:System.Web.UI.WebControls.ObjectDataSource> 폴링만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1171">The <xref:System.Web.UI.WebControls.ObjectDataSource> supports only polling.</span></span> <span data-ttu-id="2f101-1172"><xref:System.Web.Caching.SqlCacheDependency> 문자열 만드는 데 사용 되는 <xref:System.Data.SqlClient.SqlDependency> 에 전달 되는 개체를 <xref:System.Data.Common.DbCommand> 전에 생성자는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1172">The <xref:System.Web.Caching.SqlCacheDependency> string is used to create a <xref:System.Data.SqlClient.SqlDependency> object that is passed to the <xref:System.Data.Common.DbCommand> constructor before the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method is executed.</span></span> <span data-ttu-id="2f101-1173">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> 데이터베이스 및 테이블에서 사용 되는 동일한 형식에 따라 식별 하는 문자열을 `@ Page` 지시문을 문자열의 첫 번째 파트 인 SQL Server 데이터베이스에 연결 문자열 뒤에 콜론 구분 기호를 및 마지막 이름 데이터베이스 테이블의 (예를 들어 `"connectionstring1:table1"`).</span><span class="sxs-lookup"><span data-stu-id="2f101-1173">The <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> string identifies databases and tables according to the same format that is used by the `@ Page` directive, where the first part of the string is a connection string to a SQL Server database, followed by a colon delimiter, and finally the name of the database table (for example, `"connectionstring1:table1"`).</span></span> <span data-ttu-id="2f101-1174">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> 둘 이상의 테이블에 종속 속성, 연결 문자열 및 테이블 이름 쌍은 세미콜론으로 구분 됩니다 (예를 들어 `"connectionstring1:table1";connectionstring2:table2"`).</span><span class="sxs-lookup"><span data-stu-id="2f101-1174">If the <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> property depends on more than one table, the connection string and table name pairs are separated by semicolons (for example, `"connectionstring1:table1";connectionstring2:table2"`).</span></span>  
  
 <span data-ttu-id="2f101-1175">구현의 캐시 논리를 작성 해야 하는 알림을 지원 하려면 사용자 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성의 생성을 처리 하 고는 <xref:System.Web.Caching.SqlCacheDependency> 코드에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1175">To support notification, you must write the cache logic in the implementation of your <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property and handle the construction of the <xref:System.Web.Caching.SqlCacheDependency> object in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1176">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1176">This section contains two code examples.</span></span> <span data-ttu-id="2f101-1177">첫 번째 코드 예제에는 SQL Server 캐시 종속성을 만들고 설정 하는 방법을 보여 줍니다. 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1177">The first code example demonstrates how to create a SQL Server cache dependency and set the <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> property of a <xref:System.Web.UI.WebControls.ObjectDataSource> object.</span></span> <span data-ttu-id="2f101-1178">두 번째 코드 예제에는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <xref:System.Data.DataSet> 캐싱 및 필터링을 사용 하는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1178">The second code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching and filtering with an <xref:System.Web.UI.WebControls.ObjectDataSource> object.</span></span>  
  
 <span data-ttu-id="2f101-1179">다음 코드 예제에는 SQL Server 캐시 종속성을 만들고 설정 하는 방법을 보여 줍니다. 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1179">The following code example demonstrates how to create a SQL Server cache dependency and set the <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> property of a <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-1180">이 예제에서는 데이터베이스 120 초 마다 폴링됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1180">In this example, the database is polled every 120 seconds.</span></span> <span data-ttu-id="2f101-1181">Northwind Traders 직원의 데이터를 변경 하는 동안 시간 테이블에서 캐시 된 데이터를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 표시 하 여는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 만료 되 고 새 데이터 집합을 페이지에 대 한 다음 요청에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1181">If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <xref:System.Web.UI.WebControls.ObjectDataSource> control and displayed by the <xref:System.Web.UI.WebControls.GridView> control is expired and a new set of data is retrieved on the next request for the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 <span data-ttu-id="2f101-1182">다음 코드 예제에는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <xref:System.Data.DataSet> 캐싱 및 필터링을 사용 하는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1182">The following code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching and filtering with an <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-1183">기본 구현에서 합니다 `EmployeeLogic` 클래스를 `GetAllEmployees` 메서드가 반환 되는 <xref:System.Collections.ArrayList> 개체.</span><span class="sxs-lookup"><span data-stu-id="2f101-1183">In the base implementation of the `EmployeeLogic` class, the `GetAllEmployees` method returns an <xref:System.Collections.ArrayList> object.</span></span> <span data-ttu-id="2f101-1184">완전히 사용 하려면 개체를 리팩터링 하는 대신를 <xref:System.Web.UI.WebControls.ObjectDataSource> 래퍼 메서드 라는 Web Forms 페이지에서 `GetAllEmployeesAsDataSet` 집합을 반환 하는 항목이 `NorthwindEmployee` 데이터를 <xref:System.Data.DataSet>입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1184">Instead of refactoring the object completely to work with the <xref:System.Web.UI.WebControls.ObjectDataSource> on a Web Forms page, a wrapper method named `GetAllEmployeesAsDataSet` is added that returns a set of `NorthwindEmployee` data as a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1185">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1185">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1186">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1186">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1187">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1187">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1188">데이터 소스 페이징을 지원하기 위해 검색할 첫 번째 레코드의 식별자 값을 나타내는 데 사용되는 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1188">Gets or sets the name of the data retrieval method parameter that is used to indicate the value of the identifier of the first record to retrieve for data source paging support.</span></span></summary>
        <value><span data-ttu-id="2f101-1189">검색할 첫 번째 레코드를 나타내는 데 사용되는 비즈니스 개체 메서드 매개 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1189">The name of the business object method parameter used to indicate the first record to retrieve.</span></span> <span data-ttu-id="2f101-1190">이 매개 변수는 정수 값을 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1190">The parameter must return an integer value.</span></span> <span data-ttu-id="2f101-1191">기본값은 <c>"startRowIndex"</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1191">The default is <c>"startRowIndex"</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1192"><xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> 속성은 데이터 소스 페이징을 지원 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1192">The <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property is used to support data source paging.</span></span> <span data-ttu-id="2f101-1193">페이징을 지 원하는 방법에 대 한 자세한 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어를 참조 하십시오 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1193">For information about how paging is supported by the <xref:System.Web.UI.WebControls.ObjectDataSource> control, see <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</span></span>  
  
 <span data-ttu-id="2f101-1194"><xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-1194">The <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1195">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자는 페이지에 표시 된 레코드 수를 선택할 수 있도록 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1195">The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.</span></span>  
  
 <span data-ttu-id="2f101-1196">웹 페이지에는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1196">The Web page contains an <xref:System.Web.UI.WebControls.ObjectDataSource> control whose <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`.</span></span> <span data-ttu-id="2f101-1197"><xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 쿼리에서 레코드의 총 수를 반환 하는 메서드의 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1197">The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set to the name of a method that returns the total number of records in the query.</span></span> <span data-ttu-id="2f101-1198">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> 속성 및 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> 속성 선택 메서드에서 사용 되는 매개 변수의 이름으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1198">The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property and the <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property are set to the names of the parameters that are used in the Select method.</span></span> <span data-ttu-id="2f101-1199">페이지는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1199">The page also contains a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 <span data-ttu-id="2f101-1200">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> 의 이벤트는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1200">The second example shows a handler for the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> event of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2f101-1201">처리기 집합의 코드는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 속성을 사용자의 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1201">The code in the handler sets the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property to the user's selection.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 <span data-ttu-id="2f101-1202">세 번째 예제에서는 Customers 테이블에서 데이터를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1202">The third example shows the data access class that retrieves data from the Customers table.</span></span> <span data-ttu-id="2f101-1203">라는 메서드를 포함 `GetSubsetOfEmployees`에 할당 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1203">It includes a method named `GetSubsetOfEmployees`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-1204">예제에는 또한 라는 메서드 `GetEmployeeCount`에 할당 되는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1204">The example also includes a method named `GetEmployeeCount`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span> <span data-ttu-id="2f101-1205">LINQ를 사용 하 여 Customers 테이블을 쿼리 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1205">The class uses LINQ to query the Customers table.</span></span> <span data-ttu-id="2f101-1206">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스와 Customers 테이블을 나타내는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1206">The example requires a LINQ to SQL class that represents the Northwind database and Customers table.</span></span> <span data-ttu-id="2f101-1207">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1207">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1208">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1208">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1209">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1209">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1210">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1210">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f101-1211"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤의 뷰 상태 변경 내용을 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장할 수 있도록 추적합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1211">Tracks view-state changes to the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control so that they can be stored in the <see cref="T:System.Web.UI.StateBag" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1212"><xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> 메서드를 재정의 하는 개체에 대 한 뷰 상태의 일부로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 지점을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1212">The <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the view state for the object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1213">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1213">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1214">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1214">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1215">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1215">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1216"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 개체에서 나타내는 클래스의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1216">Gets or sets the name of the class that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> object represents.</span></span></summary>
        <value><span data-ttu-id="2f101-1217"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 나타내는 개체의 형식을 식별하는 부분적으로 정규화된 클래스 이름 또는 완전히 정규화된 클래스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1217">A partially or fully qualified class name that identifies the type of the object that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> represents.</span></span> <span data-ttu-id="2f101-1218">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1218">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1219">에 개체의 인스턴스를 만들는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 바인딩된, 컨트롤이 리플렉션을 사용 하 여 런타임 시 형식 이름으로 식별 되는 형식을 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1219">To create an instance of the object that the <xref:System.Web.UI.WebControls.ObjectDataSource> control binds to, the control uses reflection to load the type that is identified by the type name at run time.</span></span> <span data-ttu-id="2f101-1220">따라서 값을 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Bin 또는 App_Code 디렉터리에 있는 코드는 부분적으로 정규화 된 형식 또는 전역 어셈블리 캐시에 등록 되어 있는 코드에 대 한 정규화 된 형식 이름을 속성 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1220">Therefore, the value of the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property can be a partially qualified type for code that is located in the Bin or App_Code directories or a fully qualified type name for code that is registered in the global assembly cache.</span></span> <span data-ttu-id="2f101-1221">전역 어셈블리 캐시를 사용 하는 경우에 대 한 적절 한 참조를 추가 해야 합니다는 `assemblies` 합니다 Machine.config 또는 Web.config 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1221">If you use the global assembly cache, you must add the appropriate reference to the `assemblies` section of the Machine.config or Web.config file.</span></span>  
  
 <span data-ttu-id="2f101-1222">형식을 처리 하지 않는 한 기본 생성자를 있어야는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 해당 인스턴스를 직접 만들어야 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1222">The type must have a default constructor, unless you handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to create an instance of it yourself.</span></span> <span data-ttu-id="2f101-1223">형식의 인스턴스를 호출할 때마다 만들어집니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드, 형식에 메서드는 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1223">An instance of the type is created for each call to the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> methods, if the methods on the type are member methods.</span></span> <span data-ttu-id="2f101-1224">메서드는 인스턴스 생성 되지 않습니다 `static` (`Shared` Visual Basic에서).</span><span class="sxs-lookup"><span data-stu-id="2f101-1224">An instance is not created if the methods are `static` (`Shared` in Visual Basic).</span></span> <span data-ttu-id="2f101-1225">형식을 구현 하는 경우는 <xref:System.IDisposable> 인터페이스는 <xref:System.IDisposable.Dispose%2A> 개체를 제거 하기 전에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1225">If the type implements the <xref:System.IDisposable> interface, the <xref:System.IDisposable.Dispose%2A> method is called before the object is destroyed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1226">다음 코드 예제에서는 어떻게를 <xref:System.Web.UI.WebControls.GridView> 제어를 사용 하 여 데이터를 표시할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> Web Forms 페이지에 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1226">The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data by using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page.</span></span> <span data-ttu-id="2f101-1227"><xref:System.Web.UI.WebControls.ObjectDataSource> 식별 하는 부분적으로 또는 완전히 정규화 된 클래스 이름을 해당 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성과 메서드를 사용 하 여 데이터를 검색 하기 위해 호출 됩니다 해당 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1227">The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2f101-1228">런타임 시 개체를 만든 및 리플렉션을 사용 하 여 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1228">At run time, the object is created and the method is called using reflection.</span></span> <span data-ttu-id="2f101-1229"><xref:System.Web.UI.WebControls.GridView> 컨트롤을 열거 합니다 <xref:System.Collections.IEnumerable> 에서 반환 되는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성 및 해당 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1229">The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, and displays the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 <span data-ttu-id="2f101-1230">다음 예에서는 클래스를 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성 값을 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1230">The following example shows the class that the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property value refers to.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1231">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1231">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1232">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1232">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1233">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1233">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f101-1234"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> 속성으로 식별되는 메서드와 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" /> 컬렉션의 매개 변수를 호출하여 업데이트 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1234">Performs an update operation by calling the method that is identified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> property and any parameters that are in the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2f101-1235">내부 데이터 스토리지에서 업데이트되는 행 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1235">A value that represents the number of rows updated in the underlying data storage.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1236">비즈니스 개체는 한 번에 아닌 일괄 처리 데이터 하나의 레코드를 업데이트로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1236">The business object is assumed to update data one record at a time, rather than in a batch.</span></span>  
  
 <span data-ttu-id="2f101-1237">전에 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 작업을 수행할를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-1237">Before the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operation is performed, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event.</span></span> <span data-ttu-id="2f101-1238">처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 이벤트 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1238">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event to examine the values of the parameters and to perform any preprocessing before an <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operation.</span></span> <span data-ttu-id="2f101-1239">업데이트 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체 리플렉션을 사용 하 여로 식별 되는 개체의 인스턴스를 만들는 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1239">To perform an update operation, the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object uses reflection to create an instance of the object that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property.</span></span> <span data-ttu-id="2f101-1240">다음으로 식별 되는 메서드를 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성에 연결 된 모든를 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1240">It then calls the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property, using any associated <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> properties.</span></span> <span data-ttu-id="2f101-1241">후는 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2f101-1241">After the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operation completes, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> event.</span></span> <span data-ttu-id="2f101-1242">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 이벤트 모든 반환 값과 출력 매개 변수 예외를 검사 하 고 후 처리를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1242">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="2f101-1243"><xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1243">The <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> method of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-1244">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1244">For more information about parameter merging, object lifetime, and method resolution, see <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-1245">클라이언트에서 받은 모든 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1245">You should validate any parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-1246">런타임에 매개 변수 값을 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1246">The runtime simply substitutes the parameter value into the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property.</span></span>  
  
## <a name="data-bound-controls"></a><span data-ttu-id="2f101-1247">데이터 바인딩된 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1247">Data-Bound Controls</span></span>  
 <span data-ttu-id="2f101-1248">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어와 같은 데이터 바인딩된 컨트롤을 사용 하 여 연결 된 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤 필요 없는 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 페이지 코드에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1248">When the <xref:System.Web.UI.WebControls.ObjectDataSource> control is associated with a data-bound control, such as the <xref:System.Web.UI.WebControls.GridView> control, it is not necessary to call the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method from page code.</span></span> <span data-ttu-id="2f101-1249"><xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 메서드 대신 데이터 바인딩된 컨트롤에서 직접 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1249">The <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method is invoked directly by the data-bound control instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1250">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1250">This section contains two code examples.</span></span> <span data-ttu-id="2f101-1251">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1251">The first code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> objects to update data.</span></span> <span data-ttu-id="2f101-1252">두 번째 코드 예에서는 `EmployeeLogic` 첫 번째 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1252">The second code example shows the `EmployeeLogic` class that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-1253">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1253">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data.</span></span> <span data-ttu-id="2f101-1254">합니다 <xref:System.Web.UI.WebControls.DropDownList> Northwind 직원의 이름을 표시 하는 동안는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤은 입력 하 고 주소 정보를 업데이트 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1254">The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a Northwind employee, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information.</span></span> <span data-ttu-id="2f101-1255">때문에 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션에 포함를 <xref:System.Web.UI.WebControls.ControlParameter> 의 선택된 된 값에 바인딩되는 개체를 <xref:System.Web.UI.WebControls.DropDownList>, 발생 하는 단추는 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 직원을 선택한 후에 작업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1255">Because the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that raises the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operation is enabled only after an employee is selected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-1256">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1256">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="2f101-1257">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1257">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="2f101-1258">자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2f101-1258">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 <span data-ttu-id="2f101-1259">다음 코드 예제는 `EmployeeLogic` 앞의 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1259">The following code example shows the `EmployeeLogic` class that is used in the preceding code example.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1260">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1260">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1261">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1261">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1262">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1262">Creating an ObjectDataSource Control Source Object</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011"><span data-ttu-id="2f101-1263">Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-1263">Using the Entity Framework and the ObjectDataSource Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1264"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 작업이 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1264">Occurs when an <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1265">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 반환 값 또는 출력 매개 변수의 값을 확인 하거나 후 예외가 throw 되었는지 여부를 확인 하려면 이벤트는 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 작업이 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1265">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after an <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operation has completed.</span></span> <span data-ttu-id="2f101-1266">반환 값, 출력 매개 변수 및 예외 처리 속성에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1266">The return value, output parameters, and exception handling properties are available from the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2f101-1267">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1267">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1268">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1268">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1269">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1269">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1270">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1270">Creating an ObjectDataSource Control Source Object</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011"><span data-ttu-id="2f101-1271">Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-1271">Using the Entity Framework and the ObjectDataSource Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1272"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤이 데이터 업데이트를 위해 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1272">Gets or sets the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control invokes to update data.</span></span></summary>
        <value><span data-ttu-id="2f101-1273"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 데이터를 업데이트할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1273">A string that represents the name of the method or function that the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> uses to update data.</span></span> <span data-ttu-id="2f101-1274">기본값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1274">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1275">합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 있다고 가정으로 식별 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성 일괄 처리 대신 한 번에 한 업데이트를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1275">The <xref:System.Web.UI.WebControls.ObjectDataSource> control assumes that the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property performs updates one at a time, rather than in a batch.</span></span>  
  
 <span data-ttu-id="2f101-1276"><xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-1276">The <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property delegates to the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-1277">매개 변수 이름에 대 한 구성 되었는지 확인 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 에서 제어를 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션 select 메서드에 의해 반환 되는 열 이름과 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1277">Make sure that the parameter names configured for the <xref:System.Web.UI.WebControls.ObjectDataSource> control in the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection match the column names that are returned by the select method.</span></span>  
  
## <a name="object-lifetime"></a><span data-ttu-id="2f101-1278">개체 수명</span><span class="sxs-lookup"><span data-stu-id="2f101-1278">Object Lifetime</span></span>  
 <span data-ttu-id="2f101-1279">로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드.</span><span class="sxs-lookup"><span data-stu-id="2f101-1279">The method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property can be an instance method or a `static` (`Shared` in Visual Basic) method.</span></span> <span data-ttu-id="2f101-1280">인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1280">If it is an instance method, the business object is created and destroyed each time the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-1281">처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 에 지정 된 메서드 앞에 비즈니스 개체를 사용 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1281">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> events to work with the business object before the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-1282">처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 메서드를 지정 된 후 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1282">You can also handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event that is raised after the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property is called.</span></span> <span data-ttu-id="2f101-1283">비즈니스 개체를 구현 하는 경우는 <xref:System.IDisposable> 인터페이스는 <xref:System.IDisposable.Dispose%2A> 개체를 제거 하기 전에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1283">If the business object implements the <xref:System.IDisposable> interface, the <xref:System.IDisposable.Dispose%2A> method is called before the object is destroyed.</span></span> <span data-ttu-id="2f101-1284">방법이 `static` (`Shared` Visual Basic의), 비즈니스 개체 생성 되지 않고 처리할 수 없는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1284">If the method is `static` (`Shared` in Visual Basic), the business object is never created and you cannot handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> events.</span></span>  
  
## <a name="parameter-merging"></a><span data-ttu-id="2f101-1285">병합 하는 매개 변수</span><span class="sxs-lookup"><span data-stu-id="2f101-1285">Parameter Merging</span></span>  
 <span data-ttu-id="2f101-1286">매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 다음 세 가지 소스의 컬렉션:</span><span class="sxs-lookup"><span data-stu-id="2f101-1286">Parameters are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection from three sources:</span></span>  
  
-   <span data-ttu-id="2f101-1287">런타임에 데이터 바인딩된 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1287">From the data-bound control, at run time.</span></span>  
  
-   <span data-ttu-id="2f101-1288">`UpdateParameters` 요소를 선언적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1288">From the `UpdateParameters` element, declaratively.</span></span>  
  
-   <span data-ttu-id="2f101-1289"><xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 이벤트 처리기를 프로그래밍 방식으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1289">From the <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event handler, programmatically.</span></span>  
  
 <span data-ttu-id="2f101-1290">데이터 바인딩된 컨트롤에서 생성 된 모든 매개 변수가 먼저 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1290">First, any parameters that are generated from data-bound controls are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="2f101-1291">예를 들어 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 바인딩되는 <xref:System.Web.UI.WebControls.GridView> 열이 있는 컨트롤 `Name` 및 `Number`에 대 한 매개 변수 `Name` 및 `Number` 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1291">For example, if the <xref:System.Web.UI.WebControls.ObjectDataSource> control is bound to a <xref:System.Web.UI.WebControls.GridView> control that has the columns `Name` and `Number`, the parameters for `Name` and `Number` are added to the collection.</span></span> <span data-ttu-id="2f101-1292">매개 변수가의 정확한 이름은 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1292">The exact name of the parameter depends on the <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> property.</span></span> <span data-ttu-id="2f101-1293">이러한 매개 변수의 데이터 형식은 `string`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1293">The data type of these parameters is `string`.</span></span> <span data-ttu-id="2f101-1294">다음으로에 나와 있는 매개 변수는 `UpdateParameters` 요소가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1294">Next, the parameters that are listed in the `UpdateParameters` element are added.</span></span> <span data-ttu-id="2f101-1295">경우에 매개 변수를 `UpdateParameters` 에 이미 있는 매개 변수로 동일한 이름을 가진 요소가 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 기존 매개 변수 컬렉션에 지정 된 매개 변수와 일치 하도록 수정 됩니다는 `UpdateParameters` 요소.</span><span class="sxs-lookup"><span data-stu-id="2f101-1295">If a parameter in the `UpdateParameters` element is found with the same name as a parameter that is already in the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection, the existing parameter is modified to match the parameter that is specified in the `UpdateParameters` element.</span></span> <span data-ttu-id="2f101-1296">일반적으로이 매개 변수의 데이터 형식을 수정 하려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1296">Typically, this is used to modify the type of the data in the parameter.</span></span> <span data-ttu-id="2f101-1297">마지막으로 프로그래밍 방식으로 추가 및 제거할 수의 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 하기 전에 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1297">Finally, you can programmatically add and remove parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event, which occurs before the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method is run.</span></span> <span data-ttu-id="2f101-1298">메서드는 매개 변수를 병합 된 후 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1298">The method is resolved after the parameters are merged.</span></span> <span data-ttu-id="2f101-1299">메서드 확인은 다음 섹션에 설명 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1299">Method resolution is discussed in the next section.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-1300">클라이언트에서 받은 모든 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1300">You should validate any parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-1301">런타임에 매개 변수 값을 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1301">The runtime simply substitutes the parameter value into the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property.</span></span>  
  
## <a name="method-resolution"></a><span data-ttu-id="2f101-1302">메서드 확인</span><span class="sxs-lookup"><span data-stu-id="2f101-1302">Method Resolution</span></span>  
 <span data-ttu-id="2f101-1303">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 메서드를 호출할 매개 변수에서 선언적으로 생성 된 데이터 바인딩된 컨트롤에서 데이터 필드를 `UpdateParameters` 요소 및에 추가 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 이벤트 처리기 모두 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1303">When the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the `UpdateParameters` element, and the parameters that were added in the <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event handler are all merged.</span></span> <span data-ttu-id="2f101-1304">(자세한 내용은 이전 섹션 참조). <xref:System.Web.UI.WebControls.ObjectDataSource> 호출할 메서드를 찾으려면 다음 시도 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1304">(For more information, see the preceding section.) The <xref:System.Web.UI.WebControls.ObjectDataSource> control then attempts to find a method to call.</span></span> <span data-ttu-id="2f101-1305">에 지정 된 이름 가진 하나 이상의 메서드를 찾습니다 먼저는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1305">First, it looks for one or more methods with the name that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property.</span></span> <span data-ttu-id="2f101-1306">일치 하는 항목이 없으면는 <xref:System.InvalidOperationException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1306">If no match is found, an <xref:System.InvalidOperationException> exception is thrown.</span></span> <span data-ttu-id="2f101-1307">일치 하는 항목이 있으면 매개 변수 이름과 일치 하는 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1307">If a match is found, it then looks for matching parameter names.</span></span> <span data-ttu-id="2f101-1308">예를 들어 지정 된 형식 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성이 라는 두 개의 메서드도 `UpdateARecord`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1308">For example, suppose a type that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property has two methods named `UpdateARecord`.</span></span> <span data-ttu-id="2f101-1309">하나의 `UpdateARecord` 하나의 매개 변수가 `ID`, 및 다른 `UpdateARecord` 두 매개 변수가 `Name` 및 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1309">One `UpdateARecord` has one parameter, `ID`, and the other `UpdateARecord` has two parameters, `Name` and `Number`.</span></span> <span data-ttu-id="2f101-1310">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션에 명명 된 매개 변수만 `ID`의 `UpdateARecord` 메서드를만 `ID` 매개 변수 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1310">If the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection has only one parameter named `ID`, the `UpdateARecord` method with just the `ID` parameter is called.</span></span> <span data-ttu-id="2f101-1311">메서드를 확인 하는 데 매개 변수의 형식을 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1311">The type of the parameter is not checked in resolving the methods.</span></span> <span data-ttu-id="2f101-1312">매개 변수의 순서는 중요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1312">The order of the parameters does not matter.</span></span>  
  
 <span data-ttu-id="2f101-1313">경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성, 메서드를 다른 방식으로 확인 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1313">If the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property is set, the method is resolved in a different way.</span></span> <span data-ttu-id="2f101-1314"><xref:System.Web.UI.WebControls.ObjectDataSource> 에 지정 된 이름의 메서드를 찾습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 는 매개 변수 형식 중 하나를 사용 하는 속성에 지정 된 된 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2f101-1314">The <xref:System.Web.UI.WebControls.ObjectDataSource> looks for a method with the name that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property that takes one parameter of the type that is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> property.</span></span> <span data-ttu-id="2f101-1315">이 경우 매개 변수의 이름을 중요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1315">In this case, the name of the parameter does not matter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1316">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자를 검색 하 고 Northwind 데이터베이스의 Employees 테이블의 레코드를 업데이트할 수 있도록 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1316">The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.</span></span>  
  
 <span data-ttu-id="2f101-1317">첫 번째 예제 두 개가 포함 된 웹 페이지를 보여 줍니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1317">The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2f101-1318">첫 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DropDownList> 검색 하 고 데이터베이스에서 직원 이름이 표시 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1318">The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database.</span></span> <span data-ttu-id="2f101-1319">두 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 검색, 표시 및 사용자가 선택 되어 직원 레코드의 데이터를 수정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1319">The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 <span data-ttu-id="2f101-1320">두 번째 예제에 대 한 처리기를 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1320">The second example shows handlers for the <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> and <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> events.</span></span> <span data-ttu-id="2f101-1321"><xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 이벤트 처리기는 Employee 테이블 로부터 검색 된 데이터를 포함 하는 개체를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1321">The <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> event handler serializes the object that contains data that was retrieved from the Employee table.</span></span> <span data-ttu-id="2f101-1322">직렬화 된 개체는 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1322">The serialized object is stored in view state.</span></span> <span data-ttu-id="2f101-1323"><xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 업데이트 되는 데이터 레코드에 대 한 원본 데이터가 포함 된 뷰 상태에 개체를 역직렬화 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1323">The <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event handler deserializes the object in view state that contains the original data for the data record that is being updated.</span></span> <span data-ttu-id="2f101-1324">원래 데이터를 포함 하는 개체는 Update 메서드를 매개 변수로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1324">The object that contains the original data is passed as a parameter to the Update method.</span></span> <span data-ttu-id="2f101-1325">다른 프로세스에서 데이터를 수정 되었는지 여부를 검사할 수 있도록 원래 데이터를 데이터베이스에 전달 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1325">The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 <span data-ttu-id="2f101-1326">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1326">The third example shows the data access class that interacts with the Northwind database.</span></span> <span data-ttu-id="2f101-1327">클래스는 LINQ를 사용 하 여 쿼리하고 Employees 테이블을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1327">The class uses LINQ to query and update the Employees table.</span></span> <span data-ttu-id="2f101-1328">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스 및 직원 테이블을 나타내는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1328">The example requires a LINQ to SQL class that represents the Northwind database and Employees table.</span></span> <span data-ttu-id="2f101-1329">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1329">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1330">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1330">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1331">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1331">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1332">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1332">Creating an ObjectDataSource Control Source Object</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011"><span data-ttu-id="2f101-1333">Entity Framework 및 ObjectDataSource 컨트롤을 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2f101-1333">Using the Entity Framework and the ObjectDataSource Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1334"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> 속성으로 지정된 메서드에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1334">Gets the parameters collection that contains the parameters that are used by the method that is specified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> property.</span></span></summary>
        <value><span data-ttu-id="2f101-1335"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성으로 지정된 메서드에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1335">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the method that is specified by the <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1336">이름 및 형식에 포함 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션 이름 및 매개 변수 형식과 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 메서드 시그니처입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1336">The names and types of the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection must match the names and types of the parameters in the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> method signature.</span></span> <span data-ttu-id="2f101-1337">매개 변수 이름은 영향을 받지는 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> 속성 및 대/소문자 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1337">The parameter names are affected by the <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> property and are case-sensitive.</span></span> <span data-ttu-id="2f101-1338">컬렉션의 매개 변수를 데이터 바인딩된 컨트롤을 선언적으로 지정 된 매개 변수 및 프로그래밍 방식으로 추가 되는 매개 변수를 데이터에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1338">The parameters in the collection depend on the data in the data-bound control, the parameters that are specified declaratively, and the parameters that are added programmatically.</span></span> <span data-ttu-id="2f101-1339">자세한 내용은의 "병합 매개 변수" 섹션을 참조 하세요 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 하 고 [ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1339">For more information, see the "Parameter Merging" section in <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> and [Using Parameters with the ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).</span></span>  
  
 <span data-ttu-id="2f101-1340"><xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2f101-1340">The <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.ObjectDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.</span></span>  
  
 <span data-ttu-id="2f101-1341">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1341">For more information about parameter merging, object lifetime, and method resolution, see <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-1342">클라이언트에서 받은 모든 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1342">You should validate any parameter value that you receive from the client.</span></span> <span data-ttu-id="2f101-1343">런타임에 매개 변수 값을 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1343">The runtime simply substitutes the parameter value into the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1344">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1344">This section contains two code examples.</span></span> <span data-ttu-id="2f101-1345">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 개체 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1345">The first code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> objects to update data.</span></span> <span data-ttu-id="2f101-1346">두 번째 코드 예에서는 `EmployeeLogic` 첫 번째 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1346">The second code example shows the `EmployeeLogic` class that is used in the first code example.</span></span>  
  
 <span data-ttu-id="2f101-1347">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1347">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data.</span></span> <span data-ttu-id="2f101-1348">합니다 <xref:System.Web.UI.WebControls.DropDownList> Northwind 직원의 이름을 표시 하는 동안는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤은 입력 하 고 주소 정보를 업데이트 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1348">The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a Northwind employee, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information.</span></span> <span data-ttu-id="2f101-1349">때문에 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션에 포함를 <xref:System.Web.UI.WebControls.ControlParameter> 의 선택된 된 값에 바인딩된를 <xref:System.Web.UI.WebControls.DropDownList>, 발생 하는 단추는 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 직원을 선택한 후에 작업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1349">Because the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that raises the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operation is enabled only after an employee is selected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f101-1350">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1350">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="2f101-1351">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1351">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="2f101-1352">자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2f101-1352">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 <span data-ttu-id="2f101-1353">다음 코드 예제는 `EmployeeLogic` 앞의 코드 예제에 사용 되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1353">The following code example shows the `EmployeeLogic` class that is used in the preceding code example.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1354">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1354">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1355">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1355">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1356">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1356">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f101-1357"><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1357">Occurs before an <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f101-1358">처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화를 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 업데이트 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1358">Handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.ObjectDataSource> control performs the update operation.</span></span> <span data-ttu-id="2f101-1359">매개 변수를 사용할 수는 <xref:System.Collections.IDictionary> 액세스 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1359">The parameters are available as an <xref:System.Collections.IDictionary> collection that is accessed by the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> property, which is exposed by the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> object.</span></span>  
  
 <span data-ttu-id="2f101-1360">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1360">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f101-1361">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자를 검색 하 고 Northwind 데이터베이스의 Employees 테이블의 레코드를 업데이트할 수 있도록 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1361">The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.</span></span>  
  
 <span data-ttu-id="2f101-1362">첫 번째 예제 두 개가 포함 된 웹 페이지를 보여 줍니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1362">The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2f101-1363">첫 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DropDownList> 검색 하 고 데이터베이스에서 직원 이름이 표시 되는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1363">The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database.</span></span> <span data-ttu-id="2f101-1364">두 번째 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 검색, 표시 및 사용자가 선택 되어 직원 레코드의 데이터를 수정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1364">The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 <span data-ttu-id="2f101-1365">두 번째 예제에 대 한 처리기를 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1365">The second example shows handlers for the <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> and <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> events.</span></span> <span data-ttu-id="2f101-1366"><xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 이벤트 처리기는 Employee 테이블 로부터 검색 된 데이터를 포함 하는 개체를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1366">The <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> event handler serializes the object that contains data that was retrieved from the Employee table.</span></span> <span data-ttu-id="2f101-1367">직렬화 된 개체는 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1367">The serialized object is stored in view state.</span></span> <span data-ttu-id="2f101-1368"><xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 업데이트 되는 데이터 레코드에 대 한 원본 데이터가 포함 된 뷰 상태에 개체를 역직렬화 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1368">The <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event handler deserializes the object in view state that contains the original data for the data record that is being updated.</span></span> <span data-ttu-id="2f101-1369">원래 데이터를 포함 하는 개체는 Update 메서드를 매개 변수로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1369">The object that contains the original data is passed as a parameter to the Update method.</span></span> <span data-ttu-id="2f101-1370">다른 프로세스에서 데이터를 수정 되었는지 여부를 검사할 수 있도록 원래 데이터를 데이터베이스에 전달 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1370">The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 <span data-ttu-id="2f101-1371">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1371">The third example shows the data access class that interacts with the Northwind database.</span></span> <span data-ttu-id="2f101-1372">클래스는 LINQ를 사용 하 여 쿼리하고 Employees 테이블을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1372">The class uses LINQ to query and update the Employees table.</span></span> <span data-ttu-id="2f101-1373">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스 및 직원 테이블을 나타내는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1373">The example requires a LINQ to SQL class that represents the Northwind database and Employees table.</span></span> <span data-ttu-id="2f101-1374">자세한 내용은 [방법: 만들 LINQ to SQL 클래스를 웹 프로젝트에서](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f101-1374">For more information, see [How to: Create LINQ to SQL Classes in a Web Project](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863"><span data-ttu-id="2f101-1375">데이터 소스 웹 서버 컨트롤</span><span class="sxs-lookup"><span data-stu-id="2f101-1375">Data Source Web Server Controls</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2"><span data-ttu-id="2f101-1376">ObjectDataSource 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="2f101-1376">ObjectDataSource Control Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f"><span data-ttu-id="2f101-1377">ObjectDataSource 컨트롤 소스 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="2f101-1377">Creating an ObjectDataSource Control Source Object</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>