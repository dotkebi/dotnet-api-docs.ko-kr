<Type Name="Behavior" FullName="System.Windows.Forms.Design.Behavior.Behavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a722ae306063d73f41145f7be951e9ed952c703" /><Meta Name="ms.sourcegitcommit" Value="6089a30c0522e6f43256523e82e94b2ccedfb55b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/04/2019" /><Meta Name="ms.locfileid" Value="59015941" /></Metadata><TypeSignature Language="C#" Value="public abstract class Behavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Behavior extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.Behavior.Behavior" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Behavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class Behavior abstract" />
  <TypeSignature Language="F#" Value="type Behavior = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ddca5-101"><see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />에서 관리하는 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-101">Represents the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> objects that are managed by a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-102">이 클래스는 모든 유형의 사용자 인터페이스 동작을 선택, 끌기 등을 개발 하도록 확장할 수 있습니다 및 크기 조정 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-102">This class can be extended to develop any type of user interface behavior, including selection, drag, and resize behaviors.</span></span>  
  
 <span data-ttu-id="ddca5-103">자세한 내용은 [동작 서비스 개요](https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f)합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-103">For more information, see [Behavior Service Overview](https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ddca5-104">프로그램 <xref:System.Windows.Forms.Design.Behavior.Behavior> 형식을 사용 하 여 연결 되어야 합니다는 <xref:System.Windows.Forms.Design.Behavior.Glyph> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-104">Your <xref:System.Windows.Forms.Design.Behavior.Behavior> type must be associated with a <xref:System.Windows.Forms.Design.Behavior.Glyph> type.</span></span> <span data-ttu-id="ddca5-105">문자 모양에 관계 없이 동작이 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-105">Glyph-independent behaviors are not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddca5-106">다음 코드 예제에 따라 사용자 고유의 클래스를 만드는 방법을 보여 줍니다는 <xref:System.Windows.Forms.Design.Behavior.Behavior> 사용자 클릭에 응답 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-106">The following code example demonstrates how to create your own class based on the <xref:System.Windows.Forms.Design.Behavior.Behavior> class that responds to user clicks.</span></span> <span data-ttu-id="ddca5-107">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-107">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
    <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-108">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-108">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f"><span data-ttu-id="ddca5-109">동작 서비스 개요</span><span class="sxs-lookup"><span data-stu-id="ddca5-109">Behavior Service Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ddca5-110"><see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-110">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Behavior ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Behavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddca5-111"><see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ddca5-112">다음 코드 예제에서는 <xref:System.Windows.Forms.Design.Behavior.Behavior> 클래스의 새 인스턴스를 초기화하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-112">The following code example demonstrates how to initialize a new instance of the <xref:System.Windows.Forms.Design.Behavior.Behavior> class.</span></span> <span data-ttu-id="ddca5-113">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-113">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-114">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-114">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f"><span data-ttu-id="ddca5-115">동작 서비스 개요</span><span class="sxs-lookup"><span data-stu-id="ddca5-115">Behavior Service Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Behavior (bool callParentBehavior, System.Windows.Forms.Design.Behavior.BehaviorService behaviorService);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool callParentBehavior, class System.Windows.Forms.Design.Behavior.BehaviorService behaviorService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Behavior(bool callParentBehavior, System::Windows::Forms::Design::Behavior::BehaviorService ^ behaviorService);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.Behavior.Behavior : bool * System.Windows.Forms.Design.Behavior.BehaviorService -&gt; System.Windows.Forms.Design.Behavior.Behavior" Usage="new System.Windows.Forms.Design.Behavior.Behavior (callParentBehavior, behaviorService)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callParentBehavior" Type="System.Boolean" />
        <Parameter Name="behaviorService" Type="System.Windows.Forms.Design.Behavior.BehaviorService" />
      </Parameters>
      <Docs>
        <param name="callParentBehavior"><see langword="true" /> <span data-ttu-id="ddca5-116">부모 동작이 있는 경우에 그 동작을 호출해야 하는 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-116">if the parent behavior should be called if it exists; otherwise, <see langword="false" />.</span></span></param>
        <param name="behaviorService"><span data-ttu-id="ddca5-117">사용할 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-117">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to use.</span></span></param>
        <summary><span data-ttu-id="ddca5-118">주어진 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />을 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class with the given <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-119">유지 관리 하는 동작 스택의 다음 동작은 부모 동작을 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-119">The parent behavior is the next behavior on the behavior stack maintained by the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-120">경우는 `callParentBehavior` 매개 변수는 `true`, 해당 `behaviorService` 매개 변수 아니어야 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-120">If the `callParentBehavior` parameter is `true`, then the `behaviorService` parameter must not be `null`.</span></span>  
  
 `callParentBehavior` <span data-ttu-id="ddca5-121">나타냅니다 여부를 기본 <xref:System.Windows.Forms.Design.Behavior.Behavior> 클래스는 부모 동작을 호출 하며 다음 허용 된 <xref:System.Windows.Forms.Design.Behavior.BehaviorService> 올바른 부모 동작을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-121">indicates whether the base <xref:System.Windows.Forms.Design.Behavior.Behavior> class should call the parent behavior, and then allow the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> select the correct parent behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="callParentBehavior" /> <span data-ttu-id="ddca5-122"><see langword="true" />이고 <paramref name="behaviorService" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="ddca5-122">is <see langword="true" />, and <paramref name="behaviorService" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor Cursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Design.Behavior.Behavior.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddca5-123">이 동작에 대해 표시할 커서를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-123">Gets the cursor that should be displayed for this behavior.</span></span></summary>
        <value><span data-ttu-id="ddca5-124">이 동작에 대해 표시해야 할 커서를 나타내는 <see cref="T:System.Windows.Forms.Cursor" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-124">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that should be displayed for this behavior.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableAllCommands">
      <MemberSignature Language="C#" Value="public virtual bool DisableAllCommands { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableAllCommands" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisableAllCommands As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisableAllCommands { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DisableAllCommands : bool" Usage="System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddca5-125"><see cref="T:System.ComponentModel.Design.MenuCommand" /> 개체를 비활성화해야 하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-125">Gets a value indicating whether <see cref="T:System.ComponentModel.Design.MenuCommand" /> objects should be disabled.</span></span></summary>
        <value><see langword="true" /> <span data-ttu-id="ddca5-126">모든 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 디자이너를 수신 하는 개체 상태 설정 해야 합니다. <c>Enabled = false</c> 때이 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 고, 그렇지 않으면 현재 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-126">if all <see cref="T:System.ComponentModel.Design.MenuCommand" /> objects the designer receives should have states set to <c>Enabled = false</c> when this <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-127">`true` 에 대 한 값을 <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> 속성을 나타냅니다는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService> 하는 모든 <xref:System.ComponentModel.Design.MenuCommand> 디자이너를 수신 하는 개체에이 동작은 현재 비활성화 상태로 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-127">A `true` value for the <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> property indicates to the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> that all <xref:System.ComponentModel.Design.MenuCommand> objects the designer receives should have their state disabled when this behavior is active.</span></span>  
  
 <span data-ttu-id="ddca5-128">합니다 <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> 속성은 함께 작동 합니다 <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> 메서드 문자 모양 및 동작 간의 상호 작용을 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-128">The <xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> property works in conjunction with the <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> method so you can customize the interaction between glyphs and behaviors.</span></span> <span data-ttu-id="ddca5-129">다음 테이블에 대 한 호출의 결과 요약 <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> 특정 <xref:System.ComponentModel.Design.MenuCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-129">The following table summarizes the results of a call to <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> for a particular <xref:System.ComponentModel.Design.MenuCommand>.</span></span>  
  
||<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> <span data-ttu-id="ddca5-130">is</span><span class="sxs-lookup"><span data-stu-id="ddca5-130">is</span></span> `true`|<xref:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands%2A> <span data-ttu-id="ddca5-131">is</span><span class="sxs-lookup"><span data-stu-id="ddca5-131">is</span></span> `false`|  
|-|-|-|  
|<span data-ttu-id="ddca5-132">문자 모양 적중 테스트에 동작이 지정 된 경우</span><span class="sxs-lookup"><span data-stu-id="ddca5-132">Hit-tested glyph has an assigned behavior</span></span>|<span data-ttu-id="ddca5-133">경우는 <xref:System.ComponentModel.Design.MenuCommand> 지정 된 `command ID` 있는 <xref:System.ComponentModel.Design.IMenuCommandService>는 <xref:System.ComponentModel.Design.MenuCommand> 사용 하지 않도록 설정 되 고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-133">If the <xref:System.ComponentModel.Design.MenuCommand> with the specified `command ID` is found in the <xref:System.ComponentModel.Design.IMenuCommandService>, that <xref:System.ComponentModel.Design.MenuCommand> is disabled and returned.</span></span> <span data-ttu-id="ddca5-134">그렇지 않으면 `null`이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-134">Otherwise, `null` is returned.</span></span>|<xref:System.ComponentModel.Design.MenuCommandService.FindCommand%2A> <span data-ttu-id="ddca5-135">동작에서 호출 되 고 있는, 동작의 경우 <xref:System.ComponentModel.Design.MenuCommand> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-135">is called on the behavior and, if found, the behavior's <xref:System.ComponentModel.Design.MenuCommand> is returned.</span></span> <span data-ttu-id="ddca5-136">그렇지 않은 경우의 결과 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> 지정 된 `command ID` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-136">Otherwise, the result of <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> with the specified `command ID` is returned.</span></span>|  
|<span data-ttu-id="ddca5-137">문자 모양 적중 테스트에 동작이 지정된 되지 않은</span><span class="sxs-lookup"><span data-stu-id="ddca5-137">Hit-tested glyph has no assigned behavior</span></span>|<span data-ttu-id="ddca5-138">결과인 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> 지정 된 `command ID` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-138">The result of <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> with the specified `command ID` is returned.</span></span>|<span data-ttu-id="ddca5-139">결과인 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> 지정 된 `command ID` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-139">The result of <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A?displayProperty=nameWithType> with the specified `command ID` is returned.</span></span>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddca5-140">기본 구현에서는 항상 <see langword="false" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-140">The default implementation always returns <see langword="false" />.</span></span></para></block>
        <altmember cref="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand" />
        <altmember cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-141">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-141">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandId);" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand&#xA;override this.FindCommand : System.ComponentModel.Design.CommandID -&gt; System.ComponentModel.Design.MenuCommand" Usage="behavior.FindCommand commandId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandId"><span data-ttu-id="ddca5-142"><see cref="T:System.ComponentModel.Design.CommandID" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-142">A <see cref="T:System.ComponentModel.Design.CommandID" /> object.</span></span></param>
        <summary><span data-ttu-id="ddca5-143">명령을 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-143">Intercepts commands.</span></span></summary>
        <returns><span data-ttu-id="ddca5-144"><see cref="T:System.ComponentModel.Design.MenuCommand" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-144">A <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span></span> <span data-ttu-id="ddca5-145">기본적으로 <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" />는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-145">By default, <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-146">합니다 <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> 에서 메서드를 호출 합니다 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-146">The <xref:System.Windows.Forms.Design.Behavior.Behavior.FindCommand%2A> method is called from the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-147">기회를 제공 합니다 <xref:System.Windows.Forms.Design.Behavior.Behavior> 자체 사용자 지정을 반환할 <xref:System.ComponentModel.Design.MenuCommand>에이 메시지를 가로채 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-147">It provides an opportunity for the <xref:System.Windows.Forms.Design.Behavior.Behavior> to return its own custom <xref:System.ComponentModel.Design.MenuCommand>, thereby intercepting this message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-148">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-148">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="public virtual void OnDragDrop (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragDrop (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragDrop(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragDrop (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-149">끌어서 놓기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-149">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> object on which to invoke drag-and-drop behavior.</span></span></param>
        <param name="e"><span data-ttu-id="ddca5-150">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-150">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ddca5-151">끌어서 놓기 동작을 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-151">Permits custom drag-and-drop behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddca5-152">재정의할 수 있습니다 합니다 <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> 메서드 있도록를 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 끌어서 놓기 규칙을 직접 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-152">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-and-drop rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-153">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-153">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="public virtual void OnDragEnter (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragEnter (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragEnter(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragEnter (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-154">범위 안으로 끌기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-154">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-enter behavior.</span></span></param>
        <param name="e"><span data-ttu-id="ddca5-155">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-155">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ddca5-156">범위 안으로 끌기 동작을 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-156">Permits custom drag-enter behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddca5-157">재정의할 수 있습니다 합니다 <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> 메서드 있도록를 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 자체 범위 안으로 끌기 규칙을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-157">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-enter rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-158">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-158">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="public virtual void OnDragLeave (System.Windows.Forms.Design.Behavior.Glyph g, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragLeave(class System.Windows.Forms.Design.Behavior.Glyph g, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragLeave (g As Glyph, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragLeave(System::Windows::Forms::Design::Behavior::Glyph ^ g, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit" Usage="behavior.OnDragLeave (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-159">범위 밖으로 끌기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-159">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-leave behavior.</span></span></param>
        <param name="e"><span data-ttu-id="ddca5-160">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-160">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ddca5-161">범위 밖으로 끌기 동작을 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-161">Permits custom drag-leave behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddca5-162">재정의할 수 있습니다 합니다 <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" /> 메서드 있도록를 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 끌기 규칙을 직접 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-162">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-leave rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-163">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-163">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="public virtual void OnDragOver (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDragOver (g As Glyph, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDragOver(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="behavior.OnDragOver (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-164">범위 위로 끌기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-164">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-over behavior.</span></span></param>
        <param name="e"><span data-ttu-id="ddca5-165">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-165">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ddca5-166">범위 위로 끌기 동작을 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-166">Permits custom drag-over behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddca5-167">재정의할 수 있습니다 합니다 <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> 메서드 있도록를 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 위로 끌기 규칙을 직접 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-167">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-over rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-168">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-168">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="public virtual void OnGiveFeedback (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnGiveFeedback (g As Glyph, e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="behavior.OnGiveFeedback (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-169">끌어서 놓기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-169">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-and-drop behavior.</span></span></param>
        <param name="e"><span data-ttu-id="ddca5-170">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-170">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ddca5-171">끌어서 놓기 피드백 동작을 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-171">Permits custom drag-and-drop feedback behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddca5-172">재정의할 수 있습니다 합니다 <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" /> 메서드 있도록를 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 끌어서 놓기 규칙을 직접 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-172">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-and-drop rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-173">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-173">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnLoseCapture">
      <MemberSignature Language="C#" Value="public virtual void OnLoseCapture (System.Windows.Forms.Design.Behavior.Glyph g, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLoseCapture(class System.Windows.Forms.Design.Behavior.Glyph g, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnLoseCapture (g As Glyph, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnLoseCapture(System::Windows::Forms::Design::Behavior::Glyph ^ g, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoseCapture : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit&#xA;override this.OnLoseCapture : System.Windows.Forms.Design.Behavior.Glyph * EventArgs -&gt; unit" Usage="behavior.OnLoseCapture (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-174">끌어서 놓기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-174">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-and-drop behavior.</span></span></param>
        <param name="e"><span data-ttu-id="ddca5-175">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-175">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ddca5-176">표시기 창에서 마우스 캡처가 손실될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-176">Called by the adorner window when it loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-177">동작 자체를 사용 하 여 동작 스택으로 푸시하여 동작 서비스를 통해 마우스 캡처를 요청할 수는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ddca5-177">A behavior can request mouse capture through the behavior service by pushing itself onto the behavior stack with the <xref:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior%2A> method.</span></span> <span data-ttu-id="ddca5-178">이렇게를 통해 알림을 받게 됩니다는 <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> 캡처가 손실 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="ddca5-178">If it does so, it will be notified through the <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> method when capture is lost.</span></span> <span data-ttu-id="ddca5-179">일반적으로 동작 자체 스택에서 제거 지금은 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-179">Generally the behavior removes itself from the stack at this time.</span></span> <span data-ttu-id="ddca5-180">다음 작업 중 하나가 발생할 때 캡처를 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-180">Capture is lost when one of the following actions occurs:</span></span>  
  
-   <span data-ttu-id="ddca5-181">다른 사람이 캡처를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-181">Someone else requests capture.</span></span>  
  
-   <span data-ttu-id="ddca5-182">다른 동작이 푸시됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-182">Another behavior is pushed.</span></span>  
  
-   <span data-ttu-id="ddca5-183">이 동작을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-183">This behavior is removed.</span></span>  
  
 <span data-ttu-id="ddca5-184">이러한 경우의 각 <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> 동작에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-184">In each of these cases, <xref:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture%2A> will be called on the behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-185">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-185">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseDoubleClick (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseDoubleClick(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseDoubleClick (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseDoubleClick(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseDoubleClick (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-186"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-186">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="button"><span data-ttu-id="ddca5-187">클릭한 단추를 나타내는 <see cref="T:System.Windows.Forms.MouseButtons" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-187">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</span></span></param>
        <param name="mouseLoc"><span data-ttu-id="ddca5-188">마우스 클릭이 발생한 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-188">The location at which the click occurred.</span></span></param>
        <summary><span data-ttu-id="ddca5-189"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 두 번 클릭 메시지가 전달될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-189">Called when any double-click message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="ddca5-190">메시지가 처리된 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-190">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-191"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> 모든 두 번 클릭 메시지가 전달 될 때 메서드가 호출 되는 `WndProc` 의 표시기 창는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span><span class="sxs-lookup"><span data-stu-id="ddca5-191">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any double-click message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-192">메시지는 먼저 전달 됩니다 최상위 <xref:System.Windows.Forms.Design.Behavior.Behavior> 동작에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-192">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="ddca5-193">반환 `true` 이 메서드에서 메시지에서 처리 된 의미를 <xref:System.Windows.Forms.Design.Behavior.Behavior> 처리할 계속 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-193">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="ddca5-194">여기에서 적절 한 동작 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-194">From here, the message is sent to the appropriate behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddca5-195">다음 코드 예제에서는 두 번 클릭 메시지를 처리 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-195">The following code example demonstrates how to handle a double-click message.</span></span> <span data-ttu-id="ddca5-196">전체 코드 목록을 참조 하세요. [방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120))합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-196">For a full code listing, see [How to: Extend the Appearance and Behavior of Controls in Design Mode](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)).</span></span>  
  
 [!code-csharp[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/CS/DesignerDemoControl.cs#10)]
 [!code-vb[System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs/VB/DesignerDemoControl.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-197">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-197">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseDown (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseDown(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseDown (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseDown(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseDown : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseDown (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-198"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-198">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="button"><span data-ttu-id="ddca5-199">클릭한 단추를 나타내는 <see cref="T:System.Windows.Forms.MouseButtons" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-199">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</span></span></param>
        <param name="mouseLoc"><span data-ttu-id="ddca5-200">마우스 클릭이 발생한 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-200">The location at which the click occurred.</span></span></param>
        <summary><span data-ttu-id="ddca5-201"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 마우스 클릭 메시지가 전달될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-201">Called when any mouse-down message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="ddca5-202">메시지가 처리된 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-202">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-203"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> 마우스 클릭 메시지가 전달 될 때 메서드가 호출 되는 `WndProc` 의 표시기 창는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span><span class="sxs-lookup"><span data-stu-id="ddca5-203">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-down message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-204">메시지는 먼저 전달 됩니다 최상위 <xref:System.Windows.Forms.Design.Behavior.Behavior> 동작에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-204">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="ddca5-205">반환 `true` 이 메서드에서 메시지에서 처리 된 의미를 <xref:System.Windows.Forms.Design.Behavior.Behavior> 처리할 계속 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-205">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="ddca5-206">여기에서 적절 한 동작 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-206">From here, the message is sent to the appropriate behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-207">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-207">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseEnter (System.Windows.Forms.Design.Behavior.Glyph g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseEnter(class System.Windows.Forms.Design.Behavior.Glyph g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseEnter (g As Glyph) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseEnter(System::Windows::Forms::Design::Behavior::Glyph ^ g);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool&#xA;override this.OnMouseEnter : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool" Usage="behavior.OnMouseEnter g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-208"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-208">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <summary><span data-ttu-id="ddca5-209"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 마우스 이동 메시지가 전달될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-209">Called when any mouse-enter message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="ddca5-210">메시지가 처리된 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-210">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-211"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> 메서드 메시지가 전달 될 때 호출 됩니다 합니다 `WndProc` 의 표시기 창를 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-211">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-enter message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-212">여기에서 적절 한 동작 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-212">From here, the message is sent to the appropriate behavior.</span></span>  
  
 <span data-ttu-id="ddca5-213">경우 마우스 포인터의 위치가 정확 적중 테스트가 수행 된 다른 <xref:System.Windows.Forms.Design.Behavior.Glyph> 이전 적중 테스트에서이 메서드는 호출을 <xref:System.Windows.Forms.Design.Behavior.Behavior> 연관는 <xref:System.Windows.Forms.Design.Behavior.Glyph>합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-213">When the mouse pointer's location is positively hit-tested with a different <xref:System.Windows.Forms.Design.Behavior.Glyph> than previous hit tests, this method is called on the <xref:System.Windows.Forms.Design.Behavior.Behavior> associated with the <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-214">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-214">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseHover (System.Windows.Forms.Design.Behavior.Glyph g, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseHover(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseHover (g As Glyph, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseHover(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : System.Windows.Forms.Design.Behavior.Glyph * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseHover : System.Windows.Forms.Design.Behavior.Glyph * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseHover (g, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-215"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-215">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="mouseLoc"><span data-ttu-id="ddca5-216">호버 마우스 이동이 발생한 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-216">The location at which the hover occurred.</span></span></param>
        <summary><span data-ttu-id="ddca5-217"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 위로 마우스 호버 메시지가 전달될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-217">Called when any mouse-hover message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="ddca5-218">메시지가 처리된 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-218">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-219"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> 모든 마우스 호버 메시지가 전달 될 때 메서드가 호출 되는 `WndProc` 의 표시기 창는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span><span class="sxs-lookup"><span data-stu-id="ddca5-219">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-hover message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-220">메시지는 먼저 전달 됩니다 최상위 <xref:System.Windows.Forms.Design.Behavior.Behavior> 동작에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-220">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="ddca5-221">반환 `true` 이 메서드에서 메시지에서 처리 된 의미를 <xref:System.Windows.Forms.Design.Behavior.Behavior> 처리할 계속 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-221">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="ddca5-222">여기에서 적절 한 동작 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-222">From here, the message is sent to the appropriate behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-223">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-223">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseLeave (System.Windows.Forms.Design.Behavior.Glyph g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseLeave(class System.Windows.Forms.Design.Behavior.Glyph g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseLeave (g As Glyph) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseLeave(System::Windows::Forms::Design::Behavior::Glyph ^ g);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool&#xA;override this.OnMouseLeave : System.Windows.Forms.Design.Behavior.Glyph -&gt; bool" Usage="behavior.OnMouseLeave g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-224"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-224">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <summary><span data-ttu-id="ddca5-225"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 범위 밖으로 마우스 이동 메시지가 전달될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-225">Called when any mouse-leave message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="ddca5-226">메시지가 처리된 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-226">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-227"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> 모든 범위 밖으로 마우스 이동 메시지가 전달 될 때 메서드가 호출 되는 `WndProc` 의 표시기 창는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span><span class="sxs-lookup"><span data-stu-id="ddca5-227">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-leave message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-228">여기에서 적절 한 동작 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-228">From here, the message is sent to the appropriate behavior.</span></span>  
  
 <span data-ttu-id="ddca5-229">마우스 포인터를 긍정적 적중 테스트가 수행 된을 벗어날 때 <xref:System.Windows.Forms.Design.Behavior.Glyph> 을 올바른 <xref:System.Windows.Forms.Design.Behavior.Behavior>,이 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-229">When the mouse pointer leaves a positively hit-tested <xref:System.Windows.Forms.Design.Behavior.Glyph> with a valid <xref:System.Windows.Forms.Design.Behavior.Behavior>, this method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-230">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-230">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseMove (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseMove(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button, valuetype System.Drawing.Point mouseLoc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseMove (g As Glyph, button As MouseButtons, mouseLoc As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseMove(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button, System::Drawing::Point mouseLoc);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool&#xA;override this.OnMouseMove : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons * System.Drawing.Point -&gt; bool" Usage="behavior.OnMouseMove (g, button, mouseLoc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="mouseLoc" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-231"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-231">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="button"><span data-ttu-id="ddca5-232">클릭한 단추를 나타내는 <see cref="T:System.Windows.Forms.MouseButtons" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-232">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</span></span></param>
        <param name="mouseLoc"><span data-ttu-id="ddca5-233">마우스 이동이 발생한 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-233">The location at which the move occurred.</span></span></param>
        <summary><span data-ttu-id="ddca5-234"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 마우스 이동 메시지가 전달될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-234">Called when any mouse-move message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="ddca5-235">메시지가 처리된 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-235">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-236"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> 모든 마우스 이동 메시지가 전달 될 때 메서드가 호출 되는 `WndProc` 의 표시기 창는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span><span class="sxs-lookup"><span data-stu-id="ddca5-236">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-move message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-237">메시지는 먼저 전달 됩니다 최상위 <xref:System.Windows.Forms.Design.Behavior.Behavior> 동작에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-237">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="ddca5-238">반환 `true` 이 메서드에서 메시지에서 처리 된 의미를 <xref:System.Windows.Forms.Design.Behavior.Behavior> 처리할 계속 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-238">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="ddca5-239">여기에서 적절 한 동작 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-239">From here, the message is sent to the appropriate behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-240">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-240">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="public virtual bool OnMouseUp (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMouseUp(class System.Windows.Forms.Design.Behavior.Glyph g, valuetype System.Windows.Forms.MouseButtons button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnMouseUp (g As Glyph, button As MouseButtons) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnMouseUp(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::MouseButtons button);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons -&gt; bool&#xA;override this.OnMouseUp : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.MouseButtons -&gt; bool" Usage="behavior.OnMouseUp (g, button)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-241"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-241">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="button"><span data-ttu-id="ddca5-242">클릭한 단추를 나타내는 <see cref="T:System.Windows.Forms.MouseButtons" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-242">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</span></span></param>
        <summary><span data-ttu-id="ddca5-243"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 마우스 놓기 메시지가 전달될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-243">Called when any mouse-up message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="ddca5-244">메시지가 처리된 경우, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-244">if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddca5-245"><xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> 모든 마우스 놓기 메시지가 전달 될 때 메서드가 호출 되는 `WndProc` 의 표시기 창는 <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span><span class="sxs-lookup"><span data-stu-id="ddca5-245">The <xref:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick%2A> method is called when any mouse-up message enters the `WndProc` of the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.</span></span> <span data-ttu-id="ddca5-246">메시지는 먼저 전달 됩니다 최상위 <xref:System.Windows.Forms.Design.Behavior.Behavior> 동작에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-246">The message is first passed here, to the top-most <xref:System.Windows.Forms.Design.Behavior.Behavior> in the behavior stack.</span></span> <span data-ttu-id="ddca5-247">반환 `true` 이 메서드에서 메시지에서 처리 된 의미를 <xref:System.Windows.Forms.Design.Behavior.Behavior> 처리할 계속 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-247">Returning `true` from this method signifies that the message was handled by the <xref:System.Windows.Forms.Design.Behavior.Behavior> and should not continue to be processed.</span></span> <span data-ttu-id="ddca5-248">여기에서 적절 한 동작 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-248">From here, the message is sent to the appropriate behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-249">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-249">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="public virtual void OnQueryContinueDrag (System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.Design.Behavior.Glyph g, class System.Windows.Forms.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnQueryContinueDrag (g As Glyph, e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::Design::Behavior::Glyph ^ g, System::Windows::Forms::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.Design.Behavior.Glyph * System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="behavior.OnQueryContinueDrag (g, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Windows.Forms.Design.Behavior.Glyph" />
        <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="ddca5-250"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></span><span class="sxs-lookup"><span data-stu-id="ddca5-250">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></param>
        <param name="e"><span data-ttu-id="ddca5-251">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-251">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="ddca5-252">표시기 창에서 적절한 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 또는 적중 테스트가 수행된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />에 이 끌어서 놓기 이벤트를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-252">Sends this drag-and-drop event from the adorner window to the appropriate <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> or hit-tested <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ddca5-253">재정의할 수 있습니다 합니다 <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" /> 메서드 있도록를 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 끌어서 놓기 규칙을 직접 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ddca5-253">You can override the <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)" /> method so that a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> can specify its own drag-and-drop rules.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)"><span data-ttu-id="ddca5-254">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</span><span class="sxs-lookup"><span data-stu-id="ddca5-254">How to: Extend the Appearance and Behavior of Controls in Design Mode</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>