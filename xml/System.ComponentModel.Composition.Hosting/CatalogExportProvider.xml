<Type Name="CatalogExportProvider" FullName="System.ComponentModel.Composition.Hosting.CatalogExportProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd9bbc19ffdcac25c921764568eb03aea11d1efb" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56769179" /></Metadata><TypeSignature Language="C#" Value="public class CatalogExportProvider : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogExportProvider extends System.ComponentModel.Composition.Hosting.ExportProvider implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogExportProvider&#xA;Inherits ExportProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogExportProvider : System::ComponentModel::Composition::Hosting::ExportProvider, IDisposable" />
  <TypeSignature Language="F#" Value="type CatalogExportProvider = class&#xA;    inherit ExportProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Hosting.ExportProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="acd31-101">카탈로그에서 내보내기를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-101">Retrieves exports from a catalog.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="acd31-102">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="acd31-103">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="acd31-104">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="acd31-105">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="acd31-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="acd31-106">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="acd31-107"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CatalogExportProvider : System.ComponentModel.Composition.Primitives.ComposablePartCatalog -&gt; System.ComponentModel.Composition.Hosting.CatalogExportProvider" Usage="new System.ComponentModel.Composition.Hosting.CatalogExportProvider catalog" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="acd31-108"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />에서 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체를 생성하는 데 사용하는 카탈로그입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-108">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <summary><span data-ttu-id="acd31-109">지정된 카탈로그를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="acd31-110"><paramref name="catalog" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="acd31-110"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, isThreadSafe As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, bool isThreadSafe);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CatalogExportProvider : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * bool -&gt; System.ComponentModel.Composition.Hosting.CatalogExportProvider" Usage="new System.ComponentModel.Composition.Hosting.CatalogExportProvider (catalog, isThreadSafe)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="acd31-111"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />에서 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체를 생성하는 데 사용하는 카탈로그입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-111">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="isThreadSafe"><span data-ttu-id="acd31-112">이 개체가 스레드로부터 안전해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-112"><see langword="true" /> if this object must be thread-safe; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="acd31-113">지정된 카탈로그와 선택적으로 스레드로부터 안전한 모드를 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog and optional thread-safe mode.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="acd31-114"><paramref name="catalog" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="acd31-114"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CatalogExportProvider : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * System.ComponentModel.Composition.Hosting.CompositionOptions -&gt; System.ComponentModel.Composition.Hosting.CatalogExportProvider" Usage="new System.ComponentModel.Composition.Hosting.CatalogExportProvider (catalog, compositionOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="acd31-115"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />에서 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체를 생성하는 데 사용하는 카탈로그입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-115">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="compositionOptions"><span data-ttu-id="acd31-116">이 공급자의 동작을 결정하는 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-116">Options that determine the behavior of this provider.</span></span></param>
        <summary><span data-ttu-id="acd31-117">지정된 카탈로그 및 컴퍼지션 옵션을 사용하여 <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog and composition options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="acd31-118"><paramref name="catalog" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="acd31-118"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Catalog">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Catalog As ComposablePartCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ Catalog { System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Catalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog" Usage="System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acd31-119">내보내기를 제공하는 데 사용되는 카탈로그를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-119">Gets the catalog that is used to provide exports.</span></span></summary>
        <value><span data-ttu-id="acd31-120"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />에서 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체를 생성하는 데 사용하는 카탈로그입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-120">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="acd31-121"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="acd31-121">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="acd31-122"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-122">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="catalogExportProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="acd31-123"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-123">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd31-124">`Dispose` 사용을 마치면 <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-124">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span></span> <span data-ttu-id="acd31-125">`Dispose` 메서드를 사용하면 <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-125">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> in an unusable state.</span></span> <span data-ttu-id="acd31-126">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-126">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> was occupying.</span></span>  
  
 <span data-ttu-id="acd31-127">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-127">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="acd31-128">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="acd31-128">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span></span> <span data-ttu-id="acd31-129">이렇게 하지 않으면 가비지 수집기가 <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-129">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="catalogExportProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="acd31-130">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-130"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="acd31-131"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-131">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="override this.GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="catalogExportProvider.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="acd31-132">반환할 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체의 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-132">The conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to be returned.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="acd31-133">사용할 컴퍼지션 트랜잭션이거나, 트랜잭션 컴퍼지션을 사용하지 않도록 설정하려면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-133">The composition transaction to use, or <see langword="null" /> to disable transactional composition.</span></span></param>
        <summary><span data-ttu-id="acd31-134">지정된 가져오기의 조건과 일치하는 내보내기를 모두 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-134">Returns all exports that match the conditions of the specified import.</span></span></summary>
        <returns><span data-ttu-id="acd31-135">지정된 조건과 일치하는 내보내기가 모두 포함되는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-135">A collection that contains all the exports that match the specified condition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd31-136">구현자는 카디널리티 관련 불일치를 오류로 처리 해야 하 고 카디널리티 관련 불일치에 대 한 예외를 throw 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-136">Implementers should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</span></span> <span data-ttu-id="acd31-137">예를 들어 가져오기가 정확히 하나의 내보내기만 요청 하 고 공급자가 일치 하는 내보내기가 없습니다 둘 이상 합니다 <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore%2A> 메서드는 빈 반환 해야 <xref:System.Collections.Generic.IEnumerable%601> 컬렉션 <xref:System.ComponentModel.Composition.Primitives.Export> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-137">For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore%2A> method should return an empty <xref:System.Collections.Generic.IEnumerable%601> collection of <xref:System.ComponentModel.Composition.Primitives.Export> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProvider">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Hosting.ExportProvider SourceProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Hosting.ExportProvider SourceProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceProvider As ExportProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Hosting::ExportProvider ^ SourceProvider { System::ComponentModel::Composition::Hosting::ExportProvider ^ get(); void set(System::ComponentModel::Composition::Hosting::ExportProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceProvider : System.ComponentModel.Composition.Hosting.ExportProvider with get, set" Usage="System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Hosting.ExportProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acd31-138">추가 내보내기에 대한 액세스를 제공하는 내보내기 공급자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-138">Gets or sets the export provider that provides access to additional exports.</span></span></summary>
        <value><span data-ttu-id="acd31-139">추가 <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> 개체에 대한 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 액세스를 제공하는 내보내기 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-139">The export provider that provides the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> access to additional <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span> <span data-ttu-id="acd31-140">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-140">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd31-141">메서드를 액세스 하기 전에이 속성을 설정 해야 합니다 <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-141">You must set this property before you access any methods on the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="acd31-142"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="acd31-142">The <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="acd31-143"><paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="acd31-143"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="acd31-144">이 속성은 이미 설정되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-144">This property has already been set.</span></span>  
  
<span data-ttu-id="acd31-145">또는</span><span class="sxs-lookup"><span data-stu-id="acd31-145">-or-</span></span> 
<span data-ttu-id="acd31-146"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> 개체의 메서드에 이미 액세스했습니다.</span><span class="sxs-lookup"><span data-stu-id="acd31-146">The methods on the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> object have already been accessed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>